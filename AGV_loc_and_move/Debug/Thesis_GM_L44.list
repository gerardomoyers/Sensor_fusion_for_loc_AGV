
Thesis_GM_L44.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   000001bc  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00015f68  080001c0  080001c0  000101c0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000b00  08016128  08016128  00026128  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  08016c28  08016c28  000301f0  2**0
                  CONTENTS
  4 .ARM          00000008  08016c28  08016c28  00026c28  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  08016c30  08016c30  000301f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08016c30  08016c30  00026c30  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  08016c34  08016c34  00026c34  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         000001f0  20000000  08016c38  00030000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000b3f4  200001f0  08016e28  000301f0  2**2
                  ALLOC
 10 ._user_heap_stack 00000604  2000b5e4  08016e28  0003b5e4  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  000301f0  2**0
                  CONTENTS, READONLY
 12 .debug_info   0002dab3  00000000  00000000  00030220  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00004a6d  00000000  00000000  0005dcd3  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00001ee8  00000000  00000000  00062740  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00001d40  00000000  00000000  00064628  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  0002ef24  00000000  00000000  00066368  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0001aa8f  00000000  00000000  0009528c  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    001173f6  00000000  00000000  000afd1b  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  001c7111  2**0
                  CONTENTS, READONLY
 20 .debug_frame  000094d0  00000000  00000000  001c718c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001c0 <__do_global_dtors_aux>:
 80001c0:	b510      	push	{r4, lr}
 80001c2:	4c05      	ldr	r4, [pc, #20]	; (80001d8 <__do_global_dtors_aux+0x18>)
 80001c4:	7823      	ldrb	r3, [r4, #0]
 80001c6:	b933      	cbnz	r3, 80001d6 <__do_global_dtors_aux+0x16>
 80001c8:	4b04      	ldr	r3, [pc, #16]	; (80001dc <__do_global_dtors_aux+0x1c>)
 80001ca:	b113      	cbz	r3, 80001d2 <__do_global_dtors_aux+0x12>
 80001cc:	4804      	ldr	r0, [pc, #16]	; (80001e0 <__do_global_dtors_aux+0x20>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	2301      	movs	r3, #1
 80001d4:	7023      	strb	r3, [r4, #0]
 80001d6:	bd10      	pop	{r4, pc}
 80001d8:	200001f0 	.word	0x200001f0
 80001dc:	00000000 	.word	0x00000000
 80001e0:	08016110 	.word	0x08016110

080001e4 <frame_dummy>:
 80001e4:	b508      	push	{r3, lr}
 80001e6:	4b03      	ldr	r3, [pc, #12]	; (80001f4 <frame_dummy+0x10>)
 80001e8:	b11b      	cbz	r3, 80001f2 <frame_dummy+0xe>
 80001ea:	4903      	ldr	r1, [pc, #12]	; (80001f8 <frame_dummy+0x14>)
 80001ec:	4803      	ldr	r0, [pc, #12]	; (80001fc <frame_dummy+0x18>)
 80001ee:	f3af 8000 	nop.w
 80001f2:	bd08      	pop	{r3, pc}
 80001f4:	00000000 	.word	0x00000000
 80001f8:	200001f4 	.word	0x200001f4
 80001fc:	08016110 	.word	0x08016110

08000200 <strcmp>:
 8000200:	f810 2b01 	ldrb.w	r2, [r0], #1
 8000204:	f811 3b01 	ldrb.w	r3, [r1], #1
 8000208:	2a01      	cmp	r2, #1
 800020a:	bf28      	it	cs
 800020c:	429a      	cmpcs	r2, r3
 800020e:	d0f7      	beq.n	8000200 <strcmp>
 8000210:	1ad0      	subs	r0, r2, r3
 8000212:	4770      	bx	lr

08000214 <strlen>:
 8000214:	4603      	mov	r3, r0
 8000216:	f813 2b01 	ldrb.w	r2, [r3], #1
 800021a:	2a00      	cmp	r2, #0
 800021c:	d1fb      	bne.n	8000216 <strlen+0x2>
 800021e:	1a18      	subs	r0, r3, r0
 8000220:	3801      	subs	r0, #1
 8000222:	4770      	bx	lr

08000224 <__aeabi_drsub>:
 8000224:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000228:	e002      	b.n	8000230 <__adddf3>
 800022a:	bf00      	nop

0800022c <__aeabi_dsub>:
 800022c:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

08000230 <__adddf3>:
 8000230:	b530      	push	{r4, r5, lr}
 8000232:	ea4f 0441 	mov.w	r4, r1, lsl #1
 8000236:	ea4f 0543 	mov.w	r5, r3, lsl #1
 800023a:	ea94 0f05 	teq	r4, r5
 800023e:	bf08      	it	eq
 8000240:	ea90 0f02 	teqeq	r0, r2
 8000244:	bf1f      	itttt	ne
 8000246:	ea54 0c00 	orrsne.w	ip, r4, r0
 800024a:	ea55 0c02 	orrsne.w	ip, r5, r2
 800024e:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 8000252:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000256:	f000 80e2 	beq.w	800041e <__adddf3+0x1ee>
 800025a:	ea4f 5454 	mov.w	r4, r4, lsr #21
 800025e:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 8000262:	bfb8      	it	lt
 8000264:	426d      	neglt	r5, r5
 8000266:	dd0c      	ble.n	8000282 <__adddf3+0x52>
 8000268:	442c      	add	r4, r5
 800026a:	ea80 0202 	eor.w	r2, r0, r2
 800026e:	ea81 0303 	eor.w	r3, r1, r3
 8000272:	ea82 0000 	eor.w	r0, r2, r0
 8000276:	ea83 0101 	eor.w	r1, r3, r1
 800027a:	ea80 0202 	eor.w	r2, r0, r2
 800027e:	ea81 0303 	eor.w	r3, r1, r3
 8000282:	2d36      	cmp	r5, #54	; 0x36
 8000284:	bf88      	it	hi
 8000286:	bd30      	pophi	{r4, r5, pc}
 8000288:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 800028c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000290:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000294:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000298:	d002      	beq.n	80002a0 <__adddf3+0x70>
 800029a:	4240      	negs	r0, r0
 800029c:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80002a0:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 80002a4:	ea4f 3303 	mov.w	r3, r3, lsl #12
 80002a8:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 80002ac:	d002      	beq.n	80002b4 <__adddf3+0x84>
 80002ae:	4252      	negs	r2, r2
 80002b0:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 80002b4:	ea94 0f05 	teq	r4, r5
 80002b8:	f000 80a7 	beq.w	800040a <__adddf3+0x1da>
 80002bc:	f1a4 0401 	sub.w	r4, r4, #1
 80002c0:	f1d5 0e20 	rsbs	lr, r5, #32
 80002c4:	db0d      	blt.n	80002e2 <__adddf3+0xb2>
 80002c6:	fa02 fc0e 	lsl.w	ip, r2, lr
 80002ca:	fa22 f205 	lsr.w	r2, r2, r5
 80002ce:	1880      	adds	r0, r0, r2
 80002d0:	f141 0100 	adc.w	r1, r1, #0
 80002d4:	fa03 f20e 	lsl.w	r2, r3, lr
 80002d8:	1880      	adds	r0, r0, r2
 80002da:	fa43 f305 	asr.w	r3, r3, r5
 80002de:	4159      	adcs	r1, r3
 80002e0:	e00e      	b.n	8000300 <__adddf3+0xd0>
 80002e2:	f1a5 0520 	sub.w	r5, r5, #32
 80002e6:	f10e 0e20 	add.w	lr, lr, #32
 80002ea:	2a01      	cmp	r2, #1
 80002ec:	fa03 fc0e 	lsl.w	ip, r3, lr
 80002f0:	bf28      	it	cs
 80002f2:	f04c 0c02 	orrcs.w	ip, ip, #2
 80002f6:	fa43 f305 	asr.w	r3, r3, r5
 80002fa:	18c0      	adds	r0, r0, r3
 80002fc:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 8000300:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000304:	d507      	bpl.n	8000316 <__adddf3+0xe6>
 8000306:	f04f 0e00 	mov.w	lr, #0
 800030a:	f1dc 0c00 	rsbs	ip, ip, #0
 800030e:	eb7e 0000 	sbcs.w	r0, lr, r0
 8000312:	eb6e 0101 	sbc.w	r1, lr, r1
 8000316:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 800031a:	d31b      	bcc.n	8000354 <__adddf3+0x124>
 800031c:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 8000320:	d30c      	bcc.n	800033c <__adddf3+0x10c>
 8000322:	0849      	lsrs	r1, r1, #1
 8000324:	ea5f 0030 	movs.w	r0, r0, rrx
 8000328:	ea4f 0c3c 	mov.w	ip, ip, rrx
 800032c:	f104 0401 	add.w	r4, r4, #1
 8000330:	ea4f 5244 	mov.w	r2, r4, lsl #21
 8000334:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 8000338:	f080 809a 	bcs.w	8000470 <__adddf3+0x240>
 800033c:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 8000340:	bf08      	it	eq
 8000342:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000346:	f150 0000 	adcs.w	r0, r0, #0
 800034a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800034e:	ea41 0105 	orr.w	r1, r1, r5
 8000352:	bd30      	pop	{r4, r5, pc}
 8000354:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 8000358:	4140      	adcs	r0, r0
 800035a:	eb41 0101 	adc.w	r1, r1, r1
 800035e:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000362:	f1a4 0401 	sub.w	r4, r4, #1
 8000366:	d1e9      	bne.n	800033c <__adddf3+0x10c>
 8000368:	f091 0f00 	teq	r1, #0
 800036c:	bf04      	itt	eq
 800036e:	4601      	moveq	r1, r0
 8000370:	2000      	moveq	r0, #0
 8000372:	fab1 f381 	clz	r3, r1
 8000376:	bf08      	it	eq
 8000378:	3320      	addeq	r3, #32
 800037a:	f1a3 030b 	sub.w	r3, r3, #11
 800037e:	f1b3 0220 	subs.w	r2, r3, #32
 8000382:	da0c      	bge.n	800039e <__adddf3+0x16e>
 8000384:	320c      	adds	r2, #12
 8000386:	dd08      	ble.n	800039a <__adddf3+0x16a>
 8000388:	f102 0c14 	add.w	ip, r2, #20
 800038c:	f1c2 020c 	rsb	r2, r2, #12
 8000390:	fa01 f00c 	lsl.w	r0, r1, ip
 8000394:	fa21 f102 	lsr.w	r1, r1, r2
 8000398:	e00c      	b.n	80003b4 <__adddf3+0x184>
 800039a:	f102 0214 	add.w	r2, r2, #20
 800039e:	bfd8      	it	le
 80003a0:	f1c2 0c20 	rsble	ip, r2, #32
 80003a4:	fa01 f102 	lsl.w	r1, r1, r2
 80003a8:	fa20 fc0c 	lsr.w	ip, r0, ip
 80003ac:	bfdc      	itt	le
 80003ae:	ea41 010c 	orrle.w	r1, r1, ip
 80003b2:	4090      	lslle	r0, r2
 80003b4:	1ae4      	subs	r4, r4, r3
 80003b6:	bfa2      	ittt	ge
 80003b8:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 80003bc:	4329      	orrge	r1, r5
 80003be:	bd30      	popge	{r4, r5, pc}
 80003c0:	ea6f 0404 	mvn.w	r4, r4
 80003c4:	3c1f      	subs	r4, #31
 80003c6:	da1c      	bge.n	8000402 <__adddf3+0x1d2>
 80003c8:	340c      	adds	r4, #12
 80003ca:	dc0e      	bgt.n	80003ea <__adddf3+0x1ba>
 80003cc:	f104 0414 	add.w	r4, r4, #20
 80003d0:	f1c4 0220 	rsb	r2, r4, #32
 80003d4:	fa20 f004 	lsr.w	r0, r0, r4
 80003d8:	fa01 f302 	lsl.w	r3, r1, r2
 80003dc:	ea40 0003 	orr.w	r0, r0, r3
 80003e0:	fa21 f304 	lsr.w	r3, r1, r4
 80003e4:	ea45 0103 	orr.w	r1, r5, r3
 80003e8:	bd30      	pop	{r4, r5, pc}
 80003ea:	f1c4 040c 	rsb	r4, r4, #12
 80003ee:	f1c4 0220 	rsb	r2, r4, #32
 80003f2:	fa20 f002 	lsr.w	r0, r0, r2
 80003f6:	fa01 f304 	lsl.w	r3, r1, r4
 80003fa:	ea40 0003 	orr.w	r0, r0, r3
 80003fe:	4629      	mov	r1, r5
 8000400:	bd30      	pop	{r4, r5, pc}
 8000402:	fa21 f004 	lsr.w	r0, r1, r4
 8000406:	4629      	mov	r1, r5
 8000408:	bd30      	pop	{r4, r5, pc}
 800040a:	f094 0f00 	teq	r4, #0
 800040e:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 8000412:	bf06      	itte	eq
 8000414:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000418:	3401      	addeq	r4, #1
 800041a:	3d01      	subne	r5, #1
 800041c:	e74e      	b.n	80002bc <__adddf3+0x8c>
 800041e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000422:	bf18      	it	ne
 8000424:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000428:	d029      	beq.n	800047e <__adddf3+0x24e>
 800042a:	ea94 0f05 	teq	r4, r5
 800042e:	bf08      	it	eq
 8000430:	ea90 0f02 	teqeq	r0, r2
 8000434:	d005      	beq.n	8000442 <__adddf3+0x212>
 8000436:	ea54 0c00 	orrs.w	ip, r4, r0
 800043a:	bf04      	itt	eq
 800043c:	4619      	moveq	r1, r3
 800043e:	4610      	moveq	r0, r2
 8000440:	bd30      	pop	{r4, r5, pc}
 8000442:	ea91 0f03 	teq	r1, r3
 8000446:	bf1e      	ittt	ne
 8000448:	2100      	movne	r1, #0
 800044a:	2000      	movne	r0, #0
 800044c:	bd30      	popne	{r4, r5, pc}
 800044e:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 8000452:	d105      	bne.n	8000460 <__adddf3+0x230>
 8000454:	0040      	lsls	r0, r0, #1
 8000456:	4149      	adcs	r1, r1
 8000458:	bf28      	it	cs
 800045a:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 800045e:	bd30      	pop	{r4, r5, pc}
 8000460:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 8000464:	bf3c      	itt	cc
 8000466:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 800046a:	bd30      	popcc	{r4, r5, pc}
 800046c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000470:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 8000474:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 8000478:	f04f 0000 	mov.w	r0, #0
 800047c:	bd30      	pop	{r4, r5, pc}
 800047e:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 8000482:	bf1a      	itte	ne
 8000484:	4619      	movne	r1, r3
 8000486:	4610      	movne	r0, r2
 8000488:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 800048c:	bf1c      	itt	ne
 800048e:	460b      	movne	r3, r1
 8000490:	4602      	movne	r2, r0
 8000492:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000496:	bf06      	itte	eq
 8000498:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 800049c:	ea91 0f03 	teqeq	r1, r3
 80004a0:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 80004a4:	bd30      	pop	{r4, r5, pc}
 80004a6:	bf00      	nop

080004a8 <__aeabi_ui2d>:
 80004a8:	f090 0f00 	teq	r0, #0
 80004ac:	bf04      	itt	eq
 80004ae:	2100      	moveq	r1, #0
 80004b0:	4770      	bxeq	lr
 80004b2:	b530      	push	{r4, r5, lr}
 80004b4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004b8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004bc:	f04f 0500 	mov.w	r5, #0
 80004c0:	f04f 0100 	mov.w	r1, #0
 80004c4:	e750      	b.n	8000368 <__adddf3+0x138>
 80004c6:	bf00      	nop

080004c8 <__aeabi_i2d>:
 80004c8:	f090 0f00 	teq	r0, #0
 80004cc:	bf04      	itt	eq
 80004ce:	2100      	moveq	r1, #0
 80004d0:	4770      	bxeq	lr
 80004d2:	b530      	push	{r4, r5, lr}
 80004d4:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80004d8:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80004dc:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 80004e0:	bf48      	it	mi
 80004e2:	4240      	negmi	r0, r0
 80004e4:	f04f 0100 	mov.w	r1, #0
 80004e8:	e73e      	b.n	8000368 <__adddf3+0x138>
 80004ea:	bf00      	nop

080004ec <__aeabi_f2d>:
 80004ec:	0042      	lsls	r2, r0, #1
 80004ee:	ea4f 01e2 	mov.w	r1, r2, asr #3
 80004f2:	ea4f 0131 	mov.w	r1, r1, rrx
 80004f6:	ea4f 7002 	mov.w	r0, r2, lsl #28
 80004fa:	bf1f      	itttt	ne
 80004fc:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 8000500:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000504:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000508:	4770      	bxne	lr
 800050a:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800050e:	bf08      	it	eq
 8000510:	4770      	bxeq	lr
 8000512:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000516:	bf04      	itt	eq
 8000518:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000524:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000528:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 800052c:	e71c      	b.n	8000368 <__adddf3+0x138>
 800052e:	bf00      	nop

08000530 <__aeabi_ul2d>:
 8000530:	ea50 0201 	orrs.w	r2, r0, r1
 8000534:	bf08      	it	eq
 8000536:	4770      	bxeq	lr
 8000538:	b530      	push	{r4, r5, lr}
 800053a:	f04f 0500 	mov.w	r5, #0
 800053e:	e00a      	b.n	8000556 <__aeabi_l2d+0x16>

08000540 <__aeabi_l2d>:
 8000540:	ea50 0201 	orrs.w	r2, r0, r1
 8000544:	bf08      	it	eq
 8000546:	4770      	bxeq	lr
 8000548:	b530      	push	{r4, r5, lr}
 800054a:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 800054e:	d502      	bpl.n	8000556 <__aeabi_l2d+0x16>
 8000550:	4240      	negs	r0, r0
 8000552:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 8000556:	f44f 6480 	mov.w	r4, #1024	; 0x400
 800055a:	f104 0432 	add.w	r4, r4, #50	; 0x32
 800055e:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 8000562:	f43f aed8 	beq.w	8000316 <__adddf3+0xe6>
 8000566:	f04f 0203 	mov.w	r2, #3
 800056a:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 800056e:	bf18      	it	ne
 8000570:	3203      	addne	r2, #3
 8000572:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 8000576:	bf18      	it	ne
 8000578:	3203      	addne	r2, #3
 800057a:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 800057e:	f1c2 0320 	rsb	r3, r2, #32
 8000582:	fa00 fc03 	lsl.w	ip, r0, r3
 8000586:	fa20 f002 	lsr.w	r0, r0, r2
 800058a:	fa01 fe03 	lsl.w	lr, r1, r3
 800058e:	ea40 000e 	orr.w	r0, r0, lr
 8000592:	fa21 f102 	lsr.w	r1, r1, r2
 8000596:	4414      	add	r4, r2
 8000598:	e6bd      	b.n	8000316 <__adddf3+0xe6>
 800059a:	bf00      	nop

0800059c <__aeabi_dmul>:
 800059c:	b570      	push	{r4, r5, r6, lr}
 800059e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80005a2:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80005a6:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80005aa:	bf1d      	ittte	ne
 80005ac:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 80005b0:	ea94 0f0c 	teqne	r4, ip
 80005b4:	ea95 0f0c 	teqne	r5, ip
 80005b8:	f000 f8de 	bleq	8000778 <__aeabi_dmul+0x1dc>
 80005bc:	442c      	add	r4, r5
 80005be:	ea81 0603 	eor.w	r6, r1, r3
 80005c2:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 80005c6:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 80005ca:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 80005ce:	bf18      	it	ne
 80005d0:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 80005d4:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80005d8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 80005dc:	d038      	beq.n	8000650 <__aeabi_dmul+0xb4>
 80005de:	fba0 ce02 	umull	ip, lr, r0, r2
 80005e2:	f04f 0500 	mov.w	r5, #0
 80005e6:	fbe1 e502 	umlal	lr, r5, r1, r2
 80005ea:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 80005ee:	fbe0 e503 	umlal	lr, r5, r0, r3
 80005f2:	f04f 0600 	mov.w	r6, #0
 80005f6:	fbe1 5603 	umlal	r5, r6, r1, r3
 80005fa:	f09c 0f00 	teq	ip, #0
 80005fe:	bf18      	it	ne
 8000600:	f04e 0e01 	orrne.w	lr, lr, #1
 8000604:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000608:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 800060c:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 8000610:	d204      	bcs.n	800061c <__aeabi_dmul+0x80>
 8000612:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000616:	416d      	adcs	r5, r5
 8000618:	eb46 0606 	adc.w	r6, r6, r6
 800061c:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 8000620:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000624:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000628:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 800062c:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 8000630:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000634:	bf88      	it	hi
 8000636:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 800063a:	d81e      	bhi.n	800067a <__aeabi_dmul+0xde>
 800063c:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 8000640:	bf08      	it	eq
 8000642:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 8000646:	f150 0000 	adcs.w	r0, r0, #0
 800064a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800064e:	bd70      	pop	{r4, r5, r6, pc}
 8000650:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 8000654:	ea46 0101 	orr.w	r1, r6, r1
 8000658:	ea40 0002 	orr.w	r0, r0, r2
 800065c:	ea81 0103 	eor.w	r1, r1, r3
 8000660:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 8000664:	bfc2      	ittt	gt
 8000666:	ebd4 050c 	rsbsgt	r5, r4, ip
 800066a:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800066e:	bd70      	popgt	{r4, r5, r6, pc}
 8000670:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000674:	f04f 0e00 	mov.w	lr, #0
 8000678:	3c01      	subs	r4, #1
 800067a:	f300 80ab 	bgt.w	80007d4 <__aeabi_dmul+0x238>
 800067e:	f114 0f36 	cmn.w	r4, #54	; 0x36
 8000682:	bfde      	ittt	le
 8000684:	2000      	movle	r0, #0
 8000686:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 800068a:	bd70      	pople	{r4, r5, r6, pc}
 800068c:	f1c4 0400 	rsb	r4, r4, #0
 8000690:	3c20      	subs	r4, #32
 8000692:	da35      	bge.n	8000700 <__aeabi_dmul+0x164>
 8000694:	340c      	adds	r4, #12
 8000696:	dc1b      	bgt.n	80006d0 <__aeabi_dmul+0x134>
 8000698:	f104 0414 	add.w	r4, r4, #20
 800069c:	f1c4 0520 	rsb	r5, r4, #32
 80006a0:	fa00 f305 	lsl.w	r3, r0, r5
 80006a4:	fa20 f004 	lsr.w	r0, r0, r4
 80006a8:	fa01 f205 	lsl.w	r2, r1, r5
 80006ac:	ea40 0002 	orr.w	r0, r0, r2
 80006b0:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 80006b4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80006b8:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006bc:	fa21 f604 	lsr.w	r6, r1, r4
 80006c0:	eb42 0106 	adc.w	r1, r2, r6
 80006c4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006c8:	bf08      	it	eq
 80006ca:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006ce:	bd70      	pop	{r4, r5, r6, pc}
 80006d0:	f1c4 040c 	rsb	r4, r4, #12
 80006d4:	f1c4 0520 	rsb	r5, r4, #32
 80006d8:	fa00 f304 	lsl.w	r3, r0, r4
 80006dc:	fa20 f005 	lsr.w	r0, r0, r5
 80006e0:	fa01 f204 	lsl.w	r2, r1, r4
 80006e4:	ea40 0002 	orr.w	r0, r0, r2
 80006e8:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80006ec:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 80006f0:	f141 0100 	adc.w	r1, r1, #0
 80006f4:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 80006f8:	bf08      	it	eq
 80006fa:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80006fe:	bd70      	pop	{r4, r5, r6, pc}
 8000700:	f1c4 0520 	rsb	r5, r4, #32
 8000704:	fa00 f205 	lsl.w	r2, r0, r5
 8000708:	ea4e 0e02 	orr.w	lr, lr, r2
 800070c:	fa20 f304 	lsr.w	r3, r0, r4
 8000710:	fa01 f205 	lsl.w	r2, r1, r5
 8000714:	ea43 0302 	orr.w	r3, r3, r2
 8000718:	fa21 f004 	lsr.w	r0, r1, r4
 800071c:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000720:	fa21 f204 	lsr.w	r2, r1, r4
 8000724:	ea20 0002 	bic.w	r0, r0, r2
 8000728:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 800072c:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000730:	bf08      	it	eq
 8000732:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 8000736:	bd70      	pop	{r4, r5, r6, pc}
 8000738:	f094 0f00 	teq	r4, #0
 800073c:	d10f      	bne.n	800075e <__aeabi_dmul+0x1c2>
 800073e:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 8000742:	0040      	lsls	r0, r0, #1
 8000744:	eb41 0101 	adc.w	r1, r1, r1
 8000748:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 800074c:	bf08      	it	eq
 800074e:	3c01      	subeq	r4, #1
 8000750:	d0f7      	beq.n	8000742 <__aeabi_dmul+0x1a6>
 8000752:	ea41 0106 	orr.w	r1, r1, r6
 8000756:	f095 0f00 	teq	r5, #0
 800075a:	bf18      	it	ne
 800075c:	4770      	bxne	lr
 800075e:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 8000762:	0052      	lsls	r2, r2, #1
 8000764:	eb43 0303 	adc.w	r3, r3, r3
 8000768:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 800076c:	bf08      	it	eq
 800076e:	3d01      	subeq	r5, #1
 8000770:	d0f7      	beq.n	8000762 <__aeabi_dmul+0x1c6>
 8000772:	ea43 0306 	orr.w	r3, r3, r6
 8000776:	4770      	bx	lr
 8000778:	ea94 0f0c 	teq	r4, ip
 800077c:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000780:	bf18      	it	ne
 8000782:	ea95 0f0c 	teqne	r5, ip
 8000786:	d00c      	beq.n	80007a2 <__aeabi_dmul+0x206>
 8000788:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 800078c:	bf18      	it	ne
 800078e:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000792:	d1d1      	bne.n	8000738 <__aeabi_dmul+0x19c>
 8000794:	ea81 0103 	eor.w	r1, r1, r3
 8000798:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800079c:	f04f 0000 	mov.w	r0, #0
 80007a0:	bd70      	pop	{r4, r5, r6, pc}
 80007a2:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007a6:	bf06      	itte	eq
 80007a8:	4610      	moveq	r0, r2
 80007aa:	4619      	moveq	r1, r3
 80007ac:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007b0:	d019      	beq.n	80007e6 <__aeabi_dmul+0x24a>
 80007b2:	ea94 0f0c 	teq	r4, ip
 80007b6:	d102      	bne.n	80007be <__aeabi_dmul+0x222>
 80007b8:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 80007bc:	d113      	bne.n	80007e6 <__aeabi_dmul+0x24a>
 80007be:	ea95 0f0c 	teq	r5, ip
 80007c2:	d105      	bne.n	80007d0 <__aeabi_dmul+0x234>
 80007c4:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 80007c8:	bf1c      	itt	ne
 80007ca:	4610      	movne	r0, r2
 80007cc:	4619      	movne	r1, r3
 80007ce:	d10a      	bne.n	80007e6 <__aeabi_dmul+0x24a>
 80007d0:	ea81 0103 	eor.w	r1, r1, r3
 80007d4:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 80007d8:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007dc:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80007e0:	f04f 0000 	mov.w	r0, #0
 80007e4:	bd70      	pop	{r4, r5, r6, pc}
 80007e6:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 80007ea:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 80007ee:	bd70      	pop	{r4, r5, r6, pc}

080007f0 <__aeabi_ddiv>:
 80007f0:	b570      	push	{r4, r5, r6, lr}
 80007f2:	f04f 0cff 	mov.w	ip, #255	; 0xff
 80007f6:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 80007fa:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 80007fe:	bf1d      	ittte	ne
 8000800:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000804:	ea94 0f0c 	teqne	r4, ip
 8000808:	ea95 0f0c 	teqne	r5, ip
 800080c:	f000 f8a7 	bleq	800095e <__aeabi_ddiv+0x16e>
 8000810:	eba4 0405 	sub.w	r4, r4, r5
 8000814:	ea81 0e03 	eor.w	lr, r1, r3
 8000818:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 800081c:	ea4f 3101 	mov.w	r1, r1, lsl #12
 8000820:	f000 8088 	beq.w	8000934 <__aeabi_ddiv+0x144>
 8000824:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000828:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 800082c:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 8000830:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 8000834:	ea4f 2202 	mov.w	r2, r2, lsl #8
 8000838:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 800083c:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 8000840:	ea4f 2600 	mov.w	r6, r0, lsl #8
 8000844:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 8000848:	429d      	cmp	r5, r3
 800084a:	bf08      	it	eq
 800084c:	4296      	cmpeq	r6, r2
 800084e:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 8000852:	f504 7440 	add.w	r4, r4, #768	; 0x300
 8000856:	d202      	bcs.n	800085e <__aeabi_ddiv+0x6e>
 8000858:	085b      	lsrs	r3, r3, #1
 800085a:	ea4f 0232 	mov.w	r2, r2, rrx
 800085e:	1ab6      	subs	r6, r6, r2
 8000860:	eb65 0503 	sbc.w	r5, r5, r3
 8000864:	085b      	lsrs	r3, r3, #1
 8000866:	ea4f 0232 	mov.w	r2, r2, rrx
 800086a:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 800086e:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 8000872:	ebb6 0e02 	subs.w	lr, r6, r2
 8000876:	eb75 0e03 	sbcs.w	lr, r5, r3
 800087a:	bf22      	ittt	cs
 800087c:	1ab6      	subcs	r6, r6, r2
 800087e:	4675      	movcs	r5, lr
 8000880:	ea40 000c 	orrcs.w	r0, r0, ip
 8000884:	085b      	lsrs	r3, r3, #1
 8000886:	ea4f 0232 	mov.w	r2, r2, rrx
 800088a:	ebb6 0e02 	subs.w	lr, r6, r2
 800088e:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000892:	bf22      	ittt	cs
 8000894:	1ab6      	subcs	r6, r6, r2
 8000896:	4675      	movcs	r5, lr
 8000898:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 800089c:	085b      	lsrs	r3, r3, #1
 800089e:	ea4f 0232 	mov.w	r2, r2, rrx
 80008a2:	ebb6 0e02 	subs.w	lr, r6, r2
 80008a6:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008aa:	bf22      	ittt	cs
 80008ac:	1ab6      	subcs	r6, r6, r2
 80008ae:	4675      	movcs	r5, lr
 80008b0:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 80008b4:	085b      	lsrs	r3, r3, #1
 80008b6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ba:	ebb6 0e02 	subs.w	lr, r6, r2
 80008be:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008c2:	bf22      	ittt	cs
 80008c4:	1ab6      	subcs	r6, r6, r2
 80008c6:	4675      	movcs	r5, lr
 80008c8:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 80008cc:	ea55 0e06 	orrs.w	lr, r5, r6
 80008d0:	d018      	beq.n	8000904 <__aeabi_ddiv+0x114>
 80008d2:	ea4f 1505 	mov.w	r5, r5, lsl #4
 80008d6:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 80008da:	ea4f 1606 	mov.w	r6, r6, lsl #4
 80008de:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 80008e2:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 80008e6:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 80008ea:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 80008ee:	d1c0      	bne.n	8000872 <__aeabi_ddiv+0x82>
 80008f0:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80008f4:	d10b      	bne.n	800090e <__aeabi_ddiv+0x11e>
 80008f6:	ea41 0100 	orr.w	r1, r1, r0
 80008fa:	f04f 0000 	mov.w	r0, #0
 80008fe:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 8000902:	e7b6      	b.n	8000872 <__aeabi_ddiv+0x82>
 8000904:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000908:	bf04      	itt	eq
 800090a:	4301      	orreq	r1, r0
 800090c:	2000      	moveq	r0, #0
 800090e:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 8000912:	bf88      	it	hi
 8000914:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000918:	f63f aeaf 	bhi.w	800067a <__aeabi_dmul+0xde>
 800091c:	ebb5 0c03 	subs.w	ip, r5, r3
 8000920:	bf04      	itt	eq
 8000922:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000926:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 800092a:	f150 0000 	adcs.w	r0, r0, #0
 800092e:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 8000932:	bd70      	pop	{r4, r5, r6, pc}
 8000934:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 8000938:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 800093c:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 8000940:	bfc2      	ittt	gt
 8000942:	ebd4 050c 	rsbsgt	r5, r4, ip
 8000946:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 800094a:	bd70      	popgt	{r4, r5, r6, pc}
 800094c:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000950:	f04f 0e00 	mov.w	lr, #0
 8000954:	3c01      	subs	r4, #1
 8000956:	e690      	b.n	800067a <__aeabi_dmul+0xde>
 8000958:	ea45 0e06 	orr.w	lr, r5, r6
 800095c:	e68d      	b.n	800067a <__aeabi_dmul+0xde>
 800095e:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 8000962:	ea94 0f0c 	teq	r4, ip
 8000966:	bf08      	it	eq
 8000968:	ea95 0f0c 	teqeq	r5, ip
 800096c:	f43f af3b 	beq.w	80007e6 <__aeabi_dmul+0x24a>
 8000970:	ea94 0f0c 	teq	r4, ip
 8000974:	d10a      	bne.n	800098c <__aeabi_ddiv+0x19c>
 8000976:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 800097a:	f47f af34 	bne.w	80007e6 <__aeabi_dmul+0x24a>
 800097e:	ea95 0f0c 	teq	r5, ip
 8000982:	f47f af25 	bne.w	80007d0 <__aeabi_dmul+0x234>
 8000986:	4610      	mov	r0, r2
 8000988:	4619      	mov	r1, r3
 800098a:	e72c      	b.n	80007e6 <__aeabi_dmul+0x24a>
 800098c:	ea95 0f0c 	teq	r5, ip
 8000990:	d106      	bne.n	80009a0 <__aeabi_ddiv+0x1b0>
 8000992:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000996:	f43f aefd 	beq.w	8000794 <__aeabi_dmul+0x1f8>
 800099a:	4610      	mov	r0, r2
 800099c:	4619      	mov	r1, r3
 800099e:	e722      	b.n	80007e6 <__aeabi_dmul+0x24a>
 80009a0:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80009a4:	bf18      	it	ne
 80009a6:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80009aa:	f47f aec5 	bne.w	8000738 <__aeabi_dmul+0x19c>
 80009ae:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 80009b2:	f47f af0d 	bne.w	80007d0 <__aeabi_dmul+0x234>
 80009b6:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 80009ba:	f47f aeeb 	bne.w	8000794 <__aeabi_dmul+0x1f8>
 80009be:	e712      	b.n	80007e6 <__aeabi_dmul+0x24a>

080009c0 <__gedf2>:
 80009c0:	f04f 3cff 	mov.w	ip, #4294967295
 80009c4:	e006      	b.n	80009d4 <__cmpdf2+0x4>
 80009c6:	bf00      	nop

080009c8 <__ledf2>:
 80009c8:	f04f 0c01 	mov.w	ip, #1
 80009cc:	e002      	b.n	80009d4 <__cmpdf2+0x4>
 80009ce:	bf00      	nop

080009d0 <__cmpdf2>:
 80009d0:	f04f 0c01 	mov.w	ip, #1
 80009d4:	f84d cd04 	str.w	ip, [sp, #-4]!
 80009d8:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 80009dc:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 80009e0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 80009e4:	bf18      	it	ne
 80009e6:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 80009ea:	d01b      	beq.n	8000a24 <__cmpdf2+0x54>
 80009ec:	b001      	add	sp, #4
 80009ee:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 80009f2:	bf0c      	ite	eq
 80009f4:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 80009f8:	ea91 0f03 	teqne	r1, r3
 80009fc:	bf02      	ittt	eq
 80009fe:	ea90 0f02 	teqeq	r0, r2
 8000a02:	2000      	moveq	r0, #0
 8000a04:	4770      	bxeq	lr
 8000a06:	f110 0f00 	cmn.w	r0, #0
 8000a0a:	ea91 0f03 	teq	r1, r3
 8000a0e:	bf58      	it	pl
 8000a10:	4299      	cmppl	r1, r3
 8000a12:	bf08      	it	eq
 8000a14:	4290      	cmpeq	r0, r2
 8000a16:	bf2c      	ite	cs
 8000a18:	17d8      	asrcs	r0, r3, #31
 8000a1a:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a1e:	f040 0001 	orr.w	r0, r0, #1
 8000a22:	4770      	bx	lr
 8000a24:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a28:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a2c:	d102      	bne.n	8000a34 <__cmpdf2+0x64>
 8000a2e:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a32:	d107      	bne.n	8000a44 <__cmpdf2+0x74>
 8000a34:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a38:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a3c:	d1d6      	bne.n	80009ec <__cmpdf2+0x1c>
 8000a3e:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000a42:	d0d3      	beq.n	80009ec <__cmpdf2+0x1c>
 8000a44:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000a48:	4770      	bx	lr
 8000a4a:	bf00      	nop

08000a4c <__aeabi_cdrcmple>:
 8000a4c:	4684      	mov	ip, r0
 8000a4e:	4610      	mov	r0, r2
 8000a50:	4662      	mov	r2, ip
 8000a52:	468c      	mov	ip, r1
 8000a54:	4619      	mov	r1, r3
 8000a56:	4663      	mov	r3, ip
 8000a58:	e000      	b.n	8000a5c <__aeabi_cdcmpeq>
 8000a5a:	bf00      	nop

08000a5c <__aeabi_cdcmpeq>:
 8000a5c:	b501      	push	{r0, lr}
 8000a5e:	f7ff ffb7 	bl	80009d0 <__cmpdf2>
 8000a62:	2800      	cmp	r0, #0
 8000a64:	bf48      	it	mi
 8000a66:	f110 0f00 	cmnmi.w	r0, #0
 8000a6a:	bd01      	pop	{r0, pc}

08000a6c <__aeabi_dcmpeq>:
 8000a6c:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a70:	f7ff fff4 	bl	8000a5c <__aeabi_cdcmpeq>
 8000a74:	bf0c      	ite	eq
 8000a76:	2001      	moveq	r0, #1
 8000a78:	2000      	movne	r0, #0
 8000a7a:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a7e:	bf00      	nop

08000a80 <__aeabi_dcmplt>:
 8000a80:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a84:	f7ff ffea 	bl	8000a5c <__aeabi_cdcmpeq>
 8000a88:	bf34      	ite	cc
 8000a8a:	2001      	movcc	r0, #1
 8000a8c:	2000      	movcs	r0, #0
 8000a8e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000a92:	bf00      	nop

08000a94 <__aeabi_dcmple>:
 8000a94:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000a98:	f7ff ffe0 	bl	8000a5c <__aeabi_cdcmpeq>
 8000a9c:	bf94      	ite	ls
 8000a9e:	2001      	movls	r0, #1
 8000aa0:	2000      	movhi	r0, #0
 8000aa2:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aa6:	bf00      	nop

08000aa8 <__aeabi_dcmpge>:
 8000aa8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000aac:	f7ff ffce 	bl	8000a4c <__aeabi_cdrcmple>
 8000ab0:	bf94      	ite	ls
 8000ab2:	2001      	movls	r0, #1
 8000ab4:	2000      	movhi	r0, #0
 8000ab6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aba:	bf00      	nop

08000abc <__aeabi_dcmpgt>:
 8000abc:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000ac0:	f7ff ffc4 	bl	8000a4c <__aeabi_cdrcmple>
 8000ac4:	bf34      	ite	cc
 8000ac6:	2001      	movcc	r0, #1
 8000ac8:	2000      	movcs	r0, #0
 8000aca:	f85d fb08 	ldr.w	pc, [sp], #8
 8000ace:	bf00      	nop

08000ad0 <__aeabi_dcmpun>:
 8000ad0:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000ad4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ad8:	d102      	bne.n	8000ae0 <__aeabi_dcmpun+0x10>
 8000ada:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000ade:	d10a      	bne.n	8000af6 <__aeabi_dcmpun+0x26>
 8000ae0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000ae4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000ae8:	d102      	bne.n	8000af0 <__aeabi_dcmpun+0x20>
 8000aea:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aee:	d102      	bne.n	8000af6 <__aeabi_dcmpun+0x26>
 8000af0:	f04f 0000 	mov.w	r0, #0
 8000af4:	4770      	bx	lr
 8000af6:	f04f 0001 	mov.w	r0, #1
 8000afa:	4770      	bx	lr

08000afc <__aeabi_d2iz>:
 8000afc:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b00:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b04:	d215      	bcs.n	8000b32 <__aeabi_d2iz+0x36>
 8000b06:	d511      	bpl.n	8000b2c <__aeabi_d2iz+0x30>
 8000b08:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b0c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b10:	d912      	bls.n	8000b38 <__aeabi_d2iz+0x3c>
 8000b12:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b16:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b1a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b1e:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 8000b22:	fa23 f002 	lsr.w	r0, r3, r2
 8000b26:	bf18      	it	ne
 8000b28:	4240      	negne	r0, r0
 8000b2a:	4770      	bx	lr
 8000b2c:	f04f 0000 	mov.w	r0, #0
 8000b30:	4770      	bx	lr
 8000b32:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b36:	d105      	bne.n	8000b44 <__aeabi_d2iz+0x48>
 8000b38:	f011 4000 	ands.w	r0, r1, #2147483648	; 0x80000000
 8000b3c:	bf08      	it	eq
 8000b3e:	f06f 4000 	mvneq.w	r0, #2147483648	; 0x80000000
 8000b42:	4770      	bx	lr
 8000b44:	f04f 0000 	mov.w	r0, #0
 8000b48:	4770      	bx	lr
 8000b4a:	bf00      	nop

08000b4c <__aeabi_d2uiz>:
 8000b4c:	004a      	lsls	r2, r1, #1
 8000b4e:	d211      	bcs.n	8000b74 <__aeabi_d2uiz+0x28>
 8000b50:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b54:	d211      	bcs.n	8000b7a <__aeabi_d2uiz+0x2e>
 8000b56:	d50d      	bpl.n	8000b74 <__aeabi_d2uiz+0x28>
 8000b58:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b5c:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b60:	d40e      	bmi.n	8000b80 <__aeabi_d2uiz+0x34>
 8000b62:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b66:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b6a:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b6e:	fa23 f002 	lsr.w	r0, r3, r2
 8000b72:	4770      	bx	lr
 8000b74:	f04f 0000 	mov.w	r0, #0
 8000b78:	4770      	bx	lr
 8000b7a:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b7e:	d102      	bne.n	8000b86 <__aeabi_d2uiz+0x3a>
 8000b80:	f04f 30ff 	mov.w	r0, #4294967295
 8000b84:	4770      	bx	lr
 8000b86:	f04f 0000 	mov.w	r0, #0
 8000b8a:	4770      	bx	lr

08000b8c <__aeabi_d2f>:
 8000b8c:	ea4f 0241 	mov.w	r2, r1, lsl #1
 8000b90:	f1b2 43e0 	subs.w	r3, r2, #1879048192	; 0x70000000
 8000b94:	bf24      	itt	cs
 8000b96:	f5b3 1c00 	subscs.w	ip, r3, #2097152	; 0x200000
 8000b9a:	f1dc 5cfe 	rsbscs	ip, ip, #532676608	; 0x1fc00000
 8000b9e:	d90d      	bls.n	8000bbc <__aeabi_d2f+0x30>
 8000ba0:	f001 4c00 	and.w	ip, r1, #2147483648	; 0x80000000
 8000ba4:	ea4f 02c0 	mov.w	r2, r0, lsl #3
 8000ba8:	ea4c 7050 	orr.w	r0, ip, r0, lsr #29
 8000bac:	f1b2 4f00 	cmp.w	r2, #2147483648	; 0x80000000
 8000bb0:	eb40 0083 	adc.w	r0, r0, r3, lsl #2
 8000bb4:	bf08      	it	eq
 8000bb6:	f020 0001 	biceq.w	r0, r0, #1
 8000bba:	4770      	bx	lr
 8000bbc:	f011 4f80 	tst.w	r1, #1073741824	; 0x40000000
 8000bc0:	d121      	bne.n	8000c06 <__aeabi_d2f+0x7a>
 8000bc2:	f113 7238 	adds.w	r2, r3, #48234496	; 0x2e00000
 8000bc6:	bfbc      	itt	lt
 8000bc8:	f001 4000 	andlt.w	r0, r1, #2147483648	; 0x80000000
 8000bcc:	4770      	bxlt	lr
 8000bce:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000bd2:	ea4f 5252 	mov.w	r2, r2, lsr #21
 8000bd6:	f1c2 0218 	rsb	r2, r2, #24
 8000bda:	f1c2 0c20 	rsb	ip, r2, #32
 8000bde:	fa10 f30c 	lsls.w	r3, r0, ip
 8000be2:	fa20 f002 	lsr.w	r0, r0, r2
 8000be6:	bf18      	it	ne
 8000be8:	f040 0001 	orrne.w	r0, r0, #1
 8000bec:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000bf0:	ea4f 23d3 	mov.w	r3, r3, lsr #11
 8000bf4:	fa03 fc0c 	lsl.w	ip, r3, ip
 8000bf8:	ea40 000c 	orr.w	r0, r0, ip
 8000bfc:	fa23 f302 	lsr.w	r3, r3, r2
 8000c00:	ea4f 0343 	mov.w	r3, r3, lsl #1
 8000c04:	e7cc      	b.n	8000ba0 <__aeabi_d2f+0x14>
 8000c06:	ea7f 5362 	mvns.w	r3, r2, asr #21
 8000c0a:	d107      	bne.n	8000c1c <__aeabi_d2f+0x90>
 8000c0c:	ea50 3301 	orrs.w	r3, r0, r1, lsl #12
 8000c10:	bf1e      	ittt	ne
 8000c12:	f04f 40fe 	movne.w	r0, #2130706432	; 0x7f000000
 8000c16:	f440 0040 	orrne.w	r0, r0, #12582912	; 0xc00000
 8000c1a:	4770      	bxne	lr
 8000c1c:	f001 4000 	and.w	r0, r1, #2147483648	; 0x80000000
 8000c20:	f040 40fe 	orr.w	r0, r0, #2130706432	; 0x7f000000
 8000c24:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8000c28:	4770      	bx	lr
 8000c2a:	bf00      	nop

08000c2c <__aeabi_uldivmod>:
 8000c2c:	b953      	cbnz	r3, 8000c44 <__aeabi_uldivmod+0x18>
 8000c2e:	b94a      	cbnz	r2, 8000c44 <__aeabi_uldivmod+0x18>
 8000c30:	2900      	cmp	r1, #0
 8000c32:	bf08      	it	eq
 8000c34:	2800      	cmpeq	r0, #0
 8000c36:	bf1c      	itt	ne
 8000c38:	f04f 31ff 	movne.w	r1, #4294967295
 8000c3c:	f04f 30ff 	movne.w	r0, #4294967295
 8000c40:	f000 b972 	b.w	8000f28 <__aeabi_idiv0>
 8000c44:	f1ad 0c08 	sub.w	ip, sp, #8
 8000c48:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000c4c:	f000 f806 	bl	8000c5c <__udivmoddi4>
 8000c50:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000c54:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000c58:	b004      	add	sp, #16
 8000c5a:	4770      	bx	lr

08000c5c <__udivmoddi4>:
 8000c5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000c60:	9e08      	ldr	r6, [sp, #32]
 8000c62:	4604      	mov	r4, r0
 8000c64:	4688      	mov	r8, r1
 8000c66:	2b00      	cmp	r3, #0
 8000c68:	d14b      	bne.n	8000d02 <__udivmoddi4+0xa6>
 8000c6a:	428a      	cmp	r2, r1
 8000c6c:	4615      	mov	r5, r2
 8000c6e:	d967      	bls.n	8000d40 <__udivmoddi4+0xe4>
 8000c70:	fab2 f282 	clz	r2, r2
 8000c74:	b14a      	cbz	r2, 8000c8a <__udivmoddi4+0x2e>
 8000c76:	f1c2 0720 	rsb	r7, r2, #32
 8000c7a:	fa01 f302 	lsl.w	r3, r1, r2
 8000c7e:	fa20 f707 	lsr.w	r7, r0, r7
 8000c82:	4095      	lsls	r5, r2
 8000c84:	ea47 0803 	orr.w	r8, r7, r3
 8000c88:	4094      	lsls	r4, r2
 8000c8a:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000c8e:	0c23      	lsrs	r3, r4, #16
 8000c90:	fbb8 f7fe 	udiv	r7, r8, lr
 8000c94:	fa1f fc85 	uxth.w	ip, r5
 8000c98:	fb0e 8817 	mls	r8, lr, r7, r8
 8000c9c:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000ca0:	fb07 f10c 	mul.w	r1, r7, ip
 8000ca4:	4299      	cmp	r1, r3
 8000ca6:	d909      	bls.n	8000cbc <__udivmoddi4+0x60>
 8000ca8:	18eb      	adds	r3, r5, r3
 8000caa:	f107 30ff 	add.w	r0, r7, #4294967295
 8000cae:	f080 811b 	bcs.w	8000ee8 <__udivmoddi4+0x28c>
 8000cb2:	4299      	cmp	r1, r3
 8000cb4:	f240 8118 	bls.w	8000ee8 <__udivmoddi4+0x28c>
 8000cb8:	3f02      	subs	r7, #2
 8000cba:	442b      	add	r3, r5
 8000cbc:	1a5b      	subs	r3, r3, r1
 8000cbe:	b2a4      	uxth	r4, r4
 8000cc0:	fbb3 f0fe 	udiv	r0, r3, lr
 8000cc4:	fb0e 3310 	mls	r3, lr, r0, r3
 8000cc8:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000ccc:	fb00 fc0c 	mul.w	ip, r0, ip
 8000cd0:	45a4      	cmp	ip, r4
 8000cd2:	d909      	bls.n	8000ce8 <__udivmoddi4+0x8c>
 8000cd4:	192c      	adds	r4, r5, r4
 8000cd6:	f100 33ff 	add.w	r3, r0, #4294967295
 8000cda:	f080 8107 	bcs.w	8000eec <__udivmoddi4+0x290>
 8000cde:	45a4      	cmp	ip, r4
 8000ce0:	f240 8104 	bls.w	8000eec <__udivmoddi4+0x290>
 8000ce4:	3802      	subs	r0, #2
 8000ce6:	442c      	add	r4, r5
 8000ce8:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000cec:	eba4 040c 	sub.w	r4, r4, ip
 8000cf0:	2700      	movs	r7, #0
 8000cf2:	b11e      	cbz	r6, 8000cfc <__udivmoddi4+0xa0>
 8000cf4:	40d4      	lsrs	r4, r2
 8000cf6:	2300      	movs	r3, #0
 8000cf8:	e9c6 4300 	strd	r4, r3, [r6]
 8000cfc:	4639      	mov	r1, r7
 8000cfe:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d02:	428b      	cmp	r3, r1
 8000d04:	d909      	bls.n	8000d1a <__udivmoddi4+0xbe>
 8000d06:	2e00      	cmp	r6, #0
 8000d08:	f000 80eb 	beq.w	8000ee2 <__udivmoddi4+0x286>
 8000d0c:	2700      	movs	r7, #0
 8000d0e:	e9c6 0100 	strd	r0, r1, [r6]
 8000d12:	4638      	mov	r0, r7
 8000d14:	4639      	mov	r1, r7
 8000d16:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000d1a:	fab3 f783 	clz	r7, r3
 8000d1e:	2f00      	cmp	r7, #0
 8000d20:	d147      	bne.n	8000db2 <__udivmoddi4+0x156>
 8000d22:	428b      	cmp	r3, r1
 8000d24:	d302      	bcc.n	8000d2c <__udivmoddi4+0xd0>
 8000d26:	4282      	cmp	r2, r0
 8000d28:	f200 80fa 	bhi.w	8000f20 <__udivmoddi4+0x2c4>
 8000d2c:	1a84      	subs	r4, r0, r2
 8000d2e:	eb61 0303 	sbc.w	r3, r1, r3
 8000d32:	2001      	movs	r0, #1
 8000d34:	4698      	mov	r8, r3
 8000d36:	2e00      	cmp	r6, #0
 8000d38:	d0e0      	beq.n	8000cfc <__udivmoddi4+0xa0>
 8000d3a:	e9c6 4800 	strd	r4, r8, [r6]
 8000d3e:	e7dd      	b.n	8000cfc <__udivmoddi4+0xa0>
 8000d40:	b902      	cbnz	r2, 8000d44 <__udivmoddi4+0xe8>
 8000d42:	deff      	udf	#255	; 0xff
 8000d44:	fab2 f282 	clz	r2, r2
 8000d48:	2a00      	cmp	r2, #0
 8000d4a:	f040 808f 	bne.w	8000e6c <__udivmoddi4+0x210>
 8000d4e:	1b49      	subs	r1, r1, r5
 8000d50:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000d54:	fa1f f885 	uxth.w	r8, r5
 8000d58:	2701      	movs	r7, #1
 8000d5a:	fbb1 fcfe 	udiv	ip, r1, lr
 8000d5e:	0c23      	lsrs	r3, r4, #16
 8000d60:	fb0e 111c 	mls	r1, lr, ip, r1
 8000d64:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000d68:	fb08 f10c 	mul.w	r1, r8, ip
 8000d6c:	4299      	cmp	r1, r3
 8000d6e:	d907      	bls.n	8000d80 <__udivmoddi4+0x124>
 8000d70:	18eb      	adds	r3, r5, r3
 8000d72:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000d76:	d202      	bcs.n	8000d7e <__udivmoddi4+0x122>
 8000d78:	4299      	cmp	r1, r3
 8000d7a:	f200 80cd 	bhi.w	8000f18 <__udivmoddi4+0x2bc>
 8000d7e:	4684      	mov	ip, r0
 8000d80:	1a59      	subs	r1, r3, r1
 8000d82:	b2a3      	uxth	r3, r4
 8000d84:	fbb1 f0fe 	udiv	r0, r1, lr
 8000d88:	fb0e 1410 	mls	r4, lr, r0, r1
 8000d8c:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000d90:	fb08 f800 	mul.w	r8, r8, r0
 8000d94:	45a0      	cmp	r8, r4
 8000d96:	d907      	bls.n	8000da8 <__udivmoddi4+0x14c>
 8000d98:	192c      	adds	r4, r5, r4
 8000d9a:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d9e:	d202      	bcs.n	8000da6 <__udivmoddi4+0x14a>
 8000da0:	45a0      	cmp	r8, r4
 8000da2:	f200 80b6 	bhi.w	8000f12 <__udivmoddi4+0x2b6>
 8000da6:	4618      	mov	r0, r3
 8000da8:	eba4 0408 	sub.w	r4, r4, r8
 8000dac:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000db0:	e79f      	b.n	8000cf2 <__udivmoddi4+0x96>
 8000db2:	f1c7 0c20 	rsb	ip, r7, #32
 8000db6:	40bb      	lsls	r3, r7
 8000db8:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000dbc:	ea4e 0e03 	orr.w	lr, lr, r3
 8000dc0:	fa01 f407 	lsl.w	r4, r1, r7
 8000dc4:	fa20 f50c 	lsr.w	r5, r0, ip
 8000dc8:	fa21 f30c 	lsr.w	r3, r1, ip
 8000dcc:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000dd0:	4325      	orrs	r5, r4
 8000dd2:	fbb3 f9f8 	udiv	r9, r3, r8
 8000dd6:	0c2c      	lsrs	r4, r5, #16
 8000dd8:	fb08 3319 	mls	r3, r8, r9, r3
 8000ddc:	fa1f fa8e 	uxth.w	sl, lr
 8000de0:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000de4:	fb09 f40a 	mul.w	r4, r9, sl
 8000de8:	429c      	cmp	r4, r3
 8000dea:	fa02 f207 	lsl.w	r2, r2, r7
 8000dee:	fa00 f107 	lsl.w	r1, r0, r7
 8000df2:	d90b      	bls.n	8000e0c <__udivmoddi4+0x1b0>
 8000df4:	eb1e 0303 	adds.w	r3, lr, r3
 8000df8:	f109 30ff 	add.w	r0, r9, #4294967295
 8000dfc:	f080 8087 	bcs.w	8000f0e <__udivmoddi4+0x2b2>
 8000e00:	429c      	cmp	r4, r3
 8000e02:	f240 8084 	bls.w	8000f0e <__udivmoddi4+0x2b2>
 8000e06:	f1a9 0902 	sub.w	r9, r9, #2
 8000e0a:	4473      	add	r3, lr
 8000e0c:	1b1b      	subs	r3, r3, r4
 8000e0e:	b2ad      	uxth	r5, r5
 8000e10:	fbb3 f0f8 	udiv	r0, r3, r8
 8000e14:	fb08 3310 	mls	r3, r8, r0, r3
 8000e18:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000e1c:	fb00 fa0a 	mul.w	sl, r0, sl
 8000e20:	45a2      	cmp	sl, r4
 8000e22:	d908      	bls.n	8000e36 <__udivmoddi4+0x1da>
 8000e24:	eb1e 0404 	adds.w	r4, lr, r4
 8000e28:	f100 33ff 	add.w	r3, r0, #4294967295
 8000e2c:	d26b      	bcs.n	8000f06 <__udivmoddi4+0x2aa>
 8000e2e:	45a2      	cmp	sl, r4
 8000e30:	d969      	bls.n	8000f06 <__udivmoddi4+0x2aa>
 8000e32:	3802      	subs	r0, #2
 8000e34:	4474      	add	r4, lr
 8000e36:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000e3a:	fba0 8902 	umull	r8, r9, r0, r2
 8000e3e:	eba4 040a 	sub.w	r4, r4, sl
 8000e42:	454c      	cmp	r4, r9
 8000e44:	46c2      	mov	sl, r8
 8000e46:	464b      	mov	r3, r9
 8000e48:	d354      	bcc.n	8000ef4 <__udivmoddi4+0x298>
 8000e4a:	d051      	beq.n	8000ef0 <__udivmoddi4+0x294>
 8000e4c:	2e00      	cmp	r6, #0
 8000e4e:	d069      	beq.n	8000f24 <__udivmoddi4+0x2c8>
 8000e50:	ebb1 050a 	subs.w	r5, r1, sl
 8000e54:	eb64 0403 	sbc.w	r4, r4, r3
 8000e58:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000e5c:	40fd      	lsrs	r5, r7
 8000e5e:	40fc      	lsrs	r4, r7
 8000e60:	ea4c 0505 	orr.w	r5, ip, r5
 8000e64:	e9c6 5400 	strd	r5, r4, [r6]
 8000e68:	2700      	movs	r7, #0
 8000e6a:	e747      	b.n	8000cfc <__udivmoddi4+0xa0>
 8000e6c:	f1c2 0320 	rsb	r3, r2, #32
 8000e70:	fa20 f703 	lsr.w	r7, r0, r3
 8000e74:	4095      	lsls	r5, r2
 8000e76:	fa01 f002 	lsl.w	r0, r1, r2
 8000e7a:	fa21 f303 	lsr.w	r3, r1, r3
 8000e7e:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000e82:	4338      	orrs	r0, r7
 8000e84:	0c01      	lsrs	r1, r0, #16
 8000e86:	fbb3 f7fe 	udiv	r7, r3, lr
 8000e8a:	fa1f f885 	uxth.w	r8, r5
 8000e8e:	fb0e 3317 	mls	r3, lr, r7, r3
 8000e92:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e96:	fb07 f308 	mul.w	r3, r7, r8
 8000e9a:	428b      	cmp	r3, r1
 8000e9c:	fa04 f402 	lsl.w	r4, r4, r2
 8000ea0:	d907      	bls.n	8000eb2 <__udivmoddi4+0x256>
 8000ea2:	1869      	adds	r1, r5, r1
 8000ea4:	f107 3cff 	add.w	ip, r7, #4294967295
 8000ea8:	d22f      	bcs.n	8000f0a <__udivmoddi4+0x2ae>
 8000eaa:	428b      	cmp	r3, r1
 8000eac:	d92d      	bls.n	8000f0a <__udivmoddi4+0x2ae>
 8000eae:	3f02      	subs	r7, #2
 8000eb0:	4429      	add	r1, r5
 8000eb2:	1acb      	subs	r3, r1, r3
 8000eb4:	b281      	uxth	r1, r0
 8000eb6:	fbb3 f0fe 	udiv	r0, r3, lr
 8000eba:	fb0e 3310 	mls	r3, lr, r0, r3
 8000ebe:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000ec2:	fb00 f308 	mul.w	r3, r0, r8
 8000ec6:	428b      	cmp	r3, r1
 8000ec8:	d907      	bls.n	8000eda <__udivmoddi4+0x27e>
 8000eca:	1869      	adds	r1, r5, r1
 8000ecc:	f100 3cff 	add.w	ip, r0, #4294967295
 8000ed0:	d217      	bcs.n	8000f02 <__udivmoddi4+0x2a6>
 8000ed2:	428b      	cmp	r3, r1
 8000ed4:	d915      	bls.n	8000f02 <__udivmoddi4+0x2a6>
 8000ed6:	3802      	subs	r0, #2
 8000ed8:	4429      	add	r1, r5
 8000eda:	1ac9      	subs	r1, r1, r3
 8000edc:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000ee0:	e73b      	b.n	8000d5a <__udivmoddi4+0xfe>
 8000ee2:	4637      	mov	r7, r6
 8000ee4:	4630      	mov	r0, r6
 8000ee6:	e709      	b.n	8000cfc <__udivmoddi4+0xa0>
 8000ee8:	4607      	mov	r7, r0
 8000eea:	e6e7      	b.n	8000cbc <__udivmoddi4+0x60>
 8000eec:	4618      	mov	r0, r3
 8000eee:	e6fb      	b.n	8000ce8 <__udivmoddi4+0x8c>
 8000ef0:	4541      	cmp	r1, r8
 8000ef2:	d2ab      	bcs.n	8000e4c <__udivmoddi4+0x1f0>
 8000ef4:	ebb8 0a02 	subs.w	sl, r8, r2
 8000ef8:	eb69 020e 	sbc.w	r2, r9, lr
 8000efc:	3801      	subs	r0, #1
 8000efe:	4613      	mov	r3, r2
 8000f00:	e7a4      	b.n	8000e4c <__udivmoddi4+0x1f0>
 8000f02:	4660      	mov	r0, ip
 8000f04:	e7e9      	b.n	8000eda <__udivmoddi4+0x27e>
 8000f06:	4618      	mov	r0, r3
 8000f08:	e795      	b.n	8000e36 <__udivmoddi4+0x1da>
 8000f0a:	4667      	mov	r7, ip
 8000f0c:	e7d1      	b.n	8000eb2 <__udivmoddi4+0x256>
 8000f0e:	4681      	mov	r9, r0
 8000f10:	e77c      	b.n	8000e0c <__udivmoddi4+0x1b0>
 8000f12:	3802      	subs	r0, #2
 8000f14:	442c      	add	r4, r5
 8000f16:	e747      	b.n	8000da8 <__udivmoddi4+0x14c>
 8000f18:	f1ac 0c02 	sub.w	ip, ip, #2
 8000f1c:	442b      	add	r3, r5
 8000f1e:	e72f      	b.n	8000d80 <__udivmoddi4+0x124>
 8000f20:	4638      	mov	r0, r7
 8000f22:	e708      	b.n	8000d36 <__udivmoddi4+0xda>
 8000f24:	4637      	mov	r7, r6
 8000f26:	e6e9      	b.n	8000cfc <__udivmoddi4+0xa0>

08000f28 <__aeabi_idiv0>:
 8000f28:	4770      	bx	lr
 8000f2a:	bf00      	nop

08000f2c <matrix_multiplication>:
/* End Includes*/

/////////////////////////////// Sensor fusion functions

// Matrix multiplication
void matrix_multiplication(float Matrix_A[100],float Matrix_B[100],float Matrix_result[100], uint8_t rowa, uint8_t cola, uint8_t rowb, uint8_t colb){
 8000f2c:	b480      	push	{r7}
 8000f2e:	b087      	sub	sp, #28
 8000f30:	af00      	add	r7, sp, #0
 8000f32:	60f8      	str	r0, [r7, #12]
 8000f34:	60b9      	str	r1, [r7, #8]
 8000f36:	607a      	str	r2, [r7, #4]
 8000f38:	70fb      	strb	r3, [r7, #3]

	  for (uint8_t i = 0; i < rowa; i++) {
 8000f3a:	2300      	movs	r3, #0
 8000f3c:	75fb      	strb	r3, [r7, #23]
 8000f3e:	e059      	b.n	8000ff4 <matrix_multiplication+0xc8>
	          for (uint8_t j = 0; j < colb; j++) {
 8000f40:	2300      	movs	r3, #0
 8000f42:	75bb      	strb	r3, [r7, #22]
 8000f44:	e04e      	b.n	8000fe4 <matrix_multiplication+0xb8>
	        	  Matrix_result[i*colb + j] = 0;
 8000f46:	7dfb      	ldrb	r3, [r7, #23]
 8000f48:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 8000f4c:	fb02 f203 	mul.w	r2, r2, r3
 8000f50:	7dbb      	ldrb	r3, [r7, #22]
 8000f52:	4413      	add	r3, r2
 8000f54:	009b      	lsls	r3, r3, #2
 8000f56:	687a      	ldr	r2, [r7, #4]
 8000f58:	4413      	add	r3, r2
 8000f5a:	f04f 0200 	mov.w	r2, #0
 8000f5e:	601a      	str	r2, [r3, #0]

	              for (uint8_t k = 0; k < cola; k++) {
 8000f60:	2300      	movs	r3, #0
 8000f62:	757b      	strb	r3, [r7, #21]
 8000f64:	e036      	b.n	8000fd4 <matrix_multiplication+0xa8>
	            	  Matrix_result[i*colb + j] += Matrix_A[i*cola + k] * Matrix_B[k*colb + j];
 8000f66:	7dfb      	ldrb	r3, [r7, #23]
 8000f68:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 8000f6c:	fb02 f203 	mul.w	r2, r2, r3
 8000f70:	7dbb      	ldrb	r3, [r7, #22]
 8000f72:	4413      	add	r3, r2
 8000f74:	009b      	lsls	r3, r3, #2
 8000f76:	687a      	ldr	r2, [r7, #4]
 8000f78:	4413      	add	r3, r2
 8000f7a:	ed93 7a00 	vldr	s14, [r3]
 8000f7e:	7dfb      	ldrb	r3, [r7, #23]
 8000f80:	f897 2020 	ldrb.w	r2, [r7, #32]
 8000f84:	fb02 f203 	mul.w	r2, r2, r3
 8000f88:	7d7b      	ldrb	r3, [r7, #21]
 8000f8a:	4413      	add	r3, r2
 8000f8c:	009b      	lsls	r3, r3, #2
 8000f8e:	68fa      	ldr	r2, [r7, #12]
 8000f90:	4413      	add	r3, r2
 8000f92:	edd3 6a00 	vldr	s13, [r3]
 8000f96:	7d7b      	ldrb	r3, [r7, #21]
 8000f98:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 8000f9c:	fb02 f203 	mul.w	r2, r2, r3
 8000fa0:	7dbb      	ldrb	r3, [r7, #22]
 8000fa2:	4413      	add	r3, r2
 8000fa4:	009b      	lsls	r3, r3, #2
 8000fa6:	68ba      	ldr	r2, [r7, #8]
 8000fa8:	4413      	add	r3, r2
 8000faa:	edd3 7a00 	vldr	s15, [r3]
 8000fae:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8000fb2:	7dfb      	ldrb	r3, [r7, #23]
 8000fb4:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 8000fb8:	fb02 f203 	mul.w	r2, r2, r3
 8000fbc:	7dbb      	ldrb	r3, [r7, #22]
 8000fbe:	4413      	add	r3, r2
 8000fc0:	009b      	lsls	r3, r3, #2
 8000fc2:	687a      	ldr	r2, [r7, #4]
 8000fc4:	4413      	add	r3, r2
 8000fc6:	ee77 7a27 	vadd.f32	s15, s14, s15
 8000fca:	edc3 7a00 	vstr	s15, [r3]
	              for (uint8_t k = 0; k < cola; k++) {
 8000fce:	7d7b      	ldrb	r3, [r7, #21]
 8000fd0:	3301      	adds	r3, #1
 8000fd2:	757b      	strb	r3, [r7, #21]
 8000fd4:	7d7a      	ldrb	r2, [r7, #21]
 8000fd6:	f897 3020 	ldrb.w	r3, [r7, #32]
 8000fda:	429a      	cmp	r2, r3
 8000fdc:	d3c3      	bcc.n	8000f66 <matrix_multiplication+0x3a>
	          for (uint8_t j = 0; j < colb; j++) {
 8000fde:	7dbb      	ldrb	r3, [r7, #22]
 8000fe0:	3301      	adds	r3, #1
 8000fe2:	75bb      	strb	r3, [r7, #22]
 8000fe4:	7dba      	ldrb	r2, [r7, #22]
 8000fe6:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8000fea:	429a      	cmp	r2, r3
 8000fec:	d3ab      	bcc.n	8000f46 <matrix_multiplication+0x1a>
	  for (uint8_t i = 0; i < rowa; i++) {
 8000fee:	7dfb      	ldrb	r3, [r7, #23]
 8000ff0:	3301      	adds	r3, #1
 8000ff2:	75fb      	strb	r3, [r7, #23]
 8000ff4:	7dfa      	ldrb	r2, [r7, #23]
 8000ff6:	78fb      	ldrb	r3, [r7, #3]
 8000ff8:	429a      	cmp	r2, r3
 8000ffa:	d3a1      	bcc.n	8000f40 <matrix_multiplication+0x14>
	              }
	          }
	      }
}
 8000ffc:	bf00      	nop
 8000ffe:	371c      	adds	r7, #28
 8001000:	46bd      	mov	sp, r7
 8001002:	f85d 7b04 	ldr.w	r7, [sp], #4
 8001006:	4770      	bx	lr

08001008 <matrix_Transpose>:

void matrix_Transpose (float Mat_A[100],float Mat_B[100],   uint8_t row, uint8_t col){
 8001008:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 800100c:	b088      	sub	sp, #32
 800100e:	af00      	add	r7, sp, #0
 8001010:	60f8      	str	r0, [r7, #12]
 8001012:	60b9      	str	r1, [r7, #8]
 8001014:	4611      	mov	r1, r2
 8001016:	461a      	mov	r2, r3
 8001018:	460b      	mov	r3, r1
 800101a:	71fb      	strb	r3, [r7, #7]
 800101c:	4613      	mov	r3, r2
 800101e:	71bb      	strb	r3, [r7, #6]
 8001020:	466b      	mov	r3, sp
 8001022:	4698      	mov	r8, r3

	float Mat_transpose[col][row];
 8001024:	79f8      	ldrb	r0, [r7, #7]
 8001026:	79bd      	ldrb	r5, [r7, #6]
 8001028:	4603      	mov	r3, r0
 800102a:	3b01      	subs	r3, #1
 800102c:	61bb      	str	r3, [r7, #24]
 800102e:	b2c1      	uxtb	r1, r0
 8001030:	f04f 0200 	mov.w	r2, #0
 8001034:	f04f 0300 	mov.w	r3, #0
 8001038:	f04f 0400 	mov.w	r4, #0
 800103c:	0154      	lsls	r4, r2, #5
 800103e:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8001042:	014b      	lsls	r3, r1, #5
 8001044:	4603      	mov	r3, r0
 8001046:	009e      	lsls	r6, r3, #2
 8001048:	462b      	mov	r3, r5
 800104a:	3b01      	subs	r3, #1
 800104c:	617b      	str	r3, [r7, #20]
 800104e:	b2c1      	uxtb	r1, r0
 8001050:	f04f 0200 	mov.w	r2, #0
 8001054:	b2eb      	uxtb	r3, r5
 8001056:	f04f 0400 	mov.w	r4, #0
 800105a:	fb03 fe02 	mul.w	lr, r3, r2
 800105e:	fb01 fc04 	mul.w	ip, r1, r4
 8001062:	44f4      	add	ip, lr
 8001064:	fba1 3403 	umull	r3, r4, r1, r3
 8001068:	eb0c 0204 	add.w	r2, ip, r4
 800106c:	4614      	mov	r4, r2
 800106e:	f04f 0100 	mov.w	r1, #0
 8001072:	f04f 0200 	mov.w	r2, #0
 8001076:	0162      	lsls	r2, r4, #5
 8001078:	ea42 62d3 	orr.w	r2, r2, r3, lsr #27
 800107c:	0159      	lsls	r1, r3, #5
 800107e:	b2c1      	uxtb	r1, r0
 8001080:	f04f 0200 	mov.w	r2, #0
 8001084:	b2eb      	uxtb	r3, r5
 8001086:	f04f 0400 	mov.w	r4, #0
 800108a:	fb03 fe02 	mul.w	lr, r3, r2
 800108e:	fb01 fc04 	mul.w	ip, r1, r4
 8001092:	44f4      	add	ip, lr
 8001094:	fba1 3403 	umull	r3, r4, r1, r3
 8001098:	eb0c 0204 	add.w	r2, ip, r4
 800109c:	4614      	mov	r4, r2
 800109e:	f04f 0100 	mov.w	r1, #0
 80010a2:	f04f 0200 	mov.w	r2, #0
 80010a6:	0162      	lsls	r2, r4, #5
 80010a8:	ea42 62d3 	orr.w	r2, r2, r3, lsr #27
 80010ac:	0159      	lsls	r1, r3, #5
 80010ae:	4603      	mov	r3, r0
 80010b0:	462a      	mov	r2, r5
 80010b2:	fb02 f303 	mul.w	r3, r2, r3
 80010b6:	009b      	lsls	r3, r3, #2
 80010b8:	3303      	adds	r3, #3
 80010ba:	3307      	adds	r3, #7
 80010bc:	08db      	lsrs	r3, r3, #3
 80010be:	00db      	lsls	r3, r3, #3
 80010c0:	ebad 0d03 	sub.w	sp, sp, r3
 80010c4:	466b      	mov	r3, sp
 80010c6:	3303      	adds	r3, #3
 80010c8:	089b      	lsrs	r3, r3, #2
 80010ca:	009b      	lsls	r3, r3, #2
 80010cc:	613b      	str	r3, [r7, #16]
	  for (uint8_t i = 0; i < row; i++) {
 80010ce:	2300      	movs	r3, #0
 80010d0:	77bb      	strb	r3, [r7, #30]
 80010d2:	e021      	b.n	8001118 <matrix_Transpose+0x110>
	          for (uint8_t j = 0; j < col; j++) {
 80010d4:	2300      	movs	r3, #0
 80010d6:	77fb      	strb	r3, [r7, #31]
 80010d8:	e017      	b.n	800110a <matrix_Transpose+0x102>
	        	  Mat_transpose[j][i] =  Mat_A[i*col + j];
 80010da:	7fbb      	ldrb	r3, [r7, #30]
 80010dc:	79ba      	ldrb	r2, [r7, #6]
 80010de:	fb02 f203 	mul.w	r2, r2, r3
 80010e2:	7ffb      	ldrb	r3, [r7, #31]
 80010e4:	4413      	add	r3, r2
 80010e6:	009b      	lsls	r3, r3, #2
 80010e8:	68fa      	ldr	r2, [r7, #12]
 80010ea:	441a      	add	r2, r3
 80010ec:	08b4      	lsrs	r4, r6, #2
 80010ee:	f897 c01f 	ldrb.w	ip, [r7, #31]
 80010f2:	7fbb      	ldrb	r3, [r7, #30]
 80010f4:	6812      	ldr	r2, [r2, #0]
 80010f6:	6939      	ldr	r1, [r7, #16]
 80010f8:	fb0c f404 	mul.w	r4, ip, r4
 80010fc:	4423      	add	r3, r4
 80010fe:	009b      	lsls	r3, r3, #2
 8001100:	440b      	add	r3, r1
 8001102:	601a      	str	r2, [r3, #0]
	          for (uint8_t j = 0; j < col; j++) {
 8001104:	7ffb      	ldrb	r3, [r7, #31]
 8001106:	3301      	adds	r3, #1
 8001108:	77fb      	strb	r3, [r7, #31]
 800110a:	7ffa      	ldrb	r2, [r7, #31]
 800110c:	79bb      	ldrb	r3, [r7, #6]
 800110e:	429a      	cmp	r2, r3
 8001110:	d3e3      	bcc.n	80010da <matrix_Transpose+0xd2>
	  for (uint8_t i = 0; i < row; i++) {
 8001112:	7fbb      	ldrb	r3, [r7, #30]
 8001114:	3301      	adds	r3, #1
 8001116:	77bb      	strb	r3, [r7, #30]
 8001118:	7fba      	ldrb	r2, [r7, #30]
 800111a:	79fb      	ldrb	r3, [r7, #7]
 800111c:	429a      	cmp	r2, r3
 800111e:	d3d9      	bcc.n	80010d4 <matrix_Transpose+0xcc>
	          }
	      }
		memcpy(Mat_B,Mat_transpose,sizeof(Mat_transpose));
 8001120:	6939      	ldr	r1, [r7, #16]
 8001122:	4603      	mov	r3, r0
 8001124:	462a      	mov	r2, r5
 8001126:	fb02 f303 	mul.w	r3, r2, r3
 800112a:	009b      	lsls	r3, r3, #2
 800112c:	461a      	mov	r2, r3
 800112e:	68b8      	ldr	r0, [r7, #8]
 8001130:	f00f fa7a 	bl	8010628 <memcpy>
 8001134:	46c5      	mov	sp, r8
}
 8001136:	bf00      	nop
 8001138:	3720      	adds	r7, #32
 800113a:	46bd      	mov	sp, r7
 800113c:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08001140 <matrix_sum>:

void matrix_sum(float Matrix_A[100],float Matrix_B[100],float Matrix_result[100], uint8_t rowa, uint8_t cola, uint8_t rowb, uint8_t colb){
 8001140:	b480      	push	{r7}
 8001142:	b087      	sub	sp, #28
 8001144:	af00      	add	r7, sp, #0
 8001146:	60f8      	str	r0, [r7, #12]
 8001148:	60b9      	str	r1, [r7, #8]
 800114a:	607a      	str	r2, [r7, #4]
 800114c:	70fb      	strb	r3, [r7, #3]

	uint8_t rows = (rowa > rowb) ? rowb : rowa;
 800114e:	78fa      	ldrb	r2, [r7, #3]
 8001150:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8001154:	4293      	cmp	r3, r2
 8001156:	bf28      	it	cs
 8001158:	4613      	movcs	r3, r2
 800115a:	753b      	strb	r3, [r7, #20]
	  for (uint8_t i = 0; i < rows; i++) {
 800115c:	2300      	movs	r3, #0
 800115e:	75fb      	strb	r3, [r7, #23]
 8001160:	e063      	b.n	800122a <matrix_sum+0xea>
	          for (uint8_t j = 0; j < colb; j++) {
 8001162:	2300      	movs	r3, #0
 8001164:	75bb      	strb	r3, [r7, #22]
 8001166:	e058      	b.n	800121a <matrix_sum+0xda>
	        	  if(colb == 1){
 8001168:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800116c:	2b01      	cmp	r3, #1
 800116e:	d12b      	bne.n	80011c8 <matrix_sum+0x88>
	        		  for (uint8_t k = 0; k < cola; k++){
 8001170:	2300      	movs	r3, #0
 8001172:	757b      	strb	r3, [r7, #21]
 8001174:	e022      	b.n	80011bc <matrix_sum+0x7c>
	        			  Matrix_result[i*cola + k] = Matrix_A[i*cola + k] + Matrix_B[i];
 8001176:	7dfb      	ldrb	r3, [r7, #23]
 8001178:	f897 2020 	ldrb.w	r2, [r7, #32]
 800117c:	fb02 f203 	mul.w	r2, r2, r3
 8001180:	7d7b      	ldrb	r3, [r7, #21]
 8001182:	4413      	add	r3, r2
 8001184:	009b      	lsls	r3, r3, #2
 8001186:	68fa      	ldr	r2, [r7, #12]
 8001188:	4413      	add	r3, r2
 800118a:	ed93 7a00 	vldr	s14, [r3]
 800118e:	7dfb      	ldrb	r3, [r7, #23]
 8001190:	009b      	lsls	r3, r3, #2
 8001192:	68ba      	ldr	r2, [r7, #8]
 8001194:	4413      	add	r3, r2
 8001196:	edd3 7a00 	vldr	s15, [r3]
 800119a:	7dfb      	ldrb	r3, [r7, #23]
 800119c:	f897 2020 	ldrb.w	r2, [r7, #32]
 80011a0:	fb02 f203 	mul.w	r2, r2, r3
 80011a4:	7d7b      	ldrb	r3, [r7, #21]
 80011a6:	4413      	add	r3, r2
 80011a8:	009b      	lsls	r3, r3, #2
 80011aa:	687a      	ldr	r2, [r7, #4]
 80011ac:	4413      	add	r3, r2
 80011ae:	ee77 7a27 	vadd.f32	s15, s14, s15
 80011b2:	edc3 7a00 	vstr	s15, [r3]
	        		  for (uint8_t k = 0; k < cola; k++){
 80011b6:	7d7b      	ldrb	r3, [r7, #21]
 80011b8:	3301      	adds	r3, #1
 80011ba:	757b      	strb	r3, [r7, #21]
 80011bc:	7d7a      	ldrb	r2, [r7, #21]
 80011be:	f897 3020 	ldrb.w	r3, [r7, #32]
 80011c2:	429a      	cmp	r2, r3
 80011c4:	d3d7      	bcc.n	8001176 <matrix_sum+0x36>
 80011c6:	e025      	b.n	8001214 <matrix_sum+0xd4>
	        		  }
	        	  }else{
	            	  Matrix_result[i*colb + j] = Matrix_A[i*cola + j] + Matrix_B[i*colb + j];
 80011c8:	7dfb      	ldrb	r3, [r7, #23]
 80011ca:	f897 2020 	ldrb.w	r2, [r7, #32]
 80011ce:	fb02 f203 	mul.w	r2, r2, r3
 80011d2:	7dbb      	ldrb	r3, [r7, #22]
 80011d4:	4413      	add	r3, r2
 80011d6:	009b      	lsls	r3, r3, #2
 80011d8:	68fa      	ldr	r2, [r7, #12]
 80011da:	4413      	add	r3, r2
 80011dc:	ed93 7a00 	vldr	s14, [r3]
 80011e0:	7dfb      	ldrb	r3, [r7, #23]
 80011e2:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 80011e6:	fb02 f203 	mul.w	r2, r2, r3
 80011ea:	7dbb      	ldrb	r3, [r7, #22]
 80011ec:	4413      	add	r3, r2
 80011ee:	009b      	lsls	r3, r3, #2
 80011f0:	68ba      	ldr	r2, [r7, #8]
 80011f2:	4413      	add	r3, r2
 80011f4:	edd3 7a00 	vldr	s15, [r3]
 80011f8:	7dfb      	ldrb	r3, [r7, #23]
 80011fa:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 80011fe:	fb02 f203 	mul.w	r2, r2, r3
 8001202:	7dbb      	ldrb	r3, [r7, #22]
 8001204:	4413      	add	r3, r2
 8001206:	009b      	lsls	r3, r3, #2
 8001208:	687a      	ldr	r2, [r7, #4]
 800120a:	4413      	add	r3, r2
 800120c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001210:	edc3 7a00 	vstr	s15, [r3]
	          for (uint8_t j = 0; j < colb; j++) {
 8001214:	7dbb      	ldrb	r3, [r7, #22]
 8001216:	3301      	adds	r3, #1
 8001218:	75bb      	strb	r3, [r7, #22]
 800121a:	7dba      	ldrb	r2, [r7, #22]
 800121c:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 8001220:	429a      	cmp	r2, r3
 8001222:	d3a1      	bcc.n	8001168 <matrix_sum+0x28>
	  for (uint8_t i = 0; i < rows; i++) {
 8001224:	7dfb      	ldrb	r3, [r7, #23]
 8001226:	3301      	adds	r3, #1
 8001228:	75fb      	strb	r3, [r7, #23]
 800122a:	7dfa      	ldrb	r2, [r7, #23]
 800122c:	7d3b      	ldrb	r3, [r7, #20]
 800122e:	429a      	cmp	r2, r3
 8001230:	d397      	bcc.n	8001162 <matrix_sum+0x22>
	        	  }
	          }
	      }
}
 8001232:	bf00      	nop
 8001234:	371c      	adds	r7, #28
 8001236:	46bd      	mov	sp, r7
 8001238:	f85d 7b04 	ldr.w	r7, [sp], #4
 800123c:	4770      	bx	lr

0800123e <matrix_sub>:

void matrix_sub(float Matrix_A[100],float Matrix_B[100],float Matrix_result[100], uint8_t rowa, uint8_t cola, uint8_t rowb, uint8_t colb){
 800123e:	b480      	push	{r7}
 8001240:	b087      	sub	sp, #28
 8001242:	af00      	add	r7, sp, #0
 8001244:	60f8      	str	r0, [r7, #12]
 8001246:	60b9      	str	r1, [r7, #8]
 8001248:	607a      	str	r2, [r7, #4]
 800124a:	70fb      	strb	r3, [r7, #3]

	uint8_t rows = (rowa > rowb) ? rowb : rowa;
 800124c:	78fa      	ldrb	r2, [r7, #3]
 800124e:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8001252:	4293      	cmp	r3, r2
 8001254:	bf28      	it	cs
 8001256:	4613      	movcs	r3, r2
 8001258:	753b      	strb	r3, [r7, #20]
	  for (uint8_t i = 0; i < rows; i++) {
 800125a:	2300      	movs	r3, #0
 800125c:	75fb      	strb	r3, [r7, #23]
 800125e:	e063      	b.n	8001328 <matrix_sub+0xea>
	          for (uint8_t j = 0; j < colb; j++) {
 8001260:	2300      	movs	r3, #0
 8001262:	75bb      	strb	r3, [r7, #22]
 8001264:	e058      	b.n	8001318 <matrix_sub+0xda>
	        	  if(colb == 1){
 8001266:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800126a:	2b01      	cmp	r3, #1
 800126c:	d12b      	bne.n	80012c6 <matrix_sub+0x88>
	        		  for (uint8_t k = 0; k < cola; k++){
 800126e:	2300      	movs	r3, #0
 8001270:	757b      	strb	r3, [r7, #21]
 8001272:	e022      	b.n	80012ba <matrix_sub+0x7c>
	        			  Matrix_result[i*cola + k] = Matrix_A[i*cola + k] - Matrix_B[i];
 8001274:	7dfb      	ldrb	r3, [r7, #23]
 8001276:	f897 2020 	ldrb.w	r2, [r7, #32]
 800127a:	fb02 f203 	mul.w	r2, r2, r3
 800127e:	7d7b      	ldrb	r3, [r7, #21]
 8001280:	4413      	add	r3, r2
 8001282:	009b      	lsls	r3, r3, #2
 8001284:	68fa      	ldr	r2, [r7, #12]
 8001286:	4413      	add	r3, r2
 8001288:	ed93 7a00 	vldr	s14, [r3]
 800128c:	7dfb      	ldrb	r3, [r7, #23]
 800128e:	009b      	lsls	r3, r3, #2
 8001290:	68ba      	ldr	r2, [r7, #8]
 8001292:	4413      	add	r3, r2
 8001294:	edd3 7a00 	vldr	s15, [r3]
 8001298:	7dfb      	ldrb	r3, [r7, #23]
 800129a:	f897 2020 	ldrb.w	r2, [r7, #32]
 800129e:	fb02 f203 	mul.w	r2, r2, r3
 80012a2:	7d7b      	ldrb	r3, [r7, #21]
 80012a4:	4413      	add	r3, r2
 80012a6:	009b      	lsls	r3, r3, #2
 80012a8:	687a      	ldr	r2, [r7, #4]
 80012aa:	4413      	add	r3, r2
 80012ac:	ee77 7a67 	vsub.f32	s15, s14, s15
 80012b0:	edc3 7a00 	vstr	s15, [r3]
	        		  for (uint8_t k = 0; k < cola; k++){
 80012b4:	7d7b      	ldrb	r3, [r7, #21]
 80012b6:	3301      	adds	r3, #1
 80012b8:	757b      	strb	r3, [r7, #21]
 80012ba:	7d7a      	ldrb	r2, [r7, #21]
 80012bc:	f897 3020 	ldrb.w	r3, [r7, #32]
 80012c0:	429a      	cmp	r2, r3
 80012c2:	d3d7      	bcc.n	8001274 <matrix_sub+0x36>
 80012c4:	e025      	b.n	8001312 <matrix_sub+0xd4>
	        		  }
	        	  }else{
	            	  Matrix_result[i*colb + j] = Matrix_A[i*cola + j] - Matrix_B[i*colb + j];
 80012c6:	7dfb      	ldrb	r3, [r7, #23]
 80012c8:	f897 2020 	ldrb.w	r2, [r7, #32]
 80012cc:	fb02 f203 	mul.w	r2, r2, r3
 80012d0:	7dbb      	ldrb	r3, [r7, #22]
 80012d2:	4413      	add	r3, r2
 80012d4:	009b      	lsls	r3, r3, #2
 80012d6:	68fa      	ldr	r2, [r7, #12]
 80012d8:	4413      	add	r3, r2
 80012da:	ed93 7a00 	vldr	s14, [r3]
 80012de:	7dfb      	ldrb	r3, [r7, #23]
 80012e0:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 80012e4:	fb02 f203 	mul.w	r2, r2, r3
 80012e8:	7dbb      	ldrb	r3, [r7, #22]
 80012ea:	4413      	add	r3, r2
 80012ec:	009b      	lsls	r3, r3, #2
 80012ee:	68ba      	ldr	r2, [r7, #8]
 80012f0:	4413      	add	r3, r2
 80012f2:	edd3 7a00 	vldr	s15, [r3]
 80012f6:	7dfb      	ldrb	r3, [r7, #23]
 80012f8:	f897 2028 	ldrb.w	r2, [r7, #40]	; 0x28
 80012fc:	fb02 f203 	mul.w	r2, r2, r3
 8001300:	7dbb      	ldrb	r3, [r7, #22]
 8001302:	4413      	add	r3, r2
 8001304:	009b      	lsls	r3, r3, #2
 8001306:	687a      	ldr	r2, [r7, #4]
 8001308:	4413      	add	r3, r2
 800130a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800130e:	edc3 7a00 	vstr	s15, [r3]
	          for (uint8_t j = 0; j < colb; j++) {
 8001312:	7dbb      	ldrb	r3, [r7, #22]
 8001314:	3301      	adds	r3, #1
 8001316:	75bb      	strb	r3, [r7, #22]
 8001318:	7dba      	ldrb	r2, [r7, #22]
 800131a:	f897 3028 	ldrb.w	r3, [r7, #40]	; 0x28
 800131e:	429a      	cmp	r2, r3
 8001320:	d3a1      	bcc.n	8001266 <matrix_sub+0x28>
	  for (uint8_t i = 0; i < rows; i++) {
 8001322:	7dfb      	ldrb	r3, [r7, #23]
 8001324:	3301      	adds	r3, #1
 8001326:	75fb      	strb	r3, [r7, #23]
 8001328:	7dfa      	ldrb	r2, [r7, #23]
 800132a:	7d3b      	ldrb	r3, [r7, #20]
 800132c:	429a      	cmp	r2, r3
 800132e:	d397      	bcc.n	8001260 <matrix_sub+0x22>
	        	  }
	          }
	      }
}
 8001330:	bf00      	nop
 8001332:	371c      	adds	r7, #28
 8001334:	46bd      	mov	sp, r7
 8001336:	f85d 7b04 	ldr.w	r7, [sp], #4
 800133a:	4770      	bx	lr

0800133c <InverseOfMatrix>:


void InverseOfMatrix(float Matrix_A_A[100], int order) {
 800133c:	b5f0      	push	{r4, r5, r6, r7, lr}
 800133e:	b08d      	sub	sp, #52	; 0x34
 8001340:	af00      	add	r7, sp, #0
 8001342:	6078      	str	r0, [r7, #4]
 8001344:	6039      	str	r1, [r7, #0]
 8001346:	466b      	mov	r3, sp
 8001348:	461e      	mov	r6, r3
    // Matrix Declaration.

    float temp;
    float ident [order * order];
 800134a:	683b      	ldr	r3, [r7, #0]
 800134c:	683a      	ldr	r2, [r7, #0]
 800134e:	fb02 f503 	mul.w	r5, r2, r3
 8001352:	1e6b      	subs	r3, r5, #1
 8001354:	61fb      	str	r3, [r7, #28]
 8001356:	462b      	mov	r3, r5
 8001358:	4619      	mov	r1, r3
 800135a:	f04f 0200 	mov.w	r2, #0
 800135e:	f04f 0300 	mov.w	r3, #0
 8001362:	f04f 0400 	mov.w	r4, #0
 8001366:	0154      	lsls	r4, r2, #5
 8001368:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 800136c:	014b      	lsls	r3, r1, #5
 800136e:	462b      	mov	r3, r5
 8001370:	4619      	mov	r1, r3
 8001372:	f04f 0200 	mov.w	r2, #0
 8001376:	f04f 0300 	mov.w	r3, #0
 800137a:	f04f 0400 	mov.w	r4, #0
 800137e:	0154      	lsls	r4, r2, #5
 8001380:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 8001384:	014b      	lsls	r3, r1, #5
 8001386:	462b      	mov	r3, r5
 8001388:	009b      	lsls	r3, r3, #2
 800138a:	3303      	adds	r3, #3
 800138c:	3307      	adds	r3, #7
 800138e:	08db      	lsrs	r3, r3, #3
 8001390:	00db      	lsls	r3, r3, #3
 8001392:	ebad 0d03 	sub.w	sp, sp, r3
 8001396:	466b      	mov	r3, sp
 8001398:	3303      	adds	r3, #3
 800139a:	089b      	lsrs	r3, r3, #2
 800139c:	009b      	lsls	r3, r3, #2
 800139e:	61bb      	str	r3, [r7, #24]
    float Matrix_A [order * order];
 80013a0:	683b      	ldr	r3, [r7, #0]
 80013a2:	683a      	ldr	r2, [r7, #0]
 80013a4:	fb02 f003 	mul.w	r0, r2, r3
 80013a8:	1e43      	subs	r3, r0, #1
 80013aa:	617b      	str	r3, [r7, #20]
 80013ac:	4603      	mov	r3, r0
 80013ae:	4619      	mov	r1, r3
 80013b0:	f04f 0200 	mov.w	r2, #0
 80013b4:	f04f 0300 	mov.w	r3, #0
 80013b8:	f04f 0400 	mov.w	r4, #0
 80013bc:	0154      	lsls	r4, r2, #5
 80013be:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80013c2:	014b      	lsls	r3, r1, #5
 80013c4:	4603      	mov	r3, r0
 80013c6:	4619      	mov	r1, r3
 80013c8:	f04f 0200 	mov.w	r2, #0
 80013cc:	f04f 0300 	mov.w	r3, #0
 80013d0:	f04f 0400 	mov.w	r4, #0
 80013d4:	0154      	lsls	r4, r2, #5
 80013d6:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 80013da:	014b      	lsls	r3, r1, #5
 80013dc:	4603      	mov	r3, r0
 80013de:	009b      	lsls	r3, r3, #2
 80013e0:	3303      	adds	r3, #3
 80013e2:	3307      	adds	r3, #7
 80013e4:	08db      	lsrs	r3, r3, #3
 80013e6:	00db      	lsls	r3, r3, #3
 80013e8:	ebad 0d03 	sub.w	sp, sp, r3
 80013ec:	466b      	mov	r3, sp
 80013ee:	3303      	adds	r3, #3
 80013f0:	089b      	lsrs	r3, r3, #2
 80013f2:	009b      	lsls	r3, r3, #2
 80013f4:	613b      	str	r3, [r7, #16]

	  memcpy(Matrix_A,Matrix_A_A,sizeof(Matrix_A));
 80013f6:	693b      	ldr	r3, [r7, #16]
 80013f8:	4602      	mov	r2, r0
 80013fa:	0092      	lsls	r2, r2, #2
 80013fc:	6879      	ldr	r1, [r7, #4]
 80013fe:	4618      	mov	r0, r3
 8001400:	f00f f912 	bl	8010628 <memcpy>


    // Create the augmented matrix
    // Add the identity matrix
    // of order at the end of original matrix.
    for (uint8_t i = 0; i < order; i++) {
 8001404:	2300      	movs	r3, #0
 8001406:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 800140a:	e035      	b.n	8001478 <InverseOfMatrix+0x13c>

        for (uint8_t j = 0; j < order; j++) {
 800140c:	2300      	movs	r3, #0
 800140e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8001412:	e027      	b.n	8001464 <InverseOfMatrix+0x128>

            // Add '1' at the diagonal places of
            // the matrix to create a identity matirx
            if (j == i)
 8001414:	f897 2023 	ldrb.w	r2, [r7, #35]	; 0x23
 8001418:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800141c:	429a      	cmp	r2, r3
 800141e:	d10e      	bne.n	800143e <InverseOfMatrix+0x102>
                ident[i*order + j] = 1;
 8001420:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8001424:	683a      	ldr	r2, [r7, #0]
 8001426:	fb02 f203 	mul.w	r2, r2, r3
 800142a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800142e:	4413      	add	r3, r2
 8001430:	69ba      	ldr	r2, [r7, #24]
 8001432:	009b      	lsls	r3, r3, #2
 8001434:	4413      	add	r3, r2
 8001436:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 800143a:	601a      	str	r2, [r3, #0]
 800143c:	e00d      	b.n	800145a <InverseOfMatrix+0x11e>
            else
            	ident[i*order + j] = 0;
 800143e:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8001442:	683a      	ldr	r2, [r7, #0]
 8001444:	fb02 f203 	mul.w	r2, r2, r3
 8001448:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800144c:	4413      	add	r3, r2
 800144e:	69ba      	ldr	r2, [r7, #24]
 8001450:	009b      	lsls	r3, r3, #2
 8001452:	4413      	add	r3, r2
 8001454:	f04f 0200 	mov.w	r2, #0
 8001458:	601a      	str	r2, [r3, #0]
        for (uint8_t j = 0; j < order; j++) {
 800145a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800145e:	3301      	adds	r3, #1
 8001460:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 8001464:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 8001468:	683a      	ldr	r2, [r7, #0]
 800146a:	429a      	cmp	r2, r3
 800146c:	dcd2      	bgt.n	8001414 <InverseOfMatrix+0xd8>
    for (uint8_t i = 0; i < order; i++) {
 800146e:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 8001472:	3301      	adds	r3, #1
 8001474:	f887 3022 	strb.w	r3, [r7, #34]	; 0x22
 8001478:	f897 3022 	ldrb.w	r3, [r7, #34]	; 0x22
 800147c:	683a      	ldr	r2, [r7, #0]
 800147e:	429a      	cmp	r2, r3
 8001480:	dcc4      	bgt.n	800140c <InverseOfMatrix+0xd0>
        }
    }

    // Replace a row by sum of itself and a
    // constant multiple of another row of the matrix
    for (uint8_t i = 0; i < order; i++) {
 8001482:	2300      	movs	r3, #0
 8001484:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 8001488:	e1a2      	b.n	80017d0 <InverseOfMatrix+0x494>
    	if(Matrix_A[i*order + i] == 0){
 800148a:	683b      	ldr	r3, [r7, #0]
 800148c:	3301      	adds	r3, #1
 800148e:	f897 2024 	ldrb.w	r2, [r7, #36]	; 0x24
 8001492:	fb02 f303 	mul.w	r3, r2, r3
 8001496:	693a      	ldr	r2, [r7, #16]
 8001498:	009b      	lsls	r3, r3, #2
 800149a:	4413      	add	r3, r2
 800149c:	edd3 7a00 	vldr	s15, [r3]
 80014a0:	eef5 7a40 	vcmp.f32	s15, #0.0
 80014a4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80014a8:	f040 80b0 	bne.w	800160c <InverseOfMatrix+0x2d0>
    		for (uint8_t k = i + 1; k < order; k++) {
 80014ac:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80014b0:	3301      	adds	r3, #1
 80014b2:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 80014b6:	e0a3      	b.n	8001600 <InverseOfMatrix+0x2c4>
    			if(Matrix_A[k*order + i] != 0){
 80014b8:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 80014bc:	683a      	ldr	r2, [r7, #0]
 80014be:	fb02 f203 	mul.w	r2, r2, r3
 80014c2:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80014c6:	4413      	add	r3, r2
 80014c8:	693a      	ldr	r2, [r7, #16]
 80014ca:	009b      	lsls	r3, r3, #2
 80014cc:	4413      	add	r3, r2
 80014ce:	edd3 7a00 	vldr	s15, [r3]
 80014d2:	eef5 7a40 	vcmp.f32	s15, #0.0
 80014d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80014da:	f000 808c 	beq.w	80015f6 <InverseOfMatrix+0x2ba>
    				float norm =  Matrix_A[k*order + i];
 80014de:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 80014e2:	683a      	ldr	r2, [r7, #0]
 80014e4:	fb02 f203 	mul.w	r2, r2, r3
 80014e8:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80014ec:	4413      	add	r3, r2
 80014ee:	693a      	ldr	r2, [r7, #16]
 80014f0:	009b      	lsls	r3, r3, #2
 80014f2:	4413      	add	r3, r2
 80014f4:	681b      	ldr	r3, [r3, #0]
 80014f6:	60fb      	str	r3, [r7, #12]
    				 for (uint8_t j = 0; j < order; j++) {
 80014f8:	2300      	movs	r3, #0
 80014fa:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 80014fe:	e074      	b.n	80015ea <InverseOfMatrix+0x2ae>

						// Swapping of the row, if above
						// condition satisfied.
						temp = Matrix_A[i*order + j];
 8001500:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8001504:	683a      	ldr	r2, [r7, #0]
 8001506:	fb02 f203 	mul.w	r2, r2, r3
 800150a:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 800150e:	4413      	add	r3, r2
 8001510:	693a      	ldr	r2, [r7, #16]
 8001512:	009b      	lsls	r3, r3, #2
 8001514:	4413      	add	r3, r2
 8001516:	681b      	ldr	r3, [r3, #0]
 8001518:	60bb      	str	r3, [r7, #8]
						Matrix_A[i*order + j] = Matrix_A[k*order + j]/norm;
 800151a:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 800151e:	683a      	ldr	r2, [r7, #0]
 8001520:	fb02 f203 	mul.w	r2, r2, r3
 8001524:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8001528:	4413      	add	r3, r2
 800152a:	693a      	ldr	r2, [r7, #16]
 800152c:	009b      	lsls	r3, r3, #2
 800152e:	4413      	add	r3, r2
 8001530:	edd3 6a00 	vldr	s13, [r3]
 8001534:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8001538:	683a      	ldr	r2, [r7, #0]
 800153a:	fb02 f203 	mul.w	r2, r2, r3
 800153e:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8001542:	4413      	add	r3, r2
 8001544:	ed97 7a03 	vldr	s14, [r7, #12]
 8001548:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800154c:	693a      	ldr	r2, [r7, #16]
 800154e:	009b      	lsls	r3, r3, #2
 8001550:	4413      	add	r3, r2
 8001552:	edc3 7a00 	vstr	s15, [r3]
						Matrix_A[k*order + j] = temp;
 8001556:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 800155a:	683a      	ldr	r2, [r7, #0]
 800155c:	fb02 f203 	mul.w	r2, r2, r3
 8001560:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8001564:	4413      	add	r3, r2
 8001566:	693a      	ldr	r2, [r7, #16]
 8001568:	009b      	lsls	r3, r3, #2
 800156a:	4413      	add	r3, r2
 800156c:	68ba      	ldr	r2, [r7, #8]
 800156e:	601a      	str	r2, [r3, #0]

						temp = ident[i*order + j];
 8001570:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8001574:	683a      	ldr	r2, [r7, #0]
 8001576:	fb02 f203 	mul.w	r2, r2, r3
 800157a:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 800157e:	4413      	add	r3, r2
 8001580:	69ba      	ldr	r2, [r7, #24]
 8001582:	009b      	lsls	r3, r3, #2
 8001584:	4413      	add	r3, r2
 8001586:	681b      	ldr	r3, [r3, #0]
 8001588:	60bb      	str	r3, [r7, #8]
						ident[i*order + j] = ident[k*order + j]/norm;
 800158a:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 800158e:	683a      	ldr	r2, [r7, #0]
 8001590:	fb02 f203 	mul.w	r2, r2, r3
 8001594:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 8001598:	4413      	add	r3, r2
 800159a:	69ba      	ldr	r2, [r7, #24]
 800159c:	009b      	lsls	r3, r3, #2
 800159e:	4413      	add	r3, r2
 80015a0:	edd3 6a00 	vldr	s13, [r3]
 80015a4:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80015a8:	683a      	ldr	r2, [r7, #0]
 80015aa:	fb02 f203 	mul.w	r2, r2, r3
 80015ae:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80015b2:	4413      	add	r3, r2
 80015b4:	ed97 7a03 	vldr	s14, [r7, #12]
 80015b8:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80015bc:	69ba      	ldr	r2, [r7, #24]
 80015be:	009b      	lsls	r3, r3, #2
 80015c0:	4413      	add	r3, r2
 80015c2:	edc3 7a00 	vstr	s15, [r3]
						ident[k*order + j] = temp;
 80015c6:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 80015ca:	683a      	ldr	r2, [r7, #0]
 80015cc:	fb02 f203 	mul.w	r2, r2, r3
 80015d0:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80015d4:	4413      	add	r3, r2
 80015d6:	69ba      	ldr	r2, [r7, #24]
 80015d8:	009b      	lsls	r3, r3, #2
 80015da:	4413      	add	r3, r2
 80015dc:	68ba      	ldr	r2, [r7, #8]
 80015de:	601a      	str	r2, [r3, #0]
    				 for (uint8_t j = 0; j < order; j++) {
 80015e0:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80015e4:	3301      	adds	r3, #1
 80015e6:	f887 3026 	strb.w	r3, [r7, #38]	; 0x26
 80015ea:	f897 3026 	ldrb.w	r3, [r7, #38]	; 0x26
 80015ee:	683a      	ldr	r2, [r7, #0]
 80015f0:	429a      	cmp	r2, r3
 80015f2:	dc85      	bgt.n	8001500 <InverseOfMatrix+0x1c4>
					}
    				 break;
 80015f4:	e00a      	b.n	800160c <InverseOfMatrix+0x2d0>
    		for (uint8_t k = i + 1; k < order; k++) {
 80015f6:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 80015fa:	3301      	adds	r3, #1
 80015fc:	f887 3025 	strb.w	r3, [r7, #37]	; 0x25
 8001600:	f897 3025 	ldrb.w	r3, [r7, #37]	; 0x25
 8001604:	683a      	ldr	r2, [r7, #0]
 8001606:	429a      	cmp	r2, r3
 8001608:	f73f af56 	bgt.w	80014b8 <InverseOfMatrix+0x17c>
    			}
			}
		}// end if pivot

        for (uint8_t j = 0; j < order; j++) {
 800160c:	2300      	movs	r3, #0
 800160e:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 8001612:	e0d2      	b.n	80017ba <InverseOfMatrix+0x47e>

            if (j != i) {
 8001614:	f897 2027 	ldrb.w	r2, [r7, #39]	; 0x27
 8001618:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800161c:	429a      	cmp	r2, r3
 800161e:	d07a      	beq.n	8001716 <InverseOfMatrix+0x3da>

                temp = Matrix_A[j*order + i] / Matrix_A[i*order + i];
 8001620:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8001624:	683a      	ldr	r2, [r7, #0]
 8001626:	fb02 f203 	mul.w	r2, r2, r3
 800162a:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800162e:	4413      	add	r3, r2
 8001630:	693a      	ldr	r2, [r7, #16]
 8001632:	009b      	lsls	r3, r3, #2
 8001634:	4413      	add	r3, r2
 8001636:	edd3 6a00 	vldr	s13, [r3]
 800163a:	683b      	ldr	r3, [r7, #0]
 800163c:	3301      	adds	r3, #1
 800163e:	f897 2024 	ldrb.w	r2, [r7, #36]	; 0x24
 8001642:	fb02 f303 	mul.w	r3, r2, r3
 8001646:	693a      	ldr	r2, [r7, #16]
 8001648:	009b      	lsls	r3, r3, #2
 800164a:	4413      	add	r3, r2
 800164c:	ed93 7a00 	vldr	s14, [r3]
 8001650:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001654:	edc7 7a02 	vstr	s15, [r7, #8]
                for (int k = 0; k < order; k++) {
 8001658:	2300      	movs	r3, #0
 800165a:	62bb      	str	r3, [r7, #40]	; 0x28
 800165c:	e056      	b.n	800170c <InverseOfMatrix+0x3d0>

                	Matrix_A[j*order + k] -= Matrix_A[i*order + k] * temp;
 800165e:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8001662:	683a      	ldr	r2, [r7, #0]
 8001664:	fb02 f203 	mul.w	r2, r2, r3
 8001668:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800166a:	4413      	add	r3, r2
 800166c:	693a      	ldr	r2, [r7, #16]
 800166e:	009b      	lsls	r3, r3, #2
 8001670:	4413      	add	r3, r2
 8001672:	ed93 7a00 	vldr	s14, [r3]
 8001676:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800167a:	683a      	ldr	r2, [r7, #0]
 800167c:	fb02 f203 	mul.w	r2, r2, r3
 8001680:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001682:	4413      	add	r3, r2
 8001684:	693a      	ldr	r2, [r7, #16]
 8001686:	009b      	lsls	r3, r3, #2
 8001688:	4413      	add	r3, r2
 800168a:	edd3 6a00 	vldr	s13, [r3]
 800168e:	edd7 7a02 	vldr	s15, [r7, #8]
 8001692:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001696:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800169a:	683a      	ldr	r2, [r7, #0]
 800169c:	fb02 f203 	mul.w	r2, r2, r3
 80016a0:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80016a2:	4413      	add	r3, r2
 80016a4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80016a8:	693a      	ldr	r2, [r7, #16]
 80016aa:	009b      	lsls	r3, r3, #2
 80016ac:	4413      	add	r3, r2
 80016ae:	edc3 7a00 	vstr	s15, [r3]
                	ident[j*order + k] -= ident[i*order + k] * temp;
 80016b2:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80016b6:	683a      	ldr	r2, [r7, #0]
 80016b8:	fb02 f203 	mul.w	r2, r2, r3
 80016bc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80016be:	4413      	add	r3, r2
 80016c0:	69ba      	ldr	r2, [r7, #24]
 80016c2:	009b      	lsls	r3, r3, #2
 80016c4:	4413      	add	r3, r2
 80016c6:	ed93 7a00 	vldr	s14, [r3]
 80016ca:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80016ce:	683a      	ldr	r2, [r7, #0]
 80016d0:	fb02 f203 	mul.w	r2, r2, r3
 80016d4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80016d6:	4413      	add	r3, r2
 80016d8:	69ba      	ldr	r2, [r7, #24]
 80016da:	009b      	lsls	r3, r3, #2
 80016dc:	4413      	add	r3, r2
 80016de:	edd3 6a00 	vldr	s13, [r3]
 80016e2:	edd7 7a02 	vldr	s15, [r7, #8]
 80016e6:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80016ea:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80016ee:	683a      	ldr	r2, [r7, #0]
 80016f0:	fb02 f203 	mul.w	r2, r2, r3
 80016f4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 80016f6:	4413      	add	r3, r2
 80016f8:	ee77 7a67 	vsub.f32	s15, s14, s15
 80016fc:	69ba      	ldr	r2, [r7, #24]
 80016fe:	009b      	lsls	r3, r3, #2
 8001700:	4413      	add	r3, r2
 8001702:	edc3 7a00 	vstr	s15, [r3]
                for (int k = 0; k < order; k++) {
 8001706:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8001708:	3301      	adds	r3, #1
 800170a:	62bb      	str	r3, [r7, #40]	; 0x28
 800170c:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800170e:	683b      	ldr	r3, [r7, #0]
 8001710:	429a      	cmp	r2, r3
 8001712:	dba4      	blt.n	800165e <InverseOfMatrix+0x322>
 8001714:	e04c      	b.n	80017b0 <InverseOfMatrix+0x474>

                }
            }else{
            	temp = Matrix_A[i*order + i];
 8001716:	683b      	ldr	r3, [r7, #0]
 8001718:	3301      	adds	r3, #1
 800171a:	f897 2024 	ldrb.w	r2, [r7, #36]	; 0x24
 800171e:	fb02 f303 	mul.w	r3, r2, r3
 8001722:	693a      	ldr	r2, [r7, #16]
 8001724:	009b      	lsls	r3, r3, #2
 8001726:	4413      	add	r3, r2
 8001728:	681b      	ldr	r3, [r3, #0]
 800172a:	60bb      	str	r3, [r7, #8]
                for (int k = 0; k < order; k++) {
 800172c:	2300      	movs	r3, #0
 800172e:	62fb      	str	r3, [r7, #44]	; 0x2c
 8001730:	e03a      	b.n	80017a8 <InverseOfMatrix+0x46c>

                	Matrix_A[i*order + k] /=  temp;
 8001732:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 8001736:	683a      	ldr	r2, [r7, #0]
 8001738:	fb02 f203 	mul.w	r2, r2, r3
 800173c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800173e:	4413      	add	r3, r2
 8001740:	693a      	ldr	r2, [r7, #16]
 8001742:	009b      	lsls	r3, r3, #2
 8001744:	4413      	add	r3, r2
 8001746:	edd3 6a00 	vldr	s13, [r3]
 800174a:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 800174e:	683a      	ldr	r2, [r7, #0]
 8001750:	fb02 f203 	mul.w	r2, r2, r3
 8001754:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001756:	4413      	add	r3, r2
 8001758:	ed97 7a02 	vldr	s14, [r7, #8]
 800175c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001760:	693a      	ldr	r2, [r7, #16]
 8001762:	009b      	lsls	r3, r3, #2
 8001764:	4413      	add	r3, r2
 8001766:	edc3 7a00 	vstr	s15, [r3]
                	ident[j*order + k] /= temp;
 800176a:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 800176e:	683a      	ldr	r2, [r7, #0]
 8001770:	fb02 f203 	mul.w	r2, r2, r3
 8001774:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8001776:	4413      	add	r3, r2
 8001778:	69ba      	ldr	r2, [r7, #24]
 800177a:	009b      	lsls	r3, r3, #2
 800177c:	4413      	add	r3, r2
 800177e:	edd3 6a00 	vldr	s13, [r3]
 8001782:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 8001786:	683a      	ldr	r2, [r7, #0]
 8001788:	fb02 f203 	mul.w	r2, r2, r3
 800178c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800178e:	4413      	add	r3, r2
 8001790:	ed97 7a02 	vldr	s14, [r7, #8]
 8001794:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8001798:	69ba      	ldr	r2, [r7, #24]
 800179a:	009b      	lsls	r3, r3, #2
 800179c:	4413      	add	r3, r2
 800179e:	edc3 7a00 	vstr	s15, [r3]
                for (int k = 0; k < order; k++) {
 80017a2:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 80017a4:	3301      	adds	r3, #1
 80017a6:	62fb      	str	r3, [r7, #44]	; 0x2c
 80017a8:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 80017aa:	683b      	ldr	r3, [r7, #0]
 80017ac:	429a      	cmp	r2, r3
 80017ae:	dbc0      	blt.n	8001732 <InverseOfMatrix+0x3f6>
        for (uint8_t j = 0; j < order; j++) {
 80017b0:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80017b4:	3301      	adds	r3, #1
 80017b6:	f887 3027 	strb.w	r3, [r7, #39]	; 0x27
 80017ba:	f897 3027 	ldrb.w	r3, [r7, #39]	; 0x27
 80017be:	683a      	ldr	r2, [r7, #0]
 80017c0:	429a      	cmp	r2, r3
 80017c2:	f73f af27 	bgt.w	8001614 <InverseOfMatrix+0x2d8>
    for (uint8_t i = 0; i < order; i++) {
 80017c6:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80017ca:	3301      	adds	r3, #1
 80017cc:	f887 3024 	strb.w	r3, [r7, #36]	; 0x24
 80017d0:	f897 3024 	ldrb.w	r3, [r7, #36]	; 0x24
 80017d4:	683a      	ldr	r2, [r7, #0]
 80017d6:	429a      	cmp	r2, r3
 80017d8:	f73f ae57 	bgt.w	800148a <InverseOfMatrix+0x14e>
                }
            }
        }
    }

	  memcpy(Matrix_A_A,ident,sizeof(ident));
 80017dc:	69bb      	ldr	r3, [r7, #24]
 80017de:	462a      	mov	r2, r5
 80017e0:	0092      	lsls	r2, r2, #2
 80017e2:	4619      	mov	r1, r3
 80017e4:	6878      	ldr	r0, [r7, #4]
 80017e6:	f00e ff1f 	bl	8010628 <memcpy>
 80017ea:	46b5      	mov	sp, r6

}
 80017ec:	bf00      	nop
 80017ee:	3734      	adds	r7, #52	; 0x34
 80017f0:	46bd      	mov	sp, r7
 80017f2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80017f4:	0000      	movs	r0, r0
	...

080017f8 <EKF_prediction>:

void EKF_prediction (void){
 80017f8:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 80017fc:	ed2d 8b02 	vpush	{d8}
 8001800:	b0be      	sub	sp, #248	; 0xf8
 8001802:	af04      	add	r7, sp, #16

	float result_1 [4][4];
	float result_2 [4][4];
	float F_transpose [4][4];
	int dummyw = TIM7 -> CNT;
 8001804:	4be2      	ldr	r3, [pc, #904]	; (8001b90 <EKF_prediction+0x398>)
 8001806:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8001808:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
	float w1  = dummyw % 462;
 800180c:	f8d7 30e4 	ldr.w	r3, [r7, #228]	; 0xe4
 8001810:	4ae0      	ldr	r2, [pc, #896]	; (8001b94 <EKF_prediction+0x39c>)
 8001812:	fb82 1203 	smull	r1, r2, r2, r3
 8001816:	441a      	add	r2, r3
 8001818:	1211      	asrs	r1, r2, #8
 800181a:	17da      	asrs	r2, r3, #31
 800181c:	1a8a      	subs	r2, r1, r2
 800181e:	f44f 71e7 	mov.w	r1, #462	; 0x1ce
 8001822:	fb01 f202 	mul.w	r2, r1, r2
 8001826:	1a9a      	subs	r2, r3, r2
 8001828:	ee07 2a90 	vmov	s15, r2
 800182c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001830:	edc7 7a38 	vstr	s15, [r7, #224]	; 0xe0
	float w2  = dummyw % 120;
 8001834:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 8001838:	4bd7      	ldr	r3, [pc, #860]	; (8001b98 <EKF_prediction+0x3a0>)
 800183a:	fb83 1302 	smull	r1, r3, r3, r2
 800183e:	4413      	add	r3, r2
 8001840:	1199      	asrs	r1, r3, #6
 8001842:	17d3      	asrs	r3, r2, #31
 8001844:	1ac9      	subs	r1, r1, r3
 8001846:	460b      	mov	r3, r1
 8001848:	011b      	lsls	r3, r3, #4
 800184a:	1a5b      	subs	r3, r3, r1
 800184c:	00db      	lsls	r3, r3, #3
 800184e:	1ad1      	subs	r1, r2, r3
 8001850:	ee07 1a90 	vmov	s15, r1
 8001854:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001858:	edc7 7a37 	vstr	s15, [r7, #220]	; 0xdc
	float w3  = dummyw % 73;
 800185c:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 8001860:	4bce      	ldr	r3, [pc, #824]	; (8001b9c <EKF_prediction+0x3a4>)
 8001862:	fb83 1302 	smull	r1, r3, r3, r2
 8001866:	4413      	add	r3, r2
 8001868:	1199      	asrs	r1, r3, #6
 800186a:	17d3      	asrs	r3, r2, #31
 800186c:	1ac9      	subs	r1, r1, r3
 800186e:	460b      	mov	r3, r1
 8001870:	00db      	lsls	r3, r3, #3
 8001872:	440b      	add	r3, r1
 8001874:	00db      	lsls	r3, r3, #3
 8001876:	440b      	add	r3, r1
 8001878:	1ad1      	subs	r1, r2, r3
 800187a:	ee07 1a90 	vmov	s15, r1
 800187e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8001882:	edc7 7a36 	vstr	s15, [r7, #216]	; 0xd8
	float w4  = dummyw % 65;
 8001886:	f8d7 20e4 	ldr.w	r2, [r7, #228]	; 0xe4
 800188a:	4bc5      	ldr	r3, [pc, #788]	; (8001ba0 <EKF_prediction+0x3a8>)
 800188c:	fb83 1302 	smull	r1, r3, r3, r2
 8001890:	1159      	asrs	r1, r3, #5
 8001892:	17d3      	asrs	r3, r2, #31
 8001894:	1ac9      	subs	r1, r1, r3
 8001896:	460b      	mov	r3, r1
 8001898:	019b      	lsls	r3, r3, #6
 800189a:	440b      	add	r3, r1
 800189c:	1ad1      	subs	r1, r2, r3
 800189e:	ee07 1a90 	vmov	s15, r1
 80018a2:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80018a6:	edc7 7a35 	vstr	s15, [r7, #212]	; 0xd4
	float w[4] = {w1/100000 - 0.00231,
 80018aa:	edd7 7a38 	vldr	s15, [r7, #224]	; 0xe0
 80018ae:	ed9f 7abd 	vldr	s14, [pc, #756]	; 8001ba4 <EKF_prediction+0x3ac>
 80018b2:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80018b6:	ee16 0a90 	vmov	r0, s13
 80018ba:	f7fe fe17 	bl	80004ec <__aeabi_f2d>
 80018be:	a3a8      	add	r3, pc, #672	; (adr r3, 8001b60 <EKF_prediction+0x368>)
 80018c0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018c4:	f7fe fcb2 	bl	800022c <__aeabi_dsub>
 80018c8:	4603      	mov	r3, r0
 80018ca:	460c      	mov	r4, r1
 80018cc:	4618      	mov	r0, r3
 80018ce:	4621      	mov	r1, r4
 80018d0:	f7ff f95c 	bl	8000b8c <__aeabi_d2f>
 80018d4:	4603      	mov	r3, r0
 80018d6:	607b      	str	r3, [r7, #4]
			w2/100000 - 0.00060,
 80018d8:	edd7 7a37 	vldr	s15, [r7, #220]	; 0xdc
 80018dc:	ed9f 7ab1 	vldr	s14, [pc, #708]	; 8001ba4 <EKF_prediction+0x3ac>
 80018e0:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80018e4:	ee16 0a90 	vmov	r0, s13
 80018e8:	f7fe fe00 	bl	80004ec <__aeabi_f2d>
 80018ec:	a39e      	add	r3, pc, #632	; (adr r3, 8001b68 <EKF_prediction+0x370>)
 80018ee:	e9d3 2300 	ldrd	r2, r3, [r3]
 80018f2:	f7fe fc9b 	bl	800022c <__aeabi_dsub>
 80018f6:	4603      	mov	r3, r0
 80018f8:	460c      	mov	r4, r1
 80018fa:	4618      	mov	r0, r3
 80018fc:	4621      	mov	r1, r4
 80018fe:	f7ff f945 	bl	8000b8c <__aeabi_d2f>
 8001902:	4603      	mov	r3, r0
	float w[4] = {w1/100000 - 0.00231,
 8001904:	60bb      	str	r3, [r7, #8]
			w3/100000 - 0.00032624,
 8001906:	edd7 7a36 	vldr	s15, [r7, #216]	; 0xd8
 800190a:	ed9f 7aa6 	vldr	s14, [pc, #664]	; 8001ba4 <EKF_prediction+0x3ac>
 800190e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001912:	ee16 0a90 	vmov	r0, s13
 8001916:	f7fe fde9 	bl	80004ec <__aeabi_f2d>
 800191a:	a395      	add	r3, pc, #596	; (adr r3, 8001b70 <EKF_prediction+0x378>)
 800191c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001920:	f7fe fc84 	bl	800022c <__aeabi_dsub>
 8001924:	4603      	mov	r3, r0
 8001926:	460c      	mov	r4, r1
 8001928:	4618      	mov	r0, r3
 800192a:	4621      	mov	r1, r4
 800192c:	f7ff f92e 	bl	8000b8c <__aeabi_d2f>
 8001930:	4603      	mov	r3, r0
	float w[4] = {w1/100000 - 0.00231,
 8001932:	60fb      	str	r3, [r7, #12]
			w4/100000 - 0.00065249};
 8001934:	edd7 7a35 	vldr	s15, [r7, #212]	; 0xd4
 8001938:	ed9f 7a9a 	vldr	s14, [pc, #616]	; 8001ba4 <EKF_prediction+0x3ac>
 800193c:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8001940:	ee16 0a90 	vmov	r0, s13
 8001944:	f7fe fdd2 	bl	80004ec <__aeabi_f2d>
 8001948:	a38b      	add	r3, pc, #556	; (adr r3, 8001b78 <EKF_prediction+0x380>)
 800194a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800194e:	f7fe fc6d 	bl	800022c <__aeabi_dsub>
 8001952:	4603      	mov	r3, r0
 8001954:	460c      	mov	r4, r1
 8001956:	4618      	mov	r0, r3
 8001958:	4621      	mov	r1, r4
 800195a:	f7ff f917 	bl	8000b8c <__aeabi_d2f>
 800195e:	4603      	mov	r3, r0
	float w[4] = {w1/100000 - 0.00231,
 8001960:	613b      	str	r3, [r7, #16]
	deltatime_EKF = deltatime_imu/10;
 8001962:	4b91      	ldr	r3, [pc, #580]	; (8001ba8 <EKF_prediction+0x3b0>)
 8001964:	ed93 7a00 	vldr	s14, [r3]
 8001968:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 800196c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8001970:	4b8e      	ldr	r3, [pc, #568]	; (8001bac <EKF_prediction+0x3b4>)
 8001972:	edc3 7a00 	vstr	s15, [r3]

	// Predict x
	states_X[2] = /*states_X_previous[2] +*/ (accel_x_g2 + w[0]) * deltatime_EKF * (sinf(angle_accumulated * 3.14159 / 180) + w[2]);
 8001976:	ed97 7a01 	vldr	s14, [r7, #4]
 800197a:	4b8d      	ldr	r3, [pc, #564]	; (8001bb0 <EKF_prediction+0x3b8>)
 800197c:	edd3 7a00 	vldr	s15, [r3]
 8001980:	ee37 7a27 	vadd.f32	s14, s14, s15
 8001984:	4b89      	ldr	r3, [pc, #548]	; (8001bac <EKF_prediction+0x3b4>)
 8001986:	edd3 7a00 	vldr	s15, [r3]
 800198a:	ee27 8a27 	vmul.f32	s16, s14, s15
 800198e:	4b89      	ldr	r3, [pc, #548]	; (8001bb4 <EKF_prediction+0x3bc>)
 8001990:	681b      	ldr	r3, [r3, #0]
 8001992:	4618      	mov	r0, r3
 8001994:	f7fe fdaa 	bl	80004ec <__aeabi_f2d>
 8001998:	a379      	add	r3, pc, #484	; (adr r3, 8001b80 <EKF_prediction+0x388>)
 800199a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800199e:	f7fe fdfd 	bl	800059c <__aeabi_dmul>
 80019a2:	4603      	mov	r3, r0
 80019a4:	460c      	mov	r4, r1
 80019a6:	4618      	mov	r0, r3
 80019a8:	4621      	mov	r1, r4
 80019aa:	f04f 0200 	mov.w	r2, #0
 80019ae:	4b82      	ldr	r3, [pc, #520]	; (8001bb8 <EKF_prediction+0x3c0>)
 80019b0:	f7fe ff1e 	bl	80007f0 <__aeabi_ddiv>
 80019b4:	4603      	mov	r3, r0
 80019b6:	460c      	mov	r4, r1
 80019b8:	4618      	mov	r0, r3
 80019ba:	4621      	mov	r1, r4
 80019bc:	f7ff f8e6 	bl	8000b8c <__aeabi_d2f>
 80019c0:	4603      	mov	r3, r0
 80019c2:	ee00 3a10 	vmov	s0, r3
 80019c6:	f010 fd5b 	bl	8012480 <sinf>
 80019ca:	eeb0 7a40 	vmov.f32	s14, s0
 80019ce:	edd7 7a03 	vldr	s15, [r7, #12]
 80019d2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80019d6:	ee68 7a27 	vmul.f32	s15, s16, s15
 80019da:	4b78      	ldr	r3, [pc, #480]	; (8001bbc <EKF_prediction+0x3c4>)
 80019dc:	edc3 7a02 	vstr	s15, [r3, #8]
	states_X[3] = /*states_X_previous[3] +*/ (accel_x_g2 + w[0]) * deltatime_EKF * (cosf(angle_accumulated * 3.14159 / 180) + w[3]);
 80019e0:	ed97 7a01 	vldr	s14, [r7, #4]
 80019e4:	4b72      	ldr	r3, [pc, #456]	; (8001bb0 <EKF_prediction+0x3b8>)
 80019e6:	edd3 7a00 	vldr	s15, [r3]
 80019ea:	ee37 7a27 	vadd.f32	s14, s14, s15
 80019ee:	4b6f      	ldr	r3, [pc, #444]	; (8001bac <EKF_prediction+0x3b4>)
 80019f0:	edd3 7a00 	vldr	s15, [r3]
 80019f4:	ee27 8a27 	vmul.f32	s16, s14, s15
 80019f8:	4b6e      	ldr	r3, [pc, #440]	; (8001bb4 <EKF_prediction+0x3bc>)
 80019fa:	681b      	ldr	r3, [r3, #0]
 80019fc:	4618      	mov	r0, r3
 80019fe:	f7fe fd75 	bl	80004ec <__aeabi_f2d>
 8001a02:	a35f      	add	r3, pc, #380	; (adr r3, 8001b80 <EKF_prediction+0x388>)
 8001a04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001a08:	f7fe fdc8 	bl	800059c <__aeabi_dmul>
 8001a0c:	4603      	mov	r3, r0
 8001a0e:	460c      	mov	r4, r1
 8001a10:	4618      	mov	r0, r3
 8001a12:	4621      	mov	r1, r4
 8001a14:	f04f 0200 	mov.w	r2, #0
 8001a18:	4b67      	ldr	r3, [pc, #412]	; (8001bb8 <EKF_prediction+0x3c0>)
 8001a1a:	f7fe fee9 	bl	80007f0 <__aeabi_ddiv>
 8001a1e:	4603      	mov	r3, r0
 8001a20:	460c      	mov	r4, r1
 8001a22:	4618      	mov	r0, r3
 8001a24:	4621      	mov	r1, r4
 8001a26:	f7ff f8b1 	bl	8000b8c <__aeabi_d2f>
 8001a2a:	4603      	mov	r3, r0
 8001a2c:	ee00 3a10 	vmov	s0, r3
 8001a30:	f010 fce6 	bl	8012400 <cosf>
 8001a34:	eeb0 7a40 	vmov.f32	s14, s0
 8001a38:	edd7 7a04 	vldr	s15, [r7, #16]
 8001a3c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a40:	ee68 7a27 	vmul.f32	s15, s16, s15
 8001a44:	4b5d      	ldr	r3, [pc, #372]	; (8001bbc <EKF_prediction+0x3c4>)
 8001a46:	edc3 7a03 	vstr	s15, [r3, #12]
	states_X[0] = states_X_previous[0] + states_X[2] * deltatime_EKF + 1/2 * (accel_x_g2 + w[0]) * pow(deltatime_EKF,2);
 8001a4a:	4b5d      	ldr	r3, [pc, #372]	; (8001bc0 <EKF_prediction+0x3c8>)
 8001a4c:	ed93 7a00 	vldr	s14, [r3]
 8001a50:	4b5a      	ldr	r3, [pc, #360]	; (8001bbc <EKF_prediction+0x3c4>)
 8001a52:	edd3 6a02 	vldr	s13, [r3, #8]
 8001a56:	4b55      	ldr	r3, [pc, #340]	; (8001bac <EKF_prediction+0x3b4>)
 8001a58:	edd3 7a00 	vldr	s15, [r3]
 8001a5c:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001a60:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a64:	ee17 0a90 	vmov	r0, s15
 8001a68:	f7fe fd40 	bl	80004ec <__aeabi_f2d>
 8001a6c:	4604      	mov	r4, r0
 8001a6e:	460d      	mov	r5, r1
 8001a70:	ed97 7a01 	vldr	s14, [r7, #4]
 8001a74:	4b4e      	ldr	r3, [pc, #312]	; (8001bb0 <EKF_prediction+0x3b8>)
 8001a76:	edd3 7a00 	vldr	s15, [r3]
 8001a7a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001a7e:	ed9f 7a51 	vldr	s14, [pc, #324]	; 8001bc4 <EKF_prediction+0x3cc>
 8001a82:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001a86:	ee17 0a90 	vmov	r0, s15
 8001a8a:	f7fe fd2f 	bl	80004ec <__aeabi_f2d>
 8001a8e:	4680      	mov	r8, r0
 8001a90:	4689      	mov	r9, r1
 8001a92:	4b46      	ldr	r3, [pc, #280]	; (8001bac <EKF_prediction+0x3b4>)
 8001a94:	681b      	ldr	r3, [r3, #0]
 8001a96:	4618      	mov	r0, r3
 8001a98:	f7fe fd28 	bl	80004ec <__aeabi_f2d>
 8001a9c:	4602      	mov	r2, r0
 8001a9e:	460b      	mov	r3, r1
 8001aa0:	ed9f 1b39 	vldr	d1, [pc, #228]	; 8001b88 <EKF_prediction+0x390>
 8001aa4:	ec43 2b10 	vmov	d0, r2, r3
 8001aa8:	f010 fd84 	bl	80125b4 <pow>
 8001aac:	ec53 2b10 	vmov	r2, r3, d0
 8001ab0:	4640      	mov	r0, r8
 8001ab2:	4649      	mov	r1, r9
 8001ab4:	f7fe fd72 	bl	800059c <__aeabi_dmul>
 8001ab8:	4602      	mov	r2, r0
 8001aba:	460b      	mov	r3, r1
 8001abc:	4620      	mov	r0, r4
 8001abe:	4629      	mov	r1, r5
 8001ac0:	f7fe fbb6 	bl	8000230 <__adddf3>
 8001ac4:	4603      	mov	r3, r0
 8001ac6:	460c      	mov	r4, r1
 8001ac8:	4618      	mov	r0, r3
 8001aca:	4621      	mov	r1, r4
 8001acc:	f7ff f85e 	bl	8000b8c <__aeabi_d2f>
 8001ad0:	4602      	mov	r2, r0
 8001ad2:	4b3a      	ldr	r3, [pc, #232]	; (8001bbc <EKF_prediction+0x3c4>)
 8001ad4:	601a      	str	r2, [r3, #0]
	states_X[1] = states_X_previous[1] + states_X[3] * deltatime_EKF + 1/2 * (accel_y_g2 + w[1]) * pow(deltatime_EKF,2);
 8001ad6:	4b3a      	ldr	r3, [pc, #232]	; (8001bc0 <EKF_prediction+0x3c8>)
 8001ad8:	ed93 7a01 	vldr	s14, [r3, #4]
 8001adc:	4b37      	ldr	r3, [pc, #220]	; (8001bbc <EKF_prediction+0x3c4>)
 8001ade:	edd3 6a03 	vldr	s13, [r3, #12]
 8001ae2:	4b32      	ldr	r3, [pc, #200]	; (8001bac <EKF_prediction+0x3b4>)
 8001ae4:	edd3 7a00 	vldr	s15, [r3]
 8001ae8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8001aec:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001af0:	ee17 0a90 	vmov	r0, s15
 8001af4:	f7fe fcfa 	bl	80004ec <__aeabi_f2d>
 8001af8:	4604      	mov	r4, r0
 8001afa:	460d      	mov	r5, r1
 8001afc:	ed97 7a02 	vldr	s14, [r7, #8]
 8001b00:	4b31      	ldr	r3, [pc, #196]	; (8001bc8 <EKF_prediction+0x3d0>)
 8001b02:	edd3 7a00 	vldr	s15, [r3]
 8001b06:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001b0a:	ed9f 7a2e 	vldr	s14, [pc, #184]	; 8001bc4 <EKF_prediction+0x3cc>
 8001b0e:	ee67 7a87 	vmul.f32	s15, s15, s14
 8001b12:	ee17 0a90 	vmov	r0, s15
 8001b16:	f7fe fce9 	bl	80004ec <__aeabi_f2d>
 8001b1a:	4680      	mov	r8, r0
 8001b1c:	4689      	mov	r9, r1
 8001b1e:	4b23      	ldr	r3, [pc, #140]	; (8001bac <EKF_prediction+0x3b4>)
 8001b20:	681b      	ldr	r3, [r3, #0]
 8001b22:	4618      	mov	r0, r3
 8001b24:	f7fe fce2 	bl	80004ec <__aeabi_f2d>
 8001b28:	4602      	mov	r2, r0
 8001b2a:	460b      	mov	r3, r1
 8001b2c:	ed9f 1b16 	vldr	d1, [pc, #88]	; 8001b88 <EKF_prediction+0x390>
 8001b30:	ec43 2b10 	vmov	d0, r2, r3
 8001b34:	f010 fd3e 	bl	80125b4 <pow>
 8001b38:	ec53 2b10 	vmov	r2, r3, d0
 8001b3c:	4640      	mov	r0, r8
 8001b3e:	4649      	mov	r1, r9
 8001b40:	f7fe fd2c 	bl	800059c <__aeabi_dmul>
 8001b44:	4602      	mov	r2, r0
 8001b46:	460b      	mov	r3, r1
 8001b48:	4620      	mov	r0, r4
 8001b4a:	4629      	mov	r1, r5
 8001b4c:	f7fe fb70 	bl	8000230 <__adddf3>
 8001b50:	4603      	mov	r3, r0
 8001b52:	460c      	mov	r4, r1
 8001b54:	4618      	mov	r0, r3
 8001b56:	4621      	mov	r1, r4
 8001b58:	e038      	b.n	8001bcc <EKF_prediction+0x3d4>
 8001b5a:	bf00      	nop
 8001b5c:	f3af 8000 	nop.w
 8001b60:	ce8533b1 	.word	0xce8533b1
 8001b64:	3f62ec6b 	.word	0x3f62ec6b
 8001b68:	30553261 	.word	0x30553261
 8001b6c:	3f43a92a 	.word	0x3f43a92a
 8001b70:	2172159c 	.word	0x2172159c
 8001b74:	3f356166 	.word	0x3f356166
 8001b78:	9b00f7cd 	.word	0x9b00f7cd
 8001b7c:	3f45617b 	.word	0x3f45617b
 8001b80:	f01b866e 	.word	0xf01b866e
 8001b84:	400921f9 	.word	0x400921f9
 8001b88:	00000000 	.word	0x00000000
 8001b8c:	40000000 	.word	0x40000000
 8001b90:	40001400 	.word	0x40001400
 8001b94:	8dda5203 	.word	0x8dda5203
 8001b98:	88888889 	.word	0x88888889
 8001b9c:	e070381d 	.word	0xe070381d
 8001ba0:	7e07e07f 	.word	0x7e07e07f
 8001ba4:	47c35000 	.word	0x47c35000
 8001ba8:	20009a44 	.word	0x20009a44
 8001bac:	2000ac50 	.word	0x2000ac50
 8001bb0:	20007a0c 	.word	0x20007a0c
 8001bb4:	2000ad6c 	.word	0x2000ad6c
 8001bb8:	40668000 	.word	0x40668000
 8001bbc:	2000ad38 	.word	0x2000ad38
 8001bc0:	20009c14 	.word	0x20009c14
 8001bc4:	00000000 	.word	0x00000000
 8001bc8:	20007a20 	.word	0x20007a20
 8001bcc:	f7fe ffde 	bl	8000b8c <__aeabi_d2f>
 8001bd0:	4602      	mov	r2, r0
 8001bd2:	4b1c      	ldr	r3, [pc, #112]	; (8001c44 <EKF_prediction+0x44c>)
 8001bd4:	605a      	str	r2, [r3, #4]



	//Predict P
	matrix_multiplication(jacobian_F, covariance_P, result_1, 4, 4, 4, 4); // F*P
 8001bd6:	f107 0294 	add.w	r2, r7, #148	; 0x94
 8001bda:	2304      	movs	r3, #4
 8001bdc:	9302      	str	r3, [sp, #8]
 8001bde:	2304      	movs	r3, #4
 8001be0:	9301      	str	r3, [sp, #4]
 8001be2:	2304      	movs	r3, #4
 8001be4:	9300      	str	r3, [sp, #0]
 8001be6:	2304      	movs	r3, #4
 8001be8:	4917      	ldr	r1, [pc, #92]	; (8001c48 <EKF_prediction+0x450>)
 8001bea:	4818      	ldr	r0, [pc, #96]	; (8001c4c <EKF_prediction+0x454>)
 8001bec:	f7ff f99e 	bl	8000f2c <matrix_multiplication>
	matrix_Transpose(jacobian_F, F_transpose, 4, 4);//F'
 8001bf0:	f107 0114 	add.w	r1, r7, #20
 8001bf4:	2304      	movs	r3, #4
 8001bf6:	2204      	movs	r2, #4
 8001bf8:	4814      	ldr	r0, [pc, #80]	; (8001c4c <EKF_prediction+0x454>)
 8001bfa:	f7ff fa05 	bl	8001008 <matrix_Transpose>
	matrix_multiplication(result_1, F_transpose, result_2, 4, 4, 4, 4);//F*P*F'
 8001bfe:	f107 0254 	add.w	r2, r7, #84	; 0x54
 8001c02:	f107 0114 	add.w	r1, r7, #20
 8001c06:	f107 0094 	add.w	r0, r7, #148	; 0x94
 8001c0a:	2304      	movs	r3, #4
 8001c0c:	9302      	str	r3, [sp, #8]
 8001c0e:	2304      	movs	r3, #4
 8001c10:	9301      	str	r3, [sp, #4]
 8001c12:	2304      	movs	r3, #4
 8001c14:	9300      	str	r3, [sp, #0]
 8001c16:	2304      	movs	r3, #4
 8001c18:	f7ff f988 	bl	8000f2c <matrix_multiplication>
	matrix_sum(result_2, standar_dev_Q, covariance_P, 4, 4, 4, 4);// P = F*P*F' + Q
 8001c1c:	f107 0054 	add.w	r0, r7, #84	; 0x54
 8001c20:	2304      	movs	r3, #4
 8001c22:	9302      	str	r3, [sp, #8]
 8001c24:	2304      	movs	r3, #4
 8001c26:	9301      	str	r3, [sp, #4]
 8001c28:	2304      	movs	r3, #4
 8001c2a:	9300      	str	r3, [sp, #0]
 8001c2c:	2304      	movs	r3, #4
 8001c2e:	4a06      	ldr	r2, [pc, #24]	; (8001c48 <EKF_prediction+0x450>)
 8001c30:	4907      	ldr	r1, [pc, #28]	; (8001c50 <EKF_prediction+0x458>)
 8001c32:	f7ff fa85 	bl	8001140 <matrix_sum>

}
 8001c36:	bf00      	nop
 8001c38:	37e8      	adds	r7, #232	; 0xe8
 8001c3a:	46bd      	mov	sp, r7
 8001c3c:	ecbd 8b02 	vpop	{d8}
 8001c40:	e8bd 83b0 	ldmia.w	sp!, {r4, r5, r7, r8, r9, pc}
 8001c44:	2000ad38 	.word	0x2000ad38
 8001c48:	20007a3c 	.word	0x20007a3c
 8001c4c:	2000acc4 	.word	0x2000acc4
 8001c50:	2000ac70 	.word	0x2000ac70

08001c54 <EKF_update>:

void EKF_update (void){
 8001c54:	b5b0      	push	{r4, r5, r7, lr}
 8001c56:	b0d4      	sub	sp, #336	; 0x150
 8001c58:	af04      	add	r7, sp, #16

	float Kalman_gain_K[4][4]; // Kalman Gain P H' (S)^-1,   S = H P H' + R
	float H_transpose [4][4];
	float result_1 [4][4];
	float result_2 [4][4];
	float Identity_Matrix[4][4] = {{1,0,0,0},
 8001c5a:	463b      	mov	r3, r7
 8001c5c:	4a62      	ldr	r2, [pc, #392]	; (8001de8 <EKF_update+0x194>)
 8001c5e:	461c      	mov	r4, r3
 8001c60:	4615      	mov	r5, r2
 8001c62:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001c64:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001c66:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001c68:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001c6a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001c6c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001c6e:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8001c72:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
		  				 {0,1,0,0},
		  				 {0,0,1,0},
		  			 	 {0,0,0,1}};

	// Calculate S
	matrix_multiplication(jacobian_H, covariance_P, result_1, 4, 4, 4, 4); // H*P
 8001c76:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8001c7a:	2304      	movs	r3, #4
 8001c7c:	9302      	str	r3, [sp, #8]
 8001c7e:	2304      	movs	r3, #4
 8001c80:	9301      	str	r3, [sp, #4]
 8001c82:	2304      	movs	r3, #4
 8001c84:	9300      	str	r3, [sp, #0]
 8001c86:	2304      	movs	r3, #4
 8001c88:	4958      	ldr	r1, [pc, #352]	; (8001dec <EKF_update+0x198>)
 8001c8a:	4859      	ldr	r0, [pc, #356]	; (8001df0 <EKF_update+0x19c>)
 8001c8c:	f7ff f94e 	bl	8000f2c <matrix_multiplication>
	matrix_Transpose(jacobian_H,H_transpose,4, 4);// H'
 8001c90:	f107 01c0 	add.w	r1, r7, #192	; 0xc0
 8001c94:	2304      	movs	r3, #4
 8001c96:	2204      	movs	r2, #4
 8001c98:	4855      	ldr	r0, [pc, #340]	; (8001df0 <EKF_update+0x19c>)
 8001c9a:	f7ff f9b5 	bl	8001008 <matrix_Transpose>
	matrix_multiplication(result_1, H_transpose, result_2, 4, 4, 4, 4);// H*P*H'
 8001c9e:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8001ca2:	f107 01c0 	add.w	r1, r7, #192	; 0xc0
 8001ca6:	f107 0080 	add.w	r0, r7, #128	; 0x80
 8001caa:	2304      	movs	r3, #4
 8001cac:	9302      	str	r3, [sp, #8]
 8001cae:	2304      	movs	r3, #4
 8001cb0:	9301      	str	r3, [sp, #4]
 8001cb2:	2304      	movs	r3, #4
 8001cb4:	9300      	str	r3, [sp, #0]
 8001cb6:	2304      	movs	r3, #4
 8001cb8:	f7ff f938 	bl	8000f2c <matrix_multiplication>
	matrix_sum(result_2, standar_dev_R, result_2, 4, 4, 4, 4); // S
 8001cbc:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8001cc0:	f107 0040 	add.w	r0, r7, #64	; 0x40
 8001cc4:	2304      	movs	r3, #4
 8001cc6:	9302      	str	r3, [sp, #8]
 8001cc8:	2304      	movs	r3, #4
 8001cca:	9301      	str	r3, [sp, #4]
 8001ccc:	2304      	movs	r3, #4
 8001cce:	9300      	str	r3, [sp, #0]
 8001cd0:	2304      	movs	r3, #4
 8001cd2:	4948      	ldr	r1, [pc, #288]	; (8001df4 <EKF_update+0x1a0>)
 8001cd4:	f7ff fa34 	bl	8001140 <matrix_sum>

	//Calculate K
	matrix_multiplication(covariance_P, H_transpose, result_1,4, 4, 4, 4); // P * H'
 8001cd8:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8001cdc:	f107 01c0 	add.w	r1, r7, #192	; 0xc0
 8001ce0:	2304      	movs	r3, #4
 8001ce2:	9302      	str	r3, [sp, #8]
 8001ce4:	2304      	movs	r3, #4
 8001ce6:	9301      	str	r3, [sp, #4]
 8001ce8:	2304      	movs	r3, #4
 8001cea:	9300      	str	r3, [sp, #0]
 8001cec:	2304      	movs	r3, #4
 8001cee:	483f      	ldr	r0, [pc, #252]	; (8001dec <EKF_update+0x198>)
 8001cf0:	f7ff f91c 	bl	8000f2c <matrix_multiplication>
	InverseOfMatrix(result_2,4); // S^-1
 8001cf4:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001cf8:	2104      	movs	r1, #4
 8001cfa:	4618      	mov	r0, r3
 8001cfc:	f7ff fb1e 	bl	800133c <InverseOfMatrix>
	matrix_multiplication(result_1, result_2, Kalman_gain_K, 4, 4, 4, 4); // Kalman gain
 8001d00:	f507 7280 	add.w	r2, r7, #256	; 0x100
 8001d04:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8001d08:	f107 0080 	add.w	r0, r7, #128	; 0x80
 8001d0c:	2304      	movs	r3, #4
 8001d0e:	9302      	str	r3, [sp, #8]
 8001d10:	2304      	movs	r3, #4
 8001d12:	9301      	str	r3, [sp, #4]
 8001d14:	2304      	movs	r3, #4
 8001d16:	9300      	str	r3, [sp, #0]
 8001d18:	2304      	movs	r3, #4
 8001d1a:	f7ff f907 	bl	8000f2c <matrix_multiplication>
	// update x
	matrix_sub(measurementes_Z, states_X, result_1, 4, 1, 4, 1);// z-h(xk)
 8001d1e:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8001d22:	2301      	movs	r3, #1
 8001d24:	9302      	str	r3, [sp, #8]
 8001d26:	2304      	movs	r3, #4
 8001d28:	9301      	str	r3, [sp, #4]
 8001d2a:	2301      	movs	r3, #1
 8001d2c:	9300      	str	r3, [sp, #0]
 8001d2e:	2304      	movs	r3, #4
 8001d30:	4931      	ldr	r1, [pc, #196]	; (8001df8 <EKF_update+0x1a4>)
 8001d32:	4832      	ldr	r0, [pc, #200]	; (8001dfc <EKF_update+0x1a8>)
 8001d34:	f7ff fa83 	bl	800123e <matrix_sub>
	matrix_multiplication(Kalman_gain_K, result_1, result_2, 4, 4, 4, 1);//
 8001d38:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8001d3c:	f107 0180 	add.w	r1, r7, #128	; 0x80
 8001d40:	f507 7080 	add.w	r0, r7, #256	; 0x100
 8001d44:	2301      	movs	r3, #1
 8001d46:	9302      	str	r3, [sp, #8]
 8001d48:	2304      	movs	r3, #4
 8001d4a:	9301      	str	r3, [sp, #4]
 8001d4c:	2304      	movs	r3, #4
 8001d4e:	9300      	str	r3, [sp, #0]
 8001d50:	2304      	movs	r3, #4
 8001d52:	f7ff f8eb 	bl	8000f2c <matrix_multiplication>
	matrix_sum(states_X, result_2, states_X, 4, 1, 4, 1);
 8001d56:	f107 0140 	add.w	r1, r7, #64	; 0x40
 8001d5a:	2301      	movs	r3, #1
 8001d5c:	9302      	str	r3, [sp, #8]
 8001d5e:	2304      	movs	r3, #4
 8001d60:	9301      	str	r3, [sp, #4]
 8001d62:	2301      	movs	r3, #1
 8001d64:	9300      	str	r3, [sp, #0]
 8001d66:	2304      	movs	r3, #4
 8001d68:	4a23      	ldr	r2, [pc, #140]	; (8001df8 <EKF_update+0x1a4>)
 8001d6a:	4823      	ldr	r0, [pc, #140]	; (8001df8 <EKF_update+0x1a4>)
 8001d6c:	f7ff f9e8 	bl	8001140 <matrix_sum>

	//update P
	matrix_multiplication(Kalman_gain_K, jacobian_H, result_1, 4, 4, 4, 4); // K*H
 8001d70:	f107 0280 	add.w	r2, r7, #128	; 0x80
 8001d74:	f507 7080 	add.w	r0, r7, #256	; 0x100
 8001d78:	2304      	movs	r3, #4
 8001d7a:	9302      	str	r3, [sp, #8]
 8001d7c:	2304      	movs	r3, #4
 8001d7e:	9301      	str	r3, [sp, #4]
 8001d80:	2304      	movs	r3, #4
 8001d82:	9300      	str	r3, [sp, #0]
 8001d84:	2304      	movs	r3, #4
 8001d86:	491a      	ldr	r1, [pc, #104]	; (8001df0 <EKF_update+0x19c>)
 8001d88:	f7ff f8d0 	bl	8000f2c <matrix_multiplication>
	matrix_sub(Identity_Matrix, result_1, Identity_Matrix, 4, 4, 4, 4);// I - KH
 8001d8c:	463a      	mov	r2, r7
 8001d8e:	f107 0180 	add.w	r1, r7, #128	; 0x80
 8001d92:	4638      	mov	r0, r7
 8001d94:	2304      	movs	r3, #4
 8001d96:	9302      	str	r3, [sp, #8]
 8001d98:	2304      	movs	r3, #4
 8001d9a:	9301      	str	r3, [sp, #4]
 8001d9c:	2304      	movs	r3, #4
 8001d9e:	9300      	str	r3, [sp, #0]
 8001da0:	2304      	movs	r3, #4
 8001da2:	f7ff fa4c 	bl	800123e <matrix_sub>
	matrix_multiplication(Identity_Matrix, covariance_P, result_2, 4, 4, 4, 4); // P+
 8001da6:	f107 0240 	add.w	r2, r7, #64	; 0x40
 8001daa:	4638      	mov	r0, r7
 8001dac:	2304      	movs	r3, #4
 8001dae:	9302      	str	r3, [sp, #8]
 8001db0:	2304      	movs	r3, #4
 8001db2:	9301      	str	r3, [sp, #4]
 8001db4:	2304      	movs	r3, #4
 8001db6:	9300      	str	r3, [sp, #0]
 8001db8:	2304      	movs	r3, #4
 8001dba:	490c      	ldr	r1, [pc, #48]	; (8001dec <EKF_update+0x198>)
 8001dbc:	f7ff f8b6 	bl	8000f2c <matrix_multiplication>
	memcpy(covariance_P,result_2,sizeof(result_2));
 8001dc0:	4a0a      	ldr	r2, [pc, #40]	; (8001dec <EKF_update+0x198>)
 8001dc2:	f107 0340 	add.w	r3, r7, #64	; 0x40
 8001dc6:	4614      	mov	r4, r2
 8001dc8:	461d      	mov	r5, r3
 8001dca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001dcc:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001dce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001dd0:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001dd2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001dd4:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001dd6:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8001dda:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}


	//
}
 8001dde:	bf00      	nop
 8001de0:	f507 77a0 	add.w	r7, r7, #320	; 0x140
 8001de4:	46bd      	mov	sp, r7
 8001de6:	bdb0      	pop	{r4, r5, r7, pc}
 8001de8:	08016128 	.word	0x08016128
 8001dec:	20007a3c 	.word	0x20007a3c
 8001df0:	20009a48 	.word	0x20009a48
 8001df4:	2000ac08 	.word	0x2000ac08
 8001df8:	2000ad38 	.word	0x2000ad38
 8001dfc:	2000ac60 	.word	0x2000ac60

08001e00 <Init_localization>:

/**/

/* Functions */

void Init_localization(float val_x, float val_y, float val_Vx, float val_Vy){
 8001e00:	b5b0      	push	{r4, r5, r7, lr}
 8001e02:	b0d8      	sub	sp, #352	; 0x160
 8001e04:	af00      	add	r7, sp, #0
 8001e06:	f107 030c 	add.w	r3, r7, #12
 8001e0a:	ed83 0a00 	vstr	s0, [r3]
 8001e0e:	f107 0308 	add.w	r3, r7, #8
 8001e12:	edc3 0a00 	vstr	s1, [r3]
 8001e16:	1d3b      	adds	r3, r7, #4
 8001e18:	ed83 1a00 	vstr	s2, [r3]
 8001e1c:	463b      	mov	r3, r7
 8001e1e:	edc3 1a00 	vstr	s3, [r3]
	Radarx = val_x;
 8001e22:	4ad5      	ldr	r2, [pc, #852]	; (8002178 <Init_localization+0x378>)
 8001e24:	f107 030c 	add.w	r3, r7, #12
 8001e28:	681b      	ldr	r3, [r3, #0]
 8001e2a:	6013      	str	r3, [r2, #0]
	Radary = val_y;
 8001e2c:	4ad3      	ldr	r2, [pc, #844]	; (800217c <Init_localization+0x37c>)
 8001e2e:	f107 0308 	add.w	r3, r7, #8
 8001e32:	681b      	ldr	r3, [r3, #0]
 8001e34:	6013      	str	r3, [r2, #0]
	speedUWBx = val_Vx;
 8001e36:	4ad2      	ldr	r2, [pc, #840]	; (8002180 <Init_localization+0x380>)
 8001e38:	1d3b      	adds	r3, r7, #4
 8001e3a:	681b      	ldr	r3, [r3, #0]
 8001e3c:	6013      	str	r3, [r2, #0]
	speedUWBy = val_Vy;
 8001e3e:	4ad1      	ldr	r2, [pc, #836]	; (8002184 <Init_localization+0x384>)
 8001e40:	463b      	mov	r3, r7
 8001e42:	681b      	ldr	r3, [r3, #0]
 8001e44:	6013      	str	r3, [r2, #0]
	speedradarx = val_Vx;
 8001e46:	4ad0      	ldr	r2, [pc, #832]	; (8002188 <Init_localization+0x388>)
 8001e48:	1d3b      	adds	r3, r7, #4
 8001e4a:	681b      	ldr	r3, [r3, #0]
 8001e4c:	6013      	str	r3, [r2, #0]
	speedradary = val_Vy;
 8001e4e:	4acf      	ldr	r2, [pc, #828]	; (800218c <Init_localization+0x38c>)
 8001e50:	463b      	mov	r3, r7
 8001e52:	681b      	ldr	r3, [r3, #0]
 8001e54:	6013      	str	r3, [r2, #0]

	float dummyH [4][4] = {{(weight_UWBx + weight_radarx),0,0,0},
 8001e56:	4bce      	ldr	r3, [pc, #824]	; (8002190 <Init_localization+0x390>)
 8001e58:	ed93 7a00 	vldr	s14, [r3]
 8001e5c:	4bcd      	ldr	r3, [pc, #820]	; (8002194 <Init_localization+0x394>)
 8001e5e:	edd3 7a00 	vldr	s15, [r3]
 8001e62:	ee77 7a27 	vadd.f32	s15, s14, s15
 8001e66:	edc7 7a48 	vstr	s15, [r7, #288]	; 0x120
 8001e6a:	f04f 0300 	mov.w	r3, #0
 8001e6e:	f8c7 3124 	str.w	r3, [r7, #292]	; 0x124
 8001e72:	f04f 0300 	mov.w	r3, #0
 8001e76:	f8c7 3128 	str.w	r3, [r7, #296]	; 0x128
 8001e7a:	f04f 0300 	mov.w	r3, #0
 8001e7e:	f8c7 312c 	str.w	r3, [r7, #300]	; 0x12c
 8001e82:	f04f 0300 	mov.w	r3, #0
 8001e86:	f8c7 3130 	str.w	r3, [r7, #304]	; 0x130
			 {0,(weight_UWBy + weight_radary),0,0},
 8001e8a:	4bc3      	ldr	r3, [pc, #780]	; (8002198 <Init_localization+0x398>)
 8001e8c:	ed93 7a00 	vldr	s14, [r3]
 8001e90:	4bc2      	ldr	r3, [pc, #776]	; (800219c <Init_localization+0x39c>)
 8001e92:	edd3 7a00 	vldr	s15, [r3]
 8001e96:	ee77 7a27 	vadd.f32	s15, s14, s15
	float dummyH [4][4] = {{(weight_UWBx + weight_radarx),0,0,0},
 8001e9a:	edc7 7a4d 	vstr	s15, [r7, #308]	; 0x134
 8001e9e:	f04f 0300 	mov.w	r3, #0
 8001ea2:	f8c7 3138 	str.w	r3, [r7, #312]	; 0x138
 8001ea6:	f04f 0300 	mov.w	r3, #0
 8001eaa:	f8c7 313c 	str.w	r3, [r7, #316]	; 0x13c
 8001eae:	f04f 0300 	mov.w	r3, #0
 8001eb2:	f8c7 3140 	str.w	r3, [r7, #320]	; 0x140
 8001eb6:	f04f 0300 	mov.w	r3, #0
 8001eba:	f8c7 3144 	str.w	r3, [r7, #324]	; 0x144
 8001ebe:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8001ec2:	f8c7 3148 	str.w	r3, [r7, #328]	; 0x148
 8001ec6:	f04f 0300 	mov.w	r3, #0
 8001eca:	f8c7 314c 	str.w	r3, [r7, #332]	; 0x14c
 8001ece:	f04f 0300 	mov.w	r3, #0
 8001ed2:	f8c7 3150 	str.w	r3, [r7, #336]	; 0x150
 8001ed6:	f04f 0300 	mov.w	r3, #0
 8001eda:	f8c7 3154 	str.w	r3, [r7, #340]	; 0x154
 8001ede:	f04f 0300 	mov.w	r3, #0
 8001ee2:	f8c7 3158 	str.w	r3, [r7, #344]	; 0x158
 8001ee6:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8001eea:	f8c7 315c 	str.w	r3, [r7, #348]	; 0x15c
			 {0,0,1,0},
		 	 {0,0,0,1}};
	float dummyF[4][4] = {{1,0,deltatime_imu,0},
 8001eee:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8001ef2:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
 8001ef6:	f04f 0300 	mov.w	r3, #0
 8001efa:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
 8001efe:	4ba8      	ldr	r3, [pc, #672]	; (80021a0 <Init_localization+0x3a0>)
 8001f00:	681b      	ldr	r3, [r3, #0]
 8001f02:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
 8001f06:	f04f 0300 	mov.w	r3, #0
 8001f0a:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
 8001f0e:	f04f 0300 	mov.w	r3, #0
 8001f12:	f8c7 30f0 	str.w	r3, [r7, #240]	; 0xf0
 8001f16:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8001f1a:	f8c7 30f4 	str.w	r3, [r7, #244]	; 0xf4
 8001f1e:	f04f 0300 	mov.w	r3, #0
 8001f22:	f8c7 30f8 	str.w	r3, [r7, #248]	; 0xf8
 8001f26:	4b9e      	ldr	r3, [pc, #632]	; (80021a0 <Init_localization+0x3a0>)
 8001f28:	681b      	ldr	r3, [r3, #0]
 8001f2a:	f8c7 30fc 	str.w	r3, [r7, #252]	; 0xfc
 8001f2e:	f04f 0300 	mov.w	r3, #0
 8001f32:	f8c7 3100 	str.w	r3, [r7, #256]	; 0x100
 8001f36:	f04f 0300 	mov.w	r3, #0
 8001f3a:	f8c7 3104 	str.w	r3, [r7, #260]	; 0x104
 8001f3e:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8001f42:	f8c7 3108 	str.w	r3, [r7, #264]	; 0x108
 8001f46:	f04f 0300 	mov.w	r3, #0
 8001f4a:	f8c7 310c 	str.w	r3, [r7, #268]	; 0x10c
 8001f4e:	f04f 0300 	mov.w	r3, #0
 8001f52:	f8c7 3110 	str.w	r3, [r7, #272]	; 0x110
 8001f56:	f04f 0300 	mov.w	r3, #0
 8001f5a:	f8c7 3114 	str.w	r3, [r7, #276]	; 0x114
 8001f5e:	f04f 0300 	mov.w	r3, #0
 8001f62:	f8c7 3118 	str.w	r3, [r7, #280]	; 0x118
 8001f66:	f04f 537e 	mov.w	r3, #1065353216	; 0x3f800000
 8001f6a:	f8c7 311c 	str.w	r3, [r7, #284]	; 0x11c
			 {0,1,0,deltatime_imu},
			 {0,0,1,0},
		 	 {0,0,0,1}};
	float dummyQ [4][4] = {{0.00000533,0,0,0},
 8001f6e:	4b8d      	ldr	r3, [pc, #564]	; (80021a4 <Init_localization+0x3a4>)
 8001f70:	f107 04a0 	add.w	r4, r7, #160	; 0xa0
 8001f74:	461d      	mov	r5, r3
 8001f76:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001f78:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001f7a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001f7c:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001f7e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001f80:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8001f82:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8001f86:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
						{0,0.00000036,0,0},
						{0,0,0.00043956,0},
						{0,0,0,0.00034941}};

	float dummyR [4][4] = {{(weight_UWBx * 0.007161239 + weight_radarx * 0.072271677),0,0,0},
 8001f8a:	4b81      	ldr	r3, [pc, #516]	; (8002190 <Init_localization+0x390>)
 8001f8c:	681b      	ldr	r3, [r3, #0]
 8001f8e:	4618      	mov	r0, r3
 8001f90:	f7fe faac 	bl	80004ec <__aeabi_f2d>
 8001f94:	a368      	add	r3, pc, #416	; (adr r3, 8002138 <Init_localization+0x338>)
 8001f96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001f9a:	f7fe faff 	bl	800059c <__aeabi_dmul>
 8001f9e:	4603      	mov	r3, r0
 8001fa0:	460c      	mov	r4, r1
 8001fa2:	4625      	mov	r5, r4
 8001fa4:	461c      	mov	r4, r3
 8001fa6:	4b7b      	ldr	r3, [pc, #492]	; (8002194 <Init_localization+0x394>)
 8001fa8:	681b      	ldr	r3, [r3, #0]
 8001faa:	4618      	mov	r0, r3
 8001fac:	f7fe fa9e 	bl	80004ec <__aeabi_f2d>
 8001fb0:	a363      	add	r3, pc, #396	; (adr r3, 8002140 <Init_localization+0x340>)
 8001fb2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8001fb6:	f7fe faf1 	bl	800059c <__aeabi_dmul>
 8001fba:	4602      	mov	r2, r0
 8001fbc:	460b      	mov	r3, r1
 8001fbe:	4620      	mov	r0, r4
 8001fc0:	4629      	mov	r1, r5
 8001fc2:	f7fe f935 	bl	8000230 <__adddf3>
 8001fc6:	4603      	mov	r3, r0
 8001fc8:	460c      	mov	r4, r1
 8001fca:	4618      	mov	r0, r3
 8001fcc:	4621      	mov	r1, r4
 8001fce:	f7fe fddd 	bl	8000b8c <__aeabi_d2f>
 8001fd2:	4602      	mov	r2, r0
 8001fd4:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8001fd8:	601a      	str	r2, [r3, #0]
 8001fda:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8001fde:	f04f 0200 	mov.w	r2, #0
 8001fe2:	605a      	str	r2, [r3, #4]
 8001fe4:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8001fe8:	f04f 0200 	mov.w	r2, #0
 8001fec:	609a      	str	r2, [r3, #8]
 8001fee:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8001ff2:	f04f 0200 	mov.w	r2, #0
 8001ff6:	60da      	str	r2, [r3, #12]
 8001ff8:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8001ffc:	f04f 0200 	mov.w	r2, #0
 8002000:	611a      	str	r2, [r3, #16]
						{0,(weight_UWBy * 0.00206330 + weight_radary * 0.013577092),0,0},
 8002002:	4b65      	ldr	r3, [pc, #404]	; (8002198 <Init_localization+0x398>)
 8002004:	681b      	ldr	r3, [r3, #0]
 8002006:	4618      	mov	r0, r3
 8002008:	f7fe fa70 	bl	80004ec <__aeabi_f2d>
 800200c:	a34e      	add	r3, pc, #312	; (adr r3, 8002148 <Init_localization+0x348>)
 800200e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002012:	f7fe fac3 	bl	800059c <__aeabi_dmul>
 8002016:	4603      	mov	r3, r0
 8002018:	460c      	mov	r4, r1
 800201a:	4625      	mov	r5, r4
 800201c:	461c      	mov	r4, r3
 800201e:	4b5f      	ldr	r3, [pc, #380]	; (800219c <Init_localization+0x39c>)
 8002020:	681b      	ldr	r3, [r3, #0]
 8002022:	4618      	mov	r0, r3
 8002024:	f7fe fa62 	bl	80004ec <__aeabi_f2d>
 8002028:	a349      	add	r3, pc, #292	; (adr r3, 8002150 <Init_localization+0x350>)
 800202a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800202e:	f7fe fab5 	bl	800059c <__aeabi_dmul>
 8002032:	4602      	mov	r2, r0
 8002034:	460b      	mov	r3, r1
 8002036:	4620      	mov	r0, r4
 8002038:	4629      	mov	r1, r5
 800203a:	f7fe f8f9 	bl	8000230 <__adddf3>
 800203e:	4603      	mov	r3, r0
 8002040:	460c      	mov	r4, r1
 8002042:	4618      	mov	r0, r3
 8002044:	4621      	mov	r1, r4
 8002046:	f7fe fda1 	bl	8000b8c <__aeabi_d2f>
 800204a:	4602      	mov	r2, r0
	float dummyR [4][4] = {{(weight_UWBx * 0.007161239 + weight_radarx * 0.072271677),0,0,0},
 800204c:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8002050:	615a      	str	r2, [r3, #20]
 8002052:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8002056:	f04f 0200 	mov.w	r2, #0
 800205a:	619a      	str	r2, [r3, #24]
 800205c:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8002060:	f04f 0200 	mov.w	r2, #0
 8002064:	61da      	str	r2, [r3, #28]
 8002066:	f107 0360 	add.w	r3, r7, #96	; 0x60
 800206a:	f04f 0200 	mov.w	r2, #0
 800206e:	621a      	str	r2, [r3, #32]
 8002070:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8002074:	f04f 0200 	mov.w	r2, #0
 8002078:	625a      	str	r2, [r3, #36]	; 0x24
						{0,0,weight_speedUWBx * 0.08474402 + weight_speedradarx * 0.000850232,0},
 800207a:	4b4b      	ldr	r3, [pc, #300]	; (80021a8 <Init_localization+0x3a8>)
 800207c:	681b      	ldr	r3, [r3, #0]
 800207e:	4618      	mov	r0, r3
 8002080:	f7fe fa34 	bl	80004ec <__aeabi_f2d>
 8002084:	a334      	add	r3, pc, #208	; (adr r3, 8002158 <Init_localization+0x358>)
 8002086:	e9d3 2300 	ldrd	r2, r3, [r3]
 800208a:	f7fe fa87 	bl	800059c <__aeabi_dmul>
 800208e:	4603      	mov	r3, r0
 8002090:	460c      	mov	r4, r1
 8002092:	4625      	mov	r5, r4
 8002094:	461c      	mov	r4, r3
 8002096:	4b45      	ldr	r3, [pc, #276]	; (80021ac <Init_localization+0x3ac>)
 8002098:	681b      	ldr	r3, [r3, #0]
 800209a:	4618      	mov	r0, r3
 800209c:	f7fe fa26 	bl	80004ec <__aeabi_f2d>
 80020a0:	a32f      	add	r3, pc, #188	; (adr r3, 8002160 <Init_localization+0x360>)
 80020a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80020a6:	f7fe fa79 	bl	800059c <__aeabi_dmul>
 80020aa:	4602      	mov	r2, r0
 80020ac:	460b      	mov	r3, r1
 80020ae:	4620      	mov	r0, r4
 80020b0:	4629      	mov	r1, r5
 80020b2:	f7fe f8bd 	bl	8000230 <__adddf3>
 80020b6:	4603      	mov	r3, r0
 80020b8:	460c      	mov	r4, r1
 80020ba:	4618      	mov	r0, r3
 80020bc:	4621      	mov	r1, r4
 80020be:	f7fe fd65 	bl	8000b8c <__aeabi_d2f>
 80020c2:	4602      	mov	r2, r0
	float dummyR [4][4] = {{(weight_UWBx * 0.007161239 + weight_radarx * 0.072271677),0,0,0},
 80020c4:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80020c8:	629a      	str	r2, [r3, #40]	; 0x28
 80020ca:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80020ce:	f04f 0200 	mov.w	r2, #0
 80020d2:	62da      	str	r2, [r3, #44]	; 0x2c
 80020d4:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80020d8:	f04f 0200 	mov.w	r2, #0
 80020dc:	631a      	str	r2, [r3, #48]	; 0x30
 80020de:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80020e2:	f04f 0200 	mov.w	r2, #0
 80020e6:	635a      	str	r2, [r3, #52]	; 0x34
 80020e8:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80020ec:	f04f 0200 	mov.w	r2, #0
 80020f0:	639a      	str	r2, [r3, #56]	; 0x38
						{0,0,0,weight_speedUWBy * 0.05404885 + weight_speedradary * 0.000695134}};
 80020f2:	4b2f      	ldr	r3, [pc, #188]	; (80021b0 <Init_localization+0x3b0>)
 80020f4:	681b      	ldr	r3, [r3, #0]
 80020f6:	4618      	mov	r0, r3
 80020f8:	f7fe f9f8 	bl	80004ec <__aeabi_f2d>
 80020fc:	a31a      	add	r3, pc, #104	; (adr r3, 8002168 <Init_localization+0x368>)
 80020fe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002102:	f7fe fa4b 	bl	800059c <__aeabi_dmul>
 8002106:	4603      	mov	r3, r0
 8002108:	460c      	mov	r4, r1
 800210a:	4625      	mov	r5, r4
 800210c:	461c      	mov	r4, r3
 800210e:	4b29      	ldr	r3, [pc, #164]	; (80021b4 <Init_localization+0x3b4>)
 8002110:	681b      	ldr	r3, [r3, #0]
 8002112:	4618      	mov	r0, r3
 8002114:	f7fe f9ea 	bl	80004ec <__aeabi_f2d>
 8002118:	a315      	add	r3, pc, #84	; (adr r3, 8002170 <Init_localization+0x370>)
 800211a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800211e:	f7fe fa3d 	bl	800059c <__aeabi_dmul>
 8002122:	4602      	mov	r2, r0
 8002124:	460b      	mov	r3, r1
 8002126:	4620      	mov	r0, r4
 8002128:	4629      	mov	r1, r5
 800212a:	f7fe f881 	bl	8000230 <__adddf3>
 800212e:	4603      	mov	r3, r0
 8002130:	e042      	b.n	80021b8 <Init_localization+0x3b8>
 8002132:	bf00      	nop
 8002134:	f3af 8000 	nop.w
 8002138:	74dc8710 	.word	0x74dc8710
 800213c:	3f7d551a 	.word	0x3f7d551a
 8002140:	89245f0e 	.word	0x89245f0e
 8002144:	3fb28065 	.word	0x3fb28065
 8002148:	c0b2e317 	.word	0xc0b2e317
 800214c:	3f60e70d 	.word	0x3f60e70d
 8002150:	70eb1379 	.word	0x70eb1379
 8002154:	3f8bce4e 	.word	0x3f8bce4e
 8002158:	ba6e7b5e 	.word	0xba6e7b5e
 800215c:	3fb5b1c8 	.word	0x3fb5b1c8
 8002160:	512753c6 	.word	0x512753c6
 8002164:	3f4bdc43 	.word	0x3f4bdc43
 8002168:	7645d77b 	.word	0x7645d77b
 800216c:	3fabac4a 	.word	0x3fabac4a
 8002170:	e5ee6480 	.word	0xe5ee6480
 8002174:	3f46c734 	.word	0x3f46c734
 8002178:	20007a94 	.word	0x20007a94
 800217c:	20009c24 	.word	0x20009c24
 8002180:	20009a28 	.word	0x20009a28
 8002184:	2000ad08 	.word	0x2000ad08
 8002188:	20009a08 	.word	0x20009a08
 800218c:	20009a1c 	.word	0x20009a1c
 8002190:	20009a14 	.word	0x20009a14
 8002194:	20009c3c 	.word	0x20009c3c
 8002198:	20007a88 	.word	0x20007a88
 800219c:	2000abec 	.word	0x2000abec
 80021a0:	20009a44 	.word	0x20009a44
 80021a4:	08016168 	.word	0x08016168
 80021a8:	20008a4c 	.word	0x20008a4c
 80021ac:	2000abe0 	.word	0x2000abe0
 80021b0:	2000abf4 	.word	0x2000abf4
 80021b4:	2000ad34 	.word	0x2000ad34
 80021b8:	460c      	mov	r4, r1
 80021ba:	4618      	mov	r0, r3
 80021bc:	4621      	mov	r1, r4
 80021be:	f7fe fce5 	bl	8000b8c <__aeabi_d2f>
 80021c2:	4602      	mov	r2, r0
	float dummyR [4][4] = {{(weight_UWBx * 0.007161239 + weight_radarx * 0.072271677),0,0,0},
 80021c4:	f107 0360 	add.w	r3, r7, #96	; 0x60
 80021c8:	63da      	str	r2, [r3, #60]	; 0x3c
	float dummyX[4] = {val_x, val_y, val_Vx, val_Vy};
 80021ca:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80021ce:	f107 020c 	add.w	r2, r7, #12
 80021d2:	6812      	ldr	r2, [r2, #0]
 80021d4:	601a      	str	r2, [r3, #0]
 80021d6:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80021da:	f107 0208 	add.w	r2, r7, #8
 80021de:	6812      	ldr	r2, [r2, #0]
 80021e0:	605a      	str	r2, [r3, #4]
 80021e2:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80021e6:	1d3a      	adds	r2, r7, #4
 80021e8:	6812      	ldr	r2, [r2, #0]
 80021ea:	609a      	str	r2, [r3, #8]
 80021ec:	f107 0350 	add.w	r3, r7, #80	; 0x50
 80021f0:	463a      	mov	r2, r7
 80021f2:	6812      	ldr	r2, [r2, #0]
 80021f4:	60da      	str	r2, [r3, #12]
	float dummyP [4][4] = {{0.1,0,0,0},
 80021f6:	f107 0310 	add.w	r3, r7, #16
 80021fa:	4618      	mov	r0, r3
 80021fc:	2340      	movs	r3, #64	; 0x40
 80021fe:	461a      	mov	r2, r3
 8002200:	2100      	movs	r1, #0
 8002202:	f00e fa1c 	bl	801063e <memset>
 8002206:	f107 0310 	add.w	r3, r7, #16
 800220a:	4a2d      	ldr	r2, [pc, #180]	; (80022c0 <Init_localization+0x4c0>)
 800220c:	601a      	str	r2, [r3, #0]
 800220e:	f107 0310 	add.w	r3, r7, #16
 8002212:	4a2b      	ldr	r2, [pc, #172]	; (80022c0 <Init_localization+0x4c0>)
 8002214:	615a      	str	r2, [r3, #20]
							{0,0.1,0,0},
							{0,0,0,0},
							{0,0,0,0}};

	memcpy(jacobian_F,dummyF,sizeof(dummyF));
 8002216:	4b2b      	ldr	r3, [pc, #172]	; (80022c4 <Init_localization+0x4c4>)
 8002218:	461d      	mov	r5, r3
 800221a:	f107 04e0 	add.w	r4, r7, #224	; 0xe0
 800221e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002220:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002222:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002224:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002226:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002228:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800222a:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800222e:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
	memcpy(jacobian_H,dummyH,sizeof(dummyH));
 8002232:	4b25      	ldr	r3, [pc, #148]	; (80022c8 <Init_localization+0x4c8>)
 8002234:	461d      	mov	r5, r3
 8002236:	f507 7490 	add.w	r4, r7, #288	; 0x120
 800223a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800223c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800223e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002240:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002242:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002244:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002246:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 800224a:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
	memcpy(standar_dev_Q,dummyQ,sizeof(dummyQ));
 800224e:	4b1f      	ldr	r3, [pc, #124]	; (80022cc <Init_localization+0x4cc>)
 8002250:	461d      	mov	r5, r3
 8002252:	f107 04a0 	add.w	r4, r7, #160	; 0xa0
 8002256:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002258:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800225a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800225c:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 800225e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002260:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8002262:	e894 000f 	ldmia.w	r4, {r0, r1, r2, r3}
 8002266:	e885 000f 	stmia.w	r5, {r0, r1, r2, r3}
	memcpy(standar_dev_R,dummyR,sizeof(dummyR));
 800226a:	4a19      	ldr	r2, [pc, #100]	; (80022d0 <Init_localization+0x4d0>)
 800226c:	f107 0360 	add.w	r3, r7, #96	; 0x60
 8002270:	4614      	mov	r4, r2
 8002272:	461d      	mov	r5, r3
 8002274:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002276:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002278:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800227a:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 800227c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800227e:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 8002280:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 8002284:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	memcpy(states_X,dummyX,sizeof(dummyX));
 8002288:	4a12      	ldr	r2, [pc, #72]	; (80022d4 <Init_localization+0x4d4>)
 800228a:	f107 0350 	add.w	r3, r7, #80	; 0x50
 800228e:	4614      	mov	r4, r2
 8002290:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8002292:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
	memcpy(covariance_P,dummyP,sizeof(dummyP));
 8002296:	4a10      	ldr	r2, [pc, #64]	; (80022d8 <Init_localization+0x4d8>)
 8002298:	f107 0310 	add.w	r3, r7, #16
 800229c:	4614      	mov	r4, r2
 800229e:	461d      	mov	r5, r3
 80022a0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80022a2:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80022a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80022a6:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80022a8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80022aa:	c40f      	stmia	r4!, {r0, r1, r2, r3}
 80022ac:	e895 000f 	ldmia.w	r5, {r0, r1, r2, r3}
 80022b0:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}

}
 80022b4:	bf00      	nop
 80022b6:	f507 77b0 	add.w	r7, r7, #352	; 0x160
 80022ba:	46bd      	mov	sp, r7
 80022bc:	bdb0      	pop	{r4, r5, r7, pc}
 80022be:	bf00      	nop
 80022c0:	3dcccccd 	.word	0x3dcccccd
 80022c4:	2000acc4 	.word	0x2000acc4
 80022c8:	20009a48 	.word	0x20009a48
 80022cc:	2000ac70 	.word	0x2000ac70
 80022d0:	2000ac08 	.word	0x2000ac08
 80022d4:	2000ad38 	.word	0x2000ad38
 80022d8:	20007a3c 	.word	0x20007a3c

080022dc <HCSR4_Init>:

//////// HCSR4 funcitons
void HCSR4_Init(_Bool sensors[6]){
 80022dc:	b580      	push	{r7, lr}
 80022de:	b082      	sub	sp, #8
 80022e0:	af00      	add	r7, sp, #0
 80022e2:	6078      	str	r0, [r7, #4]
	sensors[4] = true;
 80022e4:	687b      	ldr	r3, [r7, #4]
 80022e6:	3304      	adds	r3, #4
 80022e8:	2201      	movs	r2, #1
 80022ea:	701a      	strb	r2, [r3, #0]
	HAL_GPIO_WritePin(US_Out_Port, US_Out_Pin, 0);// Init Ultrasound
 80022ec:	2200      	movs	r2, #0
 80022ee:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80022f2:	4803      	ldr	r0, [pc, #12]	; (8002300 <HCSR4_Init+0x24>)
 80022f4:	f006 fb3a 	bl	800896c <HAL_GPIO_WritePin>
}
 80022f8:	bf00      	nop
 80022fa:	3708      	adds	r7, #8
 80022fc:	46bd      	mov	sp, r7
 80022fe:	bd80      	pop	{r7, pc}
 8002300:	48000800 	.word	0x48000800

08002304 <i2c_write_register>:
 * @param i2c           I2C1 or I2C2
 * @param i2c_address   I2C device address
 * @param reg           Register being written to
 * @param value         Value for the register
 */
void i2c_write_register(I2C_TypeDef *i2c, uint8_t i2c_address, uint8_t reg, uint8_t value) {
 8002304:	b480      	push	{r7}
 8002306:	b083      	sub	sp, #12
 8002308:	af00      	add	r7, sp, #0
 800230a:	6078      	str	r0, [r7, #4]
 800230c:	4608      	mov	r0, r1
 800230e:	4611      	mov	r1, r2
 8002310:	461a      	mov	r2, r3
 8002312:	4603      	mov	r3, r0
 8002314:	70fb      	strb	r3, [r7, #3]
 8002316:	460b      	mov	r3, r1
 8002318:	70bb      	strb	r3, [r7, #2]
 800231a:	4613      	mov	r3, r2
 800231c:	707b      	strb	r3, [r7, #1]

	// write two bytes with a start bit and a stop bit
	i2c->CR2 = (i2c_address << 1) | I2C_CR2_START | I2C_CR2_AUTOEND | (2 << 16); //33685712
 800231e:	78fb      	ldrb	r3, [r7, #3]
 8002320:	005b      	lsls	r3, r3, #1
 8002322:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8002326:	f443 3308 	orr.w	r3, r3, #139264	; 0x22000
 800232a:	687a      	ldr	r2, [r7, #4]
 800232c:	6053      	str	r3, [r2, #4]
	while((i2c->ISR & I2C_ISR_TXIS) == 0);
 800232e:	bf00      	nop
 8002330:	687b      	ldr	r3, [r7, #4]
 8002332:	699b      	ldr	r3, [r3, #24]
 8002334:	f003 0302 	and.w	r3, r3, #2
 8002338:	2b00      	cmp	r3, #0
 800233a:	d0f9      	beq.n	8002330 <i2c_write_register+0x2c>
	i2c->TXDR = reg;
 800233c:	78ba      	ldrb	r2, [r7, #2]
 800233e:	687b      	ldr	r3, [r7, #4]
 8002340:	629a      	str	r2, [r3, #40]	; 0x28
	while((i2c->ISR & I2C_ISR_TXIS) == 0);
 8002342:	bf00      	nop
 8002344:	687b      	ldr	r3, [r7, #4]
 8002346:	699b      	ldr	r3, [r3, #24]
 8002348:	f003 0302 	and.w	r3, r3, #2
 800234c:	2b00      	cmp	r3, #0
 800234e:	d0f9      	beq.n	8002344 <i2c_write_register+0x40>
	i2c->TXDR = value;
 8002350:	787a      	ldrb	r2, [r7, #1]
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	629a      	str	r2, [r3, #40]	; 0x28
	while(i2c->ISR & I2C_ISR_BUSY);
 8002356:	bf00      	nop
 8002358:	687b      	ldr	r3, [r7, #4]
 800235a:	699b      	ldr	r3, [r3, #24]
 800235c:	f403 4300 	and.w	r3, r3, #32768	; 0x8000
 8002360:	2b00      	cmp	r3, #0
 8002362:	d1f9      	bne.n	8002358 <i2c_write_register+0x54>

}
 8002364:	bf00      	nop
 8002366:	370c      	adds	r7, #12
 8002368:	46bd      	mov	sp, r7
 800236a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800236e:	4770      	bx	lr

08002370 <i2c_read_registers>:
 * @param i2c_address   I2C device address
 * @param byte_count    Number of bytes to read
 * @param first_reg     First register to read from
 * @param rx_buffer     Pointer to an array of uint8_t's where values will be stored
 */
void i2c_read_registers(I2C_TypeDef *i2c, uint8_t i2c_address, uint8_t byte_count, uint8_t first_reg, uint8_t *rx_buffer) {
 8002370:	b480      	push	{r7}
 8002372:	b083      	sub	sp, #12
 8002374:	af00      	add	r7, sp, #0
 8002376:	6078      	str	r0, [r7, #4]
 8002378:	4608      	mov	r0, r1
 800237a:	4611      	mov	r1, r2
 800237c:	461a      	mov	r2, r3
 800237e:	4603      	mov	r3, r0
 8002380:	70fb      	strb	r3, [r7, #3]
 8002382:	460b      	mov	r3, r1
 8002384:	70bb      	strb	r3, [r7, #2]
 8002386:	4613      	mov	r3, r2
 8002388:	707b      	strb	r3, [r7, #1]

	// write one byte (the register number) with a start bit but no stop bit
	i2c->CR2 = (i2c_address << 1) | I2C_CR2_START | (1 << 16);
 800238a:	78fb      	ldrb	r3, [r7, #3]
 800238c:	005b      	lsls	r3, r3, #1
 800238e:	f443 3290 	orr.w	r2, r3, #73728	; 0x12000
 8002392:	687b      	ldr	r3, [r7, #4]
 8002394:	605a      	str	r2, [r3, #4]
	while((i2c->ISR & I2C_ISR_TXIS) == 0);
 8002396:	bf00      	nop
 8002398:	687b      	ldr	r3, [r7, #4]
 800239a:	699b      	ldr	r3, [r3, #24]
 800239c:	f003 0302 	and.w	r3, r3, #2
 80023a0:	2b00      	cmp	r3, #0
 80023a2:	d0f9      	beq.n	8002398 <i2c_read_registers+0x28>
	i2c->TXDR = first_reg;
 80023a4:	787a      	ldrb	r2, [r7, #1]
 80023a6:	687b      	ldr	r3, [r7, #4]
 80023a8:	629a      	str	r2, [r3, #40]	; 0x28
	while((i2c->ISR & I2C_ISR_TC) == 0);
 80023aa:	bf00      	nop
 80023ac:	687b      	ldr	r3, [r7, #4]
 80023ae:	699b      	ldr	r3, [r3, #24]
 80023b0:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80023b4:	2b00      	cmp	r3, #0
 80023b6:	d0f9      	beq.n	80023ac <i2c_read_registers+0x3c>

	// read the specified number of bytes with a start bit and a stop bit
	i2c->CR2 = (i2c_address << 1) | I2C_CR2_RD_WRN | I2C_CR2_START | I2C_CR2_AUTOEND | (byte_count << 16);
 80023b8:	78fb      	ldrb	r3, [r7, #3]
 80023ba:	005b      	lsls	r3, r3, #1
 80023bc:	461a      	mov	r2, r3
 80023be:	78bb      	ldrb	r3, [r7, #2]
 80023c0:	041b      	lsls	r3, r3, #16
 80023c2:	4313      	orrs	r3, r2
 80023c4:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 80023c8:	f443 5310 	orr.w	r3, r3, #9216	; 0x2400
 80023cc:	687a      	ldr	r2, [r7, #4]
 80023ce:	6053      	str	r3, [r2, #4]

	// wait for the bytes to arrive
	while(byte_count-- > 0) {
 80023d0:	e00d      	b.n	80023ee <i2c_read_registers+0x7e>
		while((i2c->ISR & I2C_ISR_RXNE) == 0);
 80023d2:	bf00      	nop
 80023d4:	687b      	ldr	r3, [r7, #4]
 80023d6:	699b      	ldr	r3, [r3, #24]
 80023d8:	f003 0304 	and.w	r3, r3, #4
 80023dc:	2b00      	cmp	r3, #0
 80023de:	d0f9      	beq.n	80023d4 <i2c_read_registers+0x64>
		*rx_buffer++ = i2c->RXDR;
 80023e0:	687b      	ldr	r3, [r7, #4]
 80023e2:	6a59      	ldr	r1, [r3, #36]	; 0x24
 80023e4:	693b      	ldr	r3, [r7, #16]
 80023e6:	1c5a      	adds	r2, r3, #1
 80023e8:	613a      	str	r2, [r7, #16]
 80023ea:	b2ca      	uxtb	r2, r1
 80023ec:	701a      	strb	r2, [r3, #0]
	while(byte_count-- > 0) {
 80023ee:	78bb      	ldrb	r3, [r7, #2]
 80023f0:	1e5a      	subs	r2, r3, #1
 80023f2:	70ba      	strb	r2, [r7, #2]
 80023f4:	2b00      	cmp	r3, #0
 80023f6:	d1ec      	bne.n	80023d2 <i2c_read_registers+0x62>
	}
}
 80023f8:	bf00      	nop
 80023fa:	370c      	adds	r7, #12
 80023fc:	46bd      	mov	sp, r7
 80023fe:	f85d 7b04 	ldr.w	r7, [sp], #4
 8002402:	4770      	bx	lr

08002404 <mpu6050_read_sensors>:



void mpu6050_read_sensors(void) {
 8002404:	b580      	push	{r7, lr}
 8002406:	b0b8      	sub	sp, #224	; 0xe0
 8002408:	af02      	add	r7, sp, #8

	// read the sensor values
	uint8_t rx_buffer[201];

	i2c_read_registers(I2C1, MPU6050_ADDRESS, 20, 0x3B, rx_buffer);
 800240a:	463b      	mov	r3, r7
 800240c:	9300      	str	r3, [sp, #0]
 800240e:	233b      	movs	r3, #59	; 0x3b
 8002410:	2214      	movs	r2, #20
 8002412:	2168      	movs	r1, #104	; 0x68
 8002414:	4842      	ldr	r0, [pc, #264]	; (8002520 <mpu6050_read_sensors+0x11c>)
 8002416:	f7ff ffab 	bl	8002370 <i2c_read_registers>

	// extract the raw values
	int16_t  accel_x  = rx_buffer[0]  << 8 | rx_buffer[1];
 800241a:	783b      	ldrb	r3, [r7, #0]
 800241c:	021b      	lsls	r3, r3, #8
 800241e:	b21a      	sxth	r2, r3
 8002420:	787b      	ldrb	r3, [r7, #1]
 8002422:	b21b      	sxth	r3, r3
 8002424:	4313      	orrs	r3, r2
 8002426:	f8a7 30d6 	strh.w	r3, [r7, #214]	; 0xd6
	int16_t  accel_y  = rx_buffer[2]  << 8 | rx_buffer[3];
 800242a:	78bb      	ldrb	r3, [r7, #2]
 800242c:	021b      	lsls	r3, r3, #8
 800242e:	b21a      	sxth	r2, r3
 8002430:	78fb      	ldrb	r3, [r7, #3]
 8002432:	b21b      	sxth	r3, r3
 8002434:	4313      	orrs	r3, r2
 8002436:	f8a7 30d4 	strh.w	r3, [r7, #212]	; 0xd4
	int16_t  accel_z  = rx_buffer[4]  << 8 | rx_buffer[5];
 800243a:	793b      	ldrb	r3, [r7, #4]
 800243c:	021b      	lsls	r3, r3, #8
 800243e:	b21a      	sxth	r2, r3
 8002440:	797b      	ldrb	r3, [r7, #5]
 8002442:	b21b      	sxth	r3, r3
 8002444:	4313      	orrs	r3, r2
 8002446:	f8a7 30d2 	strh.w	r3, [r7, #210]	; 0xd2
	int16_t  gyro_x   = rx_buffer[8]  << 8 | rx_buffer[9];
 800244a:	7a3b      	ldrb	r3, [r7, #8]
 800244c:	021b      	lsls	r3, r3, #8
 800244e:	b21a      	sxth	r2, r3
 8002450:	7a7b      	ldrb	r3, [r7, #9]
 8002452:	b21b      	sxth	r3, r3
 8002454:	4313      	orrs	r3, r2
 8002456:	f8a7 30d0 	strh.w	r3, [r7, #208]	; 0xd0
	int16_t  gyro_y   = rx_buffer[10] << 8 | rx_buffer[11];
 800245a:	7abb      	ldrb	r3, [r7, #10]
 800245c:	021b      	lsls	r3, r3, #8
 800245e:	b21a      	sxth	r2, r3
 8002460:	7afb      	ldrb	r3, [r7, #11]
 8002462:	b21b      	sxth	r3, r3
 8002464:	4313      	orrs	r3, r2
 8002466:	f8a7 30ce 	strh.w	r3, [r7, #206]	; 0xce
	int16_t  gyro_z   = rx_buffer[12] << 8 | rx_buffer[13];
 800246a:	7b3b      	ldrb	r3, [r7, #12]
 800246c:	021b      	lsls	r3, r3, #8
 800246e:	b21a      	sxth	r2, r3
 8002470:	7b7b      	ldrb	r3, [r7, #13]
 8002472:	b21b      	sxth	r3, r3
 8002474:	4313      	orrs	r3, r2
 8002476:	f8a7 30cc 	strh.w	r3, [r7, #204]	; 0xcc

	// convert accelerometer readings into G's
	accel_x_g = accel_x / 2048.0f;
 800247a:	f9b7 30d6 	ldrsh.w	r3, [r7, #214]	; 0xd6
 800247e:	ee07 3a90 	vmov	s15, r3
 8002482:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002486:	eddf 6a27 	vldr	s13, [pc, #156]	; 8002524 <mpu6050_read_sensors+0x120>
 800248a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800248e:	4b26      	ldr	r3, [pc, #152]	; (8002528 <mpu6050_read_sensors+0x124>)
 8002490:	edc3 7a00 	vstr	s15, [r3]
	accel_y_g = accel_y / 2048.0f;
 8002494:	f9b7 30d4 	ldrsh.w	r3, [r7, #212]	; 0xd4
 8002498:	ee07 3a90 	vmov	s15, r3
 800249c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80024a0:	eddf 6a20 	vldr	s13, [pc, #128]	; 8002524 <mpu6050_read_sensors+0x120>
 80024a4:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80024a8:	4b20      	ldr	r3, [pc, #128]	; (800252c <mpu6050_read_sensors+0x128>)
 80024aa:	edc3 7a00 	vstr	s15, [r3]
	accel_z_g = accel_z / 2048.0f;
 80024ae:	f9b7 30d2 	ldrsh.w	r3, [r7, #210]	; 0xd2
 80024b2:	ee07 3a90 	vmov	s15, r3
 80024b6:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80024ba:	eddf 6a1a 	vldr	s13, [pc, #104]	; 8002524 <mpu6050_read_sensors+0x120>
 80024be:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80024c2:	4b1b      	ldr	r3, [pc, #108]	; (8002530 <mpu6050_read_sensors+0x12c>)
 80024c4:	edc3 7a00 	vstr	s15, [r3]

	// convert gyro readings into Radians per second
	gyro_x_rad = gyro_x /  939.650784f;
 80024c8:	f9b7 30d0 	ldrsh.w	r3, [r7, #208]	; 0xd0
 80024cc:	ee07 3a90 	vmov	s15, r3
 80024d0:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80024d4:	eddf 6a17 	vldr	s13, [pc, #92]	; 8002534 <mpu6050_read_sensors+0x130>
 80024d8:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80024dc:	4b16      	ldr	r3, [pc, #88]	; (8002538 <mpu6050_read_sensors+0x134>)
 80024de:	edc3 7a00 	vstr	s15, [r3]
	gyro_y_rad = gyro_y / 939.650784f;
 80024e2:	f9b7 30ce 	ldrsh.w	r3, [r7, #206]	; 0xce
 80024e6:	ee07 3a90 	vmov	s15, r3
 80024ea:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80024ee:	eddf 6a11 	vldr	s13, [pc, #68]	; 8002534 <mpu6050_read_sensors+0x130>
 80024f2:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80024f6:	4b11      	ldr	r3, [pc, #68]	; (800253c <mpu6050_read_sensors+0x138>)
 80024f8:	edc3 7a00 	vstr	s15, [r3]
	gyro_z_rad = gyro_z / 939.650784f;//16.4 2000dps
 80024fc:	f9b7 30cc 	ldrsh.w	r3, [r7, #204]	; 0xcc
 8002500:	ee07 3a90 	vmov	s15, r3
 8002504:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8002508:	eddf 6a0a 	vldr	s13, [pc, #40]	; 8002534 <mpu6050_read_sensors+0x130>
 800250c:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002510:	4b0b      	ldr	r3, [pc, #44]	; (8002540 <mpu6050_read_sensors+0x13c>)
 8002512:	edc3 7a00 	vstr	s15, [r3]





}
 8002516:	bf00      	nop
 8002518:	37d8      	adds	r7, #216	; 0xd8
 800251a:	46bd      	mov	sp, r7
 800251c:	bd80      	pop	{r7, pc}
 800251e:	bf00      	nop
 8002520:	40005400 	.word	0x40005400
 8002524:	45000000 	.word	0x45000000
 8002528:	2000ad18 	.word	0x2000ad18
 800252c:	2000ad60 	.word	0x2000ad60
 8002530:	20007a84 	.word	0x20007a84
 8002534:	446ae9a6 	.word	0x446ae9a6
 8002538:	2000abf0 	.word	0x2000abf0
 800253c:	2000abe4 	.word	0x2000abe4
 8002540:	20007a04 	.word	0x20007a04

08002544 <IMU_star_com>:

void IMU_star_com (void){
 8002544:	b580      	push	{r7, lr}
 8002546:	af00      	add	r7, sp, #0


	i2c_write_register(I2C1, MPU6050_ADDRESS,  0x6B, 0x00);                    // exit sleep
 8002548:	2300      	movs	r3, #0
 800254a:	226b      	movs	r2, #107	; 0x6b
 800254c:	2168      	movs	r1, #104	; 0x68
 800254e:	480e      	ldr	r0, [pc, #56]	; (8002588 <IMU_star_com+0x44>)
 8002550:	f7ff fed8 	bl	8002304 <i2c_write_register>
	i2c_write_register(I2C1, MPU6050_ADDRESS,  0x19, 7);                     // sample rate = 8kHz / 110 = 72.7Hz
 8002554:	2307      	movs	r3, #7
 8002556:	2219      	movs	r2, #25
 8002558:	2168      	movs	r1, #104	; 0x68
 800255a:	480b      	ldr	r0, [pc, #44]	; (8002588 <IMU_star_com+0x44>)
 800255c:	f7ff fed2 	bl	8002304 <i2c_write_register>
	i2c_write_register(I2C1, MPU6050_ADDRESS,  0x1B, 0x18);                    // gyro full scale = +/- 200(x00) 500(x08) 1000(x10) 2000(x18)dps
 8002560:	2318      	movs	r3, #24
 8002562:	221b      	movs	r2, #27
 8002564:	2168      	movs	r1, #104	; 0x68
 8002566:	4808      	ldr	r0, [pc, #32]	; (8002588 <IMU_star_com+0x44>)
 8002568:	f7ff fecc 	bl	8002304 <i2c_write_register>
	i2c_write_register(I2C1, MPU6050_ADDRESS,  0x1C, 0x18);                    // accelerometer full scale = +/- 2(x00) 4(x08) 8 (x10) 16(x18)g
 800256c:	2318      	movs	r3, #24
 800256e:	221c      	movs	r2, #28
 8002570:	2168      	movs	r1, #104	; 0x68
 8002572:	4805      	ldr	r0, [pc, #20]	; (8002588 <IMU_star_com+0x44>)
 8002574:	f7ff fec6 	bl	8002304 <i2c_write_register>
	i2c_write_register(I2C1, MPU6050_ADDRESS,  0x38, 0x01);                    // enable INTA interrupt
 8002578:	2301      	movs	r3, #1
 800257a:	2238      	movs	r2, #56	; 0x38
 800257c:	2168      	movs	r1, #104	; 0x68
 800257e:	4802      	ldr	r0, [pc, #8]	; (8002588 <IMU_star_com+0x44>)
 8002580:	f7ff fec0 	bl	8002304 <i2c_write_register>
}
 8002584:	bf00      	nop
 8002586:	bd80      	pop	{r7, pc}
 8002588:	40005400 	.word	0x40005400
 800258c:	00000000 	.word	0x00000000

08002590 <IMU_Meas>:

uint16_t IMU_Meas(uint16_t count){
 8002590:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8002594:	b085      	sub	sp, #20
 8002596:	af00      	add	r7, sp, #0
 8002598:	4603      	mov	r3, r0
 800259a:	80fb      	strh	r3, [r7, #6]
	if(!offset){
 800259c:	4b4a      	ldr	r3, [pc, #296]	; (80026c8 <IMU_Meas+0x138>)
 800259e:	781b      	ldrb	r3, [r3, #0]
 80025a0:	f083 0301 	eor.w	r3, r3, #1
 80025a4:	b2db      	uxtb	r3, r3
 80025a6:	2b00      	cmp	r3, #0
 80025a8:	f000 80b6 	beq.w	8002718 <IMU_Meas+0x188>
		  	if(count <= 100){
 80025ac:	88fb      	ldrh	r3, [r7, #6]
 80025ae:	2b64      	cmp	r3, #100	; 0x64
 80025b0:	d846      	bhi.n	8002640 <IMU_Meas+0xb0>
		  		mean_acc_x += accel_x_g;
 80025b2:	4b46      	ldr	r3, [pc, #280]	; (80026cc <IMU_Meas+0x13c>)
 80025b4:	ed93 7a00 	vldr	s14, [r3]
 80025b8:	4b45      	ldr	r3, [pc, #276]	; (80026d0 <IMU_Meas+0x140>)
 80025ba:	edd3 7a00 	vldr	s15, [r3]
 80025be:	ee77 7a27 	vadd.f32	s15, s14, s15
 80025c2:	4b42      	ldr	r3, [pc, #264]	; (80026cc <IMU_Meas+0x13c>)
 80025c4:	edc3 7a00 	vstr	s15, [r3]
		  		mean_acc_y += accel_y_g;
 80025c8:	4b42      	ldr	r3, [pc, #264]	; (80026d4 <IMU_Meas+0x144>)
 80025ca:	ed93 7a00 	vldr	s14, [r3]
 80025ce:	4b42      	ldr	r3, [pc, #264]	; (80026d8 <IMU_Meas+0x148>)
 80025d0:	edd3 7a00 	vldr	s15, [r3]
 80025d4:	ee77 7a27 	vadd.f32	s15, s14, s15
 80025d8:	4b3e      	ldr	r3, [pc, #248]	; (80026d4 <IMU_Meas+0x144>)
 80025da:	edc3 7a00 	vstr	s15, [r3]
		  		mean_acc_z += accel_z_g;
 80025de:	4b3f      	ldr	r3, [pc, #252]	; (80026dc <IMU_Meas+0x14c>)
 80025e0:	ed93 7a00 	vldr	s14, [r3]
 80025e4:	4b3e      	ldr	r3, [pc, #248]	; (80026e0 <IMU_Meas+0x150>)
 80025e6:	edd3 7a00 	vldr	s15, [r3]
 80025ea:	ee77 7a27 	vadd.f32	s15, s14, s15
 80025ee:	4b3b      	ldr	r3, [pc, #236]	; (80026dc <IMU_Meas+0x14c>)
 80025f0:	edc3 7a00 	vstr	s15, [r3]
		  		mean_gyro_x += gyro_x_rad;
 80025f4:	4b3b      	ldr	r3, [pc, #236]	; (80026e4 <IMU_Meas+0x154>)
 80025f6:	ed93 7a00 	vldr	s14, [r3]
 80025fa:	4b3b      	ldr	r3, [pc, #236]	; (80026e8 <IMU_Meas+0x158>)
 80025fc:	edd3 7a00 	vldr	s15, [r3]
 8002600:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002604:	4b37      	ldr	r3, [pc, #220]	; (80026e4 <IMU_Meas+0x154>)
 8002606:	edc3 7a00 	vstr	s15, [r3]
		  		mean_gyro_y += gyro_y_rad;
 800260a:	4b38      	ldr	r3, [pc, #224]	; (80026ec <IMU_Meas+0x15c>)
 800260c:	ed93 7a00 	vldr	s14, [r3]
 8002610:	4b37      	ldr	r3, [pc, #220]	; (80026f0 <IMU_Meas+0x160>)
 8002612:	edd3 7a00 	vldr	s15, [r3]
 8002616:	ee77 7a27 	vadd.f32	s15, s14, s15
 800261a:	4b34      	ldr	r3, [pc, #208]	; (80026ec <IMU_Meas+0x15c>)
 800261c:	edc3 7a00 	vstr	s15, [r3]
		  		mean_gyro_z += gyro_z_rad;
 8002620:	4b34      	ldr	r3, [pc, #208]	; (80026f4 <IMU_Meas+0x164>)
 8002622:	ed93 7a00 	vldr	s14, [r3]
 8002626:	4b34      	ldr	r3, [pc, #208]	; (80026f8 <IMU_Meas+0x168>)
 8002628:	edd3 7a00 	vldr	s15, [r3]
 800262c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002630:	4b30      	ldr	r3, [pc, #192]	; (80026f4 <IMU_Meas+0x164>)
 8002632:	edc3 7a00 	vstr	s15, [r3]
		  		count++;
 8002636:	88fb      	ldrh	r3, [r7, #6]
 8002638:	3301      	adds	r3, #1
 800263a:	80fb      	strh	r3, [r7, #6]
 800263c:	f000 bcaf 	b.w	8002f9e <IMU_Meas+0xa0e>
		  	}else{
				accel_x_offset = mean_acc_x/100;
 8002640:	4b22      	ldr	r3, [pc, #136]	; (80026cc <IMU_Meas+0x13c>)
 8002642:	ed93 7a00 	vldr	s14, [r3]
 8002646:	eddf 6a2d 	vldr	s13, [pc, #180]	; 80026fc <IMU_Meas+0x16c>
 800264a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800264e:	4b2c      	ldr	r3, [pc, #176]	; (8002700 <IMU_Meas+0x170>)
 8002650:	edc3 7a00 	vstr	s15, [r3]
				accel_y_offset = mean_acc_y/100;
 8002654:	4b1f      	ldr	r3, [pc, #124]	; (80026d4 <IMU_Meas+0x144>)
 8002656:	ed93 7a00 	vldr	s14, [r3]
 800265a:	eddf 6a28 	vldr	s13, [pc, #160]	; 80026fc <IMU_Meas+0x16c>
 800265e:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002662:	4b28      	ldr	r3, [pc, #160]	; (8002704 <IMU_Meas+0x174>)
 8002664:	edc3 7a00 	vstr	s15, [r3]
				accel_z_offset = mean_acc_z/100;
 8002668:	4b1c      	ldr	r3, [pc, #112]	; (80026dc <IMU_Meas+0x14c>)
 800266a:	ed93 7a00 	vldr	s14, [r3]
 800266e:	eddf 6a23 	vldr	s13, [pc, #140]	; 80026fc <IMU_Meas+0x16c>
 8002672:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002676:	4b24      	ldr	r3, [pc, #144]	; (8002708 <IMU_Meas+0x178>)
 8002678:	edc3 7a00 	vstr	s15, [r3]
				gyro_x_offset = mean_gyro_x/100;
 800267c:	4b19      	ldr	r3, [pc, #100]	; (80026e4 <IMU_Meas+0x154>)
 800267e:	ed93 7a00 	vldr	s14, [r3]
 8002682:	eddf 6a1e 	vldr	s13, [pc, #120]	; 80026fc <IMU_Meas+0x16c>
 8002686:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800268a:	4b20      	ldr	r3, [pc, #128]	; (800270c <IMU_Meas+0x17c>)
 800268c:	edc3 7a00 	vstr	s15, [r3]
				gyro_y_offset = mean_gyro_y/100;
 8002690:	4b16      	ldr	r3, [pc, #88]	; (80026ec <IMU_Meas+0x15c>)
 8002692:	ed93 7a00 	vldr	s14, [r3]
 8002696:	eddf 6a19 	vldr	s13, [pc, #100]	; 80026fc <IMU_Meas+0x16c>
 800269a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 800269e:	4b1c      	ldr	r3, [pc, #112]	; (8002710 <IMU_Meas+0x180>)
 80026a0:	edc3 7a00 	vstr	s15, [r3]
				gyro_z_offset = mean_gyro_z/100;
 80026a4:	4b13      	ldr	r3, [pc, #76]	; (80026f4 <IMU_Meas+0x164>)
 80026a6:	ed93 7a00 	vldr	s14, [r3]
 80026aa:	eddf 6a14 	vldr	s13, [pc, #80]	; 80026fc <IMU_Meas+0x16c>
 80026ae:	eec7 7a26 	vdiv.f32	s15, s14, s13
 80026b2:	4b18      	ldr	r3, [pc, #96]	; (8002714 <IMU_Meas+0x184>)
 80026b4:	edc3 7a00 	vstr	s15, [r3]
				offset = true;
 80026b8:	4b03      	ldr	r3, [pc, #12]	; (80026c8 <IMU_Meas+0x138>)
 80026ba:	2201      	movs	r2, #1
 80026bc:	701a      	strb	r2, [r3, #0]
				count = 0;
 80026be:	2300      	movs	r3, #0
 80026c0:	80fb      	strh	r3, [r7, #6]
 80026c2:	f000 bc6c 	b.w	8002f9e <IMU_Meas+0xa0e>
 80026c6:	bf00      	nop
 80026c8:	2000acc3 	.word	0x2000acc3
 80026cc:	20009c30 	.word	0x20009c30
 80026d0:	2000ad18 	.word	0x2000ad18
 80026d4:	20009a10 	.word	0x20009a10
 80026d8:	2000ad60 	.word	0x2000ad60
 80026dc:	2000ad5c 	.word	0x2000ad5c
 80026e0:	20007a84 	.word	0x20007a84
 80026e4:	20007a00 	.word	0x20007a00
 80026e8:	2000abf0 	.word	0x2000abf0
 80026ec:	20007a08 	.word	0x20007a08
 80026f0:	2000abe4 	.word	0x2000abe4
 80026f4:	20009a00 	.word	0x20009a00
 80026f8:	20007a04 	.word	0x20007a04
 80026fc:	42c80000 	.word	0x42c80000
 8002700:	20007a10 	.word	0x20007a10
 8002704:	20007a38 	.word	0x20007a38
 8002708:	20009c2c 	.word	0x20009c2c
 800270c:	20009a30 	.word	0x20009a30
 8002710:	2000acbc 	.word	0x2000acbc
 8002714:	2000ad04 	.word	0x2000ad04
		  	}
	}else if(Mean++ >= 9 && offset){
 8002718:	4bd7      	ldr	r3, [pc, #860]	; (8002a78 <IMU_Meas+0x4e8>)
 800271a:	781b      	ldrb	r3, [r3, #0]
 800271c:	1c5a      	adds	r2, r3, #1
 800271e:	b2d1      	uxtb	r1, r2
 8002720:	4ad5      	ldr	r2, [pc, #852]	; (8002a78 <IMU_Meas+0x4e8>)
 8002722:	7011      	strb	r1, [r2, #0]
 8002724:	2b08      	cmp	r3, #8
 8002726:	f240 8424 	bls.w	8002f72 <IMU_Meas+0x9e2>
 800272a:	4bd4      	ldr	r3, [pc, #848]	; (8002a7c <IMU_Meas+0x4ec>)
 800272c:	781b      	ldrb	r3, [r3, #0]
 800272e:	2b00      	cmp	r3, #0
 8002730:	f000 841f 	beq.w	8002f72 <IMU_Meas+0x9e2>
		float weightgyro = 0.02;//4
 8002734:	4bd2      	ldr	r3, [pc, #840]	; (8002a80 <IMU_Meas+0x4f0>)
 8002736:	60fb      	str	r3, [r7, #12]
		mean_acc_x += accel_x_g;
 8002738:	4bd2      	ldr	r3, [pc, #840]	; (8002a84 <IMU_Meas+0x4f4>)
 800273a:	ed93 7a00 	vldr	s14, [r3]
 800273e:	4bd2      	ldr	r3, [pc, #840]	; (8002a88 <IMU_Meas+0x4f8>)
 8002740:	edd3 7a00 	vldr	s15, [r3]
 8002744:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002748:	4bce      	ldr	r3, [pc, #824]	; (8002a84 <IMU_Meas+0x4f4>)
 800274a:	edc3 7a00 	vstr	s15, [r3]
		mean_acc_y += accel_y_g;
 800274e:	4bcf      	ldr	r3, [pc, #828]	; (8002a8c <IMU_Meas+0x4fc>)
 8002750:	ed93 7a00 	vldr	s14, [r3]
 8002754:	4bce      	ldr	r3, [pc, #824]	; (8002a90 <IMU_Meas+0x500>)
 8002756:	edd3 7a00 	vldr	s15, [r3]
 800275a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800275e:	4bcb      	ldr	r3, [pc, #812]	; (8002a8c <IMU_Meas+0x4fc>)
 8002760:	edc3 7a00 	vstr	s15, [r3]
		mean_acc_z += accel_z_g;
 8002764:	4bcb      	ldr	r3, [pc, #812]	; (8002a94 <IMU_Meas+0x504>)
 8002766:	ed93 7a00 	vldr	s14, [r3]
 800276a:	4bcb      	ldr	r3, [pc, #812]	; (8002a98 <IMU_Meas+0x508>)
 800276c:	edd3 7a00 	vldr	s15, [r3]
 8002770:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002774:	4bc7      	ldr	r3, [pc, #796]	; (8002a94 <IMU_Meas+0x504>)
 8002776:	edc3 7a00 	vstr	s15, [r3]
		mean_gyro_x += gyro_x_rad;
 800277a:	4bc8      	ldr	r3, [pc, #800]	; (8002a9c <IMU_Meas+0x50c>)
 800277c:	ed93 7a00 	vldr	s14, [r3]
 8002780:	4bc7      	ldr	r3, [pc, #796]	; (8002aa0 <IMU_Meas+0x510>)
 8002782:	edd3 7a00 	vldr	s15, [r3]
 8002786:	ee77 7a27 	vadd.f32	s15, s14, s15
 800278a:	4bc4      	ldr	r3, [pc, #784]	; (8002a9c <IMU_Meas+0x50c>)
 800278c:	edc3 7a00 	vstr	s15, [r3]
		mean_gyro_y += gyro_y_rad;
 8002790:	4bc4      	ldr	r3, [pc, #784]	; (8002aa4 <IMU_Meas+0x514>)
 8002792:	ed93 7a00 	vldr	s14, [r3]
 8002796:	4bc4      	ldr	r3, [pc, #784]	; (8002aa8 <IMU_Meas+0x518>)
 8002798:	edd3 7a00 	vldr	s15, [r3]
 800279c:	ee77 7a27 	vadd.f32	s15, s14, s15
 80027a0:	4bc0      	ldr	r3, [pc, #768]	; (8002aa4 <IMU_Meas+0x514>)
 80027a2:	edc3 7a00 	vstr	s15, [r3]
		mean_gyro_z += gyro_z_rad;
 80027a6:	4bc1      	ldr	r3, [pc, #772]	; (8002aac <IMU_Meas+0x51c>)
 80027a8:	ed93 7a00 	vldr	s14, [r3]
 80027ac:	4bc0      	ldr	r3, [pc, #768]	; (8002ab0 <IMU_Meas+0x520>)
 80027ae:	edd3 7a00 	vldr	s15, [r3]
 80027b2:	ee77 7a27 	vadd.f32	s15, s14, s15
 80027b6:	4bbd      	ldr	r3, [pc, #756]	; (8002aac <IMU_Meas+0x51c>)
 80027b8:	edc3 7a00 	vstr	s15, [r3]
		accel_x_g2 = (mean_acc_x/10 - accel_x_offset)*9.81;
 80027bc:	4bb1      	ldr	r3, [pc, #708]	; (8002a84 <IMU_Meas+0x4f4>)
 80027be:	edd3 7a00 	vldr	s15, [r3]
 80027c2:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 80027c6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80027ca:	4bba      	ldr	r3, [pc, #744]	; (8002ab4 <IMU_Meas+0x524>)
 80027cc:	edd3 7a00 	vldr	s15, [r3]
 80027d0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80027d4:	ee17 0a90 	vmov	r0, s15
 80027d8:	f7fd fe88 	bl	80004ec <__aeabi_f2d>
 80027dc:	a3a2      	add	r3, pc, #648	; (adr r3, 8002a68 <IMU_Meas+0x4d8>)
 80027de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80027e2:	f7fd fedb 	bl	800059c <__aeabi_dmul>
 80027e6:	4603      	mov	r3, r0
 80027e8:	460c      	mov	r4, r1
 80027ea:	4618      	mov	r0, r3
 80027ec:	4621      	mov	r1, r4
 80027ee:	f7fe f9cd 	bl	8000b8c <__aeabi_d2f>
 80027f2:	4602      	mov	r2, r0
 80027f4:	4bb0      	ldr	r3, [pc, #704]	; (8002ab8 <IMU_Meas+0x528>)
 80027f6:	601a      	str	r2, [r3, #0]
		accel_y_g2 = (mean_acc_y/10 - accel_y_offset)*9.81;
 80027f8:	4ba4      	ldr	r3, [pc, #656]	; (8002a8c <IMU_Meas+0x4fc>)
 80027fa:	edd3 7a00 	vldr	s15, [r3]
 80027fe:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8002802:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8002806:	4bad      	ldr	r3, [pc, #692]	; (8002abc <IMU_Meas+0x52c>)
 8002808:	edd3 7a00 	vldr	s15, [r3]
 800280c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002810:	ee17 0a90 	vmov	r0, s15
 8002814:	f7fd fe6a 	bl	80004ec <__aeabi_f2d>
 8002818:	a393      	add	r3, pc, #588	; (adr r3, 8002a68 <IMU_Meas+0x4d8>)
 800281a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800281e:	f7fd febd 	bl	800059c <__aeabi_dmul>
 8002822:	4603      	mov	r3, r0
 8002824:	460c      	mov	r4, r1
 8002826:	4618      	mov	r0, r3
 8002828:	4621      	mov	r1, r4
 800282a:	f7fe f9af 	bl	8000b8c <__aeabi_d2f>
 800282e:	4602      	mov	r2, r0
 8002830:	4ba3      	ldr	r3, [pc, #652]	; (8002ac0 <IMU_Meas+0x530>)
 8002832:	601a      	str	r2, [r3, #0]
		accel_z_g2 = (mean_acc_z/10 - accel_z_offset)*9.81;
 8002834:	4b97      	ldr	r3, [pc, #604]	; (8002a94 <IMU_Meas+0x504>)
 8002836:	edd3 7a00 	vldr	s15, [r3]
 800283a:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 800283e:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8002842:	4ba0      	ldr	r3, [pc, #640]	; (8002ac4 <IMU_Meas+0x534>)
 8002844:	edd3 7a00 	vldr	s15, [r3]
 8002848:	ee77 7a67 	vsub.f32	s15, s14, s15
 800284c:	ee17 0a90 	vmov	r0, s15
 8002850:	f7fd fe4c 	bl	80004ec <__aeabi_f2d>
 8002854:	a384      	add	r3, pc, #528	; (adr r3, 8002a68 <IMU_Meas+0x4d8>)
 8002856:	e9d3 2300 	ldrd	r2, r3, [r3]
 800285a:	f7fd fe9f 	bl	800059c <__aeabi_dmul>
 800285e:	4603      	mov	r3, r0
 8002860:	460c      	mov	r4, r1
 8002862:	4618      	mov	r0, r3
 8002864:	4621      	mov	r1, r4
 8002866:	f7fe f991 	bl	8000b8c <__aeabi_d2f>
 800286a:	4602      	mov	r2, r0
 800286c:	4b96      	ldr	r3, [pc, #600]	; (8002ac8 <IMU_Meas+0x538>)
 800286e:	601a      	str	r2, [r3, #0]
		gyro_x_rad2 = (mean_gyro_x/10 - gyro_x_offset);
 8002870:	4b8a      	ldr	r3, [pc, #552]	; (8002a9c <IMU_Meas+0x50c>)
 8002872:	edd3 7a00 	vldr	s15, [r3]
 8002876:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 800287a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800287e:	4b93      	ldr	r3, [pc, #588]	; (8002acc <IMU_Meas+0x53c>)
 8002880:	edd3 7a00 	vldr	s15, [r3]
 8002884:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002888:	4b91      	ldr	r3, [pc, #580]	; (8002ad0 <IMU_Meas+0x540>)
 800288a:	edc3 7a00 	vstr	s15, [r3]
		gyro_y_rad2 = (mean_gyro_y/10 - gyro_y_offset);
 800288e:	4b85      	ldr	r3, [pc, #532]	; (8002aa4 <IMU_Meas+0x514>)
 8002890:	edd3 7a00 	vldr	s15, [r3]
 8002894:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8002898:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 800289c:	4b8d      	ldr	r3, [pc, #564]	; (8002ad4 <IMU_Meas+0x544>)
 800289e:	edd3 7a00 	vldr	s15, [r3]
 80028a2:	ee77 7a67 	vsub.f32	s15, s14, s15
 80028a6:	4b8c      	ldr	r3, [pc, #560]	; (8002ad8 <IMU_Meas+0x548>)
 80028a8:	edc3 7a00 	vstr	s15, [r3]
		gyro_z_rad2 = (mean_gyro_z/10 - gyro_z_offset);
 80028ac:	4b7f      	ldr	r3, [pc, #508]	; (8002aac <IMU_Meas+0x51c>)
 80028ae:	edd3 7a00 	vldr	s15, [r3]
 80028b2:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 80028b6:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 80028ba:	4b88      	ldr	r3, [pc, #544]	; (8002adc <IMU_Meas+0x54c>)
 80028bc:	edd3 7a00 	vldr	s15, [r3]
 80028c0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80028c4:	4b86      	ldr	r3, [pc, #536]	; (8002ae0 <IMU_Meas+0x550>)
 80028c6:	edc3 7a00 	vstr	s15, [r3]
//		float gyro_conv_x = 1/sqrt( 1 + pow(1/tan(gyro_y_rad2),2)*pow(1/cos(gyro_y_rad2),2) );
	//	float gyro_conv_y = 1/sqrt( 1 + pow(1/tan(gyro_x_rad2),2)*pow(1/cos(gyro_x_rad2),2) );
		gyro_conv_x = sin(gyro_y_rad2)/sqrt( 1 + pow(tan(gyro_x_rad2),2)*pow(cos(gyro_y_rad2),2) );
 80028ca:	4b83      	ldr	r3, [pc, #524]	; (8002ad8 <IMU_Meas+0x548>)
 80028cc:	681b      	ldr	r3, [r3, #0]
 80028ce:	4618      	mov	r0, r3
 80028d0:	f7fd fe0c 	bl	80004ec <__aeabi_f2d>
 80028d4:	4603      	mov	r3, r0
 80028d6:	460c      	mov	r4, r1
 80028d8:	ec44 3b10 	vmov	d0, r3, r4
 80028dc:	f00f fd18 	bl	8012310 <sin>
 80028e0:	ec56 5b10 	vmov	r5, r6, d0
 80028e4:	4b7a      	ldr	r3, [pc, #488]	; (8002ad0 <IMU_Meas+0x540>)
 80028e6:	681b      	ldr	r3, [r3, #0]
 80028e8:	4618      	mov	r0, r3
 80028ea:	f7fd fdff 	bl	80004ec <__aeabi_f2d>
 80028ee:	4603      	mov	r3, r0
 80028f0:	460c      	mov	r4, r1
 80028f2:	ec44 3b10 	vmov	d0, r3, r4
 80028f6:	f00f fd53 	bl	80123a0 <tan>
 80028fa:	eeb0 7a40 	vmov.f32	s14, s0
 80028fe:	eef0 7a60 	vmov.f32	s15, s1
 8002902:	ed9f 1b5b 	vldr	d1, [pc, #364]	; 8002a70 <IMU_Meas+0x4e0>
 8002906:	eeb0 0a47 	vmov.f32	s0, s14
 800290a:	eef0 0a67 	vmov.f32	s1, s15
 800290e:	f00f fe51 	bl	80125b4 <pow>
 8002912:	ec59 8b10 	vmov	r8, r9, d0
 8002916:	4b70      	ldr	r3, [pc, #448]	; (8002ad8 <IMU_Meas+0x548>)
 8002918:	681b      	ldr	r3, [r3, #0]
 800291a:	4618      	mov	r0, r3
 800291c:	f7fd fde6 	bl	80004ec <__aeabi_f2d>
 8002920:	4603      	mov	r3, r0
 8002922:	460c      	mov	r4, r1
 8002924:	ec44 3b10 	vmov	d0, r3, r4
 8002928:	f00f fcae 	bl	8012288 <cos>
 800292c:	eeb0 7a40 	vmov.f32	s14, s0
 8002930:	eef0 7a60 	vmov.f32	s15, s1
 8002934:	ed9f 1b4e 	vldr	d1, [pc, #312]	; 8002a70 <IMU_Meas+0x4e0>
 8002938:	eeb0 0a47 	vmov.f32	s0, s14
 800293c:	eef0 0a67 	vmov.f32	s1, s15
 8002940:	f00f fe38 	bl	80125b4 <pow>
 8002944:	ec54 3b10 	vmov	r3, r4, d0
 8002948:	461a      	mov	r2, r3
 800294a:	4623      	mov	r3, r4
 800294c:	4640      	mov	r0, r8
 800294e:	4649      	mov	r1, r9
 8002950:	f7fd fe24 	bl	800059c <__aeabi_dmul>
 8002954:	4603      	mov	r3, r0
 8002956:	460c      	mov	r4, r1
 8002958:	4618      	mov	r0, r3
 800295a:	4621      	mov	r1, r4
 800295c:	f04f 0200 	mov.w	r2, #0
 8002960:	4b60      	ldr	r3, [pc, #384]	; (8002ae4 <IMU_Meas+0x554>)
 8002962:	f7fd fc65 	bl	8000230 <__adddf3>
 8002966:	4603      	mov	r3, r0
 8002968:	460c      	mov	r4, r1
 800296a:	ec44 3b17 	vmov	d7, r3, r4
 800296e:	eeb0 0a47 	vmov.f32	s0, s14
 8002972:	eef0 0a67 	vmov.f32	s1, s15
 8002976:	f00f ff8d 	bl	8012894 <sqrt>
 800297a:	ec54 3b10 	vmov	r3, r4, d0
 800297e:	461a      	mov	r2, r3
 8002980:	4623      	mov	r3, r4
 8002982:	4628      	mov	r0, r5
 8002984:	4631      	mov	r1, r6
 8002986:	f7fd ff33 	bl	80007f0 <__aeabi_ddiv>
 800298a:	4603      	mov	r3, r0
 800298c:	460c      	mov	r4, r1
 800298e:	4618      	mov	r0, r3
 8002990:	4621      	mov	r1, r4
 8002992:	f7fe f8fb 	bl	8000b8c <__aeabi_d2f>
 8002996:	4602      	mov	r2, r0
 8002998:	4b53      	ldr	r3, [pc, #332]	; (8002ae8 <IMU_Meas+0x558>)
 800299a:	601a      	str	r2, [r3, #0]
		gyro_conv_y = sin(gyro_x_rad2)/sqrt( 1 + pow(tan(gyro_y_rad2),2)*pow(cos(gyro_x_rad2),2) );
 800299c:	4b4c      	ldr	r3, [pc, #304]	; (8002ad0 <IMU_Meas+0x540>)
 800299e:	681b      	ldr	r3, [r3, #0]
 80029a0:	4618      	mov	r0, r3
 80029a2:	f7fd fda3 	bl	80004ec <__aeabi_f2d>
 80029a6:	4603      	mov	r3, r0
 80029a8:	460c      	mov	r4, r1
 80029aa:	ec44 3b10 	vmov	d0, r3, r4
 80029ae:	f00f fcaf 	bl	8012310 <sin>
 80029b2:	ec56 5b10 	vmov	r5, r6, d0
 80029b6:	4b48      	ldr	r3, [pc, #288]	; (8002ad8 <IMU_Meas+0x548>)
 80029b8:	681b      	ldr	r3, [r3, #0]
 80029ba:	4618      	mov	r0, r3
 80029bc:	f7fd fd96 	bl	80004ec <__aeabi_f2d>
 80029c0:	4603      	mov	r3, r0
 80029c2:	460c      	mov	r4, r1
 80029c4:	ec44 3b10 	vmov	d0, r3, r4
 80029c8:	f00f fcea 	bl	80123a0 <tan>
 80029cc:	eeb0 7a40 	vmov.f32	s14, s0
 80029d0:	eef0 7a60 	vmov.f32	s15, s1
 80029d4:	ed9f 1b26 	vldr	d1, [pc, #152]	; 8002a70 <IMU_Meas+0x4e0>
 80029d8:	eeb0 0a47 	vmov.f32	s0, s14
 80029dc:	eef0 0a67 	vmov.f32	s1, s15
 80029e0:	f00f fde8 	bl	80125b4 <pow>
 80029e4:	ec59 8b10 	vmov	r8, r9, d0
 80029e8:	4b39      	ldr	r3, [pc, #228]	; (8002ad0 <IMU_Meas+0x540>)
 80029ea:	681b      	ldr	r3, [r3, #0]
 80029ec:	4618      	mov	r0, r3
 80029ee:	f7fd fd7d 	bl	80004ec <__aeabi_f2d>
 80029f2:	4603      	mov	r3, r0
 80029f4:	460c      	mov	r4, r1
 80029f6:	ec44 3b10 	vmov	d0, r3, r4
 80029fa:	f00f fc45 	bl	8012288 <cos>
 80029fe:	eeb0 7a40 	vmov.f32	s14, s0
 8002a02:	eef0 7a60 	vmov.f32	s15, s1
 8002a06:	ed9f 1b1a 	vldr	d1, [pc, #104]	; 8002a70 <IMU_Meas+0x4e0>
 8002a0a:	eeb0 0a47 	vmov.f32	s0, s14
 8002a0e:	eef0 0a67 	vmov.f32	s1, s15
 8002a12:	f00f fdcf 	bl	80125b4 <pow>
 8002a16:	ec54 3b10 	vmov	r3, r4, d0
 8002a1a:	461a      	mov	r2, r3
 8002a1c:	4623      	mov	r3, r4
 8002a1e:	4640      	mov	r0, r8
 8002a20:	4649      	mov	r1, r9
 8002a22:	f7fd fdbb 	bl	800059c <__aeabi_dmul>
 8002a26:	4603      	mov	r3, r0
 8002a28:	460c      	mov	r4, r1
 8002a2a:	4618      	mov	r0, r3
 8002a2c:	4621      	mov	r1, r4
 8002a2e:	f04f 0200 	mov.w	r2, #0
 8002a32:	4b2c      	ldr	r3, [pc, #176]	; (8002ae4 <IMU_Meas+0x554>)
 8002a34:	f7fd fbfc 	bl	8000230 <__adddf3>
 8002a38:	4603      	mov	r3, r0
 8002a3a:	460c      	mov	r4, r1
 8002a3c:	ec44 3b17 	vmov	d7, r3, r4
 8002a40:	eeb0 0a47 	vmov.f32	s0, s14
 8002a44:	eef0 0a67 	vmov.f32	s1, s15
 8002a48:	f00f ff24 	bl	8012894 <sqrt>
 8002a4c:	ec54 3b10 	vmov	r3, r4, d0
 8002a50:	461a      	mov	r2, r3
 8002a52:	4623      	mov	r3, r4
 8002a54:	4628      	mov	r0, r5
 8002a56:	4631      	mov	r1, r6
 8002a58:	f7fd feca 	bl	80007f0 <__aeabi_ddiv>
 8002a5c:	4603      	mov	r3, r0
 8002a5e:	460c      	mov	r4, r1
 8002a60:	4618      	mov	r0, r3
 8002a62:	4621      	mov	r1, r4
 8002a64:	e042      	b.n	8002aec <IMU_Meas+0x55c>
 8002a66:	bf00      	nop
 8002a68:	51eb851f 	.word	0x51eb851f
 8002a6c:	40239eb8 	.word	0x40239eb8
 8002a70:	00000000 	.word	0x00000000
 8002a74:	40000000 	.word	0x40000000
 8002a78:	20007a14 	.word	0x20007a14
 8002a7c:	2000acc3 	.word	0x2000acc3
 8002a80:	3ca3d70a 	.word	0x3ca3d70a
 8002a84:	20009c30 	.word	0x20009c30
 8002a88:	2000ad18 	.word	0x2000ad18
 8002a8c:	20009a10 	.word	0x20009a10
 8002a90:	2000ad60 	.word	0x2000ad60
 8002a94:	2000ad5c 	.word	0x2000ad5c
 8002a98:	20007a84 	.word	0x20007a84
 8002a9c:	20007a00 	.word	0x20007a00
 8002aa0:	2000abf0 	.word	0x2000abf0
 8002aa4:	20007a08 	.word	0x20007a08
 8002aa8:	2000abe4 	.word	0x2000abe4
 8002aac:	20009a00 	.word	0x20009a00
 8002ab0:	20007a04 	.word	0x20007a04
 8002ab4:	20007a10 	.word	0x20007a10
 8002ab8:	20007a0c 	.word	0x20007a0c
 8002abc:	20007a38 	.word	0x20007a38
 8002ac0:	20007a20 	.word	0x20007a20
 8002ac4:	20009c2c 	.word	0x20009c2c
 8002ac8:	200099fc 	.word	0x200099fc
 8002acc:	20009a30 	.word	0x20009a30
 8002ad0:	20008a38 	.word	0x20008a38
 8002ad4:	2000acbc 	.word	0x2000acbc
 8002ad8:	2000ad4c 	.word	0x2000ad4c
 8002adc:	2000ad04 	.word	0x2000ad04
 8002ae0:	2000ac00 	.word	0x2000ac00
 8002ae4:	3ff00000 	.word	0x3ff00000
 8002ae8:	2000ac4c 	.word	0x2000ac4c
 8002aec:	f7fe f84e 	bl	8000b8c <__aeabi_d2f>
 8002af0:	4602      	mov	r2, r0
 8002af2:	4bd5      	ldr	r3, [pc, #852]	; (8002e48 <IMU_Meas+0x8b8>)
 8002af4:	601a      	str	r2, [r3, #0]
		gyro_conv_z = gyro_z_rad2/fabs(gyro_z_rad2)*sqrt(1 - pow(gyro_conv_x,2) - pow(gyro_conv_y,2) );
 8002af6:	4bd5      	ldr	r3, [pc, #852]	; (8002e4c <IMU_Meas+0x8bc>)
 8002af8:	681b      	ldr	r3, [r3, #0]
 8002afa:	4618      	mov	r0, r3
 8002afc:	f7fd fcf6 	bl	80004ec <__aeabi_f2d>
 8002b00:	4604      	mov	r4, r0
 8002b02:	460d      	mov	r5, r1
 8002b04:	4bd1      	ldr	r3, [pc, #836]	; (8002e4c <IMU_Meas+0x8bc>)
 8002b06:	edd3 7a00 	vldr	s15, [r3]
 8002b0a:	eef0 7ae7 	vabs.f32	s15, s15
 8002b0e:	ee17 0a90 	vmov	r0, s15
 8002b12:	f7fd fceb 	bl	80004ec <__aeabi_f2d>
 8002b16:	4602      	mov	r2, r0
 8002b18:	460b      	mov	r3, r1
 8002b1a:	4620      	mov	r0, r4
 8002b1c:	4629      	mov	r1, r5
 8002b1e:	f7fd fe67 	bl	80007f0 <__aeabi_ddiv>
 8002b22:	4603      	mov	r3, r0
 8002b24:	460c      	mov	r4, r1
 8002b26:	4625      	mov	r5, r4
 8002b28:	461c      	mov	r4, r3
 8002b2a:	4bc9      	ldr	r3, [pc, #804]	; (8002e50 <IMU_Meas+0x8c0>)
 8002b2c:	681b      	ldr	r3, [r3, #0]
 8002b2e:	4618      	mov	r0, r3
 8002b30:	f7fd fcdc 	bl	80004ec <__aeabi_f2d>
 8002b34:	4602      	mov	r2, r0
 8002b36:	460b      	mov	r3, r1
 8002b38:	ed9f 1bbd 	vldr	d1, [pc, #756]	; 8002e30 <IMU_Meas+0x8a0>
 8002b3c:	ec43 2b10 	vmov	d0, r2, r3
 8002b40:	f00f fd38 	bl	80125b4 <pow>
 8002b44:	ec53 2b10 	vmov	r2, r3, d0
 8002b48:	f04f 0000 	mov.w	r0, #0
 8002b4c:	49c1      	ldr	r1, [pc, #772]	; (8002e54 <IMU_Meas+0x8c4>)
 8002b4e:	f7fd fb6d 	bl	800022c <__aeabi_dsub>
 8002b52:	4602      	mov	r2, r0
 8002b54:	460b      	mov	r3, r1
 8002b56:	4690      	mov	r8, r2
 8002b58:	4699      	mov	r9, r3
 8002b5a:	4bbb      	ldr	r3, [pc, #748]	; (8002e48 <IMU_Meas+0x8b8>)
 8002b5c:	681b      	ldr	r3, [r3, #0]
 8002b5e:	4618      	mov	r0, r3
 8002b60:	f7fd fcc4 	bl	80004ec <__aeabi_f2d>
 8002b64:	4602      	mov	r2, r0
 8002b66:	460b      	mov	r3, r1
 8002b68:	ed9f 1bb1 	vldr	d1, [pc, #708]	; 8002e30 <IMU_Meas+0x8a0>
 8002b6c:	ec43 2b10 	vmov	d0, r2, r3
 8002b70:	f00f fd20 	bl	80125b4 <pow>
 8002b74:	ec53 2b10 	vmov	r2, r3, d0
 8002b78:	4640      	mov	r0, r8
 8002b7a:	4649      	mov	r1, r9
 8002b7c:	f7fd fb56 	bl	800022c <__aeabi_dsub>
 8002b80:	4602      	mov	r2, r0
 8002b82:	460b      	mov	r3, r1
 8002b84:	ec43 2b17 	vmov	d7, r2, r3
 8002b88:	eeb0 0a47 	vmov.f32	s0, s14
 8002b8c:	eef0 0a67 	vmov.f32	s1, s15
 8002b90:	f00f fe80 	bl	8012894 <sqrt>
 8002b94:	ec53 2b10 	vmov	r2, r3, d0
 8002b98:	4620      	mov	r0, r4
 8002b9a:	4629      	mov	r1, r5
 8002b9c:	f7fd fcfe 	bl	800059c <__aeabi_dmul>
 8002ba0:	4603      	mov	r3, r0
 8002ba2:	460c      	mov	r4, r1
 8002ba4:	4618      	mov	r0, r3
 8002ba6:	4621      	mov	r1, r4
 8002ba8:	f7fd fff0 	bl	8000b8c <__aeabi_d2f>
 8002bac:	4602      	mov	r2, r0
 8002bae:	4baa      	ldr	r3, [pc, #680]	; (8002e58 <IMU_Meas+0x8c8>)
 8002bb0:	601a      	str	r2, [r3, #0]

		gyro_x_rad2 = gyro_x_rad2 *180/3.14159;
 8002bb2:	4baa      	ldr	r3, [pc, #680]	; (8002e5c <IMU_Meas+0x8cc>)
 8002bb4:	edd3 7a00 	vldr	s15, [r3]
 8002bb8:	ed9f 7aa9 	vldr	s14, [pc, #676]	; 8002e60 <IMU_Meas+0x8d0>
 8002bbc:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002bc0:	ee17 0a90 	vmov	r0, s15
 8002bc4:	f7fd fc92 	bl	80004ec <__aeabi_f2d>
 8002bc8:	a39b      	add	r3, pc, #620	; (adr r3, 8002e38 <IMU_Meas+0x8a8>)
 8002bca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002bce:	f7fd fe0f 	bl	80007f0 <__aeabi_ddiv>
 8002bd2:	4603      	mov	r3, r0
 8002bd4:	460c      	mov	r4, r1
 8002bd6:	4618      	mov	r0, r3
 8002bd8:	4621      	mov	r1, r4
 8002bda:	f7fd ffd7 	bl	8000b8c <__aeabi_d2f>
 8002bde:	4602      	mov	r2, r0
 8002be0:	4b9e      	ldr	r3, [pc, #632]	; (8002e5c <IMU_Meas+0x8cc>)
 8002be2:	601a      	str	r2, [r3, #0]
		gyro_y_rad2 = gyro_y_rad2 *180/3.14159;
 8002be4:	4b9f      	ldr	r3, [pc, #636]	; (8002e64 <IMU_Meas+0x8d4>)
 8002be6:	edd3 7a00 	vldr	s15, [r3]
 8002bea:	ed9f 7a9d 	vldr	s14, [pc, #628]	; 8002e60 <IMU_Meas+0x8d0>
 8002bee:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002bf2:	ee17 0a90 	vmov	r0, s15
 8002bf6:	f7fd fc79 	bl	80004ec <__aeabi_f2d>
 8002bfa:	a38f      	add	r3, pc, #572	; (adr r3, 8002e38 <IMU_Meas+0x8a8>)
 8002bfc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c00:	f7fd fdf6 	bl	80007f0 <__aeabi_ddiv>
 8002c04:	4603      	mov	r3, r0
 8002c06:	460c      	mov	r4, r1
 8002c08:	4618      	mov	r0, r3
 8002c0a:	4621      	mov	r1, r4
 8002c0c:	f7fd ffbe 	bl	8000b8c <__aeabi_d2f>
 8002c10:	4602      	mov	r2, r0
 8002c12:	4b94      	ldr	r3, [pc, #592]	; (8002e64 <IMU_Meas+0x8d4>)
 8002c14:	601a      	str	r2, [r3, #0]
		gyro_z_rad2 = gyro_z_rad2 *180/3.14159;
 8002c16:	4b8d      	ldr	r3, [pc, #564]	; (8002e4c <IMU_Meas+0x8bc>)
 8002c18:	edd3 7a00 	vldr	s15, [r3]
 8002c1c:	ed9f 7a90 	vldr	s14, [pc, #576]	; 8002e60 <IMU_Meas+0x8d0>
 8002c20:	ee67 7a87 	vmul.f32	s15, s15, s14
 8002c24:	ee17 0a90 	vmov	r0, s15
 8002c28:	f7fd fc60 	bl	80004ec <__aeabi_f2d>
 8002c2c:	a382      	add	r3, pc, #520	; (adr r3, 8002e38 <IMU_Meas+0x8a8>)
 8002c2e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c32:	f7fd fddd 	bl	80007f0 <__aeabi_ddiv>
 8002c36:	4603      	mov	r3, r0
 8002c38:	460c      	mov	r4, r1
 8002c3a:	4618      	mov	r0, r3
 8002c3c:	4621      	mov	r1, r4
 8002c3e:	f7fd ffa5 	bl	8000b8c <__aeabi_d2f>
 8002c42:	4602      	mov	r2, r0
 8002c44:	4b81      	ldr	r3, [pc, #516]	; (8002e4c <IMU_Meas+0x8bc>)
 8002c46:	601a      	str	r2, [r3, #0]
		mean_acc_x = 0;
 8002c48:	4b87      	ldr	r3, [pc, #540]	; (8002e68 <IMU_Meas+0x8d8>)
 8002c4a:	f04f 0200 	mov.w	r2, #0
 8002c4e:	601a      	str	r2, [r3, #0]
		mean_acc_y = 0;
 8002c50:	4b86      	ldr	r3, [pc, #536]	; (8002e6c <IMU_Meas+0x8dc>)
 8002c52:	f04f 0200 	mov.w	r2, #0
 8002c56:	601a      	str	r2, [r3, #0]
		mean_acc_z = 0;
 8002c58:	4b85      	ldr	r3, [pc, #532]	; (8002e70 <IMU_Meas+0x8e0>)
 8002c5a:	f04f 0200 	mov.w	r2, #0
 8002c5e:	601a      	str	r2, [r3, #0]
		mean_gyro_x = 0;
 8002c60:	4b84      	ldr	r3, [pc, #528]	; (8002e74 <IMU_Meas+0x8e4>)
 8002c62:	f04f 0200 	mov.w	r2, #0
 8002c66:	601a      	str	r2, [r3, #0]
		mean_gyro_y = 0;
 8002c68:	4b83      	ldr	r3, [pc, #524]	; (8002e78 <IMU_Meas+0x8e8>)
 8002c6a:	f04f 0200 	mov.w	r2, #0
 8002c6e:	601a      	str	r2, [r3, #0]
		mean_gyro_z = 0;
 8002c70:	4b82      	ldr	r3, [pc, #520]	; (8002e7c <IMU_Meas+0x8ec>)
 8002c72:	f04f 0200 	mov.w	r2, #0
 8002c76:	601a      	str	r2, [r3, #0]

		accel_x_g2 = (accel_x_g2 + 9.81 * gyro_conv_x * weightgyro) / (1 + weightgyro);
 8002c78:	4b81      	ldr	r3, [pc, #516]	; (8002e80 <IMU_Meas+0x8f0>)
 8002c7a:	681b      	ldr	r3, [r3, #0]
 8002c7c:	4618      	mov	r0, r3
 8002c7e:	f7fd fc35 	bl	80004ec <__aeabi_f2d>
 8002c82:	4604      	mov	r4, r0
 8002c84:	460d      	mov	r5, r1
 8002c86:	4b72      	ldr	r3, [pc, #456]	; (8002e50 <IMU_Meas+0x8c0>)
 8002c88:	681b      	ldr	r3, [r3, #0]
 8002c8a:	4618      	mov	r0, r3
 8002c8c:	f7fd fc2e 	bl	80004ec <__aeabi_f2d>
 8002c90:	a36b      	add	r3, pc, #428	; (adr r3, 8002e40 <IMU_Meas+0x8b0>)
 8002c92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002c96:	f7fd fc81 	bl	800059c <__aeabi_dmul>
 8002c9a:	4602      	mov	r2, r0
 8002c9c:	460b      	mov	r3, r1
 8002c9e:	4690      	mov	r8, r2
 8002ca0:	4699      	mov	r9, r3
 8002ca2:	68f8      	ldr	r0, [r7, #12]
 8002ca4:	f7fd fc22 	bl	80004ec <__aeabi_f2d>
 8002ca8:	4602      	mov	r2, r0
 8002caa:	460b      	mov	r3, r1
 8002cac:	4640      	mov	r0, r8
 8002cae:	4649      	mov	r1, r9
 8002cb0:	f7fd fc74 	bl	800059c <__aeabi_dmul>
 8002cb4:	4602      	mov	r2, r0
 8002cb6:	460b      	mov	r3, r1
 8002cb8:	4620      	mov	r0, r4
 8002cba:	4629      	mov	r1, r5
 8002cbc:	f7fd fab8 	bl	8000230 <__adddf3>
 8002cc0:	4603      	mov	r3, r0
 8002cc2:	460c      	mov	r4, r1
 8002cc4:	4625      	mov	r5, r4
 8002cc6:	461c      	mov	r4, r3
 8002cc8:	edd7 7a03 	vldr	s15, [r7, #12]
 8002ccc:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8002cd0:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002cd4:	ee17 0a90 	vmov	r0, s15
 8002cd8:	f7fd fc08 	bl	80004ec <__aeabi_f2d>
 8002cdc:	4602      	mov	r2, r0
 8002cde:	460b      	mov	r3, r1
 8002ce0:	4620      	mov	r0, r4
 8002ce2:	4629      	mov	r1, r5
 8002ce4:	f7fd fd84 	bl	80007f0 <__aeabi_ddiv>
 8002ce8:	4603      	mov	r3, r0
 8002cea:	460c      	mov	r4, r1
 8002cec:	4618      	mov	r0, r3
 8002cee:	4621      	mov	r1, r4
 8002cf0:	f7fd ff4c 	bl	8000b8c <__aeabi_d2f>
 8002cf4:	4602      	mov	r2, r0
 8002cf6:	4b62      	ldr	r3, [pc, #392]	; (8002e80 <IMU_Meas+0x8f0>)
 8002cf8:	601a      	str	r2, [r3, #0]
		accel_y_g2 = (accel_y_g2 + 9.81 * gyro_conv_y * weightgyro) / (1 + weightgyro);
 8002cfa:	4b62      	ldr	r3, [pc, #392]	; (8002e84 <IMU_Meas+0x8f4>)
 8002cfc:	681b      	ldr	r3, [r3, #0]
 8002cfe:	4618      	mov	r0, r3
 8002d00:	f7fd fbf4 	bl	80004ec <__aeabi_f2d>
 8002d04:	4604      	mov	r4, r0
 8002d06:	460d      	mov	r5, r1
 8002d08:	4b4f      	ldr	r3, [pc, #316]	; (8002e48 <IMU_Meas+0x8b8>)
 8002d0a:	681b      	ldr	r3, [r3, #0]
 8002d0c:	4618      	mov	r0, r3
 8002d0e:	f7fd fbed 	bl	80004ec <__aeabi_f2d>
 8002d12:	a34b      	add	r3, pc, #300	; (adr r3, 8002e40 <IMU_Meas+0x8b0>)
 8002d14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d18:	f7fd fc40 	bl	800059c <__aeabi_dmul>
 8002d1c:	4602      	mov	r2, r0
 8002d1e:	460b      	mov	r3, r1
 8002d20:	4690      	mov	r8, r2
 8002d22:	4699      	mov	r9, r3
 8002d24:	68f8      	ldr	r0, [r7, #12]
 8002d26:	f7fd fbe1 	bl	80004ec <__aeabi_f2d>
 8002d2a:	4602      	mov	r2, r0
 8002d2c:	460b      	mov	r3, r1
 8002d2e:	4640      	mov	r0, r8
 8002d30:	4649      	mov	r1, r9
 8002d32:	f7fd fc33 	bl	800059c <__aeabi_dmul>
 8002d36:	4602      	mov	r2, r0
 8002d38:	460b      	mov	r3, r1
 8002d3a:	4620      	mov	r0, r4
 8002d3c:	4629      	mov	r1, r5
 8002d3e:	f7fd fa77 	bl	8000230 <__adddf3>
 8002d42:	4603      	mov	r3, r0
 8002d44:	460c      	mov	r4, r1
 8002d46:	4625      	mov	r5, r4
 8002d48:	461c      	mov	r4, r3
 8002d4a:	edd7 7a03 	vldr	s15, [r7, #12]
 8002d4e:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8002d52:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002d56:	ee17 0a90 	vmov	r0, s15
 8002d5a:	f7fd fbc7 	bl	80004ec <__aeabi_f2d>
 8002d5e:	4602      	mov	r2, r0
 8002d60:	460b      	mov	r3, r1
 8002d62:	4620      	mov	r0, r4
 8002d64:	4629      	mov	r1, r5
 8002d66:	f7fd fd43 	bl	80007f0 <__aeabi_ddiv>
 8002d6a:	4603      	mov	r3, r0
 8002d6c:	460c      	mov	r4, r1
 8002d6e:	4618      	mov	r0, r3
 8002d70:	4621      	mov	r1, r4
 8002d72:	f7fd ff0b 	bl	8000b8c <__aeabi_d2f>
 8002d76:	4602      	mov	r2, r0
 8002d78:	4b42      	ldr	r3, [pc, #264]	; (8002e84 <IMU_Meas+0x8f4>)
 8002d7a:	601a      	str	r2, [r3, #0]
		accel_z_g2 = (accel_z_g2 + 9.81 * gyro_conv_z * weightgyro) / (1 + weightgyro);
 8002d7c:	4b42      	ldr	r3, [pc, #264]	; (8002e88 <IMU_Meas+0x8f8>)
 8002d7e:	681b      	ldr	r3, [r3, #0]
 8002d80:	4618      	mov	r0, r3
 8002d82:	f7fd fbb3 	bl	80004ec <__aeabi_f2d>
 8002d86:	4604      	mov	r4, r0
 8002d88:	460d      	mov	r5, r1
 8002d8a:	4b33      	ldr	r3, [pc, #204]	; (8002e58 <IMU_Meas+0x8c8>)
 8002d8c:	681b      	ldr	r3, [r3, #0]
 8002d8e:	4618      	mov	r0, r3
 8002d90:	f7fd fbac 	bl	80004ec <__aeabi_f2d>
 8002d94:	a32a      	add	r3, pc, #168	; (adr r3, 8002e40 <IMU_Meas+0x8b0>)
 8002d96:	e9d3 2300 	ldrd	r2, r3, [r3]
 8002d9a:	f7fd fbff 	bl	800059c <__aeabi_dmul>
 8002d9e:	4602      	mov	r2, r0
 8002da0:	460b      	mov	r3, r1
 8002da2:	4690      	mov	r8, r2
 8002da4:	4699      	mov	r9, r3
 8002da6:	68f8      	ldr	r0, [r7, #12]
 8002da8:	f7fd fba0 	bl	80004ec <__aeabi_f2d>
 8002dac:	4602      	mov	r2, r0
 8002dae:	460b      	mov	r3, r1
 8002db0:	4640      	mov	r0, r8
 8002db2:	4649      	mov	r1, r9
 8002db4:	f7fd fbf2 	bl	800059c <__aeabi_dmul>
 8002db8:	4602      	mov	r2, r0
 8002dba:	460b      	mov	r3, r1
 8002dbc:	4620      	mov	r0, r4
 8002dbe:	4629      	mov	r1, r5
 8002dc0:	f7fd fa36 	bl	8000230 <__adddf3>
 8002dc4:	4603      	mov	r3, r0
 8002dc6:	460c      	mov	r4, r1
 8002dc8:	4625      	mov	r5, r4
 8002dca:	461c      	mov	r4, r3
 8002dcc:	edd7 7a03 	vldr	s15, [r7, #12]
 8002dd0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8002dd4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8002dd8:	ee17 0a90 	vmov	r0, s15
 8002ddc:	f7fd fb86 	bl	80004ec <__aeabi_f2d>
 8002de0:	4602      	mov	r2, r0
 8002de2:	460b      	mov	r3, r1
 8002de4:	4620      	mov	r0, r4
 8002de6:	4629      	mov	r1, r5
 8002de8:	f7fd fd02 	bl	80007f0 <__aeabi_ddiv>
 8002dec:	4603      	mov	r3, r0
 8002dee:	460c      	mov	r4, r1
 8002df0:	4618      	mov	r0, r3
 8002df2:	4621      	mov	r1, r4
 8002df4:	f7fd feca 	bl	8000b8c <__aeabi_d2f>
 8002df8:	4602      	mov	r2, r0
 8002dfa:	4b23      	ldr	r3, [pc, #140]	; (8002e88 <IMU_Meas+0x8f8>)
 8002dfc:	601a      	str	r2, [r3, #0]

		deltatime_imu = (HAL_GetTick() - start_imu)/100;
 8002dfe:	f005 fafb 	bl	80083f8 <HAL_GetTick>
 8002e02:	ee07 0a90 	vmov	s15, r0
 8002e06:	eeb8 7a67 	vcvt.f32.u32	s14, s15
 8002e0a:	4b20      	ldr	r3, [pc, #128]	; (8002e8c <IMU_Meas+0x8fc>)
 8002e0c:	edd3 7a00 	vldr	s15, [r3]
 8002e10:	ee37 7a67 	vsub.f32	s14, s14, s15
 8002e14:	eddf 6a1e 	vldr	s13, [pc, #120]	; 8002e90 <IMU_Meas+0x900>
 8002e18:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8002e1c:	4b1d      	ldr	r3, [pc, #116]	; (8002e94 <IMU_Meas+0x904>)
 8002e1e:	edc3 7a00 	vstr	s15, [r3]


		distx_rec = fabs(accel_x_g2*deltatime_imu); // 0.04
 8002e22:	4b17      	ldr	r3, [pc, #92]	; (8002e80 <IMU_Meas+0x8f0>)
 8002e24:	ed93 7a00 	vldr	s14, [r3]
 8002e28:	4b1a      	ldr	r3, [pc, #104]	; (8002e94 <IMU_Meas+0x904>)
 8002e2a:	edd3 7a00 	vldr	s15, [r3]
 8002e2e:	e033      	b.n	8002e98 <IMU_Meas+0x908>
 8002e30:	00000000 	.word	0x00000000
 8002e34:	40000000 	.word	0x40000000
 8002e38:	f01b866e 	.word	0xf01b866e
 8002e3c:	400921f9 	.word	0x400921f9
 8002e40:	51eb851f 	.word	0x51eb851f
 8002e44:	40239eb8 	.word	0x40239eb8
 8002e48:	20008a3c 	.word	0x20008a3c
 8002e4c:	2000ac00 	.word	0x2000ac00
 8002e50:	2000ac4c 	.word	0x2000ac4c
 8002e54:	3ff00000 	.word	0x3ff00000
 8002e58:	20009a40 	.word	0x20009a40
 8002e5c:	20008a38 	.word	0x20008a38
 8002e60:	43340000 	.word	0x43340000
 8002e64:	2000ad4c 	.word	0x2000ad4c
 8002e68:	20009c30 	.word	0x20009c30
 8002e6c:	20009a10 	.word	0x20009a10
 8002e70:	2000ad5c 	.word	0x2000ad5c
 8002e74:	20007a00 	.word	0x20007a00
 8002e78:	20007a08 	.word	0x20007a08
 8002e7c:	20009a00 	.word	0x20009a00
 8002e80:	20007a0c 	.word	0x20007a0c
 8002e84:	20007a20 	.word	0x20007a20
 8002e88:	200099fc 	.word	0x200099fc
 8002e8c:	20008a54 	.word	0x20008a54
 8002e90:	42c80000 	.word	0x42c80000
 8002e94:	20009a44 	.word	0x20009a44
 8002e98:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002e9c:	eef0 7ae7 	vabs.f32	s15, s15
 8002ea0:	4b42      	ldr	r3, [pc, #264]	; (8002fac <IMU_Meas+0xa1c>)
 8002ea2:	edc3 7a00 	vstr	s15, [r3]
		anglez_rec = gyro_z_rad2 * deltatime_imu;
 8002ea6:	4b42      	ldr	r3, [pc, #264]	; (8002fb0 <IMU_Meas+0xa20>)
 8002ea8:	ed93 7a00 	vldr	s14, [r3]
 8002eac:	4b41      	ldr	r3, [pc, #260]	; (8002fb4 <IMU_Meas+0xa24>)
 8002eae:	edd3 7a00 	vldr	s15, [r3]
 8002eb2:	ee67 7a27 	vmul.f32	s15, s14, s15
 8002eb6:	4b40      	ldr	r3, [pc, #256]	; (8002fb8 <IMU_Meas+0xa28>)
 8002eb8:	edc3 7a00 	vstr	s15, [r3]

			if (moving){
 8002ebc:	4b3f      	ldr	r3, [pc, #252]	; (8002fbc <IMU_Meas+0xa2c>)
 8002ebe:	781b      	ldrb	r3, [r3, #0]
 8002ec0:	2b00      	cmp	r3, #0
 8002ec2:	d052      	beq.n	8002f6a <IMU_Meas+0x9da>
				anglezactual += anglez_rec;
 8002ec4:	4b3e      	ldr	r3, [pc, #248]	; (8002fc0 <IMU_Meas+0xa30>)
 8002ec6:	ed93 7a00 	vldr	s14, [r3]
 8002eca:	4b3b      	ldr	r3, [pc, #236]	; (8002fb8 <IMU_Meas+0xa28>)
 8002ecc:	edd3 7a00 	vldr	s15, [r3]
 8002ed0:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002ed4:	4b3a      	ldr	r3, [pc, #232]	; (8002fc0 <IMU_Meas+0xa30>)
 8002ed6:	edc3 7a00 	vstr	s15, [r3]

				if(anglez < -IMU_angle_acc || anglez > IMU_angle_acc){
 8002eda:	4b3a      	ldr	r3, [pc, #232]	; (8002fc4 <IMU_Meas+0xa34>)
 8002edc:	edd3 7a00 	vldr	s15, [r3]
 8002ee0:	eeb9 7a04 	vmov.f32	s14, #148	; 0xc0a00000 -5.0
 8002ee4:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002ee8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002eec:	d409      	bmi.n	8002f02 <IMU_Meas+0x972>
 8002eee:	4b35      	ldr	r3, [pc, #212]	; (8002fc4 <IMU_Meas+0xa34>)
 8002ef0:	edd3 7a00 	vldr	s15, [r3]
 8002ef4:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 8002ef8:	eef4 7ac7 	vcmpe.f32	s15, s14
 8002efc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8002f00:	dd1a      	ble.n	8002f38 <IMU_Meas+0x9a8>
					anglez -= anglez_rec;
 8002f02:	4b30      	ldr	r3, [pc, #192]	; (8002fc4 <IMU_Meas+0xa34>)
 8002f04:	ed93 7a00 	vldr	s14, [r3]
 8002f08:	4b2b      	ldr	r3, [pc, #172]	; (8002fb8 <IMU_Meas+0xa28>)
 8002f0a:	edd3 7a00 	vldr	s15, [r3]
 8002f0e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002f12:	4b2c      	ldr	r3, [pc, #176]	; (8002fc4 <IMU_Meas+0xa34>)
 8002f14:	edc3 7a00 	vstr	s15, [r3]
					turning = !turning;
 8002f18:	4b2b      	ldr	r3, [pc, #172]	; (8002fc8 <IMU_Meas+0xa38>)
 8002f1a:	781b      	ldrb	r3, [r3, #0]
 8002f1c:	2b00      	cmp	r3, #0
 8002f1e:	bf14      	ite	ne
 8002f20:	2301      	movne	r3, #1
 8002f22:	2300      	moveq	r3, #0
 8002f24:	b2db      	uxtb	r3, r3
 8002f26:	f083 0301 	eor.w	r3, r3, #1
 8002f2a:	b2db      	uxtb	r3, r3
 8002f2c:	f003 0301 	and.w	r3, r3, #1
 8002f30:	b2da      	uxtb	r2, r3
 8002f32:	4b25      	ldr	r3, [pc, #148]	; (8002fc8 <IMU_Meas+0xa38>)
 8002f34:	701a      	strb	r2, [r3, #0]
 8002f36:	e018      	b.n	8002f6a <IMU_Meas+0x9da>
				}else{
					turning = false;
 8002f38:	4b23      	ldr	r3, [pc, #140]	; (8002fc8 <IMU_Meas+0xa38>)
 8002f3a:	2200      	movs	r2, #0
 8002f3c:	701a      	strb	r2, [r3, #0]
					disth -= distx_rec;
 8002f3e:	4b23      	ldr	r3, [pc, #140]	; (8002fcc <IMU_Meas+0xa3c>)
 8002f40:	ed93 7a00 	vldr	s14, [r3]
 8002f44:	4b19      	ldr	r3, [pc, #100]	; (8002fac <IMU_Meas+0xa1c>)
 8002f46:	edd3 7a00 	vldr	s15, [r3]
 8002f4a:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002f4e:	4b1f      	ldr	r3, [pc, #124]	; (8002fcc <IMU_Meas+0xa3c>)
 8002f50:	edc3 7a00 	vstr	s15, [r3]
					anglez -= anglez_rec;
 8002f54:	4b1b      	ldr	r3, [pc, #108]	; (8002fc4 <IMU_Meas+0xa34>)
 8002f56:	ed93 7a00 	vldr	s14, [r3]
 8002f5a:	4b17      	ldr	r3, [pc, #92]	; (8002fb8 <IMU_Meas+0xa28>)
 8002f5c:	edd3 7a00 	vldr	s15, [r3]
 8002f60:	ee77 7a67 	vsub.f32	s15, s14, s15
 8002f64:	4b17      	ldr	r3, [pc, #92]	; (8002fc4 <IMU_Meas+0xa34>)
 8002f66:	edc3 7a00 	vstr	s15, [r3]
				}
			}

			Mean = 0;
 8002f6a:	4b19      	ldr	r3, [pc, #100]	; (8002fd0 <IMU_Meas+0xa40>)
 8002f6c:	2200      	movs	r2, #0
 8002f6e:	701a      	strb	r2, [r3, #0]
	}else if(Mean++ >= 9 && offset){
 8002f70:	e015      	b.n	8002f9e <IMU_Meas+0xa0e>
	}else {
			mean_acc_x += accel_x_g;
 8002f72:	4b18      	ldr	r3, [pc, #96]	; (8002fd4 <IMU_Meas+0xa44>)
 8002f74:	ed93 7a00 	vldr	s14, [r3]
 8002f78:	4b17      	ldr	r3, [pc, #92]	; (8002fd8 <IMU_Meas+0xa48>)
 8002f7a:	edd3 7a00 	vldr	s15, [r3]
 8002f7e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002f82:	4b14      	ldr	r3, [pc, #80]	; (8002fd4 <IMU_Meas+0xa44>)
 8002f84:	edc3 7a00 	vstr	s15, [r3]
			mean_gyro_z += gyro_z_rad;
 8002f88:	4b14      	ldr	r3, [pc, #80]	; (8002fdc <IMU_Meas+0xa4c>)
 8002f8a:	ed93 7a00 	vldr	s14, [r3]
 8002f8e:	4b14      	ldr	r3, [pc, #80]	; (8002fe0 <IMU_Meas+0xa50>)
 8002f90:	edd3 7a00 	vldr	s15, [r3]
 8002f94:	ee77 7a27 	vadd.f32	s15, s14, s15
 8002f98:	4b10      	ldr	r3, [pc, #64]	; (8002fdc <IMU_Meas+0xa4c>)
 8002f9a:	edc3 7a00 	vstr	s15, [r3]
	}
	return count;
 8002f9e:	88fb      	ldrh	r3, [r7, #6]
}
 8002fa0:	4618      	mov	r0, r3
 8002fa2:	3714      	adds	r7, #20
 8002fa4:	46bd      	mov	sp, r7
 8002fa6:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8002faa:	bf00      	nop
 8002fac:	2000ac04 	.word	0x2000ac04
 8002fb0:	2000ac00 	.word	0x2000ac00
 8002fb4:	20009a44 	.word	0x20009a44
 8002fb8:	20007a2c 	.word	0x20007a2c
 8002fbc:	20009a8c 	.word	0x20009a8c
 8002fc0:	2000abfc 	.word	0x2000abfc
 8002fc4:	20009a34 	.word	0x20009a34
 8002fc8:	20007a28 	.word	0x20007a28
 8002fcc:	20008a44 	.word	0x20008a44
 8002fd0:	20007a14 	.word	0x20007a14
 8002fd4:	20009c30 	.word	0x20009c30
 8002fd8:	2000ad18 	.word	0x2000ad18
 8002fdc:	20009a00 	.word	0x20009a00
 8002fe0:	20007a04 	.word	0x20007a04

08002fe4 <PID_Init>:


// Control Motors

void PID_Init(float Kp_, float Ki_, float Kd_) {
 8002fe4:	b480      	push	{r7}
 8002fe6:	b085      	sub	sp, #20
 8002fe8:	af00      	add	r7, sp, #0
 8002fea:	ed87 0a03 	vstr	s0, [r7, #12]
 8002fee:	edc7 0a02 	vstr	s1, [r7, #8]
 8002ff2:	ed87 1a01 	vstr	s2, [r7, #4]

    Kp = Kp_;
 8002ff6:	4a0f      	ldr	r2, [pc, #60]	; (8003034 <PID_Init+0x50>)
 8002ff8:	68fb      	ldr	r3, [r7, #12]
 8002ffa:	6013      	str	r3, [r2, #0]
    Ki = Ki_;
 8002ffc:	4a0e      	ldr	r2, [pc, #56]	; (8003038 <PID_Init+0x54>)
 8002ffe:	68bb      	ldr	r3, [r7, #8]
 8003000:	6013      	str	r3, [r2, #0]
    Kd = Kd_;
 8003002:	4a0e      	ldr	r2, [pc, #56]	; (800303c <PID_Init+0x58>)
 8003004:	687b      	ldr	r3, [r7, #4]
 8003006:	6013      	str	r3, [r2, #0]

    p_error = 0;
 8003008:	4b0d      	ldr	r3, [pc, #52]	; (8003040 <PID_Init+0x5c>)
 800300a:	f04f 0200 	mov.w	r2, #0
 800300e:	601a      	str	r2, [r3, #0]
    i_error = 0;
 8003010:	4b0c      	ldr	r3, [pc, #48]	; (8003044 <PID_Init+0x60>)
 8003012:	f04f 0200 	mov.w	r2, #0
 8003016:	601a      	str	r2, [r3, #0]
    d_error = 0;
 8003018:	4b0b      	ldr	r3, [pc, #44]	; (8003048 <PID_Init+0x64>)
 800301a:	f04f 0200 	mov.w	r2, #0
 800301e:	601a      	str	r2, [r3, #0]
    previous_e = 0;
 8003020:	4b0a      	ldr	r3, [pc, #40]	; (800304c <PID_Init+0x68>)
 8003022:	f04f 0200 	mov.w	r2, #0
 8003026:	601a      	str	r2, [r3, #0]
}
 8003028:	bf00      	nop
 800302a:	3714      	adds	r7, #20
 800302c:	46bd      	mov	sp, r7
 800302e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8003032:	4770      	bx	lr
 8003034:	2000ad0c 	.word	0x2000ad0c
 8003038:	20007a90 	.word	0x20007a90
 800303c:	2000ac5c 	.word	0x2000ac5c
 8003040:	20009a3c 	.word	0x20009a3c
 8003044:	20007a7c 	.word	0x20007a7c
 8003048:	20007a8c 	.word	0x20007a8c
 800304c:	20007a24 	.word	0x20007a24

08003050 <PID_UpdateError>:

void PID_UpdateError(double cte) {
 8003050:	b590      	push	{r4, r7, lr}
 8003052:	b083      	sub	sp, #12
 8003054:	af00      	add	r7, sp, #0
 8003056:	ed87 0b00 	vstr	d0, [r7]

    p_error = cte;
 800305a:	e9d7 0100 	ldrd	r0, r1, [r7]
 800305e:	f7fd fd95 	bl	8000b8c <__aeabi_d2f>
 8003062:	4602      	mov	r2, r0
 8003064:	4b16      	ldr	r3, [pc, #88]	; (80030c0 <PID_UpdateError+0x70>)
 8003066:	601a      	str	r2, [r3, #0]
    i_error += p_error;
 8003068:	4b16      	ldr	r3, [pc, #88]	; (80030c4 <PID_UpdateError+0x74>)
 800306a:	ed93 7a00 	vldr	s14, [r3]
 800306e:	4b14      	ldr	r3, [pc, #80]	; (80030c0 <PID_UpdateError+0x70>)
 8003070:	edd3 7a00 	vldr	s15, [r3]
 8003074:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003078:	4b12      	ldr	r3, [pc, #72]	; (80030c4 <PID_UpdateError+0x74>)
 800307a:	edc3 7a00 	vstr	s15, [r3]
    d_error = cte - previous_e;
 800307e:	4b12      	ldr	r3, [pc, #72]	; (80030c8 <PID_UpdateError+0x78>)
 8003080:	681b      	ldr	r3, [r3, #0]
 8003082:	4618      	mov	r0, r3
 8003084:	f7fd fa32 	bl	80004ec <__aeabi_f2d>
 8003088:	4603      	mov	r3, r0
 800308a:	460c      	mov	r4, r1
 800308c:	461a      	mov	r2, r3
 800308e:	4623      	mov	r3, r4
 8003090:	e9d7 0100 	ldrd	r0, r1, [r7]
 8003094:	f7fd f8ca 	bl	800022c <__aeabi_dsub>
 8003098:	4603      	mov	r3, r0
 800309a:	460c      	mov	r4, r1
 800309c:	4618      	mov	r0, r3
 800309e:	4621      	mov	r1, r4
 80030a0:	f7fd fd74 	bl	8000b8c <__aeabi_d2f>
 80030a4:	4602      	mov	r2, r0
 80030a6:	4b09      	ldr	r3, [pc, #36]	; (80030cc <PID_UpdateError+0x7c>)
 80030a8:	601a      	str	r2, [r3, #0]
    previous_e = cte;
 80030aa:	e9d7 0100 	ldrd	r0, r1, [r7]
 80030ae:	f7fd fd6d 	bl	8000b8c <__aeabi_d2f>
 80030b2:	4602      	mov	r2, r0
 80030b4:	4b04      	ldr	r3, [pc, #16]	; (80030c8 <PID_UpdateError+0x78>)
 80030b6:	601a      	str	r2, [r3, #0]
}
 80030b8:	bf00      	nop
 80030ba:	370c      	adds	r7, #12
 80030bc:	46bd      	mov	sp, r7
 80030be:	bd90      	pop	{r4, r7, pc}
 80030c0:	20009a3c 	.word	0x20009a3c
 80030c4:	20007a7c 	.word	0x20007a7c
 80030c8:	20007a24 	.word	0x20007a24
 80030cc:	20007a8c 	.word	0x20007a8c

080030d0 <PID_TotalError>:

float PID_TotalError() {
 80030d0:	b480      	push	{r7}
 80030d2:	af00      	add	r7, sp, #0

    return -Kp * p_error - Ki * i_error - Kd * d_error;
 80030d4:	4b11      	ldr	r3, [pc, #68]	; (800311c <PID_TotalError+0x4c>)
 80030d6:	edd3 7a00 	vldr	s15, [r3]
 80030da:	eeb1 7a67 	vneg.f32	s14, s15
 80030de:	4b10      	ldr	r3, [pc, #64]	; (8003120 <PID_TotalError+0x50>)
 80030e0:	edd3 7a00 	vldr	s15, [r3]
 80030e4:	ee27 7a27 	vmul.f32	s14, s14, s15
 80030e8:	4b0e      	ldr	r3, [pc, #56]	; (8003124 <PID_TotalError+0x54>)
 80030ea:	edd3 6a00 	vldr	s13, [r3]
 80030ee:	4b0e      	ldr	r3, [pc, #56]	; (8003128 <PID_TotalError+0x58>)
 80030f0:	edd3 7a00 	vldr	s15, [r3]
 80030f4:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80030f8:	ee37 7a67 	vsub.f32	s14, s14, s15
 80030fc:	4b0b      	ldr	r3, [pc, #44]	; (800312c <PID_TotalError+0x5c>)
 80030fe:	edd3 6a00 	vldr	s13, [r3]
 8003102:	4b0b      	ldr	r3, [pc, #44]	; (8003130 <PID_TotalError+0x60>)
 8003104:	edd3 7a00 	vldr	s15, [r3]
 8003108:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800310c:	ee77 7a67 	vsub.f32	s15, s14, s15
}
 8003110:	eeb0 0a67 	vmov.f32	s0, s15
 8003114:	46bd      	mov	sp, r7
 8003116:	f85d 7b04 	ldr.w	r7, [sp], #4
 800311a:	4770      	bx	lr
 800311c:	2000ad0c 	.word	0x2000ad0c
 8003120:	20009a3c 	.word	0x20009a3c
 8003124:	20007a90 	.word	0x20007a90
 8003128:	20007a7c 	.word	0x20007a7c
 800312c:	2000ac5c 	.word	0x2000ac5c
 8003130:	20007a8c 	.word	0x20007a8c

08003134 <getdata_Radar>:


// Radar Functions

void getdata_Radar(char rx_buffer[LINEMAX + 1])
{
 8003134:	b580      	push	{r7, lr}
 8003136:	b088      	sub	sp, #32
 8003138:	af00      	add	r7, sp, #0
 800313a:	6078      	str	r0, [r7, #4]
	uint8_t TLVs = rx_buffer[32];
 800313c:	687b      	ldr	r3, [r7, #4]
 800313e:	3320      	adds	r3, #32
 8003140:	781b      	ldrb	r3, [r3, #0]
 8003142:	767b      	strb	r3, [r7, #25]
	uint16_t idx = 40;//36;
 8003144:	2328      	movs	r3, #40	; 0x28
 8003146:	83fb      	strh	r3, [r7, #30]
	uint16_t num_det = 0;
 8003148:	2300      	movs	r3, #0
 800314a:	82fb      	strh	r3, [r7, #22]
	if(count_ch_freq_radar > 20){
 800314c:	4bab      	ldr	r3, [pc, #684]	; (80033fc <getdata_Radar+0x2c8>)
 800314e:	681b      	ldr	r3, [r3, #0]
 8003150:	2b14      	cmp	r3, #20
 8003152:	d918      	bls.n	8003186 <getdata_Radar+0x52>
		if(actual_freq_radar2 == 1){
 8003154:	4baa      	ldr	r3, [pc, #680]	; (8003400 <getdata_Radar+0x2cc>)
 8003156:	881b      	ldrh	r3, [r3, #0]
 8003158:	2b01      	cmp	r3, #1
 800315a:	d103      	bne.n	8003164 <getdata_Radar+0x30>
			actual_freq_radar = 5;
 800315c:	4ba9      	ldr	r3, [pc, #676]	; (8003404 <getdata_Radar+0x2d0>)
 800315e:	2205      	movs	r2, #5
 8003160:	801a      	strh	r2, [r3, #0]
 8003162:	e00d      	b.n	8003180 <getdata_Radar+0x4c>
		}else{
			actual_freq_radar++;
 8003164:	4ba7      	ldr	r3, [pc, #668]	; (8003404 <getdata_Radar+0x2d0>)
 8003166:	881b      	ldrh	r3, [r3, #0]
 8003168:	3301      	adds	r3, #1
 800316a:	b29a      	uxth	r2, r3
 800316c:	4ba5      	ldr	r3, [pc, #660]	; (8003404 <getdata_Radar+0x2d0>)
 800316e:	801a      	strh	r2, [r3, #0]
			actual_freq_radar = (actual_freq_radar > 10) ? 10 : actual_freq_radar;
 8003170:	4ba4      	ldr	r3, [pc, #656]	; (8003404 <getdata_Radar+0x2d0>)
 8003172:	881b      	ldrh	r3, [r3, #0]
 8003174:	2b0a      	cmp	r3, #10
 8003176:	bf28      	it	cs
 8003178:	230a      	movcs	r3, #10
 800317a:	b29a      	uxth	r2, r3
 800317c:	4ba1      	ldr	r3, [pc, #644]	; (8003404 <getdata_Radar+0x2d0>)
 800317e:	801a      	strh	r2, [r3, #0]
		}
		count_ch_freq_radar = 0;
 8003180:	4b9e      	ldr	r3, [pc, #632]	; (80033fc <getdata_Radar+0x2c8>)
 8003182:	2200      	movs	r2, #0
 8003184:	601a      	str	r2, [r3, #0]
	}

	for(uint8_t tempTLV = 1; tempTLV<= TLVs; tempTLV++)
 8003186:	2301      	movs	r3, #1
 8003188:	777b      	strb	r3, [r7, #29]
 800318a:	e2fd      	b.n	8003788 <getdata_Radar+0x654>
	{
		if ((uint8_t)rx_buffer[idx] == tempTLV)
 800318c:	8bfb      	ldrh	r3, [r7, #30]
 800318e:	687a      	ldr	r2, [r7, #4]
 8003190:	4413      	add	r3, r2
 8003192:	781b      	ldrb	r3, [r3, #0]
 8003194:	7f7a      	ldrb	r2, [r7, #29]
 8003196:	429a      	cmp	r2, r3
 8003198:	f040 82f3 	bne.w	8003782 <getdata_Radar+0x64e>
		{
			idx += 4;
 800319c:	8bfb      	ldrh	r3, [r7, #30]
 800319e:	3304      	adds	r3, #4
 80031a0:	83fb      	strh	r3, [r7, #30]
			uint32_t TLVlength = rx_buffer[idx++] + (rx_buffer[idx++] << 8) + (rx_buffer[idx++] << 16) + (rx_buffer[idx++] << 24);
 80031a2:	8bfb      	ldrh	r3, [r7, #30]
 80031a4:	1c5a      	adds	r2, r3, #1
 80031a6:	83fa      	strh	r2, [r7, #30]
 80031a8:	461a      	mov	r2, r3
 80031aa:	687b      	ldr	r3, [r7, #4]
 80031ac:	4413      	add	r3, r2
 80031ae:	781b      	ldrb	r3, [r3, #0]
 80031b0:	461a      	mov	r2, r3
 80031b2:	8bfb      	ldrh	r3, [r7, #30]
 80031b4:	1c59      	adds	r1, r3, #1
 80031b6:	83f9      	strh	r1, [r7, #30]
 80031b8:	4619      	mov	r1, r3
 80031ba:	687b      	ldr	r3, [r7, #4]
 80031bc:	440b      	add	r3, r1
 80031be:	781b      	ldrb	r3, [r3, #0]
 80031c0:	021b      	lsls	r3, r3, #8
 80031c2:	441a      	add	r2, r3
 80031c4:	8bfb      	ldrh	r3, [r7, #30]
 80031c6:	1c59      	adds	r1, r3, #1
 80031c8:	83f9      	strh	r1, [r7, #30]
 80031ca:	4619      	mov	r1, r3
 80031cc:	687b      	ldr	r3, [r7, #4]
 80031ce:	440b      	add	r3, r1
 80031d0:	781b      	ldrb	r3, [r3, #0]
 80031d2:	041b      	lsls	r3, r3, #16
 80031d4:	441a      	add	r2, r3
 80031d6:	8bfb      	ldrh	r3, [r7, #30]
 80031d8:	1c59      	adds	r1, r3, #1
 80031da:	83f9      	strh	r1, [r7, #30]
 80031dc:	4619      	mov	r1, r3
 80031de:	687b      	ldr	r3, [r7, #4]
 80031e0:	440b      	add	r3, r1
 80031e2:	781b      	ldrb	r3, [r3, #0]
 80031e4:	061b      	lsls	r3, r3, #24
 80031e6:	4413      	add	r3, r2
 80031e8:	613b      	str	r3, [r7, #16]
			uint16_t tempidx = idx;
 80031ea:	8bfb      	ldrh	r3, [r7, #30]
 80031ec:	81fb      	strh	r3, [r7, #14]
			num_det = rx_buffer[idx++] + (rx_buffer[idx++] << 8);
 80031ee:	8bfb      	ldrh	r3, [r7, #30]
 80031f0:	1c5a      	adds	r2, r3, #1
 80031f2:	83fa      	strh	r2, [r7, #30]
 80031f4:	461a      	mov	r2, r3
 80031f6:	687b      	ldr	r3, [r7, #4]
 80031f8:	4413      	add	r3, r2
 80031fa:	781b      	ldrb	r3, [r3, #0]
 80031fc:	b29a      	uxth	r2, r3
 80031fe:	8bfb      	ldrh	r3, [r7, #30]
 8003200:	1c59      	adds	r1, r3, #1
 8003202:	83f9      	strh	r1, [r7, #30]
 8003204:	4619      	mov	r1, r3
 8003206:	687b      	ldr	r3, [r7, #4]
 8003208:	440b      	add	r3, r1
 800320a:	781b      	ldrb	r3, [r3, #0]
 800320c:	b29b      	uxth	r3, r3
 800320e:	021b      	lsls	r3, r3, #8
 8003210:	b29b      	uxth	r3, r3
 8003212:	4413      	add	r3, r2
 8003214:	82fb      	strh	r3, [r7, #22]
			uint16_t xyzQformat = rx_buffer[idx++] + (rx_buffer[idx++] << 8);
 8003216:	8bfb      	ldrh	r3, [r7, #30]
 8003218:	1c5a      	adds	r2, r3, #1
 800321a:	83fa      	strh	r2, [r7, #30]
 800321c:	461a      	mov	r2, r3
 800321e:	687b      	ldr	r3, [r7, #4]
 8003220:	4413      	add	r3, r2
 8003222:	781b      	ldrb	r3, [r3, #0]
 8003224:	b29a      	uxth	r2, r3
 8003226:	8bfb      	ldrh	r3, [r7, #30]
 8003228:	1c59      	adds	r1, r3, #1
 800322a:	83f9      	strh	r1, [r7, #30]
 800322c:	4619      	mov	r1, r3
 800322e:	687b      	ldr	r3, [r7, #4]
 8003230:	440b      	add	r3, r1
 8003232:	781b      	ldrb	r3, [r3, #0]
 8003234:	b29b      	uxth	r3, r3
 8003236:	021b      	lsls	r3, r3, #8
 8003238:	b29b      	uxth	r3, r3
 800323a:	4413      	add	r3, r2
 800323c:	81bb      	strh	r3, [r7, #12]
			xyzQformat = powf(2,xyzQformat);
 800323e:	89bb      	ldrh	r3, [r7, #12]
 8003240:	ee07 3a90 	vmov	s15, r3
 8003244:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8003248:	eef0 0a67 	vmov.f32	s1, s15
 800324c:	eeb0 0a00 	vmov.f32	s0, #0	; 0x40000000  2.0
 8003250:	f00f fb7a 	bl	8012948 <powf>
 8003254:	eef0 7a40 	vmov.f32	s15, s0
 8003258:	eefc 7ae7 	vcvt.u32.f32	s15, s15
 800325c:	ee17 3a90 	vmov	r3, s15
 8003260:	81bb      	strh	r3, [r7, #12]

			switch(tempTLV)
 8003262:	7f7b      	ldrb	r3, [r7, #29]
 8003264:	2b01      	cmp	r3, #1
 8003266:	d003      	beq.n	8003270 <getdata_Radar+0x13c>
 8003268:	2b02      	cmp	r3, #2
 800326a:	f000 8281 	beq.w	8003770 <getdata_Radar+0x63c>
 800326e:	e283      	b.n	8003778 <getdata_Radar+0x644>
			{
			case 1:
				numObj = num_det;
 8003270:	4a65      	ldr	r2, [pc, #404]	; (8003408 <getdata_Radar+0x2d4>)
 8003272:	8afb      	ldrh	r3, [r7, #22]
 8003274:	8013      	strh	r3, [r2, #0]

				for (uint16_t temp_num_det = 1; temp_num_det <= num_det; temp_num_det++ )
 8003276:	2301      	movs	r3, #1
 8003278:	837b      	strh	r3, [r7, #26]
 800327a:	e265      	b.n	8003748 <getdata_Radar+0x614>
				{
					Objects_radar[temp_num_det -1].speed = rx_buffer[idx++] + (rx_buffer[idx++] << 8);
 800327c:	8bfb      	ldrh	r3, [r7, #30]
 800327e:	1c5a      	adds	r2, r3, #1
 8003280:	83fa      	strh	r2, [r7, #30]
 8003282:	461a      	mov	r2, r3
 8003284:	687b      	ldr	r3, [r7, #4]
 8003286:	4413      	add	r3, r2
 8003288:	781b      	ldrb	r3, [r3, #0]
 800328a:	461a      	mov	r2, r3
 800328c:	8bfb      	ldrh	r3, [r7, #30]
 800328e:	1c59      	adds	r1, r3, #1
 8003290:	83f9      	strh	r1, [r7, #30]
 8003292:	4619      	mov	r1, r3
 8003294:	687b      	ldr	r3, [r7, #4]
 8003296:	440b      	add	r3, r1
 8003298:	781b      	ldrb	r3, [r3, #0]
 800329a:	021b      	lsls	r3, r3, #8
 800329c:	18d1      	adds	r1, r2, r3
 800329e:	8b7b      	ldrh	r3, [r7, #26]
 80032a0:	1e5a      	subs	r2, r3, #1
 80032a2:	ee07 1a90 	vmov	s15, r1
 80032a6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80032aa:	4958      	ldr	r1, [pc, #352]	; (800340c <getdata_Radar+0x2d8>)
 80032ac:	4613      	mov	r3, r2
 80032ae:	009b      	lsls	r3, r3, #2
 80032b0:	4413      	add	r3, r2
 80032b2:	009b      	lsls	r3, r3, #2
 80032b4:	440b      	add	r3, r1
 80032b6:	edc3 7a00 	vstr	s15, [r3]
					Objects_radar[temp_num_det -1].peak = rx_buffer[idx++] + (rx_buffer[idx++] << 8);
 80032ba:	8bfb      	ldrh	r3, [r7, #30]
 80032bc:	1c5a      	adds	r2, r3, #1
 80032be:	83fa      	strh	r2, [r7, #30]
 80032c0:	461a      	mov	r2, r3
 80032c2:	687b      	ldr	r3, [r7, #4]
 80032c4:	4413      	add	r3, r2
 80032c6:	781b      	ldrb	r3, [r3, #0]
 80032c8:	461a      	mov	r2, r3
 80032ca:	8bfb      	ldrh	r3, [r7, #30]
 80032cc:	1c59      	adds	r1, r3, #1
 80032ce:	83f9      	strh	r1, [r7, #30]
 80032d0:	4619      	mov	r1, r3
 80032d2:	687b      	ldr	r3, [r7, #4]
 80032d4:	440b      	add	r3, r1
 80032d6:	781b      	ldrb	r3, [r3, #0]
 80032d8:	021b      	lsls	r3, r3, #8
 80032da:	18d1      	adds	r1, r2, r3
 80032dc:	8b7b      	ldrh	r3, [r7, #26]
 80032de:	1e5a      	subs	r2, r3, #1
 80032e0:	ee07 1a90 	vmov	s15, r1
 80032e4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80032e8:	4948      	ldr	r1, [pc, #288]	; (800340c <getdata_Radar+0x2d8>)
 80032ea:	4613      	mov	r3, r2
 80032ec:	009b      	lsls	r3, r3, #2
 80032ee:	4413      	add	r3, r2
 80032f0:	009b      	lsls	r3, r3, #2
 80032f2:	440b      	add	r3, r1
 80032f4:	3304      	adds	r3, #4
 80032f6:	edc3 7a00 	vstr	s15, [r3]
					//idx += 2; // 0;
					Objects_radar[temp_num_det - 1].xobj = rx_buffer[idx++] + (rx_buffer[idx++] << 8);
 80032fa:	8bfb      	ldrh	r3, [r7, #30]
 80032fc:	1c5a      	adds	r2, r3, #1
 80032fe:	83fa      	strh	r2, [r7, #30]
 8003300:	461a      	mov	r2, r3
 8003302:	687b      	ldr	r3, [r7, #4]
 8003304:	4413      	add	r3, r2
 8003306:	781b      	ldrb	r3, [r3, #0]
 8003308:	461a      	mov	r2, r3
 800330a:	8bfb      	ldrh	r3, [r7, #30]
 800330c:	1c59      	adds	r1, r3, #1
 800330e:	83f9      	strh	r1, [r7, #30]
 8003310:	4619      	mov	r1, r3
 8003312:	687b      	ldr	r3, [r7, #4]
 8003314:	440b      	add	r3, r1
 8003316:	781b      	ldrb	r3, [r3, #0]
 8003318:	021b      	lsls	r3, r3, #8
 800331a:	18d1      	adds	r1, r2, r3
 800331c:	8b7b      	ldrh	r3, [r7, #26]
 800331e:	1e5a      	subs	r2, r3, #1
 8003320:	ee07 1a90 	vmov	s15, r1
 8003324:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003328:	4938      	ldr	r1, [pc, #224]	; (800340c <getdata_Radar+0x2d8>)
 800332a:	4613      	mov	r3, r2
 800332c:	009b      	lsls	r3, r3, #2
 800332e:	4413      	add	r3, r2
 8003330:	009b      	lsls	r3, r3, #2
 8003332:	440b      	add	r3, r1
 8003334:	3308      	adds	r3, #8
 8003336:	edc3 7a00 	vstr	s15, [r3]
					Objects_radar[temp_num_det - 1].yobj = rx_buffer[idx++] + (rx_buffer[idx++] << 8);
 800333a:	8bfb      	ldrh	r3, [r7, #30]
 800333c:	1c5a      	adds	r2, r3, #1
 800333e:	83fa      	strh	r2, [r7, #30]
 8003340:	461a      	mov	r2, r3
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	4413      	add	r3, r2
 8003346:	781b      	ldrb	r3, [r3, #0]
 8003348:	461a      	mov	r2, r3
 800334a:	8bfb      	ldrh	r3, [r7, #30]
 800334c:	1c59      	adds	r1, r3, #1
 800334e:	83f9      	strh	r1, [r7, #30]
 8003350:	4619      	mov	r1, r3
 8003352:	687b      	ldr	r3, [r7, #4]
 8003354:	440b      	add	r3, r1
 8003356:	781b      	ldrb	r3, [r3, #0]
 8003358:	021b      	lsls	r3, r3, #8
 800335a:	18d1      	adds	r1, r2, r3
 800335c:	8b7b      	ldrh	r3, [r7, #26]
 800335e:	1e5a      	subs	r2, r3, #1
 8003360:	ee07 1a90 	vmov	s15, r1
 8003364:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003368:	4928      	ldr	r1, [pc, #160]	; (800340c <getdata_Radar+0x2d8>)
 800336a:	4613      	mov	r3, r2
 800336c:	009b      	lsls	r3, r3, #2
 800336e:	4413      	add	r3, r2
 8003370:	009b      	lsls	r3, r3, #2
 8003372:	440b      	add	r3, r1
 8003374:	330c      	adds	r3, #12
 8003376:	edc3 7a00 	vstr	s15, [r3]
					Objects_radar[temp_num_det - 1].zobj = rx_buffer[idx++] + (rx_buffer[idx++] << 8);
 800337a:	8bfb      	ldrh	r3, [r7, #30]
 800337c:	1c5a      	adds	r2, r3, #1
 800337e:	83fa      	strh	r2, [r7, #30]
 8003380:	461a      	mov	r2, r3
 8003382:	687b      	ldr	r3, [r7, #4]
 8003384:	4413      	add	r3, r2
 8003386:	781b      	ldrb	r3, [r3, #0]
 8003388:	461a      	mov	r2, r3
 800338a:	8bfb      	ldrh	r3, [r7, #30]
 800338c:	1c59      	adds	r1, r3, #1
 800338e:	83f9      	strh	r1, [r7, #30]
 8003390:	4619      	mov	r1, r3
 8003392:	687b      	ldr	r3, [r7, #4]
 8003394:	440b      	add	r3, r1
 8003396:	781b      	ldrb	r3, [r3, #0]
 8003398:	021b      	lsls	r3, r3, #8
 800339a:	18d1      	adds	r1, r2, r3
 800339c:	8b7b      	ldrh	r3, [r7, #26]
 800339e:	1e5a      	subs	r2, r3, #1
 80033a0:	ee07 1a90 	vmov	s15, r1
 80033a4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80033a8:	4918      	ldr	r1, [pc, #96]	; (800340c <getdata_Radar+0x2d8>)
 80033aa:	4613      	mov	r3, r2
 80033ac:	009b      	lsls	r3, r3, #2
 80033ae:	4413      	add	r3, r2
 80033b0:	009b      	lsls	r3, r3, #2
 80033b2:	440b      	add	r3, r1
 80033b4:	3310      	adds	r3, #16
 80033b6:	edc3 7a00 	vstr	s15, [r3]

					Objects_radar[temp_num_det - 1].speed = (Objects_radar[temp_num_det - 1].speed > 32767) ? Objects_radar[temp_num_det - 1].speed - 65536 : Objects_radar[temp_num_det - 1].speed;
 80033ba:	8b7b      	ldrh	r3, [r7, #26]
 80033bc:	1e5a      	subs	r2, r3, #1
 80033be:	4913      	ldr	r1, [pc, #76]	; (800340c <getdata_Radar+0x2d8>)
 80033c0:	4613      	mov	r3, r2
 80033c2:	009b      	lsls	r3, r3, #2
 80033c4:	4413      	add	r3, r2
 80033c6:	009b      	lsls	r3, r3, #2
 80033c8:	440b      	add	r3, r1
 80033ca:	edd3 7a00 	vldr	s15, [r3]
 80033ce:	ed9f 7a10 	vldr	s14, [pc, #64]	; 8003410 <getdata_Radar+0x2dc>
 80033d2:	eef4 7ac7 	vcmpe.f32	s15, s14
 80033d6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80033da:	dd1d      	ble.n	8003418 <getdata_Radar+0x2e4>
 80033dc:	8b7b      	ldrh	r3, [r7, #26]
 80033de:	1e5a      	subs	r2, r3, #1
 80033e0:	490a      	ldr	r1, [pc, #40]	; (800340c <getdata_Radar+0x2d8>)
 80033e2:	4613      	mov	r3, r2
 80033e4:	009b      	lsls	r3, r3, #2
 80033e6:	4413      	add	r3, r2
 80033e8:	009b      	lsls	r3, r3, #2
 80033ea:	440b      	add	r3, r1
 80033ec:	edd3 7a00 	vldr	s15, [r3]
 80033f0:	ed9f 7a08 	vldr	s14, [pc, #32]	; 8003414 <getdata_Radar+0x2e0>
 80033f4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80033f8:	e018      	b.n	800342c <getdata_Radar+0x2f8>
 80033fa:	bf00      	nop
 80033fc:	200099f8 	.word	0x200099f8
 8003400:	2000ad16 	.word	0x2000ad16
 8003404:	2000ad50 	.word	0x2000ad50
 8003408:	2000ad14 	.word	0x2000ad14
 800340c:	20007a98 	.word	0x20007a98
 8003410:	46fffe00 	.word	0x46fffe00
 8003414:	47800000 	.word	0x47800000
 8003418:	8b7b      	ldrh	r3, [r7, #26]
 800341a:	1e5a      	subs	r2, r3, #1
 800341c:	49ce      	ldr	r1, [pc, #824]	; (8003758 <getdata_Radar+0x624>)
 800341e:	4613      	mov	r3, r2
 8003420:	009b      	lsls	r3, r3, #2
 8003422:	4413      	add	r3, r2
 8003424:	009b      	lsls	r3, r3, #2
 8003426:	440b      	add	r3, r1
 8003428:	edd3 7a00 	vldr	s15, [r3]
 800342c:	8b7b      	ldrh	r3, [r7, #26]
 800342e:	1e5a      	subs	r2, r3, #1
 8003430:	49c9      	ldr	r1, [pc, #804]	; (8003758 <getdata_Radar+0x624>)
 8003432:	4613      	mov	r3, r2
 8003434:	009b      	lsls	r3, r3, #2
 8003436:	4413      	add	r3, r2
 8003438:	009b      	lsls	r3, r3, #2
 800343a:	440b      	add	r3, r1
 800343c:	edc3 7a00 	vstr	s15, [r3]
					Objects_radar[temp_num_det - 1].xobj = (Objects_radar[temp_num_det - 1].xobj > 32767) ? Objects_radar[temp_num_det - 1].xobj - 65536 : Objects_radar[temp_num_det - 1].xobj;
 8003440:	8b7b      	ldrh	r3, [r7, #26]
 8003442:	1e5a      	subs	r2, r3, #1
 8003444:	49c4      	ldr	r1, [pc, #784]	; (8003758 <getdata_Radar+0x624>)
 8003446:	4613      	mov	r3, r2
 8003448:	009b      	lsls	r3, r3, #2
 800344a:	4413      	add	r3, r2
 800344c:	009b      	lsls	r3, r3, #2
 800344e:	440b      	add	r3, r1
 8003450:	3308      	adds	r3, #8
 8003452:	edd3 7a00 	vldr	s15, [r3]
 8003456:	ed9f 7ac1 	vldr	s14, [pc, #772]	; 800375c <getdata_Radar+0x628>
 800345a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800345e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003462:	dd0f      	ble.n	8003484 <getdata_Radar+0x350>
 8003464:	8b7b      	ldrh	r3, [r7, #26]
 8003466:	1e5a      	subs	r2, r3, #1
 8003468:	49bb      	ldr	r1, [pc, #748]	; (8003758 <getdata_Radar+0x624>)
 800346a:	4613      	mov	r3, r2
 800346c:	009b      	lsls	r3, r3, #2
 800346e:	4413      	add	r3, r2
 8003470:	009b      	lsls	r3, r3, #2
 8003472:	440b      	add	r3, r1
 8003474:	3308      	adds	r3, #8
 8003476:	edd3 7a00 	vldr	s15, [r3]
 800347a:	ed9f 7ab9 	vldr	s14, [pc, #740]	; 8003760 <getdata_Radar+0x62c>
 800347e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003482:	e00a      	b.n	800349a <getdata_Radar+0x366>
 8003484:	8b7b      	ldrh	r3, [r7, #26]
 8003486:	1e5a      	subs	r2, r3, #1
 8003488:	49b3      	ldr	r1, [pc, #716]	; (8003758 <getdata_Radar+0x624>)
 800348a:	4613      	mov	r3, r2
 800348c:	009b      	lsls	r3, r3, #2
 800348e:	4413      	add	r3, r2
 8003490:	009b      	lsls	r3, r3, #2
 8003492:	440b      	add	r3, r1
 8003494:	3308      	adds	r3, #8
 8003496:	edd3 7a00 	vldr	s15, [r3]
 800349a:	8b7b      	ldrh	r3, [r7, #26]
 800349c:	1e5a      	subs	r2, r3, #1
 800349e:	49ae      	ldr	r1, [pc, #696]	; (8003758 <getdata_Radar+0x624>)
 80034a0:	4613      	mov	r3, r2
 80034a2:	009b      	lsls	r3, r3, #2
 80034a4:	4413      	add	r3, r2
 80034a6:	009b      	lsls	r3, r3, #2
 80034a8:	440b      	add	r3, r1
 80034aa:	3308      	adds	r3, #8
 80034ac:	edc3 7a00 	vstr	s15, [r3]
					Objects_radar[temp_num_det - 1].yobj = (Objects_radar[temp_num_det - 1].yobj > 32767) ? Objects_radar[temp_num_det - 1].yobj - 65536 : Objects_radar[temp_num_det - 1].yobj;
 80034b0:	8b7b      	ldrh	r3, [r7, #26]
 80034b2:	1e5a      	subs	r2, r3, #1
 80034b4:	49a8      	ldr	r1, [pc, #672]	; (8003758 <getdata_Radar+0x624>)
 80034b6:	4613      	mov	r3, r2
 80034b8:	009b      	lsls	r3, r3, #2
 80034ba:	4413      	add	r3, r2
 80034bc:	009b      	lsls	r3, r3, #2
 80034be:	440b      	add	r3, r1
 80034c0:	330c      	adds	r3, #12
 80034c2:	edd3 7a00 	vldr	s15, [r3]
 80034c6:	ed9f 7aa5 	vldr	s14, [pc, #660]	; 800375c <getdata_Radar+0x628>
 80034ca:	eef4 7ac7 	vcmpe.f32	s15, s14
 80034ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80034d2:	dd0f      	ble.n	80034f4 <getdata_Radar+0x3c0>
 80034d4:	8b7b      	ldrh	r3, [r7, #26]
 80034d6:	1e5a      	subs	r2, r3, #1
 80034d8:	499f      	ldr	r1, [pc, #636]	; (8003758 <getdata_Radar+0x624>)
 80034da:	4613      	mov	r3, r2
 80034dc:	009b      	lsls	r3, r3, #2
 80034de:	4413      	add	r3, r2
 80034e0:	009b      	lsls	r3, r3, #2
 80034e2:	440b      	add	r3, r1
 80034e4:	330c      	adds	r3, #12
 80034e6:	edd3 7a00 	vldr	s15, [r3]
 80034ea:	ed9f 7a9d 	vldr	s14, [pc, #628]	; 8003760 <getdata_Radar+0x62c>
 80034ee:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80034f2:	e00a      	b.n	800350a <getdata_Radar+0x3d6>
 80034f4:	8b7b      	ldrh	r3, [r7, #26]
 80034f6:	1e5a      	subs	r2, r3, #1
 80034f8:	4997      	ldr	r1, [pc, #604]	; (8003758 <getdata_Radar+0x624>)
 80034fa:	4613      	mov	r3, r2
 80034fc:	009b      	lsls	r3, r3, #2
 80034fe:	4413      	add	r3, r2
 8003500:	009b      	lsls	r3, r3, #2
 8003502:	440b      	add	r3, r1
 8003504:	330c      	adds	r3, #12
 8003506:	edd3 7a00 	vldr	s15, [r3]
 800350a:	8b7b      	ldrh	r3, [r7, #26]
 800350c:	1e5a      	subs	r2, r3, #1
 800350e:	4992      	ldr	r1, [pc, #584]	; (8003758 <getdata_Radar+0x624>)
 8003510:	4613      	mov	r3, r2
 8003512:	009b      	lsls	r3, r3, #2
 8003514:	4413      	add	r3, r2
 8003516:	009b      	lsls	r3, r3, #2
 8003518:	440b      	add	r3, r1
 800351a:	330c      	adds	r3, #12
 800351c:	edc3 7a00 	vstr	s15, [r3]
					Objects_radar[temp_num_det - 1].zobj = (Objects_radar[temp_num_det - 1].zobj > 32767) ? Objects_radar[temp_num_det - 1].zobj - 65536 : Objects_radar[temp_num_det - 1].zobj;
 8003520:	8b7b      	ldrh	r3, [r7, #26]
 8003522:	1e5a      	subs	r2, r3, #1
 8003524:	498c      	ldr	r1, [pc, #560]	; (8003758 <getdata_Radar+0x624>)
 8003526:	4613      	mov	r3, r2
 8003528:	009b      	lsls	r3, r3, #2
 800352a:	4413      	add	r3, r2
 800352c:	009b      	lsls	r3, r3, #2
 800352e:	440b      	add	r3, r1
 8003530:	3310      	adds	r3, #16
 8003532:	edd3 7a00 	vldr	s15, [r3]
 8003536:	ed9f 7a89 	vldr	s14, [pc, #548]	; 800375c <getdata_Radar+0x628>
 800353a:	eef4 7ac7 	vcmpe.f32	s15, s14
 800353e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003542:	dd0f      	ble.n	8003564 <getdata_Radar+0x430>
 8003544:	8b7b      	ldrh	r3, [r7, #26]
 8003546:	1e5a      	subs	r2, r3, #1
 8003548:	4983      	ldr	r1, [pc, #524]	; (8003758 <getdata_Radar+0x624>)
 800354a:	4613      	mov	r3, r2
 800354c:	009b      	lsls	r3, r3, #2
 800354e:	4413      	add	r3, r2
 8003550:	009b      	lsls	r3, r3, #2
 8003552:	440b      	add	r3, r1
 8003554:	3310      	adds	r3, #16
 8003556:	edd3 7a00 	vldr	s15, [r3]
 800355a:	ed9f 7a81 	vldr	s14, [pc, #516]	; 8003760 <getdata_Radar+0x62c>
 800355e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8003562:	e00a      	b.n	800357a <getdata_Radar+0x446>
 8003564:	8b7b      	ldrh	r3, [r7, #26]
 8003566:	1e5a      	subs	r2, r3, #1
 8003568:	497b      	ldr	r1, [pc, #492]	; (8003758 <getdata_Radar+0x624>)
 800356a:	4613      	mov	r3, r2
 800356c:	009b      	lsls	r3, r3, #2
 800356e:	4413      	add	r3, r2
 8003570:	009b      	lsls	r3, r3, #2
 8003572:	440b      	add	r3, r1
 8003574:	3310      	adds	r3, #16
 8003576:	edd3 7a00 	vldr	s15, [r3]
 800357a:	8b7b      	ldrh	r3, [r7, #26]
 800357c:	1e5a      	subs	r2, r3, #1
 800357e:	4976      	ldr	r1, [pc, #472]	; (8003758 <getdata_Radar+0x624>)
 8003580:	4613      	mov	r3, r2
 8003582:	009b      	lsls	r3, r3, #2
 8003584:	4413      	add	r3, r2
 8003586:	009b      	lsls	r3, r3, #2
 8003588:	440b      	add	r3, r1
 800358a:	3310      	adds	r3, #16
 800358c:	edc3 7a00 	vstr	s15, [r3]

					Objects_radar[temp_num_det - 1].speed /= xyzQformat;
 8003590:	8b7b      	ldrh	r3, [r7, #26]
 8003592:	1e5a      	subs	r2, r3, #1
 8003594:	4970      	ldr	r1, [pc, #448]	; (8003758 <getdata_Radar+0x624>)
 8003596:	4613      	mov	r3, r2
 8003598:	009b      	lsls	r3, r3, #2
 800359a:	4413      	add	r3, r2
 800359c:	009b      	lsls	r3, r3, #2
 800359e:	440b      	add	r3, r1
 80035a0:	edd3 6a00 	vldr	s13, [r3]
 80035a4:	89bb      	ldrh	r3, [r7, #12]
 80035a6:	ee07 3a90 	vmov	s15, r3
 80035aa:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80035ae:	8b7b      	ldrh	r3, [r7, #26]
 80035b0:	1e5a      	subs	r2, r3, #1
 80035b2:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80035b6:	4968      	ldr	r1, [pc, #416]	; (8003758 <getdata_Radar+0x624>)
 80035b8:	4613      	mov	r3, r2
 80035ba:	009b      	lsls	r3, r3, #2
 80035bc:	4413      	add	r3, r2
 80035be:	009b      	lsls	r3, r3, #2
 80035c0:	440b      	add	r3, r1
 80035c2:	edc3 7a00 	vstr	s15, [r3]
					Objects_radar[temp_num_det - 1].peak /= xyzQformat;
 80035c6:	8b7b      	ldrh	r3, [r7, #26]
 80035c8:	1e5a      	subs	r2, r3, #1
 80035ca:	4963      	ldr	r1, [pc, #396]	; (8003758 <getdata_Radar+0x624>)
 80035cc:	4613      	mov	r3, r2
 80035ce:	009b      	lsls	r3, r3, #2
 80035d0:	4413      	add	r3, r2
 80035d2:	009b      	lsls	r3, r3, #2
 80035d4:	440b      	add	r3, r1
 80035d6:	3304      	adds	r3, #4
 80035d8:	edd3 6a00 	vldr	s13, [r3]
 80035dc:	89bb      	ldrh	r3, [r7, #12]
 80035de:	ee07 3a90 	vmov	s15, r3
 80035e2:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 80035e6:	8b7b      	ldrh	r3, [r7, #26]
 80035e8:	1e5a      	subs	r2, r3, #1
 80035ea:	eec6 7a87 	vdiv.f32	s15, s13, s14
 80035ee:	495a      	ldr	r1, [pc, #360]	; (8003758 <getdata_Radar+0x624>)
 80035f0:	4613      	mov	r3, r2
 80035f2:	009b      	lsls	r3, r3, #2
 80035f4:	4413      	add	r3, r2
 80035f6:	009b      	lsls	r3, r3, #2
 80035f8:	440b      	add	r3, r1
 80035fa:	3304      	adds	r3, #4
 80035fc:	edc3 7a00 	vstr	s15, [r3]
					Objects_radar[temp_num_det - 1].xobj /= xyzQformat;
 8003600:	8b7b      	ldrh	r3, [r7, #26]
 8003602:	1e5a      	subs	r2, r3, #1
 8003604:	4954      	ldr	r1, [pc, #336]	; (8003758 <getdata_Radar+0x624>)
 8003606:	4613      	mov	r3, r2
 8003608:	009b      	lsls	r3, r3, #2
 800360a:	4413      	add	r3, r2
 800360c:	009b      	lsls	r3, r3, #2
 800360e:	440b      	add	r3, r1
 8003610:	3308      	adds	r3, #8
 8003612:	edd3 6a00 	vldr	s13, [r3]
 8003616:	89bb      	ldrh	r3, [r7, #12]
 8003618:	ee07 3a90 	vmov	s15, r3
 800361c:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003620:	8b7b      	ldrh	r3, [r7, #26]
 8003622:	1e5a      	subs	r2, r3, #1
 8003624:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003628:	494b      	ldr	r1, [pc, #300]	; (8003758 <getdata_Radar+0x624>)
 800362a:	4613      	mov	r3, r2
 800362c:	009b      	lsls	r3, r3, #2
 800362e:	4413      	add	r3, r2
 8003630:	009b      	lsls	r3, r3, #2
 8003632:	440b      	add	r3, r1
 8003634:	3308      	adds	r3, #8
 8003636:	edc3 7a00 	vstr	s15, [r3]
					Objects_radar[temp_num_det - 1].yobj /= xyzQformat;
 800363a:	8b7b      	ldrh	r3, [r7, #26]
 800363c:	1e5a      	subs	r2, r3, #1
 800363e:	4946      	ldr	r1, [pc, #280]	; (8003758 <getdata_Radar+0x624>)
 8003640:	4613      	mov	r3, r2
 8003642:	009b      	lsls	r3, r3, #2
 8003644:	4413      	add	r3, r2
 8003646:	009b      	lsls	r3, r3, #2
 8003648:	440b      	add	r3, r1
 800364a:	330c      	adds	r3, #12
 800364c:	edd3 6a00 	vldr	s13, [r3]
 8003650:	89bb      	ldrh	r3, [r7, #12]
 8003652:	ee07 3a90 	vmov	s15, r3
 8003656:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 800365a:	8b7b      	ldrh	r3, [r7, #26]
 800365c:	1e5a      	subs	r2, r3, #1
 800365e:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8003662:	493d      	ldr	r1, [pc, #244]	; (8003758 <getdata_Radar+0x624>)
 8003664:	4613      	mov	r3, r2
 8003666:	009b      	lsls	r3, r3, #2
 8003668:	4413      	add	r3, r2
 800366a:	009b      	lsls	r3, r3, #2
 800366c:	440b      	add	r3, r1
 800366e:	330c      	adds	r3, #12
 8003670:	edc3 7a00 	vstr	s15, [r3]
					Objects_radar[temp_num_det - 1].zobj /= xyzQformat;
 8003674:	8b7b      	ldrh	r3, [r7, #26]
 8003676:	1e5a      	subs	r2, r3, #1
 8003678:	4937      	ldr	r1, [pc, #220]	; (8003758 <getdata_Radar+0x624>)
 800367a:	4613      	mov	r3, r2
 800367c:	009b      	lsls	r3, r3, #2
 800367e:	4413      	add	r3, r2
 8003680:	009b      	lsls	r3, r3, #2
 8003682:	440b      	add	r3, r1
 8003684:	3310      	adds	r3, #16
 8003686:	edd3 6a00 	vldr	s13, [r3]
 800368a:	89bb      	ldrh	r3, [r7, #12]
 800368c:	ee07 3a90 	vmov	s15, r3
 8003690:	eeb8 7ae7 	vcvt.f32.s32	s14, s15
 8003694:	8b7b      	ldrh	r3, [r7, #26]
 8003696:	1e5a      	subs	r2, r3, #1
 8003698:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800369c:	492e      	ldr	r1, [pc, #184]	; (8003758 <getdata_Radar+0x624>)
 800369e:	4613      	mov	r3, r2
 80036a0:	009b      	lsls	r3, r3, #2
 80036a2:	4413      	add	r3, r2
 80036a4:	009b      	lsls	r3, r3, #2
 80036a6:	440b      	add	r3, r1
 80036a8:	3310      	adds	r3, #16
 80036aa:	edc3 7a00 	vstr	s15, [r3]

					if(count_ch_freq_radar == 0){
 80036ae:	4b2d      	ldr	r3, [pc, #180]	; (8003764 <getdata_Radar+0x630>)
 80036b0:	681b      	ldr	r3, [r3, #0]
 80036b2:	2b00      	cmp	r3, #0
 80036b4:	d13b      	bne.n	800372e <getdata_Radar+0x5fa>
						if (fabs(Objects_radar[temp_num_det - 1].xobj) < 1 && fabs(Objects_radar[temp_num_det - 1].yobj) < 1 || Objects_radar[temp_num_det - 1].speed < - 3){
 80036b6:	8b7b      	ldrh	r3, [r7, #26]
 80036b8:	1e5a      	subs	r2, r3, #1
 80036ba:	4927      	ldr	r1, [pc, #156]	; (8003758 <getdata_Radar+0x624>)
 80036bc:	4613      	mov	r3, r2
 80036be:	009b      	lsls	r3, r3, #2
 80036c0:	4413      	add	r3, r2
 80036c2:	009b      	lsls	r3, r3, #2
 80036c4:	440b      	add	r3, r1
 80036c6:	3308      	adds	r3, #8
 80036c8:	edd3 7a00 	vldr	s15, [r3]
 80036cc:	eef0 7ae7 	vabs.f32	s15, s15
 80036d0:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80036d4:	eef4 7ac7 	vcmpe.f32	s15, s14
 80036d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80036dc:	d513      	bpl.n	8003706 <getdata_Radar+0x5d2>
 80036de:	8b7b      	ldrh	r3, [r7, #26]
 80036e0:	1e5a      	subs	r2, r3, #1
 80036e2:	491d      	ldr	r1, [pc, #116]	; (8003758 <getdata_Radar+0x624>)
 80036e4:	4613      	mov	r3, r2
 80036e6:	009b      	lsls	r3, r3, #2
 80036e8:	4413      	add	r3, r2
 80036ea:	009b      	lsls	r3, r3, #2
 80036ec:	440b      	add	r3, r1
 80036ee:	330c      	adds	r3, #12
 80036f0:	edd3 7a00 	vldr	s15, [r3]
 80036f4:	eef0 7ae7 	vabs.f32	s15, s15
 80036f8:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 80036fc:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003700:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003704:	d410      	bmi.n	8003728 <getdata_Radar+0x5f4>
 8003706:	8b7b      	ldrh	r3, [r7, #26]
 8003708:	1e5a      	subs	r2, r3, #1
 800370a:	4913      	ldr	r1, [pc, #76]	; (8003758 <getdata_Radar+0x624>)
 800370c:	4613      	mov	r3, r2
 800370e:	009b      	lsls	r3, r3, #2
 8003710:	4413      	add	r3, r2
 8003712:	009b      	lsls	r3, r3, #2
 8003714:	440b      	add	r3, r1
 8003716:	edd3 7a00 	vldr	s15, [r3]
 800371a:	eeb8 7a08 	vmov.f32	s14, #136	; 0xc0400000 -3.0
 800371e:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003722:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003726:	d502      	bpl.n	800372e <getdata_Radar+0x5fa>
							actual_freq_radar = 1;
 8003728:	4b0f      	ldr	r3, [pc, #60]	; (8003768 <getdata_Radar+0x634>)
 800372a:	2201      	movs	r2, #1
 800372c:	801a      	strh	r2, [r3, #0]
						}
					}
					actual_freq_radar2 = actual_freq_radar;
 800372e:	4b0e      	ldr	r3, [pc, #56]	; (8003768 <getdata_Radar+0x634>)
 8003730:	881a      	ldrh	r2, [r3, #0]
 8003732:	4b0e      	ldr	r3, [pc, #56]	; (800376c <getdata_Radar+0x638>)
 8003734:	801a      	strh	r2, [r3, #0]

					if (idx >= TLVlength + tempidx)
 8003736:	8bfa      	ldrh	r2, [r7, #30]
 8003738:	89f9      	ldrh	r1, [r7, #14]
 800373a:	693b      	ldr	r3, [r7, #16]
 800373c:	440b      	add	r3, r1
 800373e:	429a      	cmp	r2, r3
 8003740:	d208      	bcs.n	8003754 <getdata_Radar+0x620>
				for (uint16_t temp_num_det = 1; temp_num_det <= num_det; temp_num_det++ )
 8003742:	8b7b      	ldrh	r3, [r7, #26]
 8003744:	3301      	adds	r3, #1
 8003746:	837b      	strh	r3, [r7, #26]
 8003748:	8b7a      	ldrh	r2, [r7, #26]
 800374a:	8afb      	ldrh	r3, [r7, #22]
 800374c:	429a      	cmp	r2, r3
 800374e:	f67f ad95 	bls.w	800327c <getdata_Radar+0x148>
						break;
				}
				break;
 8003752:	e011      	b.n	8003778 <getdata_Radar+0x644>
						break;
 8003754:	bf00      	nop
				break;
 8003756:	e00f      	b.n	8003778 <getdata_Radar+0x644>
 8003758:	20007a98 	.word	0x20007a98
 800375c:	46fffe00 	.word	0x46fffe00
 8003760:	47800000 	.word	0x47800000
 8003764:	200099f8 	.word	0x200099f8
 8003768:	2000ad50 	.word	0x2000ad50
 800376c:	2000ad16 	.word	0x2000ad16
			case 2:
				numClu = num_det;
 8003770:	4a0a      	ldr	r2, [pc, #40]	; (800379c <getdata_Radar+0x668>)
 8003772:	8afb      	ldrh	r3, [r7, #22]
 8003774:	8013      	strh	r3, [r2, #0]
					Clusters_radar[temp_num_det - 1].ysizeclu /= xyzQformat;

					if (idx >= TLVlength + tempidx)
												break;
				}*/
				break;
 8003776:	bf00      	nop
			}
			idx = tempidx + TLVlength;
 8003778:	693b      	ldr	r3, [r7, #16]
 800377a:	b29a      	uxth	r2, r3
 800377c:	89fb      	ldrh	r3, [r7, #14]
 800377e:	4413      	add	r3, r2
 8003780:	83fb      	strh	r3, [r7, #30]
	for(uint8_t tempTLV = 1; tempTLV<= TLVs; tempTLV++)
 8003782:	7f7b      	ldrb	r3, [r7, #29]
 8003784:	3301      	adds	r3, #1
 8003786:	777b      	strb	r3, [r7, #29]
 8003788:	7f7a      	ldrb	r2, [r7, #29]
 800378a:	7e7b      	ldrb	r3, [r7, #25]
 800378c:	429a      	cmp	r2, r3
 800378e:	f67f acfd 	bls.w	800318c <getdata_Radar+0x58>
		}
	}
} // end getdata_radar
 8003792:	bf00      	nop
 8003794:	3720      	adds	r7, #32
 8003796:	46bd      	mov	sp, r7
 8003798:	bd80      	pop	{r7, pc}
 800379a:	bf00      	nop
 800379c:	2000ac54 	.word	0x2000ac54

080037a0 <getPos_Radar>:

void getPos_Radar(void){
 80037a0:	b5f0      	push	{r4, r5, r6, r7, lr}
 80037a2:	b083      	sub	sp, #12
 80037a4:	af00      	add	r7, sp, #0

	//attempt with no map

	moveallx = 0;
 80037a6:	4b44      	ldr	r3, [pc, #272]	; (80038b8 <getPos_Radar+0x118>)
 80037a8:	f04f 0200 	mov.w	r2, #0
 80037ac:	601a      	str	r2, [r3, #0]
	moveally = 0;
 80037ae:	4b43      	ldr	r3, [pc, #268]	; (80038bc <getPos_Radar+0x11c>)
 80037b0:	f04f 0200 	mov.w	r2, #0
 80037b4:	601a      	str	r2, [r3, #0]
	speedall = 0;
 80037b6:	4b42      	ldr	r3, [pc, #264]	; (80038c0 <getPos_Radar+0x120>)
 80037b8:	f04f 0200 	mov.w	r2, #0
 80037bc:	601a      	str	r2, [r3, #0]
	meanmove = 0;
 80037be:	4b41      	ldr	r3, [pc, #260]	; (80038c4 <getPos_Radar+0x124>)
 80037c0:	2200      	movs	r2, #0
 80037c2:	701a      	strb	r2, [r3, #0]
	gap = 0.056; //0.8
 80037c4:	4b40      	ldr	r3, [pc, #256]	; (80038c8 <getPos_Radar+0x128>)
 80037c6:	4a41      	ldr	r2, [pc, #260]	; (80038cc <getPos_Radar+0x12c>)
 80037c8:	601a      	str	r2, [r3, #0]
	uint16_t objmax = numObj_prev;
 80037ca:	4b41      	ldr	r3, [pc, #260]	; (80038d0 <getPos_Radar+0x130>)
 80037cc:	881b      	ldrh	r3, [r3, #0]
 80037ce:	807b      	strh	r3, [r7, #2]
	objmax = (numObj_prev2 > objmax) ? numObj_prev2 : objmax;
 80037d0:	4b40      	ldr	r3, [pc, #256]	; (80038d4 <getPos_Radar+0x134>)
 80037d2:	881b      	ldrh	r3, [r3, #0]
 80037d4:	887a      	ldrh	r2, [r7, #2]
 80037d6:	4293      	cmp	r3, r2
 80037d8:	bf38      	it	cc
 80037da:	4613      	movcc	r3, r2
 80037dc:	807b      	strh	r3, [r7, #2]
	update_factor = 15;
 80037de:	4b3e      	ldr	r3, [pc, #248]	; (80038d8 <getPos_Radar+0x138>)
 80037e0:	220f      	movs	r2, #15
 80037e2:	801a      	strh	r2, [r3, #0]
		gap = 0.1;
	}*/



	for (uint16_t temp_obj_prev = objmax; temp_obj_prev > 0; temp_obj_prev--){
 80037e4:	887b      	ldrh	r3, [r7, #2]
 80037e6:	80fb      	strh	r3, [r7, #6]
 80037e8:	e391      	b.n	8003f0e <getPos_Radar+0x76e>
		moveobjx = 0; // move on realworld x of the prev obj
 80037ea:	4b3c      	ldr	r3, [pc, #240]	; (80038dc <getPos_Radar+0x13c>)
 80037ec:	f04f 0200 	mov.w	r2, #0
 80037f0:	601a      	str	r2, [r3, #0]
		moveobjy = 0; // move on realworld y of the prev obj
 80037f2:	4b3b      	ldr	r3, [pc, #236]	; (80038e0 <getPos_Radar+0x140>)
 80037f4:	f04f 0200 	mov.w	r2, #0
 80037f8:	601a      	str	r2, [r3, #0]
		moveobjx2 = 0; // move on realworld x of the prev 2 obj
 80037fa:	4b3a      	ldr	r3, [pc, #232]	; (80038e4 <getPos_Radar+0x144>)
 80037fc:	f04f 0200 	mov.w	r2, #0
 8003800:	601a      	str	r2, [r3, #0]
		moveobjy2 = 0; // move on realworld y of the prev 2 obj
 8003802:	4b39      	ldr	r3, [pc, #228]	; (80038e8 <getPos_Radar+0x148>)
 8003804:	f04f 0200 	mov.w	r2, #0
 8003808:	601a      	str	r2, [r3, #0]
		speedobj = 0;
 800380a:	4b38      	ldr	r3, [pc, #224]	; (80038ec <getPos_Radar+0x14c>)
 800380c:	f04f 0200 	mov.w	r2, #0
 8003810:	601a      	str	r2, [r3, #0]
		objinrange = 0; // counter of objects detected near to this previous detection
 8003812:	4b37      	ldr	r3, [pc, #220]	; (80038f0 <getPos_Radar+0x150>)
 8003814:	2200      	movs	r2, #0
 8003816:	701a      	strb	r2, [r3, #0]
		objinrange2 = 0; // counter of objects detected near to this previous detection
 8003818:	4b36      	ldr	r3, [pc, #216]	; (80038f4 <getPos_Radar+0x154>)
 800381a:	2200      	movs	r2, #0
 800381c:	701a      	strb	r2, [r3, #0]
//	float speedlimit = sqrtf(states_X[2]^2 + states_X[3]^2);
	//	float speedlimit = 0.8;
		if(fabs(Objects_radar_previous[temp_obj_prev - 1].speed) <= 0.8 || (Objects_radar_previous[temp_obj_prev - 1].speed <= 0 && frontback)
 800381e:	88fb      	ldrh	r3, [r7, #6]
 8003820:	1e5a      	subs	r2, r3, #1
 8003822:	4935      	ldr	r1, [pc, #212]	; (80038f8 <getPos_Radar+0x158>)
 8003824:	4613      	mov	r3, r2
 8003826:	009b      	lsls	r3, r3, #2
 8003828:	4413      	add	r3, r2
 800382a:	009b      	lsls	r3, r3, #2
 800382c:	440b      	add	r3, r1
 800382e:	edd3 7a00 	vldr	s15, [r3]
 8003832:	eef0 7ae7 	vabs.f32	s15, s15
 8003836:	ee17 0a90 	vmov	r0, s15
 800383a:	f7fc fe57 	bl	80004ec <__aeabi_f2d>
 800383e:	a31c      	add	r3, pc, #112	; (adr r3, 80038b0 <getPos_Radar+0x110>)
 8003840:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003844:	f7fd f926 	bl	8000a94 <__aeabi_dcmple>
 8003848:	4603      	mov	r3, r0
 800384a:	2b00      	cmp	r3, #0
 800384c:	d12a      	bne.n	80038a4 <getPos_Radar+0x104>
 800384e:	88fb      	ldrh	r3, [r7, #6]
 8003850:	1e5a      	subs	r2, r3, #1
 8003852:	4929      	ldr	r1, [pc, #164]	; (80038f8 <getPos_Radar+0x158>)
 8003854:	4613      	mov	r3, r2
 8003856:	009b      	lsls	r3, r3, #2
 8003858:	4413      	add	r3, r2
 800385a:	009b      	lsls	r3, r3, #2
 800385c:	440b      	add	r3, r1
 800385e:	edd3 7a00 	vldr	s15, [r3]
 8003862:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003866:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800386a:	d803      	bhi.n	8003874 <getPos_Radar+0xd4>
 800386c:	4b23      	ldr	r3, [pc, #140]	; (80038fc <getPos_Radar+0x15c>)
 800386e:	781b      	ldrb	r3, [r3, #0]
 8003870:	2b00      	cmp	r3, #0
 8003872:	d117      	bne.n	80038a4 <getPos_Radar+0x104>
				||  (Objects_radar_previous[temp_obj_prev - 1].speed > 0 && frontback == false) ){
 8003874:	88fb      	ldrh	r3, [r7, #6]
 8003876:	1e5a      	subs	r2, r3, #1
 8003878:	491f      	ldr	r1, [pc, #124]	; (80038f8 <getPos_Radar+0x158>)
 800387a:	4613      	mov	r3, r2
 800387c:	009b      	lsls	r3, r3, #2
 800387e:	4413      	add	r3, r2
 8003880:	009b      	lsls	r3, r3, #2
 8003882:	440b      	add	r3, r1
 8003884:	edd3 7a00 	vldr	s15, [r3]
 8003888:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 800388c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003890:	f340 82a1 	ble.w	8003dd6 <getPos_Radar+0x636>
 8003894:	4b19      	ldr	r3, [pc, #100]	; (80038fc <getPos_Radar+0x15c>)
 8003896:	781b      	ldrb	r3, [r3, #0]
 8003898:	f083 0301 	eor.w	r3, r3, #1
 800389c:	b2db      	uxtb	r3, r3
 800389e:	2b00      	cmp	r3, #0
 80038a0:	f000 8299 	beq.w	8003dd6 <getPos_Radar+0x636>

			for (uint16_t temp_obj = numObj; temp_obj > 0; temp_obj--){
 80038a4:	4b16      	ldr	r3, [pc, #88]	; (8003900 <getPos_Radar+0x160>)
 80038a6:	881b      	ldrh	r3, [r3, #0]
 80038a8:	80bb      	strh	r3, [r7, #4]
 80038aa:	e290      	b.n	8003dce <getPos_Radar+0x62e>
 80038ac:	f3af 8000 	nop.w
 80038b0:	9999999a 	.word	0x9999999a
 80038b4:	3fe99999 	.word	0x3fe99999
 80038b8:	2000ac48 	.word	0x2000ac48
 80038bc:	20008a50 	.word	0x20008a50
 80038c0:	20009a04 	.word	0x20009a04
 80038c4:	20009c2a 	.word	0x20009c2a
 80038c8:	2000ad10 	.word	0x2000ad10
 80038cc:	3d656042 	.word	0x3d656042
 80038d0:	20009a2c 	.word	0x20009a2c
 80038d4:	20008a48 	.word	0x20008a48
 80038d8:	2000abf8 	.word	0x2000abf8
 80038dc:	2000ad54 	.word	0x2000ad54
 80038e0:	20009a24 	.word	0x20009a24
 80038e4:	2000ad30 	.word	0x2000ad30
 80038e8:	2000acb8 	.word	0x2000acb8
 80038ec:	20009a88 	.word	0x20009a88
 80038f0:	2000acc2 	.word	0x2000acc2
 80038f4:	2000acc1 	.word	0x2000acc1
 80038f8:	20009c40 	.word	0x20009c40
 80038fc:	2000acc0 	.word	0x2000acc0
 8003900:	2000ad14 	.word	0x2000ad14
				if(temp_obj_prev <= numObj_prev)
 8003904:	4bd4      	ldr	r3, [pc, #848]	; (8003c58 <getPos_Radar+0x4b8>)
 8003906:	881b      	ldrh	r3, [r3, #0]
 8003908:	88fa      	ldrh	r2, [r7, #6]
 800390a:	429a      	cmp	r2, r3
 800390c:	f200 8119 	bhi.w	8003b42 <getPos_Radar+0x3a2>
				if(Objects_radar[temp_obj - 1].xobj >= Objects_radar_previous[temp_obj_prev - 1].xobj - gap &&
 8003910:	88bb      	ldrh	r3, [r7, #4]
 8003912:	1e5a      	subs	r2, r3, #1
 8003914:	49d1      	ldr	r1, [pc, #836]	; (8003c5c <getPos_Radar+0x4bc>)
 8003916:	4613      	mov	r3, r2
 8003918:	009b      	lsls	r3, r3, #2
 800391a:	4413      	add	r3, r2
 800391c:	009b      	lsls	r3, r3, #2
 800391e:	440b      	add	r3, r1
 8003920:	3308      	adds	r3, #8
 8003922:	ed93 7a00 	vldr	s14, [r3]
 8003926:	88fb      	ldrh	r3, [r7, #6]
 8003928:	1e5a      	subs	r2, r3, #1
 800392a:	49cd      	ldr	r1, [pc, #820]	; (8003c60 <getPos_Radar+0x4c0>)
 800392c:	4613      	mov	r3, r2
 800392e:	009b      	lsls	r3, r3, #2
 8003930:	4413      	add	r3, r2
 8003932:	009b      	lsls	r3, r3, #2
 8003934:	440b      	add	r3, r1
 8003936:	3308      	adds	r3, #8
 8003938:	edd3 6a00 	vldr	s13, [r3]
 800393c:	4bc9      	ldr	r3, [pc, #804]	; (8003c64 <getPos_Radar+0x4c4>)
 800393e:	edd3 7a00 	vldr	s15, [r3]
 8003942:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8003946:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800394a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800394e:	f2c0 80f8 	blt.w	8003b42 <getPos_Radar+0x3a2>
				   Objects_radar[temp_obj - 1].xobj <= Objects_radar_previous[temp_obj_prev - 1].xobj + gap &&
 8003952:	88bb      	ldrh	r3, [r7, #4]
 8003954:	1e5a      	subs	r2, r3, #1
 8003956:	49c1      	ldr	r1, [pc, #772]	; (8003c5c <getPos_Radar+0x4bc>)
 8003958:	4613      	mov	r3, r2
 800395a:	009b      	lsls	r3, r3, #2
 800395c:	4413      	add	r3, r2
 800395e:	009b      	lsls	r3, r3, #2
 8003960:	440b      	add	r3, r1
 8003962:	3308      	adds	r3, #8
 8003964:	ed93 7a00 	vldr	s14, [r3]
 8003968:	88fb      	ldrh	r3, [r7, #6]
 800396a:	1e5a      	subs	r2, r3, #1
 800396c:	49bc      	ldr	r1, [pc, #752]	; (8003c60 <getPos_Radar+0x4c0>)
 800396e:	4613      	mov	r3, r2
 8003970:	009b      	lsls	r3, r3, #2
 8003972:	4413      	add	r3, r2
 8003974:	009b      	lsls	r3, r3, #2
 8003976:	440b      	add	r3, r1
 8003978:	3308      	adds	r3, #8
 800397a:	edd3 6a00 	vldr	s13, [r3]
 800397e:	4bb9      	ldr	r3, [pc, #740]	; (8003c64 <getPos_Radar+0x4c4>)
 8003980:	edd3 7a00 	vldr	s15, [r3]
 8003984:	ee76 7aa7 	vadd.f32	s15, s13, s15
				if(Objects_radar[temp_obj - 1].xobj >= Objects_radar_previous[temp_obj_prev - 1].xobj - gap &&
 8003988:	eeb4 7ae7 	vcmpe.f32	s14, s15
 800398c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003990:	f200 80d7 	bhi.w	8003b42 <getPos_Radar+0x3a2>
				   Objects_radar[temp_obj - 1].yobj >= Objects_radar_previous[temp_obj_prev - 1].yobj - gap &&
 8003994:	88bb      	ldrh	r3, [r7, #4]
 8003996:	1e5a      	subs	r2, r3, #1
 8003998:	49b0      	ldr	r1, [pc, #704]	; (8003c5c <getPos_Radar+0x4bc>)
 800399a:	4613      	mov	r3, r2
 800399c:	009b      	lsls	r3, r3, #2
 800399e:	4413      	add	r3, r2
 80039a0:	009b      	lsls	r3, r3, #2
 80039a2:	440b      	add	r3, r1
 80039a4:	330c      	adds	r3, #12
 80039a6:	ed93 7a00 	vldr	s14, [r3]
 80039aa:	88fb      	ldrh	r3, [r7, #6]
 80039ac:	1e5a      	subs	r2, r3, #1
 80039ae:	49ac      	ldr	r1, [pc, #688]	; (8003c60 <getPos_Radar+0x4c0>)
 80039b0:	4613      	mov	r3, r2
 80039b2:	009b      	lsls	r3, r3, #2
 80039b4:	4413      	add	r3, r2
 80039b6:	009b      	lsls	r3, r3, #2
 80039b8:	440b      	add	r3, r1
 80039ba:	330c      	adds	r3, #12
 80039bc:	edd3 6a00 	vldr	s13, [r3]
 80039c0:	4ba8      	ldr	r3, [pc, #672]	; (8003c64 <getPos_Radar+0x4c4>)
 80039c2:	edd3 7a00 	vldr	s15, [r3]
 80039c6:	ee76 7ae7 	vsub.f32	s15, s13, s15
				   Objects_radar[temp_obj - 1].xobj <= Objects_radar_previous[temp_obj_prev - 1].xobj + gap &&
 80039ca:	eeb4 7ae7 	vcmpe.f32	s14, s15
 80039ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80039d2:	f2c0 80b6 	blt.w	8003b42 <getPos_Radar+0x3a2>
				   Objects_radar[temp_obj - 1].yobj <= Objects_radar_previous[temp_obj_prev - 1].yobj + gap &&
 80039d6:	88bb      	ldrh	r3, [r7, #4]
 80039d8:	1e5a      	subs	r2, r3, #1
 80039da:	49a0      	ldr	r1, [pc, #640]	; (8003c5c <getPos_Radar+0x4bc>)
 80039dc:	4613      	mov	r3, r2
 80039de:	009b      	lsls	r3, r3, #2
 80039e0:	4413      	add	r3, r2
 80039e2:	009b      	lsls	r3, r3, #2
 80039e4:	440b      	add	r3, r1
 80039e6:	330c      	adds	r3, #12
 80039e8:	ed93 7a00 	vldr	s14, [r3]
 80039ec:	88fb      	ldrh	r3, [r7, #6]
 80039ee:	1e5a      	subs	r2, r3, #1
 80039f0:	499b      	ldr	r1, [pc, #620]	; (8003c60 <getPos_Radar+0x4c0>)
 80039f2:	4613      	mov	r3, r2
 80039f4:	009b      	lsls	r3, r3, #2
 80039f6:	4413      	add	r3, r2
 80039f8:	009b      	lsls	r3, r3, #2
 80039fa:	440b      	add	r3, r1
 80039fc:	330c      	adds	r3, #12
 80039fe:	edd3 6a00 	vldr	s13, [r3]
 8003a02:	4b98      	ldr	r3, [pc, #608]	; (8003c64 <getPos_Radar+0x4c4>)
 8003a04:	edd3 7a00 	vldr	s15, [r3]
 8003a08:	ee76 7aa7 	vadd.f32	s15, s13, s15
				   Objects_radar[temp_obj - 1].yobj >= Objects_radar_previous[temp_obj_prev - 1].yobj - gap &&
 8003a0c:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003a10:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a14:	f200 8095 	bhi.w	8003b42 <getPos_Radar+0x3a2>
				   fabs(Objects_radar[temp_obj - 1].speed) <= 1 && ((Objects_radar[temp_obj - 1].speed <= 0 && frontback)
 8003a18:	88bb      	ldrh	r3, [r7, #4]
 8003a1a:	1e5a      	subs	r2, r3, #1
 8003a1c:	498f      	ldr	r1, [pc, #572]	; (8003c5c <getPos_Radar+0x4bc>)
 8003a1e:	4613      	mov	r3, r2
 8003a20:	009b      	lsls	r3, r3, #2
 8003a22:	4413      	add	r3, r2
 8003a24:	009b      	lsls	r3, r3, #2
 8003a26:	440b      	add	r3, r1
 8003a28:	edd3 7a00 	vldr	s15, [r3]
 8003a2c:	eef0 7ae7 	vabs.f32	s15, s15
				   Objects_radar[temp_obj - 1].yobj <= Objects_radar_previous[temp_obj_prev - 1].yobj + gap &&
 8003a30:	eeb7 7a00 	vmov.f32	s14, #112	; 0x3f800000  1.0
 8003a34:	eef4 7ac7 	vcmpe.f32	s15, s14
 8003a38:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a3c:	f200 8081 	bhi.w	8003b42 <getPos_Radar+0x3a2>
				   fabs(Objects_radar[temp_obj - 1].speed) <= 1 && ((Objects_radar[temp_obj - 1].speed <= 0 && frontback)
 8003a40:	88bb      	ldrh	r3, [r7, #4]
 8003a42:	1e5a      	subs	r2, r3, #1
 8003a44:	4985      	ldr	r1, [pc, #532]	; (8003c5c <getPos_Radar+0x4bc>)
 8003a46:	4613      	mov	r3, r2
 8003a48:	009b      	lsls	r3, r3, #2
 8003a4a:	4413      	add	r3, r2
 8003a4c:	009b      	lsls	r3, r3, #2
 8003a4e:	440b      	add	r3, r1
 8003a50:	edd3 7a00 	vldr	s15, [r3]
 8003a54:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003a58:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a5c:	d803      	bhi.n	8003a66 <getPos_Radar+0x2c6>
 8003a5e:	4b82      	ldr	r3, [pc, #520]	; (8003c68 <getPos_Radar+0x4c8>)
 8003a60:	781b      	ldrb	r3, [r3, #0]
 8003a62:	2b00      	cmp	r3, #0
 8003a64:	d115      	bne.n	8003a92 <getPos_Radar+0x2f2>
					||  (Objects_radar[temp_obj - 1].speed >= 0 && frontback == false)) ){
 8003a66:	88bb      	ldrh	r3, [r7, #4]
 8003a68:	1e5a      	subs	r2, r3, #1
 8003a6a:	497c      	ldr	r1, [pc, #496]	; (8003c5c <getPos_Radar+0x4bc>)
 8003a6c:	4613      	mov	r3, r2
 8003a6e:	009b      	lsls	r3, r3, #2
 8003a70:	4413      	add	r3, r2
 8003a72:	009b      	lsls	r3, r3, #2
 8003a74:	440b      	add	r3, r1
 8003a76:	edd3 7a00 	vldr	s15, [r3]
 8003a7a:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003a7e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003a82:	db5e      	blt.n	8003b42 <getPos_Radar+0x3a2>
 8003a84:	4b78      	ldr	r3, [pc, #480]	; (8003c68 <getPos_Radar+0x4c8>)
 8003a86:	781b      	ldrb	r3, [r3, #0]
 8003a88:	f083 0301 	eor.w	r3, r3, #1
 8003a8c:	b2db      	uxtb	r3, r3
 8003a8e:	2b00      	cmp	r3, #0
 8003a90:	d057      	beq.n	8003b42 <getPos_Radar+0x3a2>

					speedobj +=  Objects_radar[temp_obj-1].speed;
 8003a92:	88bb      	ldrh	r3, [r7, #4]
 8003a94:	1e5a      	subs	r2, r3, #1
 8003a96:	4971      	ldr	r1, [pc, #452]	; (8003c5c <getPos_Radar+0x4bc>)
 8003a98:	4613      	mov	r3, r2
 8003a9a:	009b      	lsls	r3, r3, #2
 8003a9c:	4413      	add	r3, r2
 8003a9e:	009b      	lsls	r3, r3, #2
 8003aa0:	440b      	add	r3, r1
 8003aa2:	ed93 7a00 	vldr	s14, [r3]
 8003aa6:	4b71      	ldr	r3, [pc, #452]	; (8003c6c <getPos_Radar+0x4cc>)
 8003aa8:	edd3 7a00 	vldr	s15, [r3]
 8003aac:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003ab0:	4b6e      	ldr	r3, [pc, #440]	; (8003c6c <getPos_Radar+0x4cc>)
 8003ab2:	edc3 7a00 	vstr	s15, [r3]
					moveobjx += ((Objects_radar_previous[temp_obj_prev - 1].xobj - Objects_radar[temp_obj - 1].xobj ));
 8003ab6:	88fb      	ldrh	r3, [r7, #6]
 8003ab8:	1e5a      	subs	r2, r3, #1
 8003aba:	4969      	ldr	r1, [pc, #420]	; (8003c60 <getPos_Radar+0x4c0>)
 8003abc:	4613      	mov	r3, r2
 8003abe:	009b      	lsls	r3, r3, #2
 8003ac0:	4413      	add	r3, r2
 8003ac2:	009b      	lsls	r3, r3, #2
 8003ac4:	440b      	add	r3, r1
 8003ac6:	3308      	adds	r3, #8
 8003ac8:	ed93 7a00 	vldr	s14, [r3]
 8003acc:	88bb      	ldrh	r3, [r7, #4]
 8003ace:	1e5a      	subs	r2, r3, #1
 8003ad0:	4962      	ldr	r1, [pc, #392]	; (8003c5c <getPos_Radar+0x4bc>)
 8003ad2:	4613      	mov	r3, r2
 8003ad4:	009b      	lsls	r3, r3, #2
 8003ad6:	4413      	add	r3, r2
 8003ad8:	009b      	lsls	r3, r3, #2
 8003ada:	440b      	add	r3, r1
 8003adc:	3308      	adds	r3, #8
 8003ade:	edd3 7a00 	vldr	s15, [r3]
 8003ae2:	ee37 7a67 	vsub.f32	s14, s14, s15
 8003ae6:	4b62      	ldr	r3, [pc, #392]	; (8003c70 <getPos_Radar+0x4d0>)
 8003ae8:	edd3 7a00 	vldr	s15, [r3]
 8003aec:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003af0:	4b5f      	ldr	r3, [pc, #380]	; (8003c70 <getPos_Radar+0x4d0>)
 8003af2:	edc3 7a00 	vstr	s15, [r3]
					moveobjy += ((Objects_radar_previous[temp_obj_prev - 1].yobj - Objects_radar[temp_obj - 1].yobj ));
 8003af6:	88fb      	ldrh	r3, [r7, #6]
 8003af8:	1e5a      	subs	r2, r3, #1
 8003afa:	4959      	ldr	r1, [pc, #356]	; (8003c60 <getPos_Radar+0x4c0>)
 8003afc:	4613      	mov	r3, r2
 8003afe:	009b      	lsls	r3, r3, #2
 8003b00:	4413      	add	r3, r2
 8003b02:	009b      	lsls	r3, r3, #2
 8003b04:	440b      	add	r3, r1
 8003b06:	330c      	adds	r3, #12
 8003b08:	ed93 7a00 	vldr	s14, [r3]
 8003b0c:	88bb      	ldrh	r3, [r7, #4]
 8003b0e:	1e5a      	subs	r2, r3, #1
 8003b10:	4952      	ldr	r1, [pc, #328]	; (8003c5c <getPos_Radar+0x4bc>)
 8003b12:	4613      	mov	r3, r2
 8003b14:	009b      	lsls	r3, r3, #2
 8003b16:	4413      	add	r3, r2
 8003b18:	009b      	lsls	r3, r3, #2
 8003b1a:	440b      	add	r3, r1
 8003b1c:	330c      	adds	r3, #12
 8003b1e:	edd3 7a00 	vldr	s15, [r3]
 8003b22:	ee37 7a67 	vsub.f32	s14, s14, s15
 8003b26:	4b53      	ldr	r3, [pc, #332]	; (8003c74 <getPos_Radar+0x4d4>)
 8003b28:	edd3 7a00 	vldr	s15, [r3]
 8003b2c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003b30:	4b50      	ldr	r3, [pc, #320]	; (8003c74 <getPos_Radar+0x4d4>)
 8003b32:	edc3 7a00 	vstr	s15, [r3]
					objinrange++;
 8003b36:	4b50      	ldr	r3, [pc, #320]	; (8003c78 <getPos_Radar+0x4d8>)
 8003b38:	781b      	ldrb	r3, [r3, #0]
 8003b3a:	3301      	adds	r3, #1
 8003b3c:	b2da      	uxtb	r2, r3
 8003b3e:	4b4e      	ldr	r3, [pc, #312]	; (8003c78 <getPos_Radar+0x4d8>)
 8003b40:	701a      	strb	r2, [r3, #0]
				} // end if previous detections

				if(temp_obj_prev <= numObj_prev2)
 8003b42:	4b4e      	ldr	r3, [pc, #312]	; (8003c7c <getPos_Radar+0x4dc>)
 8003b44:	881b      	ldrh	r3, [r3, #0]
 8003b46:	88fa      	ldrh	r2, [r7, #6]
 8003b48:	429a      	cmp	r2, r3
 8003b4a:	f200 813d 	bhi.w	8003dc8 <getPos_Radar+0x628>
				if(Objects_radar[temp_obj - 1].xobj >= Objects_radar_previous_2[temp_obj_prev - 1].xobj - gap &&
 8003b4e:	88bb      	ldrh	r3, [r7, #4]
 8003b50:	1e5a      	subs	r2, r3, #1
 8003b52:	4942      	ldr	r1, [pc, #264]	; (8003c5c <getPos_Radar+0x4bc>)
 8003b54:	4613      	mov	r3, r2
 8003b56:	009b      	lsls	r3, r3, #2
 8003b58:	4413      	add	r3, r2
 8003b5a:	009b      	lsls	r3, r3, #2
 8003b5c:	440b      	add	r3, r1
 8003b5e:	3308      	adds	r3, #8
 8003b60:	ed93 7a00 	vldr	s14, [r3]
 8003b64:	88fb      	ldrh	r3, [r7, #6]
 8003b66:	1e5a      	subs	r2, r3, #1
 8003b68:	4945      	ldr	r1, [pc, #276]	; (8003c80 <getPos_Radar+0x4e0>)
 8003b6a:	4613      	mov	r3, r2
 8003b6c:	009b      	lsls	r3, r3, #2
 8003b6e:	4413      	add	r3, r2
 8003b70:	009b      	lsls	r3, r3, #2
 8003b72:	440b      	add	r3, r1
 8003b74:	3308      	adds	r3, #8
 8003b76:	edd3 6a00 	vldr	s13, [r3]
 8003b7a:	4b3a      	ldr	r3, [pc, #232]	; (8003c64 <getPos_Radar+0x4c4>)
 8003b7c:	edd3 7a00 	vldr	s15, [r3]
 8003b80:	ee76 7ae7 	vsub.f32	s15, s13, s15
 8003b84:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003b88:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003b8c:	f2c0 811c 	blt.w	8003dc8 <getPos_Radar+0x628>
				   Objects_radar[temp_obj - 1].xobj <= Objects_radar_previous_2[temp_obj_prev - 1].xobj + gap &&
 8003b90:	88bb      	ldrh	r3, [r7, #4]
 8003b92:	1e5a      	subs	r2, r3, #1
 8003b94:	4931      	ldr	r1, [pc, #196]	; (8003c5c <getPos_Radar+0x4bc>)
 8003b96:	4613      	mov	r3, r2
 8003b98:	009b      	lsls	r3, r3, #2
 8003b9a:	4413      	add	r3, r2
 8003b9c:	009b      	lsls	r3, r3, #2
 8003b9e:	440b      	add	r3, r1
 8003ba0:	3308      	adds	r3, #8
 8003ba2:	ed93 7a00 	vldr	s14, [r3]
 8003ba6:	88fb      	ldrh	r3, [r7, #6]
 8003ba8:	1e5a      	subs	r2, r3, #1
 8003baa:	4935      	ldr	r1, [pc, #212]	; (8003c80 <getPos_Radar+0x4e0>)
 8003bac:	4613      	mov	r3, r2
 8003bae:	009b      	lsls	r3, r3, #2
 8003bb0:	4413      	add	r3, r2
 8003bb2:	009b      	lsls	r3, r3, #2
 8003bb4:	440b      	add	r3, r1
 8003bb6:	3308      	adds	r3, #8
 8003bb8:	edd3 6a00 	vldr	s13, [r3]
 8003bbc:	4b29      	ldr	r3, [pc, #164]	; (8003c64 <getPos_Radar+0x4c4>)
 8003bbe:	edd3 7a00 	vldr	s15, [r3]
 8003bc2:	ee76 7aa7 	vadd.f32	s15, s13, s15
				if(Objects_radar[temp_obj - 1].xobj >= Objects_radar_previous_2[temp_obj_prev - 1].xobj - gap &&
 8003bc6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003bca:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003bce:	f200 80fb 	bhi.w	8003dc8 <getPos_Radar+0x628>
				   Objects_radar[temp_obj - 1].yobj >= Objects_radar_previous_2[temp_obj_prev - 1].yobj - gap &&
 8003bd2:	88bb      	ldrh	r3, [r7, #4]
 8003bd4:	1e5a      	subs	r2, r3, #1
 8003bd6:	4921      	ldr	r1, [pc, #132]	; (8003c5c <getPos_Radar+0x4bc>)
 8003bd8:	4613      	mov	r3, r2
 8003bda:	009b      	lsls	r3, r3, #2
 8003bdc:	4413      	add	r3, r2
 8003bde:	009b      	lsls	r3, r3, #2
 8003be0:	440b      	add	r3, r1
 8003be2:	330c      	adds	r3, #12
 8003be4:	ed93 7a00 	vldr	s14, [r3]
 8003be8:	88fb      	ldrh	r3, [r7, #6]
 8003bea:	1e5a      	subs	r2, r3, #1
 8003bec:	4924      	ldr	r1, [pc, #144]	; (8003c80 <getPos_Radar+0x4e0>)
 8003bee:	4613      	mov	r3, r2
 8003bf0:	009b      	lsls	r3, r3, #2
 8003bf2:	4413      	add	r3, r2
 8003bf4:	009b      	lsls	r3, r3, #2
 8003bf6:	440b      	add	r3, r1
 8003bf8:	330c      	adds	r3, #12
 8003bfa:	edd3 6a00 	vldr	s13, [r3]
 8003bfe:	4b19      	ldr	r3, [pc, #100]	; (8003c64 <getPos_Radar+0x4c4>)
 8003c00:	edd3 7a00 	vldr	s15, [r3]
 8003c04:	ee76 7ae7 	vsub.f32	s15, s13, s15
				   Objects_radar[temp_obj - 1].xobj <= Objects_radar_previous_2[temp_obj_prev - 1].xobj + gap &&
 8003c08:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003c0c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003c10:	f2c0 80da 	blt.w	8003dc8 <getPos_Radar+0x628>
				   Objects_radar[temp_obj - 1].yobj <= Objects_radar_previous_2[temp_obj_prev - 1].yobj + gap &&
 8003c14:	88bb      	ldrh	r3, [r7, #4]
 8003c16:	1e5a      	subs	r2, r3, #1
 8003c18:	4910      	ldr	r1, [pc, #64]	; (8003c5c <getPos_Radar+0x4bc>)
 8003c1a:	4613      	mov	r3, r2
 8003c1c:	009b      	lsls	r3, r3, #2
 8003c1e:	4413      	add	r3, r2
 8003c20:	009b      	lsls	r3, r3, #2
 8003c22:	440b      	add	r3, r1
 8003c24:	330c      	adds	r3, #12
 8003c26:	ed93 7a00 	vldr	s14, [r3]
 8003c2a:	88fb      	ldrh	r3, [r7, #6]
 8003c2c:	1e5a      	subs	r2, r3, #1
 8003c2e:	4914      	ldr	r1, [pc, #80]	; (8003c80 <getPos_Radar+0x4e0>)
 8003c30:	4613      	mov	r3, r2
 8003c32:	009b      	lsls	r3, r3, #2
 8003c34:	4413      	add	r3, r2
 8003c36:	009b      	lsls	r3, r3, #2
 8003c38:	440b      	add	r3, r1
 8003c3a:	330c      	adds	r3, #12
 8003c3c:	edd3 6a00 	vldr	s13, [r3]
 8003c40:	4b08      	ldr	r3, [pc, #32]	; (8003c64 <getPos_Radar+0x4c4>)
 8003c42:	edd3 7a00 	vldr	s15, [r3]
 8003c46:	ee76 7aa7 	vadd.f32	s15, s13, s15
				   Objects_radar[temp_obj - 1].yobj >= Objects_radar_previous_2[temp_obj_prev - 1].yobj - gap &&
 8003c4a:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8003c4e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003c52:	f200 80b9 	bhi.w	8003dc8 <getPos_Radar+0x628>
 8003c56:	e015      	b.n	8003c84 <getPos_Radar+0x4e4>
 8003c58:	20009a2c 	.word	0x20009a2c
 8003c5c:	20007a98 	.word	0x20007a98
 8003c60:	20009c40 	.word	0x20009c40
 8003c64:	2000ad10 	.word	0x2000ad10
 8003c68:	2000acc0 	.word	0x2000acc0
 8003c6c:	20009a88 	.word	0x20009a88
 8003c70:	2000ad54 	.word	0x2000ad54
 8003c74:	20009a24 	.word	0x20009a24
 8003c78:	2000acc2 	.word	0x2000acc2
 8003c7c:	20008a48 	.word	0x20008a48
 8003c80:	20008a58 	.word	0x20008a58
				   fabs(Objects_radar[temp_obj - 1].speed) <= 0.8 && ((Objects_radar[temp_obj - 1].speed <= 0 && frontback)
 8003c84:	88bb      	ldrh	r3, [r7, #4]
 8003c86:	1e5a      	subs	r2, r3, #1
 8003c88:	49b1      	ldr	r1, [pc, #708]	; (8003f50 <getPos_Radar+0x7b0>)
 8003c8a:	4613      	mov	r3, r2
 8003c8c:	009b      	lsls	r3, r3, #2
 8003c8e:	4413      	add	r3, r2
 8003c90:	009b      	lsls	r3, r3, #2
 8003c92:	440b      	add	r3, r1
 8003c94:	edd3 7a00 	vldr	s15, [r3]
 8003c98:	eef0 7ae7 	vabs.f32	s15, s15
 8003c9c:	ee17 0a90 	vmov	r0, s15
 8003ca0:	f7fc fc24 	bl	80004ec <__aeabi_f2d>
				   Objects_radar[temp_obj - 1].yobj <= Objects_radar_previous_2[temp_obj_prev - 1].yobj + gap &&
 8003ca4:	a3a8      	add	r3, pc, #672	; (adr r3, 8003f48 <getPos_Radar+0x7a8>)
 8003ca6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003caa:	f7fc fef3 	bl	8000a94 <__aeabi_dcmple>
 8003cae:	4603      	mov	r3, r0
 8003cb0:	2b00      	cmp	r3, #0
 8003cb2:	f000 8089 	beq.w	8003dc8 <getPos_Radar+0x628>
				   fabs(Objects_radar[temp_obj - 1].speed) <= 0.8 && ((Objects_radar[temp_obj - 1].speed <= 0 && frontback)
 8003cb6:	88bb      	ldrh	r3, [r7, #4]
 8003cb8:	1e5a      	subs	r2, r3, #1
 8003cba:	49a5      	ldr	r1, [pc, #660]	; (8003f50 <getPos_Radar+0x7b0>)
 8003cbc:	4613      	mov	r3, r2
 8003cbe:	009b      	lsls	r3, r3, #2
 8003cc0:	4413      	add	r3, r2
 8003cc2:	009b      	lsls	r3, r3, #2
 8003cc4:	440b      	add	r3, r1
 8003cc6:	edd3 7a00 	vldr	s15, [r3]
 8003cca:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003cce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003cd2:	d803      	bhi.n	8003cdc <getPos_Radar+0x53c>
 8003cd4:	4b9f      	ldr	r3, [pc, #636]	; (8003f54 <getPos_Radar+0x7b4>)
 8003cd6:	781b      	ldrb	r3, [r3, #0]
 8003cd8:	2b00      	cmp	r3, #0
 8003cda:	d115      	bne.n	8003d08 <getPos_Radar+0x568>
					||  (Objects_radar[temp_obj - 1].speed >= 0 && frontback == false)) ){
 8003cdc:	88bb      	ldrh	r3, [r7, #4]
 8003cde:	1e5a      	subs	r2, r3, #1
 8003ce0:	499b      	ldr	r1, [pc, #620]	; (8003f50 <getPos_Radar+0x7b0>)
 8003ce2:	4613      	mov	r3, r2
 8003ce4:	009b      	lsls	r3, r3, #2
 8003ce6:	4413      	add	r3, r2
 8003ce8:	009b      	lsls	r3, r3, #2
 8003cea:	440b      	add	r3, r1
 8003cec:	edd3 7a00 	vldr	s15, [r3]
 8003cf0:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8003cf4:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8003cf8:	db66      	blt.n	8003dc8 <getPos_Radar+0x628>
 8003cfa:	4b96      	ldr	r3, [pc, #600]	; (8003f54 <getPos_Radar+0x7b4>)
 8003cfc:	781b      	ldrb	r3, [r3, #0]
 8003cfe:	f083 0301 	eor.w	r3, r3, #1
 8003d02:	b2db      	uxtb	r3, r3
 8003d04:	2b00      	cmp	r3, #0
 8003d06:	d05f      	beq.n	8003dc8 <getPos_Radar+0x628>

					speedobj +=  Objects_radar[temp_obj-1].speed;
 8003d08:	88bb      	ldrh	r3, [r7, #4]
 8003d0a:	1e5a      	subs	r2, r3, #1
 8003d0c:	4990      	ldr	r1, [pc, #576]	; (8003f50 <getPos_Radar+0x7b0>)
 8003d0e:	4613      	mov	r3, r2
 8003d10:	009b      	lsls	r3, r3, #2
 8003d12:	4413      	add	r3, r2
 8003d14:	009b      	lsls	r3, r3, #2
 8003d16:	440b      	add	r3, r1
 8003d18:	ed93 7a00 	vldr	s14, [r3]
 8003d1c:	4b8e      	ldr	r3, [pc, #568]	; (8003f58 <getPos_Radar+0x7b8>)
 8003d1e:	edd3 7a00 	vldr	s15, [r3]
 8003d22:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003d26:	4b8c      	ldr	r3, [pc, #560]	; (8003f58 <getPos_Radar+0x7b8>)
 8003d28:	edc3 7a00 	vstr	s15, [r3]
					moveobjx2 += ((Objects_radar_previous_2[temp_obj_prev - 1].xobj - Objects_radar[temp_obj - 1].xobj )/(2));
 8003d2c:	88fb      	ldrh	r3, [r7, #6]
 8003d2e:	1e5a      	subs	r2, r3, #1
 8003d30:	498a      	ldr	r1, [pc, #552]	; (8003f5c <getPos_Radar+0x7bc>)
 8003d32:	4613      	mov	r3, r2
 8003d34:	009b      	lsls	r3, r3, #2
 8003d36:	4413      	add	r3, r2
 8003d38:	009b      	lsls	r3, r3, #2
 8003d3a:	440b      	add	r3, r1
 8003d3c:	3308      	adds	r3, #8
 8003d3e:	ed93 7a00 	vldr	s14, [r3]
 8003d42:	88bb      	ldrh	r3, [r7, #4]
 8003d44:	1e5a      	subs	r2, r3, #1
 8003d46:	4982      	ldr	r1, [pc, #520]	; (8003f50 <getPos_Radar+0x7b0>)
 8003d48:	4613      	mov	r3, r2
 8003d4a:	009b      	lsls	r3, r3, #2
 8003d4c:	4413      	add	r3, r2
 8003d4e:	009b      	lsls	r3, r3, #2
 8003d50:	440b      	add	r3, r1
 8003d52:	3308      	adds	r3, #8
 8003d54:	edd3 7a00 	vldr	s15, [r3]
 8003d58:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003d5c:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8003d60:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8003d64:	4b7e      	ldr	r3, [pc, #504]	; (8003f60 <getPos_Radar+0x7c0>)
 8003d66:	edd3 7a00 	vldr	s15, [r3]
 8003d6a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003d6e:	4b7c      	ldr	r3, [pc, #496]	; (8003f60 <getPos_Radar+0x7c0>)
 8003d70:	edc3 7a00 	vstr	s15, [r3]
					moveobjy2 += ((Objects_radar_previous_2[temp_obj_prev - 1].yobj - Objects_radar[temp_obj - 1].yobj )/(2));
 8003d74:	88fb      	ldrh	r3, [r7, #6]
 8003d76:	1e5a      	subs	r2, r3, #1
 8003d78:	4978      	ldr	r1, [pc, #480]	; (8003f5c <getPos_Radar+0x7bc>)
 8003d7a:	4613      	mov	r3, r2
 8003d7c:	009b      	lsls	r3, r3, #2
 8003d7e:	4413      	add	r3, r2
 8003d80:	009b      	lsls	r3, r3, #2
 8003d82:	440b      	add	r3, r1
 8003d84:	330c      	adds	r3, #12
 8003d86:	ed93 7a00 	vldr	s14, [r3]
 8003d8a:	88bb      	ldrh	r3, [r7, #4]
 8003d8c:	1e5a      	subs	r2, r3, #1
 8003d8e:	4970      	ldr	r1, [pc, #448]	; (8003f50 <getPos_Radar+0x7b0>)
 8003d90:	4613      	mov	r3, r2
 8003d92:	009b      	lsls	r3, r3, #2
 8003d94:	4413      	add	r3, r2
 8003d96:	009b      	lsls	r3, r3, #2
 8003d98:	440b      	add	r3, r1
 8003d9a:	330c      	adds	r3, #12
 8003d9c:	edd3 7a00 	vldr	s15, [r3]
 8003da0:	ee77 7a67 	vsub.f32	s15, s14, s15
 8003da4:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8003da8:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8003dac:	4b6d      	ldr	r3, [pc, #436]	; (8003f64 <getPos_Radar+0x7c4>)
 8003dae:	edd3 7a00 	vldr	s15, [r3]
 8003db2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003db6:	4b6b      	ldr	r3, [pc, #428]	; (8003f64 <getPos_Radar+0x7c4>)
 8003db8:	edc3 7a00 	vstr	s15, [r3]
					objinrange2++;
 8003dbc:	4b6a      	ldr	r3, [pc, #424]	; (8003f68 <getPos_Radar+0x7c8>)
 8003dbe:	781b      	ldrb	r3, [r3, #0]
 8003dc0:	3301      	adds	r3, #1
 8003dc2:	b2da      	uxtb	r2, r3
 8003dc4:	4b68      	ldr	r3, [pc, #416]	; (8003f68 <getPos_Radar+0x7c8>)
 8003dc6:	701a      	strb	r2, [r3, #0]
			for (uint16_t temp_obj = numObj; temp_obj > 0; temp_obj--){
 8003dc8:	88bb      	ldrh	r3, [r7, #4]
 8003dca:	3b01      	subs	r3, #1
 8003dcc:	80bb      	strh	r3, [r7, #4]
 8003dce:	88bb      	ldrh	r3, [r7, #4]
 8003dd0:	2b00      	cmp	r3, #0
 8003dd2:	f47f ad97 	bne.w	8003904 <getPos_Radar+0x164>
				} // end if previous2 detections

			}
		}
		if (objinrange > 0){
 8003dd6:	4b65      	ldr	r3, [pc, #404]	; (8003f6c <getPos_Radar+0x7cc>)
 8003dd8:	781b      	ldrb	r3, [r3, #0]
 8003dda:	2b00      	cmp	r3, #0
 8003ddc:	f000 8094 	beq.w	8003f08 <getPos_Radar+0x768>
			speedall += (speedobj / objinrange);
 8003de0:	4b5d      	ldr	r3, [pc, #372]	; (8003f58 <getPos_Radar+0x7b8>)
 8003de2:	edd3 6a00 	vldr	s13, [r3]
 8003de6:	4b61      	ldr	r3, [pc, #388]	; (8003f6c <getPos_Radar+0x7cc>)
 8003de8:	781b      	ldrb	r3, [r3, #0]
 8003dea:	ee07 3a90 	vmov	s15, r3
 8003dee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003df2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8003df6:	4b5e      	ldr	r3, [pc, #376]	; (8003f70 <getPos_Radar+0x7d0>)
 8003df8:	edd3 7a00 	vldr	s15, [r3]
 8003dfc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003e00:	4b5b      	ldr	r3, [pc, #364]	; (8003f70 <getPos_Radar+0x7d0>)
 8003e02:	edc3 7a00 	vstr	s15, [r3]
			if(objinrange2 > 0){//2
 8003e06:	4b58      	ldr	r3, [pc, #352]	; (8003f68 <getPos_Radar+0x7c8>)
 8003e08:	781b      	ldrb	r3, [r3, #0]
 8003e0a:	2b00      	cmp	r3, #0
 8003e0c:	d048      	beq.n	8003ea0 <getPos_Radar+0x700>
				moveallx += (((moveobjx / objinrange) + (moveobjx2 / objinrange2) ) / 2);
 8003e0e:	4b59      	ldr	r3, [pc, #356]	; (8003f74 <getPos_Radar+0x7d4>)
 8003e10:	edd3 6a00 	vldr	s13, [r3]
 8003e14:	4b55      	ldr	r3, [pc, #340]	; (8003f6c <getPos_Radar+0x7cc>)
 8003e16:	781b      	ldrb	r3, [r3, #0]
 8003e18:	ee07 3a90 	vmov	s15, r3
 8003e1c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003e20:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8003e24:	4b4e      	ldr	r3, [pc, #312]	; (8003f60 <getPos_Radar+0x7c0>)
 8003e26:	ed93 6a00 	vldr	s12, [r3]
 8003e2a:	4b4f      	ldr	r3, [pc, #316]	; (8003f68 <getPos_Radar+0x7c8>)
 8003e2c:	781b      	ldrb	r3, [r3, #0]
 8003e2e:	ee07 3a90 	vmov	s15, r3
 8003e32:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8003e36:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8003e3a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003e3e:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8003e42:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8003e46:	4b4c      	ldr	r3, [pc, #304]	; (8003f78 <getPos_Radar+0x7d8>)
 8003e48:	edd3 7a00 	vldr	s15, [r3]
 8003e4c:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003e50:	4b49      	ldr	r3, [pc, #292]	; (8003f78 <getPos_Radar+0x7d8>)
 8003e52:	edc3 7a00 	vstr	s15, [r3]
				moveally += (((moveobjy / objinrange) + (moveobjy2 / objinrange2) ) / 2);
 8003e56:	4b49      	ldr	r3, [pc, #292]	; (8003f7c <getPos_Radar+0x7dc>)
 8003e58:	edd3 6a00 	vldr	s13, [r3]
 8003e5c:	4b43      	ldr	r3, [pc, #268]	; (8003f6c <getPos_Radar+0x7cc>)
 8003e5e:	781b      	ldrb	r3, [r3, #0]
 8003e60:	ee07 3a90 	vmov	s15, r3
 8003e64:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003e68:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8003e6c:	4b3d      	ldr	r3, [pc, #244]	; (8003f64 <getPos_Radar+0x7c4>)
 8003e6e:	ed93 6a00 	vldr	s12, [r3]
 8003e72:	4b3d      	ldr	r3, [pc, #244]	; (8003f68 <getPos_Radar+0x7c8>)
 8003e74:	781b      	ldrb	r3, [r3, #0]
 8003e76:	ee07 3a90 	vmov	s15, r3
 8003e7a:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8003e7e:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8003e82:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003e86:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8003e8a:	ee87 7aa6 	vdiv.f32	s14, s15, s13
 8003e8e:	4b3c      	ldr	r3, [pc, #240]	; (8003f80 <getPos_Radar+0x7e0>)
 8003e90:	edd3 7a00 	vldr	s15, [r3]
 8003e94:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003e98:	4b39      	ldr	r3, [pc, #228]	; (8003f80 <getPos_Radar+0x7e0>)
 8003e9a:	edc3 7a00 	vstr	s15, [r3]
 8003e9e:	e025      	b.n	8003eec <getPos_Radar+0x74c>
			}else{
				moveallx += (moveobjx / objinrange);
 8003ea0:	4b34      	ldr	r3, [pc, #208]	; (8003f74 <getPos_Radar+0x7d4>)
 8003ea2:	edd3 6a00 	vldr	s13, [r3]
 8003ea6:	4b31      	ldr	r3, [pc, #196]	; (8003f6c <getPos_Radar+0x7cc>)
 8003ea8:	781b      	ldrb	r3, [r3, #0]
 8003eaa:	ee07 3a90 	vmov	s15, r3
 8003eae:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003eb2:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8003eb6:	4b30      	ldr	r3, [pc, #192]	; (8003f78 <getPos_Radar+0x7d8>)
 8003eb8:	edd3 7a00 	vldr	s15, [r3]
 8003ebc:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003ec0:	4b2d      	ldr	r3, [pc, #180]	; (8003f78 <getPos_Radar+0x7d8>)
 8003ec2:	edc3 7a00 	vstr	s15, [r3]
				moveally += (moveobjy / objinrange);
 8003ec6:	4b2d      	ldr	r3, [pc, #180]	; (8003f7c <getPos_Radar+0x7dc>)
 8003ec8:	edd3 6a00 	vldr	s13, [r3]
 8003ecc:	4b27      	ldr	r3, [pc, #156]	; (8003f6c <getPos_Radar+0x7cc>)
 8003ece:	781b      	ldrb	r3, [r3, #0]
 8003ed0:	ee07 3a90 	vmov	s15, r3
 8003ed4:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8003ed8:	ee86 7aa7 	vdiv.f32	s14, s13, s15
 8003edc:	4b28      	ldr	r3, [pc, #160]	; (8003f80 <getPos_Radar+0x7e0>)
 8003ede:	edd3 7a00 	vldr	s15, [r3]
 8003ee2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8003ee6:	4b26      	ldr	r3, [pc, #152]	; (8003f80 <getPos_Radar+0x7e0>)
 8003ee8:	edc3 7a00 	vstr	s15, [r3]
			}

			speedall = (-speedall);
 8003eec:	4b20      	ldr	r3, [pc, #128]	; (8003f70 <getPos_Radar+0x7d0>)
 8003eee:	edd3 7a00 	vldr	s15, [r3]
 8003ef2:	eef1 7a67 	vneg.f32	s15, s15
 8003ef6:	4b1e      	ldr	r3, [pc, #120]	; (8003f70 <getPos_Radar+0x7d0>)
 8003ef8:	edc3 7a00 	vstr	s15, [r3]
			meanmove++;
 8003efc:	4b21      	ldr	r3, [pc, #132]	; (8003f84 <getPos_Radar+0x7e4>)
 8003efe:	781b      	ldrb	r3, [r3, #0]
 8003f00:	3301      	adds	r3, #1
 8003f02:	b2da      	uxtb	r2, r3
 8003f04:	4b1f      	ldr	r3, [pc, #124]	; (8003f84 <getPos_Radar+0x7e4>)
 8003f06:	701a      	strb	r2, [r3, #0]
	for (uint16_t temp_obj_prev = objmax; temp_obj_prev > 0; temp_obj_prev--){
 8003f08:	88fb      	ldrh	r3, [r7, #6]
 8003f0a:	3b01      	subs	r3, #1
 8003f0c:	80fb      	strh	r3, [r7, #6]
 8003f0e:	88fb      	ldrh	r3, [r7, #6]
 8003f10:	2b00      	cmp	r3, #0
 8003f12:	f47f ac6a 	bne.w	80037ea <getPos_Radar+0x4a>
		}
	}
	if (meanmove > 0){
 8003f16:	4b1b      	ldr	r3, [pc, #108]	; (8003f84 <getPos_Radar+0x7e4>)
 8003f18:	781b      	ldrb	r3, [r3, #0]
 8003f1a:	2b00      	cmp	r3, #0
 8003f1c:	f000 83a1 	beq.w	8004662 <getPos_Radar+0xec2>
	switch (heading){
 8003f20:	4b19      	ldr	r3, [pc, #100]	; (8003f88 <getPos_Radar+0x7e8>)
 8003f22:	781b      	ldrb	r3, [r3, #0]
 8003f24:	3b01      	subs	r3, #1
 8003f26:	2b04      	cmp	r3, #4
 8003f28:	f200 839b 	bhi.w	8004662 <getPos_Radar+0xec2>
 8003f2c:	a201      	add	r2, pc, #4	; (adr r2, 8003f34 <getPos_Radar+0x794>)
 8003f2e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8003f32:	bf00      	nop
 8003f34:	08003f8d 	.word	0x08003f8d
 8003f38:	08004127 	.word	0x08004127
 8003f3c:	080042f9 	.word	0x080042f9
 8003f40:	08004493 	.word	0x08004493
 8003f44:	08004663 	.word	0x08004663
 8003f48:	9999999a 	.word	0x9999999a
 8003f4c:	3fe99999 	.word	0x3fe99999
 8003f50:	20007a98 	.word	0x20007a98
 8003f54:	2000acc0 	.word	0x2000acc0
 8003f58:	20009a88 	.word	0x20009a88
 8003f5c:	20008a58 	.word	0x20008a58
 8003f60:	2000ad30 	.word	0x2000ad30
 8003f64:	2000acb8 	.word	0x2000acb8
 8003f68:	2000acc1 	.word	0x2000acc1
 8003f6c:	2000acc2 	.word	0x2000acc2
 8003f70:	20009a04 	.word	0x20009a04
 8003f74:	2000ad54 	.word	0x2000ad54
 8003f78:	2000ac48 	.word	0x2000ac48
 8003f7c:	20009a24 	.word	0x20009a24
 8003f80:	20008a50 	.word	0x20008a50
 8003f84:	20009c2a 	.word	0x20009c2a
 8003f88:	2000ad64 	.word	0x2000ad64

		case 1: //North
			speedradarx = (meanmove > 0) ? sin(angle_accumulated * 3.14159 / 180) * speedall/meanmove  : speedradarx;
 8003f8c:	4bbe      	ldr	r3, [pc, #760]	; (8004288 <getPos_Radar+0xae8>)
 8003f8e:	781b      	ldrb	r3, [r3, #0]
 8003f90:	2b00      	cmp	r3, #0
 8003f92:	d042      	beq.n	800401a <getPos_Radar+0x87a>
 8003f94:	4bbd      	ldr	r3, [pc, #756]	; (800428c <getPos_Radar+0xaec>)
 8003f96:	681b      	ldr	r3, [r3, #0]
 8003f98:	4618      	mov	r0, r3
 8003f9a:	f7fc faa7 	bl	80004ec <__aeabi_f2d>
 8003f9e:	a3b8      	add	r3, pc, #736	; (adr r3, 8004280 <getPos_Radar+0xae0>)
 8003fa0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8003fa4:	f7fc fafa 	bl	800059c <__aeabi_dmul>
 8003fa8:	4603      	mov	r3, r0
 8003faa:	460c      	mov	r4, r1
 8003fac:	4618      	mov	r0, r3
 8003fae:	4621      	mov	r1, r4
 8003fb0:	f04f 0200 	mov.w	r2, #0
 8003fb4:	4bb6      	ldr	r3, [pc, #728]	; (8004290 <getPos_Radar+0xaf0>)
 8003fb6:	f7fc fc1b 	bl	80007f0 <__aeabi_ddiv>
 8003fba:	4603      	mov	r3, r0
 8003fbc:	460c      	mov	r4, r1
 8003fbe:	ec44 3b17 	vmov	d7, r3, r4
 8003fc2:	eeb0 0a47 	vmov.f32	s0, s14
 8003fc6:	eef0 0a67 	vmov.f32	s1, s15
 8003fca:	f00e f9a1 	bl	8012310 <sin>
 8003fce:	ec56 5b10 	vmov	r5, r6, d0
 8003fd2:	4bb0      	ldr	r3, [pc, #704]	; (8004294 <getPos_Radar+0xaf4>)
 8003fd4:	681b      	ldr	r3, [r3, #0]
 8003fd6:	4618      	mov	r0, r3
 8003fd8:	f7fc fa88 	bl	80004ec <__aeabi_f2d>
 8003fdc:	4603      	mov	r3, r0
 8003fde:	460c      	mov	r4, r1
 8003fe0:	461a      	mov	r2, r3
 8003fe2:	4623      	mov	r3, r4
 8003fe4:	4628      	mov	r0, r5
 8003fe6:	4631      	mov	r1, r6
 8003fe8:	f7fc fad8 	bl	800059c <__aeabi_dmul>
 8003fec:	4603      	mov	r3, r0
 8003fee:	460c      	mov	r4, r1
 8003ff0:	4625      	mov	r5, r4
 8003ff2:	461c      	mov	r4, r3
 8003ff4:	4ba4      	ldr	r3, [pc, #656]	; (8004288 <getPos_Radar+0xae8>)
 8003ff6:	781b      	ldrb	r3, [r3, #0]
 8003ff8:	4618      	mov	r0, r3
 8003ffa:	f7fc fa65 	bl	80004c8 <__aeabi_i2d>
 8003ffe:	4602      	mov	r2, r0
 8004000:	460b      	mov	r3, r1
 8004002:	4620      	mov	r0, r4
 8004004:	4629      	mov	r1, r5
 8004006:	f7fc fbf3 	bl	80007f0 <__aeabi_ddiv>
 800400a:	4603      	mov	r3, r0
 800400c:	460c      	mov	r4, r1
 800400e:	4618      	mov	r0, r3
 8004010:	4621      	mov	r1, r4
 8004012:	f7fc fdbb 	bl	8000b8c <__aeabi_d2f>
 8004016:	4603      	mov	r3, r0
 8004018:	e001      	b.n	800401e <getPos_Radar+0x87e>
 800401a:	4b9f      	ldr	r3, [pc, #636]	; (8004298 <getPos_Radar+0xaf8>)
 800401c:	681b      	ldr	r3, [r3, #0]
 800401e:	4a9e      	ldr	r2, [pc, #632]	; (8004298 <getPos_Radar+0xaf8>)
 8004020:	6013      	str	r3, [r2, #0]
			speedradary = (meanmove > 0) ? cos(angle_accumulated * 3.14159 / 180) * speedall/meanmove  : speedradary;
 8004022:	4b99      	ldr	r3, [pc, #612]	; (8004288 <getPos_Radar+0xae8>)
 8004024:	781b      	ldrb	r3, [r3, #0]
 8004026:	2b00      	cmp	r3, #0
 8004028:	d042      	beq.n	80040b0 <getPos_Radar+0x910>
 800402a:	4b98      	ldr	r3, [pc, #608]	; (800428c <getPos_Radar+0xaec>)
 800402c:	681b      	ldr	r3, [r3, #0]
 800402e:	4618      	mov	r0, r3
 8004030:	f7fc fa5c 	bl	80004ec <__aeabi_f2d>
 8004034:	a392      	add	r3, pc, #584	; (adr r3, 8004280 <getPos_Radar+0xae0>)
 8004036:	e9d3 2300 	ldrd	r2, r3, [r3]
 800403a:	f7fc faaf 	bl	800059c <__aeabi_dmul>
 800403e:	4603      	mov	r3, r0
 8004040:	460c      	mov	r4, r1
 8004042:	4618      	mov	r0, r3
 8004044:	4621      	mov	r1, r4
 8004046:	f04f 0200 	mov.w	r2, #0
 800404a:	4b91      	ldr	r3, [pc, #580]	; (8004290 <getPos_Radar+0xaf0>)
 800404c:	f7fc fbd0 	bl	80007f0 <__aeabi_ddiv>
 8004050:	4603      	mov	r3, r0
 8004052:	460c      	mov	r4, r1
 8004054:	ec44 3b17 	vmov	d7, r3, r4
 8004058:	eeb0 0a47 	vmov.f32	s0, s14
 800405c:	eef0 0a67 	vmov.f32	s1, s15
 8004060:	f00e f912 	bl	8012288 <cos>
 8004064:	ec56 5b10 	vmov	r5, r6, d0
 8004068:	4b8a      	ldr	r3, [pc, #552]	; (8004294 <getPos_Radar+0xaf4>)
 800406a:	681b      	ldr	r3, [r3, #0]
 800406c:	4618      	mov	r0, r3
 800406e:	f7fc fa3d 	bl	80004ec <__aeabi_f2d>
 8004072:	4603      	mov	r3, r0
 8004074:	460c      	mov	r4, r1
 8004076:	461a      	mov	r2, r3
 8004078:	4623      	mov	r3, r4
 800407a:	4628      	mov	r0, r5
 800407c:	4631      	mov	r1, r6
 800407e:	f7fc fa8d 	bl	800059c <__aeabi_dmul>
 8004082:	4603      	mov	r3, r0
 8004084:	460c      	mov	r4, r1
 8004086:	4625      	mov	r5, r4
 8004088:	461c      	mov	r4, r3
 800408a:	4b7f      	ldr	r3, [pc, #508]	; (8004288 <getPos_Radar+0xae8>)
 800408c:	781b      	ldrb	r3, [r3, #0]
 800408e:	4618      	mov	r0, r3
 8004090:	f7fc fa1a 	bl	80004c8 <__aeabi_i2d>
 8004094:	4602      	mov	r2, r0
 8004096:	460b      	mov	r3, r1
 8004098:	4620      	mov	r0, r4
 800409a:	4629      	mov	r1, r5
 800409c:	f7fc fba8 	bl	80007f0 <__aeabi_ddiv>
 80040a0:	4603      	mov	r3, r0
 80040a2:	460c      	mov	r4, r1
 80040a4:	4618      	mov	r0, r3
 80040a6:	4621      	mov	r1, r4
 80040a8:	f7fc fd70 	bl	8000b8c <__aeabi_d2f>
 80040ac:	4603      	mov	r3, r0
 80040ae:	e001      	b.n	80040b4 <getPos_Radar+0x914>
 80040b0:	4b7a      	ldr	r3, [pc, #488]	; (800429c <getPos_Radar+0xafc>)
 80040b2:	681b      	ldr	r3, [r3, #0]
 80040b4:	4a79      	ldr	r2, [pc, #484]	; (800429c <getPos_Radar+0xafc>)
 80040b6:	6013      	str	r3, [r2, #0]
	//		Radarx = (meanmove > 0) ? Radarx + moveallx/meanmove : Radarx;
	//		Radary = (meanmove > 0) ? Radary + moveally/meanmove : Radary;
			Radarx = (meanmove > 0) ? states_X[0] + moveallx/meanmove : Radarx;
 80040b8:	4b73      	ldr	r3, [pc, #460]	; (8004288 <getPos_Radar+0xae8>)
 80040ba:	781b      	ldrb	r3, [r3, #0]
 80040bc:	2b00      	cmp	r3, #0
 80040be:	d010      	beq.n	80040e2 <getPos_Radar+0x942>
 80040c0:	4b77      	ldr	r3, [pc, #476]	; (80042a0 <getPos_Radar+0xb00>)
 80040c2:	ed93 7a00 	vldr	s14, [r3]
 80040c6:	4b77      	ldr	r3, [pc, #476]	; (80042a4 <getPos_Radar+0xb04>)
 80040c8:	ed93 6a00 	vldr	s12, [r3]
 80040cc:	4b6e      	ldr	r3, [pc, #440]	; (8004288 <getPos_Radar+0xae8>)
 80040ce:	781b      	ldrb	r3, [r3, #0]
 80040d0:	ee07 3a90 	vmov	s15, r3
 80040d4:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80040d8:	eec6 7a26 	vdiv.f32	s15, s12, s13
 80040dc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80040e0:	e002      	b.n	80040e8 <getPos_Radar+0x948>
 80040e2:	4b71      	ldr	r3, [pc, #452]	; (80042a8 <getPos_Radar+0xb08>)
 80040e4:	edd3 7a00 	vldr	s15, [r3]
 80040e8:	4b6f      	ldr	r3, [pc, #444]	; (80042a8 <getPos_Radar+0xb08>)
 80040ea:	edc3 7a00 	vstr	s15, [r3]
			Radary = (meanmove > 0) ? states_X[1] + moveally/meanmove : Radary;
 80040ee:	4b66      	ldr	r3, [pc, #408]	; (8004288 <getPos_Radar+0xae8>)
 80040f0:	781b      	ldrb	r3, [r3, #0]
 80040f2:	2b00      	cmp	r3, #0
 80040f4:	d010      	beq.n	8004118 <getPos_Radar+0x978>
 80040f6:	4b6a      	ldr	r3, [pc, #424]	; (80042a0 <getPos_Radar+0xb00>)
 80040f8:	ed93 7a01 	vldr	s14, [r3, #4]
 80040fc:	4b6b      	ldr	r3, [pc, #428]	; (80042ac <getPos_Radar+0xb0c>)
 80040fe:	ed93 6a00 	vldr	s12, [r3]
 8004102:	4b61      	ldr	r3, [pc, #388]	; (8004288 <getPos_Radar+0xae8>)
 8004104:	781b      	ldrb	r3, [r3, #0]
 8004106:	ee07 3a90 	vmov	s15, r3
 800410a:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800410e:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8004112:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004116:	e002      	b.n	800411e <getPos_Radar+0x97e>
 8004118:	4b65      	ldr	r3, [pc, #404]	; (80042b0 <getPos_Radar+0xb10>)
 800411a:	edd3 7a00 	vldr	s15, [r3]
 800411e:	4b64      	ldr	r3, [pc, #400]	; (80042b0 <getPos_Radar+0xb10>)
 8004120:	edc3 7a00 	vstr	s15, [r3]
			break;
 8004124:	e29d      	b.n	8004662 <getPos_Radar+0xec2>
		case 2: // West
			speedradarx = (meanmove > 0) ? sin(angle_accumulated * 3.14159 / 180) * speedall/meanmove  : speedradarx;
 8004126:	4b58      	ldr	r3, [pc, #352]	; (8004288 <getPos_Radar+0xae8>)
 8004128:	781b      	ldrb	r3, [r3, #0]
 800412a:	2b00      	cmp	r3, #0
 800412c:	d042      	beq.n	80041b4 <getPos_Radar+0xa14>
 800412e:	4b57      	ldr	r3, [pc, #348]	; (800428c <getPos_Radar+0xaec>)
 8004130:	681b      	ldr	r3, [r3, #0]
 8004132:	4618      	mov	r0, r3
 8004134:	f7fc f9da 	bl	80004ec <__aeabi_f2d>
 8004138:	a351      	add	r3, pc, #324	; (adr r3, 8004280 <getPos_Radar+0xae0>)
 800413a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800413e:	f7fc fa2d 	bl	800059c <__aeabi_dmul>
 8004142:	4603      	mov	r3, r0
 8004144:	460c      	mov	r4, r1
 8004146:	4618      	mov	r0, r3
 8004148:	4621      	mov	r1, r4
 800414a:	f04f 0200 	mov.w	r2, #0
 800414e:	4b50      	ldr	r3, [pc, #320]	; (8004290 <getPos_Radar+0xaf0>)
 8004150:	f7fc fb4e 	bl	80007f0 <__aeabi_ddiv>
 8004154:	4603      	mov	r3, r0
 8004156:	460c      	mov	r4, r1
 8004158:	ec44 3b17 	vmov	d7, r3, r4
 800415c:	eeb0 0a47 	vmov.f32	s0, s14
 8004160:	eef0 0a67 	vmov.f32	s1, s15
 8004164:	f00e f8d4 	bl	8012310 <sin>
 8004168:	ec56 5b10 	vmov	r5, r6, d0
 800416c:	4b49      	ldr	r3, [pc, #292]	; (8004294 <getPos_Radar+0xaf4>)
 800416e:	681b      	ldr	r3, [r3, #0]
 8004170:	4618      	mov	r0, r3
 8004172:	f7fc f9bb 	bl	80004ec <__aeabi_f2d>
 8004176:	4603      	mov	r3, r0
 8004178:	460c      	mov	r4, r1
 800417a:	461a      	mov	r2, r3
 800417c:	4623      	mov	r3, r4
 800417e:	4628      	mov	r0, r5
 8004180:	4631      	mov	r1, r6
 8004182:	f7fc fa0b 	bl	800059c <__aeabi_dmul>
 8004186:	4603      	mov	r3, r0
 8004188:	460c      	mov	r4, r1
 800418a:	4625      	mov	r5, r4
 800418c:	461c      	mov	r4, r3
 800418e:	4b3e      	ldr	r3, [pc, #248]	; (8004288 <getPos_Radar+0xae8>)
 8004190:	781b      	ldrb	r3, [r3, #0]
 8004192:	4618      	mov	r0, r3
 8004194:	f7fc f998 	bl	80004c8 <__aeabi_i2d>
 8004198:	4602      	mov	r2, r0
 800419a:	460b      	mov	r3, r1
 800419c:	4620      	mov	r0, r4
 800419e:	4629      	mov	r1, r5
 80041a0:	f7fc fb26 	bl	80007f0 <__aeabi_ddiv>
 80041a4:	4603      	mov	r3, r0
 80041a6:	460c      	mov	r4, r1
 80041a8:	4618      	mov	r0, r3
 80041aa:	4621      	mov	r1, r4
 80041ac:	f7fc fcee 	bl	8000b8c <__aeabi_d2f>
 80041b0:	4603      	mov	r3, r0
 80041b2:	e001      	b.n	80041b8 <getPos_Radar+0xa18>
 80041b4:	4b38      	ldr	r3, [pc, #224]	; (8004298 <getPos_Radar+0xaf8>)
 80041b6:	681b      	ldr	r3, [r3, #0]
 80041b8:	4a37      	ldr	r2, [pc, #220]	; (8004298 <getPos_Radar+0xaf8>)
 80041ba:	6013      	str	r3, [r2, #0]
			speedradary = (meanmove > 0) ? cos(angle_accumulated * 3.14159 / 180) * speedall/meanmove  : speedradary;
 80041bc:	4b32      	ldr	r3, [pc, #200]	; (8004288 <getPos_Radar+0xae8>)
 80041be:	781b      	ldrb	r3, [r3, #0]
 80041c0:	2b00      	cmp	r3, #0
 80041c2:	d042      	beq.n	800424a <getPos_Radar+0xaaa>
 80041c4:	4b31      	ldr	r3, [pc, #196]	; (800428c <getPos_Radar+0xaec>)
 80041c6:	681b      	ldr	r3, [r3, #0]
 80041c8:	4618      	mov	r0, r3
 80041ca:	f7fc f98f 	bl	80004ec <__aeabi_f2d>
 80041ce:	a32c      	add	r3, pc, #176	; (adr r3, 8004280 <getPos_Radar+0xae0>)
 80041d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80041d4:	f7fc f9e2 	bl	800059c <__aeabi_dmul>
 80041d8:	4603      	mov	r3, r0
 80041da:	460c      	mov	r4, r1
 80041dc:	4618      	mov	r0, r3
 80041de:	4621      	mov	r1, r4
 80041e0:	f04f 0200 	mov.w	r2, #0
 80041e4:	4b2a      	ldr	r3, [pc, #168]	; (8004290 <getPos_Radar+0xaf0>)
 80041e6:	f7fc fb03 	bl	80007f0 <__aeabi_ddiv>
 80041ea:	4603      	mov	r3, r0
 80041ec:	460c      	mov	r4, r1
 80041ee:	ec44 3b17 	vmov	d7, r3, r4
 80041f2:	eeb0 0a47 	vmov.f32	s0, s14
 80041f6:	eef0 0a67 	vmov.f32	s1, s15
 80041fa:	f00e f845 	bl	8012288 <cos>
 80041fe:	ec56 5b10 	vmov	r5, r6, d0
 8004202:	4b24      	ldr	r3, [pc, #144]	; (8004294 <getPos_Radar+0xaf4>)
 8004204:	681b      	ldr	r3, [r3, #0]
 8004206:	4618      	mov	r0, r3
 8004208:	f7fc f970 	bl	80004ec <__aeabi_f2d>
 800420c:	4603      	mov	r3, r0
 800420e:	460c      	mov	r4, r1
 8004210:	461a      	mov	r2, r3
 8004212:	4623      	mov	r3, r4
 8004214:	4628      	mov	r0, r5
 8004216:	4631      	mov	r1, r6
 8004218:	f7fc f9c0 	bl	800059c <__aeabi_dmul>
 800421c:	4603      	mov	r3, r0
 800421e:	460c      	mov	r4, r1
 8004220:	4625      	mov	r5, r4
 8004222:	461c      	mov	r4, r3
 8004224:	4b18      	ldr	r3, [pc, #96]	; (8004288 <getPos_Radar+0xae8>)
 8004226:	781b      	ldrb	r3, [r3, #0]
 8004228:	4618      	mov	r0, r3
 800422a:	f7fc f94d 	bl	80004c8 <__aeabi_i2d>
 800422e:	4602      	mov	r2, r0
 8004230:	460b      	mov	r3, r1
 8004232:	4620      	mov	r0, r4
 8004234:	4629      	mov	r1, r5
 8004236:	f7fc fadb 	bl	80007f0 <__aeabi_ddiv>
 800423a:	4603      	mov	r3, r0
 800423c:	460c      	mov	r4, r1
 800423e:	4618      	mov	r0, r3
 8004240:	4621      	mov	r1, r4
 8004242:	f7fc fca3 	bl	8000b8c <__aeabi_d2f>
 8004246:	4603      	mov	r3, r0
 8004248:	e001      	b.n	800424e <getPos_Radar+0xaae>
 800424a:	4b14      	ldr	r3, [pc, #80]	; (800429c <getPos_Radar+0xafc>)
 800424c:	681b      	ldr	r3, [r3, #0]
 800424e:	4a13      	ldr	r2, [pc, #76]	; (800429c <getPos_Radar+0xafc>)
 8004250:	6013      	str	r3, [r2, #0]
	//		Radarx = (meanmove > 0) ? Radarx - moveally/meanmove : Radarx;
	//		Radary = (meanmove > 0) ? Radary - moveallx/meanmove : Radary;
			Radarx = (meanmove > 0) ? states_X[0] - moveally/meanmove : Radarx;
 8004252:	4b0d      	ldr	r3, [pc, #52]	; (8004288 <getPos_Radar+0xae8>)
 8004254:	781b      	ldrb	r3, [r3, #0]
 8004256:	2b00      	cmp	r3, #0
 8004258:	d02c      	beq.n	80042b4 <getPos_Radar+0xb14>
 800425a:	4b11      	ldr	r3, [pc, #68]	; (80042a0 <getPos_Radar+0xb00>)
 800425c:	ed93 7a00 	vldr	s14, [r3]
 8004260:	4b12      	ldr	r3, [pc, #72]	; (80042ac <getPos_Radar+0xb0c>)
 8004262:	ed93 6a00 	vldr	s12, [r3]
 8004266:	4b08      	ldr	r3, [pc, #32]	; (8004288 <getPos_Radar+0xae8>)
 8004268:	781b      	ldrb	r3, [r3, #0]
 800426a:	ee07 3a90 	vmov	s15, r3
 800426e:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8004272:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8004276:	ee77 7a67 	vsub.f32	s15, s14, s15
 800427a:	e01e      	b.n	80042ba <getPos_Radar+0xb1a>
 800427c:	f3af 8000 	nop.w
 8004280:	f01b866e 	.word	0xf01b866e
 8004284:	400921f9 	.word	0x400921f9
 8004288:	20009c2a 	.word	0x20009c2a
 800428c:	2000ad6c 	.word	0x2000ad6c
 8004290:	40668000 	.word	0x40668000
 8004294:	20009a04 	.word	0x20009a04
 8004298:	20009a08 	.word	0x20009a08
 800429c:	20009a1c 	.word	0x20009a1c
 80042a0:	2000ad38 	.word	0x2000ad38
 80042a4:	2000ac48 	.word	0x2000ac48
 80042a8:	20007a94 	.word	0x20007a94
 80042ac:	20008a50 	.word	0x20008a50
 80042b0:	20009c24 	.word	0x20009c24
 80042b4:	4bc2      	ldr	r3, [pc, #776]	; (80045c0 <getPos_Radar+0xe20>)
 80042b6:	edd3 7a00 	vldr	s15, [r3]
 80042ba:	4bc1      	ldr	r3, [pc, #772]	; (80045c0 <getPos_Radar+0xe20>)
 80042bc:	edc3 7a00 	vstr	s15, [r3]
			Radary = (meanmove > 0) ? states_X[1] - moveallx/meanmove : Radary;
 80042c0:	4bc0      	ldr	r3, [pc, #768]	; (80045c4 <getPos_Radar+0xe24>)
 80042c2:	781b      	ldrb	r3, [r3, #0]
 80042c4:	2b00      	cmp	r3, #0
 80042c6:	d010      	beq.n	80042ea <getPos_Radar+0xb4a>
 80042c8:	4bbf      	ldr	r3, [pc, #764]	; (80045c8 <getPos_Radar+0xe28>)
 80042ca:	ed93 7a01 	vldr	s14, [r3, #4]
 80042ce:	4bbf      	ldr	r3, [pc, #764]	; (80045cc <getPos_Radar+0xe2c>)
 80042d0:	ed93 6a00 	vldr	s12, [r3]
 80042d4:	4bbb      	ldr	r3, [pc, #748]	; (80045c4 <getPos_Radar+0xe24>)
 80042d6:	781b      	ldrb	r3, [r3, #0]
 80042d8:	ee07 3a90 	vmov	s15, r3
 80042dc:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80042e0:	eec6 7a26 	vdiv.f32	s15, s12, s13
 80042e4:	ee77 7a67 	vsub.f32	s15, s14, s15
 80042e8:	e002      	b.n	80042f0 <getPos_Radar+0xb50>
 80042ea:	4bb9      	ldr	r3, [pc, #740]	; (80045d0 <getPos_Radar+0xe30>)
 80042ec:	edd3 7a00 	vldr	s15, [r3]
 80042f0:	4bb7      	ldr	r3, [pc, #732]	; (80045d0 <getPos_Radar+0xe30>)
 80042f2:	edc3 7a00 	vstr	s15, [r3]
			break;
 80042f6:	e1b4      	b.n	8004662 <getPos_Radar+0xec2>
		case 3: // South
			speedradarx = (meanmove > 0) ? sin(angle_accumulated * 3.14159 / 180) * speedall/meanmove  : speedradarx;
 80042f8:	4bb2      	ldr	r3, [pc, #712]	; (80045c4 <getPos_Radar+0xe24>)
 80042fa:	781b      	ldrb	r3, [r3, #0]
 80042fc:	2b00      	cmp	r3, #0
 80042fe:	d042      	beq.n	8004386 <getPos_Radar+0xbe6>
 8004300:	4bb4      	ldr	r3, [pc, #720]	; (80045d4 <getPos_Radar+0xe34>)
 8004302:	681b      	ldr	r3, [r3, #0]
 8004304:	4618      	mov	r0, r3
 8004306:	f7fc f8f1 	bl	80004ec <__aeabi_f2d>
 800430a:	a3ab      	add	r3, pc, #684	; (adr r3, 80045b8 <getPos_Radar+0xe18>)
 800430c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004310:	f7fc f944 	bl	800059c <__aeabi_dmul>
 8004314:	4603      	mov	r3, r0
 8004316:	460c      	mov	r4, r1
 8004318:	4618      	mov	r0, r3
 800431a:	4621      	mov	r1, r4
 800431c:	f04f 0200 	mov.w	r2, #0
 8004320:	4bad      	ldr	r3, [pc, #692]	; (80045d8 <getPos_Radar+0xe38>)
 8004322:	f7fc fa65 	bl	80007f0 <__aeabi_ddiv>
 8004326:	4603      	mov	r3, r0
 8004328:	460c      	mov	r4, r1
 800432a:	ec44 3b17 	vmov	d7, r3, r4
 800432e:	eeb0 0a47 	vmov.f32	s0, s14
 8004332:	eef0 0a67 	vmov.f32	s1, s15
 8004336:	f00d ffeb 	bl	8012310 <sin>
 800433a:	ec56 5b10 	vmov	r5, r6, d0
 800433e:	4ba7      	ldr	r3, [pc, #668]	; (80045dc <getPos_Radar+0xe3c>)
 8004340:	681b      	ldr	r3, [r3, #0]
 8004342:	4618      	mov	r0, r3
 8004344:	f7fc f8d2 	bl	80004ec <__aeabi_f2d>
 8004348:	4603      	mov	r3, r0
 800434a:	460c      	mov	r4, r1
 800434c:	461a      	mov	r2, r3
 800434e:	4623      	mov	r3, r4
 8004350:	4628      	mov	r0, r5
 8004352:	4631      	mov	r1, r6
 8004354:	f7fc f922 	bl	800059c <__aeabi_dmul>
 8004358:	4603      	mov	r3, r0
 800435a:	460c      	mov	r4, r1
 800435c:	4625      	mov	r5, r4
 800435e:	461c      	mov	r4, r3
 8004360:	4b98      	ldr	r3, [pc, #608]	; (80045c4 <getPos_Radar+0xe24>)
 8004362:	781b      	ldrb	r3, [r3, #0]
 8004364:	4618      	mov	r0, r3
 8004366:	f7fc f8af 	bl	80004c8 <__aeabi_i2d>
 800436a:	4602      	mov	r2, r0
 800436c:	460b      	mov	r3, r1
 800436e:	4620      	mov	r0, r4
 8004370:	4629      	mov	r1, r5
 8004372:	f7fc fa3d 	bl	80007f0 <__aeabi_ddiv>
 8004376:	4603      	mov	r3, r0
 8004378:	460c      	mov	r4, r1
 800437a:	4618      	mov	r0, r3
 800437c:	4621      	mov	r1, r4
 800437e:	f7fc fc05 	bl	8000b8c <__aeabi_d2f>
 8004382:	4603      	mov	r3, r0
 8004384:	e001      	b.n	800438a <getPos_Radar+0xbea>
 8004386:	4b96      	ldr	r3, [pc, #600]	; (80045e0 <getPos_Radar+0xe40>)
 8004388:	681b      	ldr	r3, [r3, #0]
 800438a:	4a95      	ldr	r2, [pc, #596]	; (80045e0 <getPos_Radar+0xe40>)
 800438c:	6013      	str	r3, [r2, #0]
			speedradary = (meanmove > 0) ? cos(angle_accumulated * 3.14159 / 180) * speedall/meanmove  : speedradary;
 800438e:	4b8d      	ldr	r3, [pc, #564]	; (80045c4 <getPos_Radar+0xe24>)
 8004390:	781b      	ldrb	r3, [r3, #0]
 8004392:	2b00      	cmp	r3, #0
 8004394:	d042      	beq.n	800441c <getPos_Radar+0xc7c>
 8004396:	4b8f      	ldr	r3, [pc, #572]	; (80045d4 <getPos_Radar+0xe34>)
 8004398:	681b      	ldr	r3, [r3, #0]
 800439a:	4618      	mov	r0, r3
 800439c:	f7fc f8a6 	bl	80004ec <__aeabi_f2d>
 80043a0:	a385      	add	r3, pc, #532	; (adr r3, 80045b8 <getPos_Radar+0xe18>)
 80043a2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80043a6:	f7fc f8f9 	bl	800059c <__aeabi_dmul>
 80043aa:	4603      	mov	r3, r0
 80043ac:	460c      	mov	r4, r1
 80043ae:	4618      	mov	r0, r3
 80043b0:	4621      	mov	r1, r4
 80043b2:	f04f 0200 	mov.w	r2, #0
 80043b6:	4b88      	ldr	r3, [pc, #544]	; (80045d8 <getPos_Radar+0xe38>)
 80043b8:	f7fc fa1a 	bl	80007f0 <__aeabi_ddiv>
 80043bc:	4603      	mov	r3, r0
 80043be:	460c      	mov	r4, r1
 80043c0:	ec44 3b17 	vmov	d7, r3, r4
 80043c4:	eeb0 0a47 	vmov.f32	s0, s14
 80043c8:	eef0 0a67 	vmov.f32	s1, s15
 80043cc:	f00d ff5c 	bl	8012288 <cos>
 80043d0:	ec56 5b10 	vmov	r5, r6, d0
 80043d4:	4b81      	ldr	r3, [pc, #516]	; (80045dc <getPos_Radar+0xe3c>)
 80043d6:	681b      	ldr	r3, [r3, #0]
 80043d8:	4618      	mov	r0, r3
 80043da:	f7fc f887 	bl	80004ec <__aeabi_f2d>
 80043de:	4603      	mov	r3, r0
 80043e0:	460c      	mov	r4, r1
 80043e2:	461a      	mov	r2, r3
 80043e4:	4623      	mov	r3, r4
 80043e6:	4628      	mov	r0, r5
 80043e8:	4631      	mov	r1, r6
 80043ea:	f7fc f8d7 	bl	800059c <__aeabi_dmul>
 80043ee:	4603      	mov	r3, r0
 80043f0:	460c      	mov	r4, r1
 80043f2:	4625      	mov	r5, r4
 80043f4:	461c      	mov	r4, r3
 80043f6:	4b73      	ldr	r3, [pc, #460]	; (80045c4 <getPos_Radar+0xe24>)
 80043f8:	781b      	ldrb	r3, [r3, #0]
 80043fa:	4618      	mov	r0, r3
 80043fc:	f7fc f864 	bl	80004c8 <__aeabi_i2d>
 8004400:	4602      	mov	r2, r0
 8004402:	460b      	mov	r3, r1
 8004404:	4620      	mov	r0, r4
 8004406:	4629      	mov	r1, r5
 8004408:	f7fc f9f2 	bl	80007f0 <__aeabi_ddiv>
 800440c:	4603      	mov	r3, r0
 800440e:	460c      	mov	r4, r1
 8004410:	4618      	mov	r0, r3
 8004412:	4621      	mov	r1, r4
 8004414:	f7fc fbba 	bl	8000b8c <__aeabi_d2f>
 8004418:	4603      	mov	r3, r0
 800441a:	e001      	b.n	8004420 <getPos_Radar+0xc80>
 800441c:	4b71      	ldr	r3, [pc, #452]	; (80045e4 <getPos_Radar+0xe44>)
 800441e:	681b      	ldr	r3, [r3, #0]
 8004420:	4a70      	ldr	r2, [pc, #448]	; (80045e4 <getPos_Radar+0xe44>)
 8004422:	6013      	str	r3, [r2, #0]
	//		Radarx = (meanmove > 0) ? Radarx - moveallx/meanmove : Radarx;
	//		Radary = (meanmove > 0) ? Radary - moveally/meanmove : Radary;
			Radarx = (meanmove > 0) ? states_X[0] - moveallx/meanmove : Radarx;
 8004424:	4b67      	ldr	r3, [pc, #412]	; (80045c4 <getPos_Radar+0xe24>)
 8004426:	781b      	ldrb	r3, [r3, #0]
 8004428:	2b00      	cmp	r3, #0
 800442a:	d010      	beq.n	800444e <getPos_Radar+0xcae>
 800442c:	4b66      	ldr	r3, [pc, #408]	; (80045c8 <getPos_Radar+0xe28>)
 800442e:	ed93 7a00 	vldr	s14, [r3]
 8004432:	4b66      	ldr	r3, [pc, #408]	; (80045cc <getPos_Radar+0xe2c>)
 8004434:	ed93 6a00 	vldr	s12, [r3]
 8004438:	4b62      	ldr	r3, [pc, #392]	; (80045c4 <getPos_Radar+0xe24>)
 800443a:	781b      	ldrb	r3, [r3, #0]
 800443c:	ee07 3a90 	vmov	s15, r3
 8004440:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8004444:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8004448:	ee77 7a67 	vsub.f32	s15, s14, s15
 800444c:	e002      	b.n	8004454 <getPos_Radar+0xcb4>
 800444e:	4b5c      	ldr	r3, [pc, #368]	; (80045c0 <getPos_Radar+0xe20>)
 8004450:	edd3 7a00 	vldr	s15, [r3]
 8004454:	4b5a      	ldr	r3, [pc, #360]	; (80045c0 <getPos_Radar+0xe20>)
 8004456:	edc3 7a00 	vstr	s15, [r3]
			Radary = (meanmove > 0) ? states_X[1] - moveally/meanmove : Radary;
 800445a:	4b5a      	ldr	r3, [pc, #360]	; (80045c4 <getPos_Radar+0xe24>)
 800445c:	781b      	ldrb	r3, [r3, #0]
 800445e:	2b00      	cmp	r3, #0
 8004460:	d010      	beq.n	8004484 <getPos_Radar+0xce4>
 8004462:	4b59      	ldr	r3, [pc, #356]	; (80045c8 <getPos_Radar+0xe28>)
 8004464:	ed93 7a01 	vldr	s14, [r3, #4]
 8004468:	4b5f      	ldr	r3, [pc, #380]	; (80045e8 <getPos_Radar+0xe48>)
 800446a:	ed93 6a00 	vldr	s12, [r3]
 800446e:	4b55      	ldr	r3, [pc, #340]	; (80045c4 <getPos_Radar+0xe24>)
 8004470:	781b      	ldrb	r3, [r3, #0]
 8004472:	ee07 3a90 	vmov	s15, r3
 8004476:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800447a:	eec6 7a26 	vdiv.f32	s15, s12, s13
 800447e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8004482:	e002      	b.n	800448a <getPos_Radar+0xcea>
 8004484:	4b52      	ldr	r3, [pc, #328]	; (80045d0 <getPos_Radar+0xe30>)
 8004486:	edd3 7a00 	vldr	s15, [r3]
 800448a:	4b51      	ldr	r3, [pc, #324]	; (80045d0 <getPos_Radar+0xe30>)
 800448c:	edc3 7a00 	vstr	s15, [r3]
			break;
 8004490:	e0e7      	b.n	8004662 <getPos_Radar+0xec2>
		case 4: //East
			speedradarx = (meanmove > 0) ? sin(angle_accumulated * 3.14159 / 180) * speedall/meanmove  : speedradarx;
 8004492:	4b4c      	ldr	r3, [pc, #304]	; (80045c4 <getPos_Radar+0xe24>)
 8004494:	781b      	ldrb	r3, [r3, #0]
 8004496:	2b00      	cmp	r3, #0
 8004498:	d042      	beq.n	8004520 <getPos_Radar+0xd80>
 800449a:	4b4e      	ldr	r3, [pc, #312]	; (80045d4 <getPos_Radar+0xe34>)
 800449c:	681b      	ldr	r3, [r3, #0]
 800449e:	4618      	mov	r0, r3
 80044a0:	f7fc f824 	bl	80004ec <__aeabi_f2d>
 80044a4:	a344      	add	r3, pc, #272	; (adr r3, 80045b8 <getPos_Radar+0xe18>)
 80044a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80044aa:	f7fc f877 	bl	800059c <__aeabi_dmul>
 80044ae:	4603      	mov	r3, r0
 80044b0:	460c      	mov	r4, r1
 80044b2:	4618      	mov	r0, r3
 80044b4:	4621      	mov	r1, r4
 80044b6:	f04f 0200 	mov.w	r2, #0
 80044ba:	4b47      	ldr	r3, [pc, #284]	; (80045d8 <getPos_Radar+0xe38>)
 80044bc:	f7fc f998 	bl	80007f0 <__aeabi_ddiv>
 80044c0:	4603      	mov	r3, r0
 80044c2:	460c      	mov	r4, r1
 80044c4:	ec44 3b17 	vmov	d7, r3, r4
 80044c8:	eeb0 0a47 	vmov.f32	s0, s14
 80044cc:	eef0 0a67 	vmov.f32	s1, s15
 80044d0:	f00d ff1e 	bl	8012310 <sin>
 80044d4:	ec56 5b10 	vmov	r5, r6, d0
 80044d8:	4b40      	ldr	r3, [pc, #256]	; (80045dc <getPos_Radar+0xe3c>)
 80044da:	681b      	ldr	r3, [r3, #0]
 80044dc:	4618      	mov	r0, r3
 80044de:	f7fc f805 	bl	80004ec <__aeabi_f2d>
 80044e2:	4603      	mov	r3, r0
 80044e4:	460c      	mov	r4, r1
 80044e6:	461a      	mov	r2, r3
 80044e8:	4623      	mov	r3, r4
 80044ea:	4628      	mov	r0, r5
 80044ec:	4631      	mov	r1, r6
 80044ee:	f7fc f855 	bl	800059c <__aeabi_dmul>
 80044f2:	4603      	mov	r3, r0
 80044f4:	460c      	mov	r4, r1
 80044f6:	4625      	mov	r5, r4
 80044f8:	461c      	mov	r4, r3
 80044fa:	4b32      	ldr	r3, [pc, #200]	; (80045c4 <getPos_Radar+0xe24>)
 80044fc:	781b      	ldrb	r3, [r3, #0]
 80044fe:	4618      	mov	r0, r3
 8004500:	f7fb ffe2 	bl	80004c8 <__aeabi_i2d>
 8004504:	4602      	mov	r2, r0
 8004506:	460b      	mov	r3, r1
 8004508:	4620      	mov	r0, r4
 800450a:	4629      	mov	r1, r5
 800450c:	f7fc f970 	bl	80007f0 <__aeabi_ddiv>
 8004510:	4603      	mov	r3, r0
 8004512:	460c      	mov	r4, r1
 8004514:	4618      	mov	r0, r3
 8004516:	4621      	mov	r1, r4
 8004518:	f7fc fb38 	bl	8000b8c <__aeabi_d2f>
 800451c:	4603      	mov	r3, r0
 800451e:	e001      	b.n	8004524 <getPos_Radar+0xd84>
 8004520:	4b2f      	ldr	r3, [pc, #188]	; (80045e0 <getPos_Radar+0xe40>)
 8004522:	681b      	ldr	r3, [r3, #0]
 8004524:	4a2e      	ldr	r2, [pc, #184]	; (80045e0 <getPos_Radar+0xe40>)
 8004526:	6013      	str	r3, [r2, #0]
			speedradary = (meanmove > 0) ? cos(angle_accumulated * 3.14159 / 180) * speedall/meanmove  : speedradary;
 8004528:	4b26      	ldr	r3, [pc, #152]	; (80045c4 <getPos_Radar+0xe24>)
 800452a:	781b      	ldrb	r3, [r3, #0]
 800452c:	2b00      	cmp	r3, #0
 800452e:	d05d      	beq.n	80045ec <getPos_Radar+0xe4c>
 8004530:	4b28      	ldr	r3, [pc, #160]	; (80045d4 <getPos_Radar+0xe34>)
 8004532:	681b      	ldr	r3, [r3, #0]
 8004534:	4618      	mov	r0, r3
 8004536:	f7fb ffd9 	bl	80004ec <__aeabi_f2d>
 800453a:	a31f      	add	r3, pc, #124	; (adr r3, 80045b8 <getPos_Radar+0xe18>)
 800453c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8004540:	f7fc f82c 	bl	800059c <__aeabi_dmul>
 8004544:	4603      	mov	r3, r0
 8004546:	460c      	mov	r4, r1
 8004548:	4618      	mov	r0, r3
 800454a:	4621      	mov	r1, r4
 800454c:	f04f 0200 	mov.w	r2, #0
 8004550:	4b21      	ldr	r3, [pc, #132]	; (80045d8 <getPos_Radar+0xe38>)
 8004552:	f7fc f94d 	bl	80007f0 <__aeabi_ddiv>
 8004556:	4603      	mov	r3, r0
 8004558:	460c      	mov	r4, r1
 800455a:	ec44 3b17 	vmov	d7, r3, r4
 800455e:	eeb0 0a47 	vmov.f32	s0, s14
 8004562:	eef0 0a67 	vmov.f32	s1, s15
 8004566:	f00d fe8f 	bl	8012288 <cos>
 800456a:	ec56 5b10 	vmov	r5, r6, d0
 800456e:	4b1b      	ldr	r3, [pc, #108]	; (80045dc <getPos_Radar+0xe3c>)
 8004570:	681b      	ldr	r3, [r3, #0]
 8004572:	4618      	mov	r0, r3
 8004574:	f7fb ffba 	bl	80004ec <__aeabi_f2d>
 8004578:	4603      	mov	r3, r0
 800457a:	460c      	mov	r4, r1
 800457c:	461a      	mov	r2, r3
 800457e:	4623      	mov	r3, r4
 8004580:	4628      	mov	r0, r5
 8004582:	4631      	mov	r1, r6
 8004584:	f7fc f80a 	bl	800059c <__aeabi_dmul>
 8004588:	4603      	mov	r3, r0
 800458a:	460c      	mov	r4, r1
 800458c:	4625      	mov	r5, r4
 800458e:	461c      	mov	r4, r3
 8004590:	4b0c      	ldr	r3, [pc, #48]	; (80045c4 <getPos_Radar+0xe24>)
 8004592:	781b      	ldrb	r3, [r3, #0]
 8004594:	4618      	mov	r0, r3
 8004596:	f7fb ff97 	bl	80004c8 <__aeabi_i2d>
 800459a:	4602      	mov	r2, r0
 800459c:	460b      	mov	r3, r1
 800459e:	4620      	mov	r0, r4
 80045a0:	4629      	mov	r1, r5
 80045a2:	f7fc f925 	bl	80007f0 <__aeabi_ddiv>
 80045a6:	4603      	mov	r3, r0
 80045a8:	460c      	mov	r4, r1
 80045aa:	4618      	mov	r0, r3
 80045ac:	4621      	mov	r1, r4
 80045ae:	f7fc faed 	bl	8000b8c <__aeabi_d2f>
 80045b2:	4603      	mov	r3, r0
 80045b4:	e01c      	b.n	80045f0 <getPos_Radar+0xe50>
 80045b6:	bf00      	nop
 80045b8:	f01b866e 	.word	0xf01b866e
 80045bc:	400921f9 	.word	0x400921f9
 80045c0:	20007a94 	.word	0x20007a94
 80045c4:	20009c2a 	.word	0x20009c2a
 80045c8:	2000ad38 	.word	0x2000ad38
 80045cc:	2000ac48 	.word	0x2000ac48
 80045d0:	20009c24 	.word	0x20009c24
 80045d4:	2000ad6c 	.word	0x2000ad6c
 80045d8:	40668000 	.word	0x40668000
 80045dc:	20009a04 	.word	0x20009a04
 80045e0:	20009a08 	.word	0x20009a08
 80045e4:	20009a1c 	.word	0x20009a1c
 80045e8:	20008a50 	.word	0x20008a50
 80045ec:	4b4d      	ldr	r3, [pc, #308]	; (8004724 <getPos_Radar+0xf84>)
 80045ee:	681b      	ldr	r3, [r3, #0]
 80045f0:	4a4c      	ldr	r2, [pc, #304]	; (8004724 <getPos_Radar+0xf84>)
 80045f2:	6013      	str	r3, [r2, #0]
	//		Radarx = (meanmove > 0) ? Radarx + moveally/meanmove : Radarx;
	//		Radary = (meanmove > 0) ? Radary + moveallx/meanmove : Radary;
			Radarx = (meanmove > 0) ? states_X[0] + moveally/meanmove : Radarx;
 80045f4:	4b4c      	ldr	r3, [pc, #304]	; (8004728 <getPos_Radar+0xf88>)
 80045f6:	781b      	ldrb	r3, [r3, #0]
 80045f8:	2b00      	cmp	r3, #0
 80045fa:	d010      	beq.n	800461e <getPos_Radar+0xe7e>
 80045fc:	4b4b      	ldr	r3, [pc, #300]	; (800472c <getPos_Radar+0xf8c>)
 80045fe:	ed93 7a00 	vldr	s14, [r3]
 8004602:	4b4b      	ldr	r3, [pc, #300]	; (8004730 <getPos_Radar+0xf90>)
 8004604:	ed93 6a00 	vldr	s12, [r3]
 8004608:	4b47      	ldr	r3, [pc, #284]	; (8004728 <getPos_Radar+0xf88>)
 800460a:	781b      	ldrb	r3, [r3, #0]
 800460c:	ee07 3a90 	vmov	s15, r3
 8004610:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 8004614:	eec6 7a26 	vdiv.f32	s15, s12, s13
 8004618:	ee77 7a27 	vadd.f32	s15, s14, s15
 800461c:	e002      	b.n	8004624 <getPos_Radar+0xe84>
 800461e:	4b45      	ldr	r3, [pc, #276]	; (8004734 <getPos_Radar+0xf94>)
 8004620:	edd3 7a00 	vldr	s15, [r3]
 8004624:	4b43      	ldr	r3, [pc, #268]	; (8004734 <getPos_Radar+0xf94>)
 8004626:	edc3 7a00 	vstr	s15, [r3]
			Radary = (meanmove > 0) ? states_X[1] + moveallx/meanmove : Radary;
 800462a:	4b3f      	ldr	r3, [pc, #252]	; (8004728 <getPos_Radar+0xf88>)
 800462c:	781b      	ldrb	r3, [r3, #0]
 800462e:	2b00      	cmp	r3, #0
 8004630:	d010      	beq.n	8004654 <getPos_Radar+0xeb4>
 8004632:	4b3e      	ldr	r3, [pc, #248]	; (800472c <getPos_Radar+0xf8c>)
 8004634:	ed93 7a01 	vldr	s14, [r3, #4]
 8004638:	4b3f      	ldr	r3, [pc, #252]	; (8004738 <getPos_Radar+0xf98>)
 800463a:	ed93 6a00 	vldr	s12, [r3]
 800463e:	4b3a      	ldr	r3, [pc, #232]	; (8004728 <getPos_Radar+0xf88>)
 8004640:	781b      	ldrb	r3, [r3, #0]
 8004642:	ee07 3a90 	vmov	s15, r3
 8004646:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 800464a:	eec6 7a26 	vdiv.f32	s15, s12, s13
 800464e:	ee77 7a27 	vadd.f32	s15, s14, s15
 8004652:	e002      	b.n	800465a <getPos_Radar+0xeba>
 8004654:	4b39      	ldr	r3, [pc, #228]	; (800473c <getPos_Radar+0xf9c>)
 8004656:	edd3 7a00 	vldr	s15, [r3]
 800465a:	4b38      	ldr	r3, [pc, #224]	; (800473c <getPos_Radar+0xf9c>)
 800465c:	edc3 7a00 	vstr	s15, [r3]
			break;
 8004660:	bf00      	nop

		}

	}

	if(Objects_radar_previous[0].xobj == 0){
 8004662:	4b37      	ldr	r3, [pc, #220]	; (8004740 <getPos_Radar+0xfa0>)
 8004664:	edd3 7a02 	vldr	s15, [r3, #8]
 8004668:	eef5 7a40 	vcmp.f32	s15, #0.0
 800466c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8004670:	d122      	bne.n	80046b8 <getPos_Radar+0xf18>
		memcpy(Objects_radar_previous,Objects_radar,sizeof(Objects_radar));
 8004672:	4a33      	ldr	r2, [pc, #204]	; (8004740 <getPos_Radar+0xfa0>)
 8004674:	4b33      	ldr	r3, [pc, #204]	; (8004744 <getPos_Radar+0xfa4>)
 8004676:	4610      	mov	r0, r2
 8004678:	4619      	mov	r1, r3
 800467a:	f44f 637a 	mov.w	r3, #4000	; 0xfa0
 800467e:	461a      	mov	r2, r3
 8004680:	f00b ffd2 	bl	8010628 <memcpy>
		numObj_prev = numObj;
 8004684:	4b30      	ldr	r3, [pc, #192]	; (8004748 <getPos_Radar+0xfa8>)
 8004686:	881a      	ldrh	r2, [r3, #0]
 8004688:	4b30      	ldr	r3, [pc, #192]	; (800474c <getPos_Radar+0xfac>)
 800468a:	801a      	strh	r2, [r3, #0]
		numClu_prev = numClu;
 800468c:	4b30      	ldr	r3, [pc, #192]	; (8004750 <getPos_Radar+0xfb0>)
 800468e:	881a      	ldrh	r2, [r3, #0]
 8004690:	4b30      	ldr	r3, [pc, #192]	; (8004754 <getPos_Radar+0xfb4>)
 8004692:	801a      	strh	r2, [r3, #0]

		memcpy(Objects_radar_previous_2,Objects_radar,sizeof(Objects_radar));
 8004694:	4a30      	ldr	r2, [pc, #192]	; (8004758 <getPos_Radar+0xfb8>)
 8004696:	4b2b      	ldr	r3, [pc, #172]	; (8004744 <getPos_Radar+0xfa4>)
 8004698:	4610      	mov	r0, r2
 800469a:	4619      	mov	r1, r3
 800469c:	f44f 637a 	mov.w	r3, #4000	; 0xfa0
 80046a0:	461a      	mov	r2, r3
 80046a2:	f00b ffc1 	bl	8010628 <memcpy>
	    numObj_prev2 = numObj;
 80046a6:	4b28      	ldr	r3, [pc, #160]	; (8004748 <getPos_Radar+0xfa8>)
 80046a8:	881a      	ldrh	r2, [r3, #0]
 80046aa:	4b2c      	ldr	r3, [pc, #176]	; (800475c <getPos_Radar+0xfbc>)
 80046ac:	801a      	strh	r2, [r3, #0]
	    numClu_prev2 = numClu;
 80046ae:	4b28      	ldr	r3, [pc, #160]	; (8004750 <getPos_Radar+0xfb0>)
 80046b0:	881a      	ldrh	r2, [r3, #0]
 80046b2:	4b2b      	ldr	r3, [pc, #172]	; (8004760 <getPos_Radar+0xfc0>)
 80046b4:	801a      	strh	r2, [r3, #0]
	}




}
 80046b6:	e030      	b.n	800471a <getPos_Radar+0xf7a>
	}else if(counter_previous_update++ >= update_factor - 1){
 80046b8:	4b2a      	ldr	r3, [pc, #168]	; (8004764 <getPos_Radar+0xfc4>)
 80046ba:	881b      	ldrh	r3, [r3, #0]
 80046bc:	1c5a      	adds	r2, r3, #1
 80046be:	b291      	uxth	r1, r2
 80046c0:	4a28      	ldr	r2, [pc, #160]	; (8004764 <getPos_Radar+0xfc4>)
 80046c2:	8011      	strh	r1, [r2, #0]
 80046c4:	461a      	mov	r2, r3
 80046c6:	4b28      	ldr	r3, [pc, #160]	; (8004768 <getPos_Radar+0xfc8>)
 80046c8:	881b      	ldrh	r3, [r3, #0]
 80046ca:	3b01      	subs	r3, #1
 80046cc:	429a      	cmp	r2, r3
 80046ce:	db24      	blt.n	800471a <getPos_Radar+0xf7a>
		memcpy(Objects_radar_previous_2,Objects_radar_previous,sizeof(Objects_radar_previous));
 80046d0:	4a21      	ldr	r2, [pc, #132]	; (8004758 <getPos_Radar+0xfb8>)
 80046d2:	4b1b      	ldr	r3, [pc, #108]	; (8004740 <getPos_Radar+0xfa0>)
 80046d4:	4610      	mov	r0, r2
 80046d6:	4619      	mov	r1, r3
 80046d8:	f44f 637a 	mov.w	r3, #4000	; 0xfa0
 80046dc:	461a      	mov	r2, r3
 80046de:	f00b ffa3 	bl	8010628 <memcpy>
		numObj_prev2 = numObj_prev;
 80046e2:	4b1a      	ldr	r3, [pc, #104]	; (800474c <getPos_Radar+0xfac>)
 80046e4:	881a      	ldrh	r2, [r3, #0]
 80046e6:	4b1d      	ldr	r3, [pc, #116]	; (800475c <getPos_Radar+0xfbc>)
 80046e8:	801a      	strh	r2, [r3, #0]
		numClu_prev2 = numClu_prev;
 80046ea:	4b1a      	ldr	r3, [pc, #104]	; (8004754 <getPos_Radar+0xfb4>)
 80046ec:	881a      	ldrh	r2, [r3, #0]
 80046ee:	4b1c      	ldr	r3, [pc, #112]	; (8004760 <getPos_Radar+0xfc0>)
 80046f0:	801a      	strh	r2, [r3, #0]
		memcpy(Objects_radar_previous,Objects_radar,sizeof(Objects_radar));
 80046f2:	4a13      	ldr	r2, [pc, #76]	; (8004740 <getPos_Radar+0xfa0>)
 80046f4:	4b13      	ldr	r3, [pc, #76]	; (8004744 <getPos_Radar+0xfa4>)
 80046f6:	4610      	mov	r0, r2
 80046f8:	4619      	mov	r1, r3
 80046fa:	f44f 637a 	mov.w	r3, #4000	; 0xfa0
 80046fe:	461a      	mov	r2, r3
 8004700:	f00b ff92 	bl	8010628 <memcpy>
	    numObj_prev = numObj;
 8004704:	4b10      	ldr	r3, [pc, #64]	; (8004748 <getPos_Radar+0xfa8>)
 8004706:	881a      	ldrh	r2, [r3, #0]
 8004708:	4b10      	ldr	r3, [pc, #64]	; (800474c <getPos_Radar+0xfac>)
 800470a:	801a      	strh	r2, [r3, #0]
	    numClu_prev = numClu;
 800470c:	4b10      	ldr	r3, [pc, #64]	; (8004750 <getPos_Radar+0xfb0>)
 800470e:	881a      	ldrh	r2, [r3, #0]
 8004710:	4b10      	ldr	r3, [pc, #64]	; (8004754 <getPos_Radar+0xfb4>)
 8004712:	801a      	strh	r2, [r3, #0]
		counter_previous_update = 0;
 8004714:	4b13      	ldr	r3, [pc, #76]	; (8004764 <getPos_Radar+0xfc4>)
 8004716:	2200      	movs	r2, #0
 8004718:	801a      	strh	r2, [r3, #0]
}
 800471a:	bf00      	nop
 800471c:	370c      	adds	r7, #12
 800471e:	46bd      	mov	sp, r7
 8004720:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8004722:	bf00      	nop
 8004724:	20009a1c 	.word	0x20009a1c
 8004728:	20009c2a 	.word	0x20009c2a
 800472c:	2000ad38 	.word	0x2000ad38
 8004730:	20008a50 	.word	0x20008a50
 8004734:	20007a94 	.word	0x20007a94
 8004738:	2000ac48 	.word	0x2000ac48
 800473c:	20009c24 	.word	0x20009c24
 8004740:	20009c40 	.word	0x20009c40
 8004744:	20007a98 	.word	0x20007a98
 8004748:	2000ad14 	.word	0x2000ad14
 800474c:	20009a2c 	.word	0x20009a2c
 8004750:	2000ac54 	.word	0x2000ac54
 8004754:	20008a40 	.word	0x20008a40
 8004758:	20008a58 	.word	0x20008a58
 800475c:	20008a48 	.word	0x20008a48
 8004760:	20007a34 	.word	0x20007a34
 8004764:	20009a20 	.word	0x20009a20
 8004768:	2000abf8 	.word	0x2000abf8

0800476c <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 800476c:	b580      	push	{r7, lr}
 800476e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN 1 */
	 // IMU variables

	 accel_x_offset = 0;
 8004770:	4bb4      	ldr	r3, [pc, #720]	; (8004a44 <main+0x2d8>)
 8004772:	f04f 0200 	mov.w	r2, #0
 8004776:	601a      	str	r2, [r3, #0]
	 accel_y_offset = 0;
 8004778:	4bb3      	ldr	r3, [pc, #716]	; (8004a48 <main+0x2dc>)
 800477a:	f04f 0200 	mov.w	r2, #0
 800477e:	601a      	str	r2, [r3, #0]
	 accel_z_offset = 0;
 8004780:	4bb2      	ldr	r3, [pc, #712]	; (8004a4c <main+0x2e0>)
 8004782:	f04f 0200 	mov.w	r2, #0
 8004786:	601a      	str	r2, [r3, #0]
	 gyro_x_offset = 0;
 8004788:	4bb1      	ldr	r3, [pc, #708]	; (8004a50 <main+0x2e4>)
 800478a:	f04f 0200 	mov.w	r2, #0
 800478e:	601a      	str	r2, [r3, #0]
	 gyro_y_offset = 0;
 8004790:	4bb0      	ldr	r3, [pc, #704]	; (8004a54 <main+0x2e8>)
 8004792:	f04f 0200 	mov.w	r2, #0
 8004796:	601a      	str	r2, [r3, #0]
	 gyro_z_offset = 0;
 8004798:	4baf      	ldr	r3, [pc, #700]	; (8004a58 <main+0x2ec>)
 800479a:	f04f 0200 	mov.w	r2, #0
 800479e:	601a      	str	r2, [r3, #0]
	 mean_acc_x = 0;
 80047a0:	4bae      	ldr	r3, [pc, #696]	; (8004a5c <main+0x2f0>)
 80047a2:	f04f 0200 	mov.w	r2, #0
 80047a6:	601a      	str	r2, [r3, #0]
	 mean_acc_y = 0;
 80047a8:	4bad      	ldr	r3, [pc, #692]	; (8004a60 <main+0x2f4>)
 80047aa:	f04f 0200 	mov.w	r2, #0
 80047ae:	601a      	str	r2, [r3, #0]
	 mean_acc_z = 0;
 80047b0:	4bac      	ldr	r3, [pc, #688]	; (8004a64 <main+0x2f8>)
 80047b2:	f04f 0200 	mov.w	r2, #0
 80047b6:	601a      	str	r2, [r3, #0]
	 mean_gyro_x = 0;
 80047b8:	4bab      	ldr	r3, [pc, #684]	; (8004a68 <main+0x2fc>)
 80047ba:	f04f 0200 	mov.w	r2, #0
 80047be:	601a      	str	r2, [r3, #0]
	 mean_gyro_y = 0;
 80047c0:	4baa      	ldr	r3, [pc, #680]	; (8004a6c <main+0x300>)
 80047c2:	f04f 0200 	mov.w	r2, #0
 80047c6:	601a      	str	r2, [r3, #0]
	 mean_gyro_z = 0;
 80047c8:	4ba9      	ldr	r3, [pc, #676]	; (8004a70 <main+0x304>)
 80047ca:	f04f 0200 	mov.w	r2, #0
 80047ce:	601a      	str	r2, [r3, #0]
	 gyro_z_rad2 = 0;
 80047d0:	4ba8      	ldr	r3, [pc, #672]	; (8004a74 <main+0x308>)
 80047d2:	f04f 0200 	mov.w	r2, #0
 80047d6:	601a      	str	r2, [r3, #0]
	 accel_x_g2 = 0;
 80047d8:	4ba7      	ldr	r3, [pc, #668]	; (8004a78 <main+0x30c>)
 80047da:	f04f 0200 	mov.w	r2, #0
 80047de:	601a      	str	r2, [r3, #0]
	 accel_y_g2 = 0;
 80047e0:	4ba6      	ldr	r3, [pc, #664]	; (8004a7c <main+0x310>)
 80047e2:	f04f 0200 	mov.w	r2, #0
 80047e6:	601a      	str	r2, [r3, #0]
	 moving = false;
 80047e8:	4ba5      	ldr	r3, [pc, #660]	; (8004a80 <main+0x314>)
 80047ea:	2200      	movs	r2, #0
 80047ec:	701a      	strb	r2, [r3, #0]
	 turning = false;
 80047ee:	4ba5      	ldr	r3, [pc, #660]	; (8004a84 <main+0x318>)
 80047f0:	2200      	movs	r2, #0
 80047f2:	701a      	strb	r2, [r3, #0]
	 Mean = 0;
 80047f4:	4ba4      	ldr	r3, [pc, #656]	; (8004a88 <main+0x31c>)
 80047f6:	2200      	movs	r2, #0
 80047f8:	701a      	strb	r2, [r3, #0]
	 USlr = 0;
 80047fa:	4ba4      	ldr	r3, [pc, #656]	; (8004a8c <main+0x320>)
 80047fc:	2200      	movs	r2, #0
 80047fe:	701a      	strb	r2, [r3, #0]
	 heading = 1;
 8004800:	4ba3      	ldr	r3, [pc, #652]	; (8004a90 <main+0x324>)
 8004802:	2201      	movs	r2, #1
 8004804:	701a      	strb	r2, [r3, #0]
	 deltatime_imu = 0;
 8004806:	4ba3      	ldr	r3, [pc, #652]	; (8004a94 <main+0x328>)
 8004808:	f04f 0200 	mov.w	r2, #0
 800480c:	601a      	str	r2, [r3, #0]
	 weight_UWBx = 0.3;
 800480e:	4ba2      	ldr	r3, [pc, #648]	; (8004a98 <main+0x32c>)
 8004810:	4aa2      	ldr	r2, [pc, #648]	; (8004a9c <main+0x330>)
 8004812:	601a      	str	r2, [r3, #0]
	 weight_UWBy = 0.7;
 8004814:	4ba2      	ldr	r3, [pc, #648]	; (8004aa0 <main+0x334>)
 8004816:	4aa3      	ldr	r2, [pc, #652]	; (8004aa4 <main+0x338>)
 8004818:	601a      	str	r2, [r3, #0]
	 weight_radarx = 0.7;
 800481a:	4ba3      	ldr	r3, [pc, #652]	; (8004aa8 <main+0x33c>)
 800481c:	4aa1      	ldr	r2, [pc, #644]	; (8004aa4 <main+0x338>)
 800481e:	601a      	str	r2, [r3, #0]
	 weight_radary = 0.3;
 8004820:	4ba2      	ldr	r3, [pc, #648]	; (8004aac <main+0x340>)
 8004822:	4a9e      	ldr	r2, [pc, #632]	; (8004a9c <main+0x330>)
 8004824:	601a      	str	r2, [r3, #0]
	 weight_speedUWBx = 0.4;
 8004826:	4ba2      	ldr	r3, [pc, #648]	; (8004ab0 <main+0x344>)
 8004828:	4aa2      	ldr	r2, [pc, #648]	; (8004ab4 <main+0x348>)
 800482a:	601a      	str	r2, [r3, #0]
	 weight_speedUWBy = 0.4;
 800482c:	4ba2      	ldr	r3, [pc, #648]	; (8004ab8 <main+0x34c>)
 800482e:	4aa1      	ldr	r2, [pc, #644]	; (8004ab4 <main+0x348>)
 8004830:	601a      	str	r2, [r3, #0]
	 weight_speedradarx = 0.6;
 8004832:	4ba2      	ldr	r3, [pc, #648]	; (8004abc <main+0x350>)
 8004834:	4aa2      	ldr	r2, [pc, #648]	; (8004ac0 <main+0x354>)
 8004836:	601a      	str	r2, [r3, #0]
	 weight_speedradary = 0.6;
 8004838:	4ba2      	ldr	r3, [pc, #648]	; (8004ac4 <main+0x358>)
 800483a:	4aa1      	ldr	r2, [pc, #644]	; (8004ac0 <main+0x354>)
 800483c:	601a      	str	r2, [r3, #0]

	 //UWB Variables
	 UWBx = 0;
 800483e:	4ba2      	ldr	r3, [pc, #648]	; (8004ac8 <main+0x35c>)
 8004840:	f04f 0200 	mov.w	r2, #0
 8004844:	601a      	str	r2, [r3, #0]
	 UWBy = 0;
 8004846:	4ba1      	ldr	r3, [pc, #644]	; (8004acc <main+0x360>)
 8004848:	f04f 0200 	mov.w	r2, #0
 800484c:	601a      	str	r2, [r3, #0]
	 UWBx_previous = 0;
 800484e:	4ba0      	ldr	r3, [pc, #640]	; (8004ad0 <main+0x364>)
 8004850:	f04f 0200 	mov.w	r2, #0
 8004854:	601a      	str	r2, [r3, #0]
	 UWBx_previous = 0;
 8004856:	4b9e      	ldr	r3, [pc, #632]	; (8004ad0 <main+0x364>)
 8004858:	f04f 0200 	mov.w	r2, #0
 800485c:	601a      	str	r2, [r3, #0]


	 // Radar Variables
	 Radarx = 0;
 800485e:	4b9d      	ldr	r3, [pc, #628]	; (8004ad4 <main+0x368>)
 8004860:	f04f 0200 	mov.w	r2, #0
 8004864:	601a      	str	r2, [r3, #0]
	 Radary = 0;
 8004866:	4b9c      	ldr	r3, [pc, #624]	; (8004ad8 <main+0x36c>)
 8004868:	f04f 0200 	mov.w	r2, #0
 800486c:	601a      	str	r2, [r3, #0]
	 numClu = 0;
 800486e:	4b9b      	ldr	r3, [pc, #620]	; (8004adc <main+0x370>)
 8004870:	2200      	movs	r2, #0
 8004872:	801a      	strh	r2, [r3, #0]
	 numObj = 0;
 8004874:	4b9a      	ldr	r3, [pc, #616]	; (8004ae0 <main+0x374>)
 8004876:	2200      	movs	r2, #0
 8004878:	801a      	strh	r2, [r3, #0]
	 frontback = true;
 800487a:	4b9a      	ldr	r3, [pc, #616]	; (8004ae4 <main+0x378>)
 800487c:	2201      	movs	r2, #1
 800487e:	701a      	strb	r2, [r3, #0]
	 counter_previous_update = 0;
 8004880:	4b99      	ldr	r3, [pc, #612]	; (8004ae8 <main+0x37c>)
 8004882:	2200      	movs	r2, #0
 8004884:	801a      	strh	r2, [r3, #0]

	 anglezactual = 0;
 8004886:	4b99      	ldr	r3, [pc, #612]	; (8004aec <main+0x380>)
 8004888:	f04f 0200 	mov.w	r2, #0
 800488c:	601a      	str	r2, [r3, #0]
	 angle_accumulated = 0;
 800488e:	4b98      	ldr	r3, [pc, #608]	; (8004af0 <main+0x384>)
 8004890:	f04f 0200 	mov.w	r2, #0
 8004894:	601a      	str	r2, [r3, #0]
	 angle_accumulated2 = 0;
 8004896:	4b97      	ldr	r3, [pc, #604]	; (8004af4 <main+0x388>)
 8004898:	f04f 0200 	mov.w	r2, #0
 800489c:	601a      	str	r2, [r3, #0]

	 offset = false;
 800489e:	4b96      	ldr	r3, [pc, #600]	; (8004af8 <main+0x38c>)
 80048a0:	2200      	movs	r2, #0
 80048a2:	701a      	strb	r2, [r3, #0]
	 disth = 1;
 80048a4:	4b95      	ldr	r3, [pc, #596]	; (8004afc <main+0x390>)
 80048a6:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 80048aa:	601a      	str	r2, [r3, #0]
	 anglez = 90.0;
 80048ac:	4b94      	ldr	r3, [pc, #592]	; (8004b00 <main+0x394>)
 80048ae:	4a95      	ldr	r2, [pc, #596]	; (8004b04 <main+0x398>)
 80048b0:	601a      	str	r2, [r3, #0]

	 // EKF Variables
	 UWB_sampling = true;
 80048b2:	4b95      	ldr	r3, [pc, #596]	; (8004b08 <main+0x39c>)
 80048b4:	2201      	movs	r2, #1
 80048b6:	801a      	strh	r2, [r3, #0]
	 actual_freq = 1;
 80048b8:	4b94      	ldr	r3, [pc, #592]	; (8004b0c <main+0x3a0>)
 80048ba:	2201      	movs	r2, #1
 80048bc:	801a      	strh	r2, [r3, #0]
	 test_straight = 0;
 80048be:	4b94      	ldr	r3, [pc, #592]	; (8004b10 <main+0x3a4>)
 80048c0:	2200      	movs	r2, #0
 80048c2:	801a      	strh	r2, [r3, #0]

	 strcpy(Direction,"IDLE");
 80048c4:	4b93      	ldr	r3, [pc, #588]	; (8004b14 <main+0x3a8>)
 80048c6:	4a94      	ldr	r2, [pc, #592]	; (8004b18 <main+0x3ac>)
 80048c8:	6810      	ldr	r0, [r2, #0]
 80048ca:	6018      	str	r0, [r3, #0]
 80048cc:	7912      	ldrb	r2, [r2, #4]
 80048ce:	711a      	strb	r2, [r3, #4]
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
	 HAL_Init();
 80048d0:	f003 fd60 	bl	8008394 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 80048d4:	f000 f952 	bl	8004b7c <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 80048d8:	f000 fd0a 	bl	80052f0 <MX_GPIO_Init>
  MX_LPUART1_UART_Init();
 80048dc:	f000 fa32 	bl	8004d44 <MX_LPUART1_UART_Init>
  MX_USART3_UART_Init();
 80048e0:	f000 fb62 	bl	8004fa8 <MX_USART3_UART_Init>
  MX_UART4_Init();
 80048e4:	f000 fa7c 	bl	8004de0 <MX_UART4_Init>
  MX_USART1_UART_Init();
 80048e8:	f000 fac6 	bl	8004e78 <MX_USART1_UART_Init>
  MX_USART2_UART_Init();
 80048ec:	f000 fb10 	bl	8004f10 <MX_USART2_UART_Init>
  MX_TIM4_Init();
 80048f0:	f000 fc1c 	bl	800512c <MX_TIM4_Init>
  MX_TIM2_Init();
 80048f4:	f000 fba4 	bl	8005040 <MX_TIM2_Init>
  MX_I2C1_Init();
 80048f8:	f000 f9e4 	bl	8004cc4 <MX_I2C1_Init>
  MX_USB_OTG_FS_PCD_Init();
 80048fc:	f000 fcce 	bl	800529c <MX_USB_OTG_FS_PCD_Init>
  MX_TIM7_Init();
 8004900:	f000 fc96 	bl	8005230 <MX_TIM7_Init>
  /* USER CODE BEGIN 2 */
	  HAL_NVIC_SetPriority(LPUART1_IRQn, 0, 0);
 8004904:	2200      	movs	r2, #0
 8004906:	2100      	movs	r1, #0
 8004908:	2046      	movs	r0, #70	; 0x46
 800490a:	f003 fe5b 	bl	80085c4 <HAL_NVIC_SetPriority>
	  HAL_NVIC_EnableIRQ(LPUART1_IRQn);
 800490e:	2046      	movs	r0, #70	; 0x46
 8004910:	f003 fe74 	bl	80085fc <HAL_NVIC_EnableIRQ>
	   HAL_NVIC_SetPriority(USART1_IRQn, 1, 0);
 8004914:	2200      	movs	r2, #0
 8004916:	2101      	movs	r1, #1
 8004918:	2025      	movs	r0, #37	; 0x25
 800491a:	f003 fe53 	bl	80085c4 <HAL_NVIC_SetPriority>
	  HAL_NVIC_EnableIRQ(USART1_IRQn);
 800491e:	2025      	movs	r0, #37	; 0x25
 8004920:	f003 fe6c 	bl	80085fc <HAL_NVIC_EnableIRQ>
	   HAL_NVIC_SetPriority(USART2_IRQn, 1, 0);
 8004924:	2200      	movs	r2, #0
 8004926:	2101      	movs	r1, #1
 8004928:	2026      	movs	r0, #38	; 0x26
 800492a:	f003 fe4b 	bl	80085c4 <HAL_NVIC_SetPriority>
	  HAL_NVIC_EnableIRQ(USART2_IRQn);
 800492e:	2026      	movs	r0, #38	; 0x26
 8004930:	f003 fe64 	bl	80085fc <HAL_NVIC_EnableIRQ>
	  HAL_NVIC_SetPriority(USART3_IRQn, 1, 0);
 8004934:	2200      	movs	r2, #0
 8004936:	2101      	movs	r1, #1
 8004938:	2027      	movs	r0, #39	; 0x27
 800493a:	f003 fe43 	bl	80085c4 <HAL_NVIC_SetPriority>
	  HAL_NVIC_EnableIRQ(USART3_IRQn);
 800493e:	2027      	movs	r0, #39	; 0x27
 8004940:	f003 fe5c 	bl	80085fc <HAL_NVIC_EnableIRQ>
	  HAL_NVIC_SetPriority(UART4_IRQn, 1, 0);
 8004944:	2200      	movs	r2, #0
 8004946:	2101      	movs	r1, #1
 8004948:	2034      	movs	r0, #52	; 0x34
 800494a:	f003 fe3b 	bl	80085c4 <HAL_NVIC_SetPriority>
	  HAL_NVIC_EnableIRQ(UART4_IRQn);
 800494e:	2034      	movs	r0, #52	; 0x34
 8004950:	f003 fe54 	bl	80085fc <HAL_NVIC_EnableIRQ>
	  HAL_NVIC_SetPriority(UART5_IRQn, 1, 0);
 8004954:	2200      	movs	r2, #0
 8004956:	2101      	movs	r1, #1
 8004958:	2035      	movs	r0, #53	; 0x35
 800495a:	f003 fe33 	bl	80085c4 <HAL_NVIC_SetPriority>
	  HAL_NVIC_EnableIRQ(UART5_IRQn);
 800495e:	2035      	movs	r0, #53	; 0x35
 8004960:	f003 fe4c 	bl	80085fc <HAL_NVIC_EnableIRQ>


	  IMU_star_com();
 8004964:	f7fd fdee 	bl	8002544 <IMU_star_com>


	  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 2, 1);
 8004968:	2201      	movs	r2, #1
 800496a:	2102      	movs	r1, #2
 800496c:	2028      	movs	r0, #40	; 0x28
 800496e:	f003 fe29 	bl	80085c4 <HAL_NVIC_SetPriority>
	  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 8004972:	2028      	movs	r0, #40	; 0x28
 8004974:	f003 fe42 	bl	80085fc <HAL_NVIC_EnableIRQ>

	  LPUART1->CR1 |= USART_CR1_RXNEIE; // Enable Interrupt
 8004978:	4b68      	ldr	r3, [pc, #416]	; (8004b1c <main+0x3b0>)
 800497a:	681b      	ldr	r3, [r3, #0]
 800497c:	4a67      	ldr	r2, [pc, #412]	; (8004b1c <main+0x3b0>)
 800497e:	f043 0320 	orr.w	r3, r3, #32
 8004982:	6013      	str	r3, [r2, #0]
	  USART1->CR1 |= USART_CR1_RXNEIE; // Enable Interrupt
 8004984:	4b66      	ldr	r3, [pc, #408]	; (8004b20 <main+0x3b4>)
 8004986:	681b      	ldr	r3, [r3, #0]
 8004988:	4a65      	ldr	r2, [pc, #404]	; (8004b20 <main+0x3b4>)
 800498a:	f043 0320 	orr.w	r3, r3, #32
 800498e:	6013      	str	r3, [r2, #0]
	  USART2->CR1 |= USART_CR1_RXNEIE; // Enable Interrupt
 8004990:	4b64      	ldr	r3, [pc, #400]	; (8004b24 <main+0x3b8>)
 8004992:	681b      	ldr	r3, [r3, #0]
 8004994:	4a63      	ldr	r2, [pc, #396]	; (8004b24 <main+0x3b8>)
 8004996:	f043 0320 	orr.w	r3, r3, #32
 800499a:	6013      	str	r3, [r2, #0]
	  USART3->CR1 |= USART_CR1_RXNEIE; // Enable Interrupt
 800499c:	4b62      	ldr	r3, [pc, #392]	; (8004b28 <main+0x3bc>)
 800499e:	681b      	ldr	r3, [r3, #0]
 80049a0:	4a61      	ldr	r2, [pc, #388]	; (8004b28 <main+0x3bc>)
 80049a2:	f043 0320 	orr.w	r3, r3, #32
 80049a6:	6013      	str	r3, [r2, #0]
	  UART4->CR1 |= USART_CR1_RXNEIE; // Enable Interrupt
 80049a8:	4b60      	ldr	r3, [pc, #384]	; (8004b2c <main+0x3c0>)
 80049aa:	681b      	ldr	r3, [r3, #0]
 80049ac:	4a5f      	ldr	r2, [pc, #380]	; (8004b2c <main+0x3c0>)
 80049ae:	f043 0320 	orr.w	r3, r3, #32
 80049b2:	6013      	str	r3, [r2, #0]
	  UART5->CR1 |= USART_CR1_RXNEIE; // Enable Interrupt
 80049b4:	4b5e      	ldr	r3, [pc, #376]	; (8004b30 <main+0x3c4>)
 80049b6:	681b      	ldr	r3, [r3, #0]
 80049b8:	4a5d      	ldr	r2, [pc, #372]	; (8004b30 <main+0x3c4>)
 80049ba:	f043 0320 	orr.w	r3, r3, #32
 80049be:	6013      	str	r3, [r2, #0]



	  HAL_UART_Transmit(&huart2,(uint8_t*)"\r", strlen("\r"),1000);
 80049c0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80049c4:	2201      	movs	r2, #1
 80049c6:	495b      	ldr	r1, [pc, #364]	; (8004b34 <main+0x3c8>)
 80049c8:	485b      	ldr	r0, [pc, #364]	; (8004b38 <main+0x3cc>)
 80049ca:	f007 f91f 	bl	800bc0c <HAL_UART_Transmit>
	  osDelay(1);
 80049ce:	2001      	movs	r0, #1
 80049d0:	f009 f9cc 	bl	800dd6c <osDelay>
	  HAL_UART_Transmit(&huart2,(uint8_t*)"\r", strlen("\r"),1000);
 80049d4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80049d8:	2201      	movs	r2, #1
 80049da:	4956      	ldr	r1, [pc, #344]	; (8004b34 <main+0x3c8>)
 80049dc:	4856      	ldr	r0, [pc, #344]	; (8004b38 <main+0x3cc>)
 80049de:	f007 f915 	bl	800bc0c <HAL_UART_Transmit>

	  HAL_UART_Transmit(&hlpuart1,(uint8_t*)"Si funciono", strlen("Si funciono"),1000);
 80049e2:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80049e6:	220b      	movs	r2, #11
 80049e8:	4954      	ldr	r1, [pc, #336]	; (8004b3c <main+0x3d0>)
 80049ea:	4855      	ldr	r0, [pc, #340]	; (8004b40 <main+0x3d4>)
 80049ec:	f007 f90e 	bl	800bc0c <HAL_UART_Transmit>

	  TIM2->CCR1 = 120/100*50;// delay 1 micro
 80049f0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80049f4:	2232      	movs	r2, #50	; 0x32
 80049f6:	635a      	str	r2, [r3, #52]	; 0x34
	  HAL_TIM_PWM_Start(&htim2, TIM_CHANNEL_1);
 80049f8:	2100      	movs	r1, #0
 80049fa:	4852      	ldr	r0, [pc, #328]	; (8004b44 <main+0x3d8>)
 80049fc:	f006 f800 	bl	800aa00 <HAL_TIM_PWM_Start>
	  TIM7->CR1 = 0x01; // CEN(Counter ENable)='1'
 8004a00:	4b51      	ldr	r3, [pc, #324]	; (8004b48 <main+0x3dc>)
 8004a02:	2201      	movs	r2, #1
 8004a04:	601a      	str	r2, [r3, #0]

	  HCSR4_Init(received);
 8004a06:	4851      	ldr	r0, [pc, #324]	; (8004b4c <main+0x3e0>)
 8004a08:	f7fd fc68 	bl	80022dc <HCSR4_Init>

  /* USER CODE END 2 */

  /* Init scheduler */
  osKernelInitialize();
 8004a0c:	f009 f89e 	bl	800db4c <osKernelInitialize>
  /* add queues, ... */
  /* USER CODE END RTOS_QUEUES */

  /* Create the thread(s) */
  /* creation of Fusion_Localiza */
  Fusion_LocalizaHandle = osThreadNew(StartFusion, NULL, &Fusion_Localiza_attributes);
 8004a10:	4a4f      	ldr	r2, [pc, #316]	; (8004b50 <main+0x3e4>)
 8004a12:	2100      	movs	r1, #0
 8004a14:	484f      	ldr	r0, [pc, #316]	; (8004b54 <main+0x3e8>)
 8004a16:	f009 f903 	bl	800dc20 <osThreadNew>
 8004a1a:	4602      	mov	r2, r0
 8004a1c:	4b4e      	ldr	r3, [pc, #312]	; (8004b58 <main+0x3ec>)
 8004a1e:	601a      	str	r2, [r3, #0]

  /* creation of Data_sensors_Rx */
  Data_sensors_RxHandle = osThreadNew(StartRxSensors, NULL, &Data_sensors_Rx_attributes);
 8004a20:	4a4e      	ldr	r2, [pc, #312]	; (8004b5c <main+0x3f0>)
 8004a22:	2100      	movs	r1, #0
 8004a24:	484e      	ldr	r0, [pc, #312]	; (8004b60 <main+0x3f4>)
 8004a26:	f009 f8fb 	bl	800dc20 <osThreadNew>
 8004a2a:	4602      	mov	r2, r0
 8004a2c:	4b4d      	ldr	r3, [pc, #308]	; (8004b64 <main+0x3f8>)
 8004a2e:	601a      	str	r2, [r3, #0]

  /* creation of Control_Motors */
  Control_MotorsHandle = osThreadNew(Start_Motors_Ctrl, NULL, &Control_Motors_attributes);
 8004a30:	4a4d      	ldr	r2, [pc, #308]	; (8004b68 <main+0x3fc>)
 8004a32:	2100      	movs	r1, #0
 8004a34:	484d      	ldr	r0, [pc, #308]	; (8004b6c <main+0x400>)
 8004a36:	f009 f8f3 	bl	800dc20 <osThreadNew>
 8004a3a:	4602      	mov	r2, r0
 8004a3c:	4b4c      	ldr	r3, [pc, #304]	; (8004b70 <main+0x404>)
 8004a3e:	601a      	str	r2, [r3, #0]
 8004a40:	e098      	b.n	8004b74 <main+0x408>
 8004a42:	bf00      	nop
 8004a44:	20007a10 	.word	0x20007a10
 8004a48:	20007a38 	.word	0x20007a38
 8004a4c:	20009c2c 	.word	0x20009c2c
 8004a50:	20009a30 	.word	0x20009a30
 8004a54:	2000acbc 	.word	0x2000acbc
 8004a58:	2000ad04 	.word	0x2000ad04
 8004a5c:	20009c30 	.word	0x20009c30
 8004a60:	20009a10 	.word	0x20009a10
 8004a64:	2000ad5c 	.word	0x2000ad5c
 8004a68:	20007a00 	.word	0x20007a00
 8004a6c:	20007a08 	.word	0x20007a08
 8004a70:	20009a00 	.word	0x20009a00
 8004a74:	2000ac00 	.word	0x2000ac00
 8004a78:	20007a0c 	.word	0x20007a0c
 8004a7c:	20007a20 	.word	0x20007a20
 8004a80:	20009a8c 	.word	0x20009a8c
 8004a84:	20007a28 	.word	0x20007a28
 8004a88:	20007a14 	.word	0x20007a14
 8004a8c:	2000acb0 	.word	0x2000acb0
 8004a90:	2000ad64 	.word	0x2000ad64
 8004a94:	20009a44 	.word	0x20009a44
 8004a98:	20009a14 	.word	0x20009a14
 8004a9c:	3e99999a 	.word	0x3e99999a
 8004aa0:	20007a88 	.word	0x20007a88
 8004aa4:	3f333333 	.word	0x3f333333
 8004aa8:	20009c3c 	.word	0x20009c3c
 8004aac:	2000abec 	.word	0x2000abec
 8004ab0:	20008a4c 	.word	0x20008a4c
 8004ab4:	3ecccccd 	.word	0x3ecccccd
 8004ab8:	2000abf4 	.word	0x2000abf4
 8004abc:	2000abe0 	.word	0x2000abe0
 8004ac0:	3f19999a 	.word	0x3f19999a
 8004ac4:	2000ad34 	.word	0x2000ad34
 8004ac8:	2000ac58 	.word	0x2000ac58
 8004acc:	2000acb4 	.word	0x2000acb4
 8004ad0:	20009c38 	.word	0x20009c38
 8004ad4:	20007a94 	.word	0x20007a94
 8004ad8:	20009c24 	.word	0x20009c24
 8004adc:	2000ac54 	.word	0x2000ac54
 8004ae0:	2000ad14 	.word	0x2000ad14
 8004ae4:	2000acc0 	.word	0x2000acc0
 8004ae8:	20009a20 	.word	0x20009a20
 8004aec:	2000abfc 	.word	0x2000abfc
 8004af0:	2000ad6c 	.word	0x2000ad6c
 8004af4:	20007a80 	.word	0x20007a80
 8004af8:	2000acc3 	.word	0x2000acc3
 8004afc:	20008a44 	.word	0x20008a44
 8004b00:	20009a34 	.word	0x20009a34
 8004b04:	42b40000 	.word	0x42b40000
 8004b08:	20009a38 	.word	0x20009a38
 8004b0c:	2000abe8 	.word	0x2000abe8
 8004b10:	20009c28 	.word	0x20009c28
 8004b14:	20007a18 	.word	0x20007a18
 8004b18:	080161d8 	.word	0x080161d8
 8004b1c:	40008000 	.word	0x40008000
 8004b20:	40013800 	.word	0x40013800
 8004b24:	40004400 	.word	0x40004400
 8004b28:	40004800 	.word	0x40004800
 8004b2c:	40004c00 	.word	0x40004c00
 8004b30:	40005000 	.word	0x40005000
 8004b34:	080161e0 	.word	0x080161e0
 8004b38:	2000b48c 	.word	0x2000b48c
 8004b3c:	080161e4 	.word	0x080161e4
 8004b40:	2000b290 	.word	0x2000b290
 8004b44:	2000b44c 	.word	0x2000b44c
 8004b48:	40001400 	.word	0x40001400
 8004b4c:	20003120 	.word	0x20003120
 8004b50:	080162ec 	.word	0x080162ec
 8004b54:	08005f01 	.word	0x08005f01
 8004b58:	2000b518 	.word	0x2000b518
 8004b5c:	08016310 	.word	0x08016310
 8004b60:	08006af1 	.word	0x08006af1
 8004b64:	2000b3bc 	.word	0x2000b3bc
 8004b68:	08016334 	.word	0x08016334
 8004b6c:	08007565 	.word	0x08007565
 8004b70:	2000b31c 	.word	0x2000b31c
  /* USER CODE BEGIN RTOS_THREADS */
  /* add threads, ... */
  /* USER CODE END RTOS_THREADS */

  /* Start scheduler */
  osKernelStart();
 8004b74:	f009 f81e 	bl	800dbb4 <osKernelStart>
 
  /* We should never get here as control is now taken by the scheduler */
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
 8004b78:	e7fe      	b.n	8004b78 <main+0x40c>
 8004b7a:	bf00      	nop

08004b7c <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 8004b7c:	b580      	push	{r7, lr}
 8004b7e:	b0bc      	sub	sp, #240	; 0xf0
 8004b80:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 8004b82:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 8004b86:	2244      	movs	r2, #68	; 0x44
 8004b88:	2100      	movs	r1, #0
 8004b8a:	4618      	mov	r0, r3
 8004b8c:	f00b fd57 	bl	801063e <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 8004b90:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8004b94:	2200      	movs	r2, #0
 8004b96:	601a      	str	r2, [r3, #0]
 8004b98:	605a      	str	r2, [r3, #4]
 8004b9a:	609a      	str	r2, [r3, #8]
 8004b9c:	60da      	str	r2, [r3, #12]
 8004b9e:	611a      	str	r2, [r3, #16]
  RCC_PeriphCLKInitTypeDef PeriphClkInit = {0};
 8004ba0:	1d3b      	adds	r3, r7, #4
 8004ba2:	2294      	movs	r2, #148	; 0x94
 8004ba4:	2100      	movs	r1, #0
 8004ba6:	4618      	mov	r0, r3
 8004ba8:	f00b fd49 	bl	801063e <memset>

  /** Configure the main internal regulator output voltage 
  */
  if (HAL_PWREx_ControlVoltageScaling(PWR_REGULATOR_VOLTAGE_SCALE1_BOOST) != HAL_OK)
 8004bac:	2000      	movs	r0, #0
 8004bae:	f004 f9b7 	bl	8008f20 <HAL_PWREx_ControlVoltageScaling>
 8004bb2:	4603      	mov	r3, r0
 8004bb4:	2b00      	cmp	r3, #0
 8004bb6:	d001      	beq.n	8004bbc <SystemClock_Config+0x40>
  {
    Error_Handler();
 8004bb8:	f002 fd84 	bl	80076c4 <Error_Handler>
  }
  /** Configure LSE Drive Capability 
  */
  HAL_PWR_EnableBkUpAccess();
 8004bbc:	f004 f980 	bl	8008ec0 <HAL_PWR_EnableBkUpAccess>
  __HAL_RCC_LSEDRIVE_CONFIG(RCC_LSEDRIVE_LOW);
 8004bc0:	4b3f      	ldr	r3, [pc, #252]	; (8004cc0 <SystemClock_Config+0x144>)
 8004bc2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8004bc6:	4a3e      	ldr	r2, [pc, #248]	; (8004cc0 <SystemClock_Config+0x144>)
 8004bc8:	f023 0318 	bic.w	r3, r3, #24
 8004bcc:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_LSE|RCC_OSCILLATORTYPE_MSI;
 8004bd0:	2314      	movs	r3, #20
 8004bd2:	f8c7 30ac 	str.w	r3, [r7, #172]	; 0xac
  RCC_OscInitStruct.LSEState = RCC_LSE_ON;
 8004bd6:	2301      	movs	r3, #1
 8004bd8:	f8c7 30b4 	str.w	r3, [r7, #180]	; 0xb4
  RCC_OscInitStruct.MSIState = RCC_MSI_ON;
 8004bdc:	2301      	movs	r3, #1
 8004bde:	f8c7 30c4 	str.w	r3, [r7, #196]	; 0xc4
  RCC_OscInitStruct.MSICalibrationValue = 0;
 8004be2:	2300      	movs	r3, #0
 8004be4:	f8c7 30c8 	str.w	r3, [r7, #200]	; 0xc8
  RCC_OscInitStruct.MSIClockRange = RCC_MSIRANGE_6;
 8004be8:	2360      	movs	r3, #96	; 0x60
 8004bea:	f8c7 30cc 	str.w	r3, [r7, #204]	; 0xcc
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 8004bee:	2302      	movs	r3, #2
 8004bf0:	f8c7 30d4 	str.w	r3, [r7, #212]	; 0xd4
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_MSI;
 8004bf4:	2301      	movs	r3, #1
 8004bf6:	f8c7 30d8 	str.w	r3, [r7, #216]	; 0xd8
  RCC_OscInitStruct.PLL.PLLM = 1;
 8004bfa:	2301      	movs	r3, #1
 8004bfc:	f8c7 30dc 	str.w	r3, [r7, #220]	; 0xdc
  RCC_OscInitStruct.PLL.PLLN = 60;
 8004c00:	233c      	movs	r3, #60	; 0x3c
 8004c02:	f8c7 30e0 	str.w	r3, [r7, #224]	; 0xe0
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 8004c06:	2302      	movs	r3, #2
 8004c08:	f8c7 30e4 	str.w	r3, [r7, #228]	; 0xe4
  RCC_OscInitStruct.PLL.PLLQ = RCC_PLLQ_DIV2;
 8004c0c:	2302      	movs	r3, #2
 8004c0e:	f8c7 30e8 	str.w	r3, [r7, #232]	; 0xe8
  RCC_OscInitStruct.PLL.PLLR = RCC_PLLR_DIV2;
 8004c12:	2302      	movs	r3, #2
 8004c14:	f8c7 30ec 	str.w	r3, [r7, #236]	; 0xec
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 8004c18:	f107 03ac 	add.w	r3, r7, #172	; 0xac
 8004c1c:	4618      	mov	r0, r3
 8004c1e:	f004 fa43 	bl	80090a8 <HAL_RCC_OscConfig>
 8004c22:	4603      	mov	r3, r0
 8004c24:	2b00      	cmp	r3, #0
 8004c26:	d001      	beq.n	8004c2c <SystemClock_Config+0xb0>
  {
    Error_Handler();
 8004c28:	f002 fd4c 	bl	80076c4 <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB busses clocks 
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 8004c2c:	230f      	movs	r3, #15
 8004c2e:	f8c7 3098 	str.w	r3, [r7, #152]	; 0x98
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 8004c32:	2303      	movs	r3, #3
 8004c34:	f8c7 309c 	str.w	r3, [r7, #156]	; 0x9c
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 8004c38:	2300      	movs	r3, #0
 8004c3a:	f8c7 30a0 	str.w	r3, [r7, #160]	; 0xa0
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 8004c3e:	2300      	movs	r3, #0
 8004c40:	f8c7 30a4 	str.w	r3, [r7, #164]	; 0xa4
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 8004c44:	2300      	movs	r3, #0
 8004c46:	f8c7 30a8 	str.w	r3, [r7, #168]	; 0xa8

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_5) != HAL_OK)
 8004c4a:	f107 0398 	add.w	r3, r7, #152	; 0x98
 8004c4e:	2105      	movs	r1, #5
 8004c50:	4618      	mov	r0, r3
 8004c52:	f004 fe4f 	bl	80098f4 <HAL_RCC_ClockConfig>
 8004c56:	4603      	mov	r3, r0
 8004c58:	2b00      	cmp	r3, #0
 8004c5a:	d001      	beq.n	8004c60 <SystemClock_Config+0xe4>
  {
    Error_Handler();
 8004c5c:	f002 fd32 	bl	80076c4 <Error_Handler>
  }
  PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_USART1|RCC_PERIPHCLK_USART2
 8004c60:	f242 036f 	movw	r3, #8303	; 0x206f
 8004c64:	607b      	str	r3, [r7, #4]
                              |RCC_PERIPHCLK_USART3|RCC_PERIPHCLK_UART4
                              |RCC_PERIPHCLK_LPUART1|RCC_PERIPHCLK_I2C1
                              |RCC_PERIPHCLK_USB;
  PeriphClkInit.Usart1ClockSelection = RCC_USART1CLKSOURCE_PCLK2;
 8004c66:	2300      	movs	r3, #0
 8004c68:	643b      	str	r3, [r7, #64]	; 0x40
  PeriphClkInit.Usart2ClockSelection = RCC_USART2CLKSOURCE_PCLK1;
 8004c6a:	2300      	movs	r3, #0
 8004c6c:	647b      	str	r3, [r7, #68]	; 0x44
  PeriphClkInit.Usart3ClockSelection = RCC_USART3CLKSOURCE_PCLK1;
 8004c6e:	2300      	movs	r3, #0
 8004c70:	64bb      	str	r3, [r7, #72]	; 0x48
  PeriphClkInit.Uart4ClockSelection = RCC_UART4CLKSOURCE_PCLK1;
 8004c72:	2300      	movs	r3, #0
 8004c74:	64fb      	str	r3, [r7, #76]	; 0x4c
  PeriphClkInit.Lpuart1ClockSelection = RCC_LPUART1CLKSOURCE_PCLK1;
 8004c76:	2300      	movs	r3, #0
 8004c78:	657b      	str	r3, [r7, #84]	; 0x54
  PeriphClkInit.I2c1ClockSelection = RCC_I2C1CLKSOURCE_PCLK1;
 8004c7a:	2300      	movs	r3, #0
 8004c7c:	65bb      	str	r3, [r7, #88]	; 0x58
  PeriphClkInit.UsbClockSelection = RCC_USBCLKSOURCE_PLLSAI1;
 8004c7e:	f04f 6380 	mov.w	r3, #67108864	; 0x4000000
 8004c82:	67bb      	str	r3, [r7, #120]	; 0x78
  PeriphClkInit.PLLSAI1.PLLSAI1Source = RCC_PLLSOURCE_MSI;
 8004c84:	2301      	movs	r3, #1
 8004c86:	60bb      	str	r3, [r7, #8]
  PeriphClkInit.PLLSAI1.PLLSAI1M = 1;
 8004c88:	2301      	movs	r3, #1
 8004c8a:	60fb      	str	r3, [r7, #12]
  PeriphClkInit.PLLSAI1.PLLSAI1N = 24;
 8004c8c:	2318      	movs	r3, #24
 8004c8e:	613b      	str	r3, [r7, #16]
  PeriphClkInit.PLLSAI1.PLLSAI1P = RCC_PLLP_DIV2;
 8004c90:	2302      	movs	r3, #2
 8004c92:	617b      	str	r3, [r7, #20]
  PeriphClkInit.PLLSAI1.PLLSAI1Q = RCC_PLLQ_DIV2;
 8004c94:	2302      	movs	r3, #2
 8004c96:	61bb      	str	r3, [r7, #24]
  PeriphClkInit.PLLSAI1.PLLSAI1R = RCC_PLLR_DIV2;
 8004c98:	2302      	movs	r3, #2
 8004c9a:	61fb      	str	r3, [r7, #28]
  PeriphClkInit.PLLSAI1.PLLSAI1ClockOut = RCC_PLLSAI1_48M2CLK;
 8004c9c:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 8004ca0:	623b      	str	r3, [r7, #32]
  if (HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit) != HAL_OK)
 8004ca2:	1d3b      	adds	r3, r7, #4
 8004ca4:	4618      	mov	r0, r3
 8004ca6:	f005 f907 	bl	8009eb8 <HAL_RCCEx_PeriphCLKConfig>
 8004caa:	4603      	mov	r3, r0
 8004cac:	2b00      	cmp	r3, #0
 8004cae:	d001      	beq.n	8004cb4 <SystemClock_Config+0x138>
  {
    Error_Handler();
 8004cb0:	f002 fd08 	bl	80076c4 <Error_Handler>
  }
  /** Enable MSI Auto calibration 
  */
  HAL_RCCEx_EnableMSIPLLMode();
 8004cb4:	f005 fc28 	bl	800a508 <HAL_RCCEx_EnableMSIPLLMode>
}
 8004cb8:	bf00      	nop
 8004cba:	37f0      	adds	r7, #240	; 0xf0
 8004cbc:	46bd      	mov	sp, r7
 8004cbe:	bd80      	pop	{r7, pc}
 8004cc0:	40021000 	.word	0x40021000

08004cc4 <MX_I2C1_Init>:
  * @brief I2C1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_I2C1_Init(void)
{
 8004cc4:	b580      	push	{r7, lr}
 8004cc6:	af00      	add	r7, sp, #0
  /* USER CODE END I2C1_Init 0 */

  /* USER CODE BEGIN I2C1_Init 1 */

  /* USER CODE END I2C1_Init 1 */
  hi2c1.Instance = I2C1;
 8004cc8:	4b1b      	ldr	r3, [pc, #108]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004cca:	4a1c      	ldr	r2, [pc, #112]	; (8004d3c <MX_I2C1_Init+0x78>)
 8004ccc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.Timing = 0x00B03FDB;
 8004cce:	4b1a      	ldr	r3, [pc, #104]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004cd0:	4a1b      	ldr	r2, [pc, #108]	; (8004d40 <MX_I2C1_Init+0x7c>)
 8004cd2:	605a      	str	r2, [r3, #4]
  hi2c1.Init.OwnAddress1 = 0;
 8004cd4:	4b18      	ldr	r3, [pc, #96]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004cd6:	2200      	movs	r2, #0
 8004cd8:	609a      	str	r2, [r3, #8]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 8004cda:	4b17      	ldr	r3, [pc, #92]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004cdc:	2201      	movs	r2, #1
 8004cde:	60da      	str	r2, [r3, #12]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 8004ce0:	4b15      	ldr	r3, [pc, #84]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004ce2:	2200      	movs	r2, #0
 8004ce4:	611a      	str	r2, [r3, #16]
  hi2c1.Init.OwnAddress2 = 0;
 8004ce6:	4b14      	ldr	r3, [pc, #80]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004ce8:	2200      	movs	r2, #0
 8004cea:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2Masks = I2C_OA2_NOMASK;
 8004cec:	4b12      	ldr	r3, [pc, #72]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004cee:	2200      	movs	r2, #0
 8004cf0:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 8004cf2:	4b11      	ldr	r3, [pc, #68]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004cf4:	2200      	movs	r2, #0
 8004cf6:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 8004cf8:	4b0f      	ldr	r3, [pc, #60]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004cfa:	2200      	movs	r2, #0
 8004cfc:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 8004cfe:	480e      	ldr	r0, [pc, #56]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004d00:	f003 fe6f 	bl	80089e2 <HAL_I2C_Init>
 8004d04:	4603      	mov	r3, r0
 8004d06:	2b00      	cmp	r3, #0
 8004d08:	d001      	beq.n	8004d0e <MX_I2C1_Init+0x4a>
  {
    Error_Handler();
 8004d0a:	f002 fcdb 	bl	80076c4 <Error_Handler>
  }
  /** Configure Analogue filter 
  */
  if (HAL_I2CEx_ConfigAnalogFilter(&hi2c1, I2C_ANALOGFILTER_ENABLE) != HAL_OK)
 8004d0e:	2100      	movs	r1, #0
 8004d10:	4809      	ldr	r0, [pc, #36]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004d12:	f003 fef5 	bl	8008b00 <HAL_I2CEx_ConfigAnalogFilter>
 8004d16:	4603      	mov	r3, r0
 8004d18:	2b00      	cmp	r3, #0
 8004d1a:	d001      	beq.n	8004d20 <MX_I2C1_Init+0x5c>
  {
    Error_Handler();
 8004d1c:	f002 fcd2 	bl	80076c4 <Error_Handler>
  }
  /** Configure Digital filter 
  */
  if (HAL_I2CEx_ConfigDigitalFilter(&hi2c1, 0) != HAL_OK)
 8004d20:	2100      	movs	r1, #0
 8004d22:	4805      	ldr	r0, [pc, #20]	; (8004d38 <MX_I2C1_Init+0x74>)
 8004d24:	f003 ff37 	bl	8008b96 <HAL_I2CEx_ConfigDigitalFilter>
 8004d28:	4603      	mov	r3, r0
 8004d2a:	2b00      	cmp	r3, #0
 8004d2c:	d001      	beq.n	8004d32 <MX_I2C1_Init+0x6e>
  {
    Error_Handler();
 8004d2e:	f002 fcc9 	bl	80076c4 <Error_Handler>
  }
  /* USER CODE BEGIN I2C1_Init 2 */

  /* USER CODE END I2C1_Init 2 */

}
 8004d32:	bf00      	nop
 8004d34:	bd80      	pop	{r7, pc}
 8004d36:	bf00      	nop
 8004d38:	2000ae3c 	.word	0x2000ae3c
 8004d3c:	40005400 	.word	0x40005400
 8004d40:	00b03fdb 	.word	0x00b03fdb

08004d44 <MX_LPUART1_UART_Init>:
  * @brief LPUART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_LPUART1_UART_Init(void)
{
 8004d44:	b580      	push	{r7, lr}
 8004d46:	af00      	add	r7, sp, #0
  /* USER CODE END LPUART1_Init 0 */

  /* USER CODE BEGIN LPUART1_Init 1 */

  /* USER CODE END LPUART1_Init 1 */
  hlpuart1.Instance = LPUART1;
 8004d48:	4b22      	ldr	r3, [pc, #136]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d4a:	4a23      	ldr	r2, [pc, #140]	; (8004dd8 <MX_LPUART1_UART_Init+0x94>)
 8004d4c:	601a      	str	r2, [r3, #0]
  hlpuart1.Init.BaudRate = 115200;
 8004d4e:	4b21      	ldr	r3, [pc, #132]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d50:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8004d54:	605a      	str	r2, [r3, #4]
  hlpuart1.Init.WordLength = UART_WORDLENGTH_8B;
 8004d56:	4b1f      	ldr	r3, [pc, #124]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d58:	2200      	movs	r2, #0
 8004d5a:	609a      	str	r2, [r3, #8]
  hlpuart1.Init.StopBits = UART_STOPBITS_1;
 8004d5c:	4b1d      	ldr	r3, [pc, #116]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d5e:	2200      	movs	r2, #0
 8004d60:	60da      	str	r2, [r3, #12]
  hlpuart1.Init.Parity = UART_PARITY_NONE;
 8004d62:	4b1c      	ldr	r3, [pc, #112]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d64:	2200      	movs	r2, #0
 8004d66:	611a      	str	r2, [r3, #16]
  hlpuart1.Init.Mode = UART_MODE_TX_RX;
 8004d68:	4b1a      	ldr	r3, [pc, #104]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d6a:	220c      	movs	r2, #12
 8004d6c:	615a      	str	r2, [r3, #20]
  hlpuart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004d6e:	4b19      	ldr	r3, [pc, #100]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d70:	2200      	movs	r2, #0
 8004d72:	619a      	str	r2, [r3, #24]
  hlpuart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8004d74:	4b17      	ldr	r3, [pc, #92]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d76:	2200      	movs	r2, #0
 8004d78:	621a      	str	r2, [r3, #32]
  hlpuart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8004d7a:	4b16      	ldr	r3, [pc, #88]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d7c:	2200      	movs	r2, #0
 8004d7e:	625a      	str	r2, [r3, #36]	; 0x24
  hlpuart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8004d80:	4b14      	ldr	r3, [pc, #80]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d82:	2200      	movs	r2, #0
 8004d84:	629a      	str	r2, [r3, #40]	; 0x28
  hlpuart1.FifoMode = UART_FIFOMODE_DISABLE;
 8004d86:	4b13      	ldr	r3, [pc, #76]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d88:	2200      	movs	r2, #0
 8004d8a:	665a      	str	r2, [r3, #100]	; 0x64
  if (HAL_UART_Init(&hlpuart1) != HAL_OK)
 8004d8c:	4811      	ldr	r0, [pc, #68]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004d8e:	f006 feed 	bl	800bb6c <HAL_UART_Init>
 8004d92:	4603      	mov	r3, r0
 8004d94:	2b00      	cmp	r3, #0
 8004d96:	d001      	beq.n	8004d9c <MX_LPUART1_UART_Init+0x58>
  {
    Error_Handler();
 8004d98:	f002 fc94 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&hlpuart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004d9c:	2100      	movs	r1, #0
 8004d9e:	480d      	ldr	r0, [pc, #52]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004da0:	f008 fb5f 	bl	800d462 <HAL_UARTEx_SetTxFifoThreshold>
 8004da4:	4603      	mov	r3, r0
 8004da6:	2b00      	cmp	r3, #0
 8004da8:	d001      	beq.n	8004dae <MX_LPUART1_UART_Init+0x6a>
  {
    Error_Handler();
 8004daa:	f002 fc8b 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&hlpuart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004dae:	2100      	movs	r1, #0
 8004db0:	4808      	ldr	r0, [pc, #32]	; (8004dd4 <MX_LPUART1_UART_Init+0x90>)
 8004db2:	f008 fb94 	bl	800d4de <HAL_UARTEx_SetRxFifoThreshold>
 8004db6:	4603      	mov	r3, r0
 8004db8:	2b00      	cmp	r3, #0
 8004dba:	d001      	beq.n	8004dc0 <MX_LPUART1_UART_Init+0x7c>
  {
    Error_Handler();
 8004dbc:	f002 fc82 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 8004dc0:	4806      	ldr	r0, [pc, #24]	; (8004ddc <MX_LPUART1_UART_Init+0x98>)
 8004dc2:	f008 fb15 	bl	800d3f0 <HAL_UARTEx_DisableFifoMode>
 8004dc6:	4603      	mov	r3, r0
 8004dc8:	2b00      	cmp	r3, #0
 8004dca:	d001      	beq.n	8004dd0 <MX_LPUART1_UART_Init+0x8c>
  {
    Error_Handler();
 8004dcc:	f002 fc7a 	bl	80076c4 <Error_Handler>
  }
  /* USER CODE BEGIN LPUART1_Init 2 */

  /* USER CODE END LPUART1_Init 2 */

}
 8004dd0:	bf00      	nop
 8004dd2:	bd80      	pop	{r7, pc}
 8004dd4:	2000b290 	.word	0x2000b290
 8004dd8:	40008000 	.word	0x40008000
 8004ddc:	2000b320 	.word	0x2000b320

08004de0 <MX_UART4_Init>:
  * @brief UART4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_UART4_Init(void)
{
 8004de0:	b580      	push	{r7, lr}
 8004de2:	af00      	add	r7, sp, #0
  /* USER CODE END UART4_Init 0 */

  /* USER CODE BEGIN UART4_Init 1 */

  /* USER CODE END UART4_Init 1 */
  huart4.Instance = UART4;
 8004de4:	4b22      	ldr	r3, [pc, #136]	; (8004e70 <MX_UART4_Init+0x90>)
 8004de6:	4a23      	ldr	r2, [pc, #140]	; (8004e74 <MX_UART4_Init+0x94>)
 8004de8:	601a      	str	r2, [r3, #0]
  huart4.Init.BaudRate = 9600;
 8004dea:	4b21      	ldr	r3, [pc, #132]	; (8004e70 <MX_UART4_Init+0x90>)
 8004dec:	f44f 5216 	mov.w	r2, #9600	; 0x2580
 8004df0:	605a      	str	r2, [r3, #4]
  huart4.Init.WordLength = UART_WORDLENGTH_8B;
 8004df2:	4b1f      	ldr	r3, [pc, #124]	; (8004e70 <MX_UART4_Init+0x90>)
 8004df4:	2200      	movs	r2, #0
 8004df6:	609a      	str	r2, [r3, #8]
  huart4.Init.StopBits = UART_STOPBITS_1;
 8004df8:	4b1d      	ldr	r3, [pc, #116]	; (8004e70 <MX_UART4_Init+0x90>)
 8004dfa:	2200      	movs	r2, #0
 8004dfc:	60da      	str	r2, [r3, #12]
  huart4.Init.Parity = UART_PARITY_NONE;
 8004dfe:	4b1c      	ldr	r3, [pc, #112]	; (8004e70 <MX_UART4_Init+0x90>)
 8004e00:	2200      	movs	r2, #0
 8004e02:	611a      	str	r2, [r3, #16]
  huart4.Init.Mode = UART_MODE_TX_RX;
 8004e04:	4b1a      	ldr	r3, [pc, #104]	; (8004e70 <MX_UART4_Init+0x90>)
 8004e06:	220c      	movs	r2, #12
 8004e08:	615a      	str	r2, [r3, #20]
  huart4.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004e0a:	4b19      	ldr	r3, [pc, #100]	; (8004e70 <MX_UART4_Init+0x90>)
 8004e0c:	2200      	movs	r2, #0
 8004e0e:	619a      	str	r2, [r3, #24]
  huart4.Init.OverSampling = UART_OVERSAMPLING_16;
 8004e10:	4b17      	ldr	r3, [pc, #92]	; (8004e70 <MX_UART4_Init+0x90>)
 8004e12:	2200      	movs	r2, #0
 8004e14:	61da      	str	r2, [r3, #28]
  huart4.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8004e16:	4b16      	ldr	r3, [pc, #88]	; (8004e70 <MX_UART4_Init+0x90>)
 8004e18:	2200      	movs	r2, #0
 8004e1a:	621a      	str	r2, [r3, #32]
  huart4.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8004e1c:	4b14      	ldr	r3, [pc, #80]	; (8004e70 <MX_UART4_Init+0x90>)
 8004e1e:	2200      	movs	r2, #0
 8004e20:	625a      	str	r2, [r3, #36]	; 0x24
  huart4.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8004e22:	4b13      	ldr	r3, [pc, #76]	; (8004e70 <MX_UART4_Init+0x90>)
 8004e24:	2200      	movs	r2, #0
 8004e26:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart4) != HAL_OK)
 8004e28:	4811      	ldr	r0, [pc, #68]	; (8004e70 <MX_UART4_Init+0x90>)
 8004e2a:	f006 fe9f 	bl	800bb6c <HAL_UART_Init>
 8004e2e:	4603      	mov	r3, r0
 8004e30:	2b00      	cmp	r3, #0
 8004e32:	d001      	beq.n	8004e38 <MX_UART4_Init+0x58>
  {
    Error_Handler();
 8004e34:	f002 fc46 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart4, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004e38:	2100      	movs	r1, #0
 8004e3a:	480d      	ldr	r0, [pc, #52]	; (8004e70 <MX_UART4_Init+0x90>)
 8004e3c:	f008 fb11 	bl	800d462 <HAL_UARTEx_SetTxFifoThreshold>
 8004e40:	4603      	mov	r3, r0
 8004e42:	2b00      	cmp	r3, #0
 8004e44:	d001      	beq.n	8004e4a <MX_UART4_Init+0x6a>
  {
    Error_Handler();
 8004e46:	f002 fc3d 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart4, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004e4a:	2100      	movs	r1, #0
 8004e4c:	4808      	ldr	r0, [pc, #32]	; (8004e70 <MX_UART4_Init+0x90>)
 8004e4e:	f008 fb46 	bl	800d4de <HAL_UARTEx_SetRxFifoThreshold>
 8004e52:	4603      	mov	r3, r0
 8004e54:	2b00      	cmp	r3, #0
 8004e56:	d001      	beq.n	8004e5c <MX_UART4_Init+0x7c>
  {
    Error_Handler();
 8004e58:	f002 fc34 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart4) != HAL_OK)
 8004e5c:	4804      	ldr	r0, [pc, #16]	; (8004e70 <MX_UART4_Init+0x90>)
 8004e5e:	f008 fac7 	bl	800d3f0 <HAL_UARTEx_DisableFifoMode>
 8004e62:	4603      	mov	r3, r0
 8004e64:	2b00      	cmp	r3, #0
 8004e66:	d001      	beq.n	8004e6c <MX_UART4_Init+0x8c>
  {
    Error_Handler();
 8004e68:	f002 fc2c 	bl	80076c4 <Error_Handler>
  }
  /* USER CODE BEGIN UART4_Init 2 */

  /* USER CODE END UART4_Init 2 */

}
 8004e6c:	bf00      	nop
 8004e6e:	bd80      	pop	{r7, pc}
 8004e70:	2000b3c0 	.word	0x2000b3c0
 8004e74:	40004c00 	.word	0x40004c00

08004e78 <MX_USART1_UART_Init>:
  * @brief USART1 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART1_UART_Init(void)
{
 8004e78:	b580      	push	{r7, lr}
 8004e7a:	af00      	add	r7, sp, #0
  /* USER CODE END USART1_Init 0 */

  /* USER CODE BEGIN USART1_Init 1 */

  /* USER CODE END USART1_Init 1 */
  huart1.Instance = USART1;
 8004e7c:	4b22      	ldr	r3, [pc, #136]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004e7e:	4a23      	ldr	r2, [pc, #140]	; (8004f0c <MX_USART1_UART_Init+0x94>)
 8004e80:	601a      	str	r2, [r3, #0]
  huart1.Init.BaudRate = 115200;
 8004e82:	4b21      	ldr	r3, [pc, #132]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004e84:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8004e88:	605a      	str	r2, [r3, #4]
  huart1.Init.WordLength = UART_WORDLENGTH_8B;
 8004e8a:	4b1f      	ldr	r3, [pc, #124]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004e8c:	2200      	movs	r2, #0
 8004e8e:	609a      	str	r2, [r3, #8]
  huart1.Init.StopBits = UART_STOPBITS_1;
 8004e90:	4b1d      	ldr	r3, [pc, #116]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004e92:	2200      	movs	r2, #0
 8004e94:	60da      	str	r2, [r3, #12]
  huart1.Init.Parity = UART_PARITY_NONE;
 8004e96:	4b1c      	ldr	r3, [pc, #112]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004e98:	2200      	movs	r2, #0
 8004e9a:	611a      	str	r2, [r3, #16]
  huart1.Init.Mode = UART_MODE_TX_RX;
 8004e9c:	4b1a      	ldr	r3, [pc, #104]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004e9e:	220c      	movs	r2, #12
 8004ea0:	615a      	str	r2, [r3, #20]
  huart1.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004ea2:	4b19      	ldr	r3, [pc, #100]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004ea4:	2200      	movs	r2, #0
 8004ea6:	619a      	str	r2, [r3, #24]
  huart1.Init.OverSampling = UART_OVERSAMPLING_16;
 8004ea8:	4b17      	ldr	r3, [pc, #92]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004eaa:	2200      	movs	r2, #0
 8004eac:	61da      	str	r2, [r3, #28]
  huart1.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8004eae:	4b16      	ldr	r3, [pc, #88]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004eb0:	2200      	movs	r2, #0
 8004eb2:	621a      	str	r2, [r3, #32]
  huart1.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8004eb4:	4b14      	ldr	r3, [pc, #80]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004eb6:	2200      	movs	r2, #0
 8004eb8:	625a      	str	r2, [r3, #36]	; 0x24
  huart1.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8004eba:	4b13      	ldr	r3, [pc, #76]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004ebc:	2200      	movs	r2, #0
 8004ebe:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart1) != HAL_OK)
 8004ec0:	4811      	ldr	r0, [pc, #68]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004ec2:	f006 fe53 	bl	800bb6c <HAL_UART_Init>
 8004ec6:	4603      	mov	r3, r0
 8004ec8:	2b00      	cmp	r3, #0
 8004eca:	d001      	beq.n	8004ed0 <MX_USART1_UART_Init+0x58>
  {
    Error_Handler();
 8004ecc:	f002 fbfa 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart1, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004ed0:	2100      	movs	r1, #0
 8004ed2:	480d      	ldr	r0, [pc, #52]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004ed4:	f008 fac5 	bl	800d462 <HAL_UARTEx_SetTxFifoThreshold>
 8004ed8:	4603      	mov	r3, r0
 8004eda:	2b00      	cmp	r3, #0
 8004edc:	d001      	beq.n	8004ee2 <MX_USART1_UART_Init+0x6a>
  {
    Error_Handler();
 8004ede:	f002 fbf1 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart1, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004ee2:	2100      	movs	r1, #0
 8004ee4:	4808      	ldr	r0, [pc, #32]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004ee6:	f008 fafa 	bl	800d4de <HAL_UARTEx_SetRxFifoThreshold>
 8004eea:	4603      	mov	r3, r0
 8004eec:	2b00      	cmp	r3, #0
 8004eee:	d001      	beq.n	8004ef4 <MX_USART1_UART_Init+0x7c>
  {
    Error_Handler();
 8004ef0:	f002 fbe8 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart1) != HAL_OK)
 8004ef4:	4804      	ldr	r0, [pc, #16]	; (8004f08 <MX_USART1_UART_Init+0x90>)
 8004ef6:	f008 fa7b 	bl	800d3f0 <HAL_UARTEx_DisableFifoMode>
 8004efa:	4603      	mov	r3, r0
 8004efc:	2b00      	cmp	r3, #0
 8004efe:	d001      	beq.n	8004f04 <MX_USART1_UART_Init+0x8c>
  {
    Error_Handler();
 8004f00:	f002 fbe0 	bl	80076c4 <Error_Handler>
  }
  /* USER CODE BEGIN USART1_Init 2 */

  /* USER CODE END USART1_Init 2 */

}
 8004f04:	bf00      	nop
 8004f06:	bd80      	pop	{r7, pc}
 8004f08:	2000b320 	.word	0x2000b320
 8004f0c:	40013800 	.word	0x40013800

08004f10 <MX_USART2_UART_Init>:
  * @brief USART2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART2_UART_Init(void)
{
 8004f10:	b580      	push	{r7, lr}
 8004f12:	af00      	add	r7, sp, #0
  /* USER CODE END USART2_Init 0 */

  /* USER CODE BEGIN USART2_Init 1 */

  /* USER CODE END USART2_Init 1 */
  huart2.Instance = USART2;
 8004f14:	4b22      	ldr	r3, [pc, #136]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f16:	4a23      	ldr	r2, [pc, #140]	; (8004fa4 <MX_USART2_UART_Init+0x94>)
 8004f18:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 8004f1a:	4b21      	ldr	r3, [pc, #132]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f1c:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 8004f20:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 8004f22:	4b1f      	ldr	r3, [pc, #124]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f24:	2200      	movs	r2, #0
 8004f26:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 8004f28:	4b1d      	ldr	r3, [pc, #116]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f2a:	2200      	movs	r2, #0
 8004f2c:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 8004f2e:	4b1c      	ldr	r3, [pc, #112]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f30:	2200      	movs	r2, #0
 8004f32:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 8004f34:	4b1a      	ldr	r3, [pc, #104]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f36:	220c      	movs	r2, #12
 8004f38:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004f3a:	4b19      	ldr	r3, [pc, #100]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f3c:	2200      	movs	r2, #0
 8004f3e:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 8004f40:	4b17      	ldr	r3, [pc, #92]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f42:	2200      	movs	r2, #0
 8004f44:	61da      	str	r2, [r3, #28]
  huart2.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8004f46:	4b16      	ldr	r3, [pc, #88]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f48:	2200      	movs	r2, #0
 8004f4a:	621a      	str	r2, [r3, #32]
  huart2.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8004f4c:	4b14      	ldr	r3, [pc, #80]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f4e:	2200      	movs	r2, #0
 8004f50:	625a      	str	r2, [r3, #36]	; 0x24
  huart2.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8004f52:	4b13      	ldr	r3, [pc, #76]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f54:	2200      	movs	r2, #0
 8004f56:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart2) != HAL_OK)
 8004f58:	4811      	ldr	r0, [pc, #68]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f5a:	f006 fe07 	bl	800bb6c <HAL_UART_Init>
 8004f5e:	4603      	mov	r3, r0
 8004f60:	2b00      	cmp	r3, #0
 8004f62:	d001      	beq.n	8004f68 <MX_USART2_UART_Init+0x58>
  {
    Error_Handler();
 8004f64:	f002 fbae 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart2, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004f68:	2100      	movs	r1, #0
 8004f6a:	480d      	ldr	r0, [pc, #52]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f6c:	f008 fa79 	bl	800d462 <HAL_UARTEx_SetTxFifoThreshold>
 8004f70:	4603      	mov	r3, r0
 8004f72:	2b00      	cmp	r3, #0
 8004f74:	d001      	beq.n	8004f7a <MX_USART2_UART_Init+0x6a>
  {
    Error_Handler();
 8004f76:	f002 fba5 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart2, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8004f7a:	2100      	movs	r1, #0
 8004f7c:	4808      	ldr	r0, [pc, #32]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f7e:	f008 faae 	bl	800d4de <HAL_UARTEx_SetRxFifoThreshold>
 8004f82:	4603      	mov	r3, r0
 8004f84:	2b00      	cmp	r3, #0
 8004f86:	d001      	beq.n	8004f8c <MX_USART2_UART_Init+0x7c>
  {
    Error_Handler();
 8004f88:	f002 fb9c 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart2) != HAL_OK)
 8004f8c:	4804      	ldr	r0, [pc, #16]	; (8004fa0 <MX_USART2_UART_Init+0x90>)
 8004f8e:	f008 fa2f 	bl	800d3f0 <HAL_UARTEx_DisableFifoMode>
 8004f92:	4603      	mov	r3, r0
 8004f94:	2b00      	cmp	r3, #0
 8004f96:	d001      	beq.n	8004f9c <MX_USART2_UART_Init+0x8c>
  {
    Error_Handler();
 8004f98:	f002 fb94 	bl	80076c4 <Error_Handler>
  }
  /* USER CODE BEGIN USART2_Init 2 */

  /* USER CODE END USART2_Init 2 */

}
 8004f9c:	bf00      	nop
 8004f9e:	bd80      	pop	{r7, pc}
 8004fa0:	2000b48c 	.word	0x2000b48c
 8004fa4:	40004400 	.word	0x40004400

08004fa8 <MX_USART3_UART_Init>:
  * @brief USART3 Initialization Function
  * @param None
  * @retval None
  */
static void MX_USART3_UART_Init(void)
{
 8004fa8:	b580      	push	{r7, lr}
 8004faa:	af00      	add	r7, sp, #0
  /* USER CODE END USART3_Init 0 */

  /* USER CODE BEGIN USART3_Init 1 */

  /* USER CODE END USART3_Init 1 */
  huart3.Instance = USART3;
 8004fac:	4b22      	ldr	r3, [pc, #136]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004fae:	4a23      	ldr	r2, [pc, #140]	; (800503c <MX_USART3_UART_Init+0x94>)
 8004fb0:	601a      	str	r2, [r3, #0]
  huart3.Init.BaudRate = 204800;
 8004fb2:	4b21      	ldr	r3, [pc, #132]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004fb4:	f44f 3248 	mov.w	r2, #204800	; 0x32000
 8004fb8:	605a      	str	r2, [r3, #4]
  huart3.Init.WordLength = UART_WORDLENGTH_8B;
 8004fba:	4b1f      	ldr	r3, [pc, #124]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004fbc:	2200      	movs	r2, #0
 8004fbe:	609a      	str	r2, [r3, #8]
  huart3.Init.StopBits = UART_STOPBITS_1;
 8004fc0:	4b1d      	ldr	r3, [pc, #116]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004fc2:	2200      	movs	r2, #0
 8004fc4:	60da      	str	r2, [r3, #12]
  huart3.Init.Parity = UART_PARITY_NONE;
 8004fc6:	4b1c      	ldr	r3, [pc, #112]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004fc8:	2200      	movs	r2, #0
 8004fca:	611a      	str	r2, [r3, #16]
  huart3.Init.Mode = UART_MODE_TX_RX;
 8004fcc:	4b1a      	ldr	r3, [pc, #104]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004fce:	220c      	movs	r2, #12
 8004fd0:	615a      	str	r2, [r3, #20]
  huart3.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 8004fd2:	4b19      	ldr	r3, [pc, #100]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004fd4:	2200      	movs	r2, #0
 8004fd6:	619a      	str	r2, [r3, #24]
  huart3.Init.OverSampling = UART_OVERSAMPLING_16;
 8004fd8:	4b17      	ldr	r3, [pc, #92]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004fda:	2200      	movs	r2, #0
 8004fdc:	61da      	str	r2, [r3, #28]
  huart3.Init.OneBitSampling = UART_ONE_BIT_SAMPLE_DISABLE;
 8004fde:	4b16      	ldr	r3, [pc, #88]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004fe0:	2200      	movs	r2, #0
 8004fe2:	621a      	str	r2, [r3, #32]
  huart3.Init.ClockPrescaler = UART_PRESCALER_DIV1;
 8004fe4:	4b14      	ldr	r3, [pc, #80]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004fe6:	2200      	movs	r2, #0
 8004fe8:	625a      	str	r2, [r3, #36]	; 0x24
  huart3.AdvancedInit.AdvFeatureInit = UART_ADVFEATURE_NO_INIT;
 8004fea:	4b13      	ldr	r3, [pc, #76]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004fec:	2200      	movs	r2, #0
 8004fee:	629a      	str	r2, [r3, #40]	; 0x28
  if (HAL_UART_Init(&huart3) != HAL_OK)
 8004ff0:	4811      	ldr	r0, [pc, #68]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8004ff2:	f006 fdbb 	bl	800bb6c <HAL_UART_Init>
 8004ff6:	4603      	mov	r3, r0
 8004ff8:	2b00      	cmp	r3, #0
 8004ffa:	d001      	beq.n	8005000 <MX_USART3_UART_Init+0x58>
  {
    Error_Handler();
 8004ffc:	f002 fb62 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_SetTxFifoThreshold(&huart3, UART_TXFIFO_THRESHOLD_1_8) != HAL_OK)
 8005000:	2100      	movs	r1, #0
 8005002:	480d      	ldr	r0, [pc, #52]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8005004:	f008 fa2d 	bl	800d462 <HAL_UARTEx_SetTxFifoThreshold>
 8005008:	4603      	mov	r3, r0
 800500a:	2b00      	cmp	r3, #0
 800500c:	d001      	beq.n	8005012 <MX_USART3_UART_Init+0x6a>
  {
    Error_Handler();
 800500e:	f002 fb59 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_SetRxFifoThreshold(&huart3, UART_RXFIFO_THRESHOLD_1_8) != HAL_OK)
 8005012:	2100      	movs	r1, #0
 8005014:	4808      	ldr	r0, [pc, #32]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8005016:	f008 fa62 	bl	800d4de <HAL_UARTEx_SetRxFifoThreshold>
 800501a:	4603      	mov	r3, r0
 800501c:	2b00      	cmp	r3, #0
 800501e:	d001      	beq.n	8005024 <MX_USART3_UART_Init+0x7c>
  {
    Error_Handler();
 8005020:	f002 fb50 	bl	80076c4 <Error_Handler>
  }
  if (HAL_UARTEx_DisableFifoMode(&huart3) != HAL_OK)
 8005024:	4804      	ldr	r0, [pc, #16]	; (8005038 <MX_USART3_UART_Init+0x90>)
 8005026:	f008 f9e3 	bl	800d3f0 <HAL_UARTEx_DisableFifoMode>
 800502a:	4603      	mov	r3, r0
 800502c:	2b00      	cmp	r3, #0
 800502e:	d001      	beq.n	8005034 <MX_USART3_UART_Init+0x8c>
  {
    Error_Handler();
 8005030:	f002 fb48 	bl	80076c4 <Error_Handler>
  }
  /* USER CODE BEGIN USART3_Init 2 */

  /* USER CODE END USART3_Init 2 */

}
 8005034:	bf00      	nop
 8005036:	bd80      	pop	{r7, pc}
 8005038:	2000adb0 	.word	0x2000adb0
 800503c:	40004800 	.word	0x40004800

08005040 <MX_TIM2_Init>:
  * @brief TIM2 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM2_Init(void)
{
 8005040:	b580      	push	{r7, lr}
 8005042:	b08e      	sub	sp, #56	; 0x38
 8005044:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM2_Init 0 */

  /* USER CODE END TIM2_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005046:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800504a:	2200      	movs	r2, #0
 800504c:	601a      	str	r2, [r3, #0]
 800504e:	605a      	str	r2, [r3, #4]
 8005050:	609a      	str	r2, [r3, #8]
 8005052:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005054:	f107 031c 	add.w	r3, r7, #28
 8005058:	2200      	movs	r2, #0
 800505a:	601a      	str	r2, [r3, #0]
 800505c:	605a      	str	r2, [r3, #4]
 800505e:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 8005060:	463b      	mov	r3, r7
 8005062:	2200      	movs	r2, #0
 8005064:	601a      	str	r2, [r3, #0]
 8005066:	605a      	str	r2, [r3, #4]
 8005068:	609a      	str	r2, [r3, #8]
 800506a:	60da      	str	r2, [r3, #12]
 800506c:	611a      	str	r2, [r3, #16]
 800506e:	615a      	str	r2, [r3, #20]
 8005070:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM2_Init 1 */

  /* USER CODE END TIM2_Init 1 */
  htim2.Instance = TIM2;
 8005072:	4b2d      	ldr	r3, [pc, #180]	; (8005128 <MX_TIM2_Init+0xe8>)
 8005074:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005078:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 0;
 800507a:	4b2b      	ldr	r3, [pc, #172]	; (8005128 <MX_TIM2_Init+0xe8>)
 800507c:	2200      	movs	r2, #0
 800507e:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 8005080:	4b29      	ldr	r3, [pc, #164]	; (8005128 <MX_TIM2_Init+0xe8>)
 8005082:	2200      	movs	r2, #0
 8005084:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 120;
 8005086:	4b28      	ldr	r3, [pc, #160]	; (8005128 <MX_TIM2_Init+0xe8>)
 8005088:	2278      	movs	r2, #120	; 0x78
 800508a:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 800508c:	4b26      	ldr	r3, [pc, #152]	; (8005128 <MX_TIM2_Init+0xe8>)
 800508e:	2200      	movs	r2, #0
 8005090:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 8005092:	4b25      	ldr	r3, [pc, #148]	; (8005128 <MX_TIM2_Init+0xe8>)
 8005094:	2200      	movs	r2, #0
 8005096:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 8005098:	4823      	ldr	r0, [pc, #140]	; (8005128 <MX_TIM2_Init+0xe8>)
 800509a:	f005 fc25 	bl	800a8e8 <HAL_TIM_Base_Init>
 800509e:	4603      	mov	r3, r0
 80050a0:	2b00      	cmp	r3, #0
 80050a2:	d001      	beq.n	80050a8 <MX_TIM2_Init+0x68>
  {
    Error_Handler();
 80050a4:	f002 fb0e 	bl	80076c4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 80050a8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80050ac:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 80050ae:	f107 0328 	add.w	r3, r7, #40	; 0x28
 80050b2:	4619      	mov	r1, r3
 80050b4:	481c      	ldr	r0, [pc, #112]	; (8005128 <MX_TIM2_Init+0xe8>)
 80050b6:	f005 ffa1 	bl	800affc <HAL_TIM_ConfigClockSource>
 80050ba:	4603      	mov	r3, r0
 80050bc:	2b00      	cmp	r3, #0
 80050be:	d001      	beq.n	80050c4 <MX_TIM2_Init+0x84>
  {
    Error_Handler();
 80050c0:	f002 fb00 	bl	80076c4 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 80050c4:	4818      	ldr	r0, [pc, #96]	; (8005128 <MX_TIM2_Init+0xe8>)
 80050c6:	f005 fc65 	bl	800a994 <HAL_TIM_PWM_Init>
 80050ca:	4603      	mov	r3, r0
 80050cc:	2b00      	cmp	r3, #0
 80050ce:	d001      	beq.n	80050d4 <MX_TIM2_Init+0x94>
  {
    Error_Handler();
 80050d0:	f002 faf8 	bl	80076c4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80050d4:	2300      	movs	r3, #0
 80050d6:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80050d8:	2300      	movs	r3, #0
 80050da:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 80050dc:	f107 031c 	add.w	r3, r7, #28
 80050e0:	4619      	mov	r1, r3
 80050e2:	4811      	ldr	r0, [pc, #68]	; (8005128 <MX_TIM2_Init+0xe8>)
 80050e4:	f006 fc9c 	bl	800ba20 <HAL_TIMEx_MasterConfigSynchronization>
 80050e8:	4603      	mov	r3, r0
 80050ea:	2b00      	cmp	r3, #0
 80050ec:	d001      	beq.n	80050f2 <MX_TIM2_Init+0xb2>
  {
    Error_Handler();
 80050ee:	f002 fae9 	bl	80076c4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80050f2:	2360      	movs	r3, #96	; 0x60
 80050f4:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 0;
 80050f6:	2300      	movs	r3, #0
 80050f8:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80050fa:	2300      	movs	r3, #0
 80050fc:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80050fe:	2300      	movs	r3, #0
 8005100:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 8005102:	463b      	mov	r3, r7
 8005104:	2200      	movs	r2, #0
 8005106:	4619      	mov	r1, r3
 8005108:	4807      	ldr	r0, [pc, #28]	; (8005128 <MX_TIM2_Init+0xe8>)
 800510a:	f005 fe5f 	bl	800adcc <HAL_TIM_PWM_ConfigChannel>
 800510e:	4603      	mov	r3, r0
 8005110:	2b00      	cmp	r3, #0
 8005112:	d001      	beq.n	8005118 <MX_TIM2_Init+0xd8>
  {
    Error_Handler();
 8005114:	f002 fad6 	bl	80076c4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM2_Init 2 */

  /* USER CODE END TIM2_Init 2 */
  HAL_TIM_MspPostInit(&htim2);
 8005118:	4803      	ldr	r0, [pc, #12]	; (8005128 <MX_TIM2_Init+0xe8>)
 800511a:	f002 fc9b 	bl	8007a54 <HAL_TIM_MspPostInit>

}
 800511e:	bf00      	nop
 8005120:	3738      	adds	r7, #56	; 0x38
 8005122:	46bd      	mov	sp, r7
 8005124:	bd80      	pop	{r7, pc}
 8005126:	bf00      	nop
 8005128:	2000b44c 	.word	0x2000b44c

0800512c <MX_TIM4_Init>:
  * @brief TIM4 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM4_Init(void)
{
 800512c:	b580      	push	{r7, lr}
 800512e:	b08e      	sub	sp, #56	; 0x38
 8005130:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM4_Init 0 */

  /* USER CODE END TIM4_Init 0 */

  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 8005132:	f107 0328 	add.w	r3, r7, #40	; 0x28
 8005136:	2200      	movs	r2, #0
 8005138:	601a      	str	r2, [r3, #0]
 800513a:	605a      	str	r2, [r3, #4]
 800513c:	609a      	str	r2, [r3, #8]
 800513e:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005140:	f107 031c 	add.w	r3, r7, #28
 8005144:	2200      	movs	r2, #0
 8005146:	601a      	str	r2, [r3, #0]
 8005148:	605a      	str	r2, [r3, #4]
 800514a:	609a      	str	r2, [r3, #8]
  TIM_OC_InitTypeDef sConfigOC = {0};
 800514c:	463b      	mov	r3, r7
 800514e:	2200      	movs	r2, #0
 8005150:	601a      	str	r2, [r3, #0]
 8005152:	605a      	str	r2, [r3, #4]
 8005154:	609a      	str	r2, [r3, #8]
 8005156:	60da      	str	r2, [r3, #12]
 8005158:	611a      	str	r2, [r3, #16]
 800515a:	615a      	str	r2, [r3, #20]
 800515c:	619a      	str	r2, [r3, #24]

  /* USER CODE BEGIN TIM4_Init 1 */

  /* USER CODE END TIM4_Init 1 */
  htim4.Instance = TIM4;
 800515e:	4b32      	ldr	r3, [pc, #200]	; (8005228 <MX_TIM4_Init+0xfc>)
 8005160:	4a32      	ldr	r2, [pc, #200]	; (800522c <MX_TIM4_Init+0x100>)
 8005162:	601a      	str	r2, [r3, #0]
  htim4.Init.Prescaler = 0;
 8005164:	4b30      	ldr	r3, [pc, #192]	; (8005228 <MX_TIM4_Init+0xfc>)
 8005166:	2200      	movs	r2, #0
 8005168:	605a      	str	r2, [r3, #4]
  htim4.Init.CounterMode = TIM_COUNTERMODE_UP;
 800516a:	4b2f      	ldr	r3, [pc, #188]	; (8005228 <MX_TIM4_Init+0xfc>)
 800516c:	2200      	movs	r2, #0
 800516e:	609a      	str	r2, [r3, #8]
  htim4.Init.Period = 59955;
 8005170:	4b2d      	ldr	r3, [pc, #180]	; (8005228 <MX_TIM4_Init+0xfc>)
 8005172:	f64e 2233 	movw	r2, #59955	; 0xea33
 8005176:	60da      	str	r2, [r3, #12]
  htim4.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 8005178:	4b2b      	ldr	r3, [pc, #172]	; (8005228 <MX_TIM4_Init+0xfc>)
 800517a:	2200      	movs	r2, #0
 800517c:	611a      	str	r2, [r3, #16]
  htim4.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800517e:	4b2a      	ldr	r3, [pc, #168]	; (8005228 <MX_TIM4_Init+0xfc>)
 8005180:	2200      	movs	r2, #0
 8005182:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim4) != HAL_OK)
 8005184:	4828      	ldr	r0, [pc, #160]	; (8005228 <MX_TIM4_Init+0xfc>)
 8005186:	f005 fbaf 	bl	800a8e8 <HAL_TIM_Base_Init>
 800518a:	4603      	mov	r3, r0
 800518c:	2b00      	cmp	r3, #0
 800518e:	d001      	beq.n	8005194 <MX_TIM4_Init+0x68>
  {
    Error_Handler();
 8005190:	f002 fa98 	bl	80076c4 <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 8005194:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005198:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim4, &sClockSourceConfig) != HAL_OK)
 800519a:	f107 0328 	add.w	r3, r7, #40	; 0x28
 800519e:	4619      	mov	r1, r3
 80051a0:	4821      	ldr	r0, [pc, #132]	; (8005228 <MX_TIM4_Init+0xfc>)
 80051a2:	f005 ff2b 	bl	800affc <HAL_TIM_ConfigClockSource>
 80051a6:	4603      	mov	r3, r0
 80051a8:	2b00      	cmp	r3, #0
 80051aa:	d001      	beq.n	80051b0 <MX_TIM4_Init+0x84>
  {
    Error_Handler();
 80051ac:	f002 fa8a 	bl	80076c4 <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim4) != HAL_OK)
 80051b0:	481d      	ldr	r0, [pc, #116]	; (8005228 <MX_TIM4_Init+0xfc>)
 80051b2:	f005 fbef 	bl	800a994 <HAL_TIM_PWM_Init>
 80051b6:	4603      	mov	r3, r0
 80051b8:	2b00      	cmp	r3, #0
 80051ba:	d001      	beq.n	80051c0 <MX_TIM4_Init+0x94>
  {
    Error_Handler();
 80051bc:	f002 fa82 	bl	80076c4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 80051c0:	2300      	movs	r3, #0
 80051c2:	61fb      	str	r3, [r7, #28]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 80051c4:	2300      	movs	r3, #0
 80051c6:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim4, &sMasterConfig) != HAL_OK)
 80051c8:	f107 031c 	add.w	r3, r7, #28
 80051cc:	4619      	mov	r1, r3
 80051ce:	4816      	ldr	r0, [pc, #88]	; (8005228 <MX_TIM4_Init+0xfc>)
 80051d0:	f006 fc26 	bl	800ba20 <HAL_TIMEx_MasterConfigSynchronization>
 80051d4:	4603      	mov	r3, r0
 80051d6:	2b00      	cmp	r3, #0
 80051d8:	d001      	beq.n	80051de <MX_TIM4_Init+0xb2>
  {
    Error_Handler();
 80051da:	f002 fa73 	bl	80076c4 <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 80051de:	2360      	movs	r3, #96	; 0x60
 80051e0:	603b      	str	r3, [r7, #0]
  sConfigOC.Pulse = 100;
 80051e2:	2364      	movs	r3, #100	; 0x64
 80051e4:	607b      	str	r3, [r7, #4]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 80051e6:	2300      	movs	r3, #0
 80051e8:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 80051ea:	2300      	movs	r3, #0
 80051ec:	613b      	str	r3, [r7, #16]
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_3) != HAL_OK)
 80051ee:	463b      	mov	r3, r7
 80051f0:	2208      	movs	r2, #8
 80051f2:	4619      	mov	r1, r3
 80051f4:	480c      	ldr	r0, [pc, #48]	; (8005228 <MX_TIM4_Init+0xfc>)
 80051f6:	f005 fde9 	bl	800adcc <HAL_TIM_PWM_ConfigChannel>
 80051fa:	4603      	mov	r3, r0
 80051fc:	2b00      	cmp	r3, #0
 80051fe:	d001      	beq.n	8005204 <MX_TIM4_Init+0xd8>
  {
    Error_Handler();
 8005200:	f002 fa60 	bl	80076c4 <Error_Handler>
  }
  if (HAL_TIM_PWM_ConfigChannel(&htim4, &sConfigOC, TIM_CHANNEL_4) != HAL_OK)
 8005204:	463b      	mov	r3, r7
 8005206:	220c      	movs	r2, #12
 8005208:	4619      	mov	r1, r3
 800520a:	4807      	ldr	r0, [pc, #28]	; (8005228 <MX_TIM4_Init+0xfc>)
 800520c:	f005 fdde 	bl	800adcc <HAL_TIM_PWM_ConfigChannel>
 8005210:	4603      	mov	r3, r0
 8005212:	2b00      	cmp	r3, #0
 8005214:	d001      	beq.n	800521a <MX_TIM4_Init+0xee>
  {
    Error_Handler();
 8005216:	f002 fa55 	bl	80076c4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM4_Init 2 */

  /* USER CODE END TIM4_Init 2 */
  HAL_TIM_MspPostInit(&htim4);
 800521a:	4803      	ldr	r0, [pc, #12]	; (8005228 <MX_TIM4_Init+0xfc>)
 800521c:	f002 fc1a 	bl	8007a54 <HAL_TIM_MspPostInit>

}
 8005220:	bf00      	nop
 8005222:	3738      	adds	r7, #56	; 0x38
 8005224:	46bd      	mov	sp, r7
 8005226:	bd80      	pop	{r7, pc}
 8005228:	2000ad70 	.word	0x2000ad70
 800522c:	40000800 	.word	0x40000800

08005230 <MX_TIM7_Init>:
  * @brief TIM7 Initialization Function
  * @param None
  * @retval None
  */
static void MX_TIM7_Init(void)
{
 8005230:	b580      	push	{r7, lr}
 8005232:	b084      	sub	sp, #16
 8005234:	af00      	add	r7, sp, #0

  /* USER CODE BEGIN TIM7_Init 0 */

  /* USER CODE END TIM7_Init 0 */

  TIM_MasterConfigTypeDef sMasterConfig = {0};
 8005236:	1d3b      	adds	r3, r7, #4
 8005238:	2200      	movs	r2, #0
 800523a:	601a      	str	r2, [r3, #0]
 800523c:	605a      	str	r2, [r3, #4]
 800523e:	609a      	str	r2, [r3, #8]

  /* USER CODE BEGIN TIM7_Init 1 */

  /* USER CODE END TIM7_Init 1 */
  htim7.Instance = TIM7;
 8005240:	4b14      	ldr	r3, [pc, #80]	; (8005294 <MX_TIM7_Init+0x64>)
 8005242:	4a15      	ldr	r2, [pc, #84]	; (8005298 <MX_TIM7_Init+0x68>)
 8005244:	601a      	str	r2, [r3, #0]
  htim7.Init.Prescaler = 0;
 8005246:	4b13      	ldr	r3, [pc, #76]	; (8005294 <MX_TIM7_Init+0x64>)
 8005248:	2200      	movs	r2, #0
 800524a:	605a      	str	r2, [r3, #4]
  htim7.Init.CounterMode = TIM_COUNTERMODE_UP;
 800524c:	4b11      	ldr	r3, [pc, #68]	; (8005294 <MX_TIM7_Init+0x64>)
 800524e:	2200      	movs	r2, #0
 8005250:	609a      	str	r2, [r3, #8]
  htim7.Init.Period = 65535;
 8005252:	4b10      	ldr	r3, [pc, #64]	; (8005294 <MX_TIM7_Init+0x64>)
 8005254:	f64f 72ff 	movw	r2, #65535	; 0xffff
 8005258:	60da      	str	r2, [r3, #12]
  htim7.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 800525a:	4b0e      	ldr	r3, [pc, #56]	; (8005294 <MX_TIM7_Init+0x64>)
 800525c:	2200      	movs	r2, #0
 800525e:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim7) != HAL_OK)
 8005260:	480c      	ldr	r0, [pc, #48]	; (8005294 <MX_TIM7_Init+0x64>)
 8005262:	f005 fb41 	bl	800a8e8 <HAL_TIM_Base_Init>
 8005266:	4603      	mov	r3, r0
 8005268:	2b00      	cmp	r3, #0
 800526a:	d001      	beq.n	8005270 <MX_TIM7_Init+0x40>
  {
    Error_Handler();
 800526c:	f002 fa2a 	bl	80076c4 <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 8005270:	2300      	movs	r3, #0
 8005272:	607b      	str	r3, [r7, #4]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 8005274:	2300      	movs	r3, #0
 8005276:	60fb      	str	r3, [r7, #12]
  if (HAL_TIMEx_MasterConfigSynchronization(&htim7, &sMasterConfig) != HAL_OK)
 8005278:	1d3b      	adds	r3, r7, #4
 800527a:	4619      	mov	r1, r3
 800527c:	4805      	ldr	r0, [pc, #20]	; (8005294 <MX_TIM7_Init+0x64>)
 800527e:	f006 fbcf 	bl	800ba20 <HAL_TIMEx_MasterConfigSynchronization>
 8005282:	4603      	mov	r3, r0
 8005284:	2b00      	cmp	r3, #0
 8005286:	d001      	beq.n	800528c <MX_TIM7_Init+0x5c>
  {
    Error_Handler();
 8005288:	f002 fa1c 	bl	80076c4 <Error_Handler>
  }
  /* USER CODE BEGIN TIM7_Init 2 */

  /* USER CODE END TIM7_Init 2 */

}
 800528c:	bf00      	nop
 800528e:	3710      	adds	r7, #16
 8005290:	46bd      	mov	sp, r7
 8005292:	bd80      	pop	{r7, pc}
 8005294:	2000b51c 	.word	0x2000b51c
 8005298:	40001400 	.word	0x40001400

0800529c <MX_USB_OTG_FS_PCD_Init>:
  * @brief USB_OTG_FS Initialization Function
  * @param None
  * @retval None
  */
static void MX_USB_OTG_FS_PCD_Init(void)
{
 800529c:	b580      	push	{r7, lr}
 800529e:	af00      	add	r7, sp, #0
  /* USER CODE END USB_OTG_FS_Init 0 */

  /* USER CODE BEGIN USB_OTG_FS_Init 1 */

  /* USER CODE END USB_OTG_FS_Init 1 */
  hpcd_USB_OTG_FS.Instance = USB_OTG_FS;
 80052a0:	4b12      	ldr	r3, [pc, #72]	; (80052ec <MX_USB_OTG_FS_PCD_Init+0x50>)
 80052a2:	f04f 42a0 	mov.w	r2, #1342177280	; 0x50000000
 80052a6:	601a      	str	r2, [r3, #0]
  hpcd_USB_OTG_FS.Init.dev_endpoints = 6;
 80052a8:	4b10      	ldr	r3, [pc, #64]	; (80052ec <MX_USB_OTG_FS_PCD_Init+0x50>)
 80052aa:	2206      	movs	r2, #6
 80052ac:	605a      	str	r2, [r3, #4]
  hpcd_USB_OTG_FS.Init.phy_itface = PCD_PHY_EMBEDDED;
 80052ae:	4b0f      	ldr	r3, [pc, #60]	; (80052ec <MX_USB_OTG_FS_PCD_Init+0x50>)
 80052b0:	2202      	movs	r2, #2
 80052b2:	619a      	str	r2, [r3, #24]
  hpcd_USB_OTG_FS.Init.Sof_enable = ENABLE;
 80052b4:	4b0d      	ldr	r3, [pc, #52]	; (80052ec <MX_USB_OTG_FS_PCD_Init+0x50>)
 80052b6:	2201      	movs	r2, #1
 80052b8:	61da      	str	r2, [r3, #28]
  hpcd_USB_OTG_FS.Init.low_power_enable = DISABLE;
 80052ba:	4b0c      	ldr	r3, [pc, #48]	; (80052ec <MX_USB_OTG_FS_PCD_Init+0x50>)
 80052bc:	2200      	movs	r2, #0
 80052be:	621a      	str	r2, [r3, #32]
  hpcd_USB_OTG_FS.Init.lpm_enable = DISABLE;
 80052c0:	4b0a      	ldr	r3, [pc, #40]	; (80052ec <MX_USB_OTG_FS_PCD_Init+0x50>)
 80052c2:	2200      	movs	r2, #0
 80052c4:	625a      	str	r2, [r3, #36]	; 0x24
  hpcd_USB_OTG_FS.Init.battery_charging_enable = ENABLE;
 80052c6:	4b09      	ldr	r3, [pc, #36]	; (80052ec <MX_USB_OTG_FS_PCD_Init+0x50>)
 80052c8:	2201      	movs	r2, #1
 80052ca:	629a      	str	r2, [r3, #40]	; 0x28
  hpcd_USB_OTG_FS.Init.use_dedicated_ep1 = DISABLE;
 80052cc:	4b07      	ldr	r3, [pc, #28]	; (80052ec <MX_USB_OTG_FS_PCD_Init+0x50>)
 80052ce:	2200      	movs	r2, #0
 80052d0:	631a      	str	r2, [r3, #48]	; 0x30
  hpcd_USB_OTG_FS.Init.vbus_sensing_enable = ENABLE;
 80052d2:	4b06      	ldr	r3, [pc, #24]	; (80052ec <MX_USB_OTG_FS_PCD_Init+0x50>)
 80052d4:	2201      	movs	r2, #1
 80052d6:	62da      	str	r2, [r3, #44]	; 0x2c
  if (HAL_PCD_Init(&hpcd_USB_OTG_FS) != HAL_OK)
 80052d8:	4804      	ldr	r0, [pc, #16]	; (80052ec <MX_USB_OTG_FS_PCD_Init+0x50>)
 80052da:	f003 fca8 	bl	8008c2e <HAL_PCD_Init>
 80052de:	4603      	mov	r3, r0
 80052e0:	2b00      	cmp	r3, #0
 80052e2:	d001      	beq.n	80052e8 <MX_USB_OTG_FS_PCD_Init+0x4c>
  {
    Error_Handler();
 80052e4:	f002 f9ee 	bl	80076c4 <Error_Handler>
  }
  /* USER CODE BEGIN USB_OTG_FS_Init 2 */

  /* USER CODE END USB_OTG_FS_Init 2 */

}
 80052e8:	bf00      	nop
 80052ea:	bd80      	pop	{r7, pc}
 80052ec:	2000ae88 	.word	0x2000ae88

080052f0 <MX_GPIO_Init>:
  * @brief GPIO Initialization Function
  * @param None
  * @retval None
  */
static void MX_GPIO_Init(void)
{
 80052f0:	b580      	push	{r7, lr}
 80052f2:	b08e      	sub	sp, #56	; 0x38
 80052f4:	af00      	add	r7, sp, #0
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80052f6:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80052fa:	2200      	movs	r2, #0
 80052fc:	601a      	str	r2, [r3, #0]
 80052fe:	605a      	str	r2, [r3, #4]
 8005300:	609a      	str	r2, [r3, #8]
 8005302:	60da      	str	r2, [r3, #12]
 8005304:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 8005306:	4b84      	ldr	r3, [pc, #528]	; (8005518 <MX_GPIO_Init+0x228>)
 8005308:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800530a:	4a83      	ldr	r2, [pc, #524]	; (8005518 <MX_GPIO_Init+0x228>)
 800530c:	f043 0304 	orr.w	r3, r3, #4
 8005310:	64d3      	str	r3, [r2, #76]	; 0x4c
 8005312:	4b81      	ldr	r3, [pc, #516]	; (8005518 <MX_GPIO_Init+0x228>)
 8005314:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005316:	f003 0304 	and.w	r3, r3, #4
 800531a:	623b      	str	r3, [r7, #32]
 800531c:	6a3b      	ldr	r3, [r7, #32]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 800531e:	4b7e      	ldr	r3, [pc, #504]	; (8005518 <MX_GPIO_Init+0x228>)
 8005320:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005322:	4a7d      	ldr	r2, [pc, #500]	; (8005518 <MX_GPIO_Init+0x228>)
 8005324:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8005328:	64d3      	str	r3, [r2, #76]	; 0x4c
 800532a:	4b7b      	ldr	r3, [pc, #492]	; (8005518 <MX_GPIO_Init+0x228>)
 800532c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800532e:	f003 0380 	and.w	r3, r3, #128	; 0x80
 8005332:	61fb      	str	r3, [r7, #28]
 8005334:	69fb      	ldr	r3, [r7, #28]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 8005336:	4b78      	ldr	r3, [pc, #480]	; (8005518 <MX_GPIO_Init+0x228>)
 8005338:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800533a:	4a77      	ldr	r2, [pc, #476]	; (8005518 <MX_GPIO_Init+0x228>)
 800533c:	f043 0301 	orr.w	r3, r3, #1
 8005340:	64d3      	str	r3, [r2, #76]	; 0x4c
 8005342:	4b75      	ldr	r3, [pc, #468]	; (8005518 <MX_GPIO_Init+0x228>)
 8005344:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005346:	f003 0301 	and.w	r3, r3, #1
 800534a:	61bb      	str	r3, [r7, #24]
 800534c:	69bb      	ldr	r3, [r7, #24]
  __HAL_RCC_GPIOF_CLK_ENABLE();
 800534e:	4b72      	ldr	r3, [pc, #456]	; (8005518 <MX_GPIO_Init+0x228>)
 8005350:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005352:	4a71      	ldr	r2, [pc, #452]	; (8005518 <MX_GPIO_Init+0x228>)
 8005354:	f043 0320 	orr.w	r3, r3, #32
 8005358:	64d3      	str	r3, [r2, #76]	; 0x4c
 800535a:	4b6f      	ldr	r3, [pc, #444]	; (8005518 <MX_GPIO_Init+0x228>)
 800535c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800535e:	f003 0320 	and.w	r3, r3, #32
 8005362:	617b      	str	r3, [r7, #20]
 8005364:	697b      	ldr	r3, [r7, #20]
  __HAL_RCC_GPIOE_CLK_ENABLE();
 8005366:	4b6c      	ldr	r3, [pc, #432]	; (8005518 <MX_GPIO_Init+0x228>)
 8005368:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800536a:	4a6b      	ldr	r2, [pc, #428]	; (8005518 <MX_GPIO_Init+0x228>)
 800536c:	f043 0310 	orr.w	r3, r3, #16
 8005370:	64d3      	str	r3, [r2, #76]	; 0x4c
 8005372:	4b69      	ldr	r3, [pc, #420]	; (8005518 <MX_GPIO_Init+0x228>)
 8005374:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005376:	f003 0310 	and.w	r3, r3, #16
 800537a:	613b      	str	r3, [r7, #16]
 800537c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 800537e:	4b66      	ldr	r3, [pc, #408]	; (8005518 <MX_GPIO_Init+0x228>)
 8005380:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8005382:	4a65      	ldr	r2, [pc, #404]	; (8005518 <MX_GPIO_Init+0x228>)
 8005384:	f043 0302 	orr.w	r3, r3, #2
 8005388:	64d3      	str	r3, [r2, #76]	; 0x4c
 800538a:	4b63      	ldr	r3, [pc, #396]	; (8005518 <MX_GPIO_Init+0x228>)
 800538c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800538e:	f003 0302 	and.w	r3, r3, #2
 8005392:	60fb      	str	r3, [r7, #12]
 8005394:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOD_CLK_ENABLE();
 8005396:	4b60      	ldr	r3, [pc, #384]	; (8005518 <MX_GPIO_Init+0x228>)
 8005398:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800539a:	4a5f      	ldr	r2, [pc, #380]	; (8005518 <MX_GPIO_Init+0x228>)
 800539c:	f043 0308 	orr.w	r3, r3, #8
 80053a0:	64d3      	str	r3, [r2, #76]	; 0x4c
 80053a2:	4b5d      	ldr	r3, [pc, #372]	; (8005518 <MX_GPIO_Init+0x228>)
 80053a4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80053a6:	f003 0308 	and.w	r3, r3, #8
 80053aa:	60bb      	str	r3, [r7, #8]
 80053ac:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOG_CLK_ENABLE();
 80053ae:	4b5a      	ldr	r3, [pc, #360]	; (8005518 <MX_GPIO_Init+0x228>)
 80053b0:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80053b2:	4a59      	ldr	r2, [pc, #356]	; (8005518 <MX_GPIO_Init+0x228>)
 80053b4:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80053b8:	64d3      	str	r3, [r2, #76]	; 0x4c
 80053ba:	4b57      	ldr	r3, [pc, #348]	; (8005518 <MX_GPIO_Init+0x228>)
 80053bc:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80053be:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80053c2:	607b      	str	r3, [r7, #4]
 80053c4:	687b      	ldr	r3, [r7, #4]
  HAL_PWREx_EnableVddIO2();
 80053c6:	f003 fe5f 	bl	8009088 <HAL_PWREx_EnableVddIO2>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, GPIO_PIN_RESET);
 80053ca:	2200      	movs	r2, #0
 80053cc:	2180      	movs	r1, #128	; 0x80
 80053ce:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 80053d2:	f003 facb 	bl	800896c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, LD3_Pin|LD2_Pin, GPIO_PIN_RESET);
 80053d6:	2200      	movs	r2, #0
 80053d8:	f44f 4181 	mov.w	r1, #16512	; 0x4080
 80053dc:	484f      	ldr	r0, [pc, #316]	; (800551c <MX_GPIO_Init+0x22c>)
 80053de:	f003 fac5 	bl	800896c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOG, GPIO_PIN_5, GPIO_PIN_RESET);
 80053e2:	2200      	movs	r2, #0
 80053e4:	2120      	movs	r1, #32
 80053e6:	484e      	ldr	r0, [pc, #312]	; (8005520 <MX_GPIO_Init+0x230>)
 80053e8:	f003 fac0 	bl	800896c <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_12, GPIO_PIN_RESET);
 80053ec:	2200      	movs	r2, #0
 80053ee:	f44f 5180 	mov.w	r1, #4096	; 0x1000
 80053f2:	484c      	ldr	r0, [pc, #304]	; (8005524 <MX_GPIO_Init+0x234>)
 80053f4:	f003 faba 	bl	800896c <HAL_GPIO_WritePin>

  /*Configure GPIO pin : B1_Pin */
  GPIO_InitStruct.Pin = B1_Pin;
 80053f8:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 80053fc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 80053fe:	4b4a      	ldr	r3, [pc, #296]	; (8005528 <MX_GPIO_Init+0x238>)
 8005400:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005402:	2300      	movs	r3, #0
 8005404:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 8005406:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800540a:	4619      	mov	r1, r3
 800540c:	4845      	ldr	r0, [pc, #276]	; (8005524 <MX_GPIO_Init+0x234>)
 800540e:	f003 f903 	bl	8008618 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA6 */
  GPIO_InitStruct.Pin = GPIO_PIN_6;
 8005412:	2340      	movs	r3, #64	; 0x40
 8005414:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8005416:	2302      	movs	r3, #2
 8005418:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800541a:	2300      	movs	r3, #0
 800541c:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 800541e:	2300      	movs	r3, #0
 8005420:	633b      	str	r3, [r7, #48]	; 0x30
  GPIO_InitStruct.Alternate = GPIO_AF2_TIM3;
 8005422:	2302      	movs	r3, #2
 8005424:	637b      	str	r3, [r7, #52]	; 0x34
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8005426:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800542a:	4619      	mov	r1, r3
 800542c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005430:	f003 f8f2 	bl	8008618 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 8005434:	2380      	movs	r3, #128	; 0x80
 8005436:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 8005438:	2301      	movs	r3, #1
 800543a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800543c:	2300      	movs	r3, #0
 800543e:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005440:	2300      	movs	r3, #0
 8005442:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8005444:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005448:	4619      	mov	r1, r3
 800544a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800544e:	f003 f8e3 	bl	8008618 <HAL_GPIO_Init>

  /*Configure GPIO pin : PF14 */
  GPIO_InitStruct.Pin = GPIO_PIN_14;
 8005452:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 8005456:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_IT_RISING;
 8005458:	4b33      	ldr	r3, [pc, #204]	; (8005528 <MX_GPIO_Init+0x238>)
 800545a:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 800545c:	2300      	movs	r3, #0
 800545e:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOF, &GPIO_InitStruct);
 8005460:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005464:	4619      	mov	r1, r3
 8005466:	4831      	ldr	r0, [pc, #196]	; (800552c <MX_GPIO_Init+0x23c>)
 8005468:	f003 f8d6 	bl	8008618 <HAL_GPIO_Init>

  /*Configure GPIO pin : PE12 */
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 800546c:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 8005470:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8005472:	2300      	movs	r3, #0
 8005474:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005476:	2300      	movs	r3, #0
 8005478:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOE, &GPIO_InitStruct);
 800547a:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800547e:	4619      	mov	r1, r3
 8005480:	482b      	ldr	r0, [pc, #172]	; (8005530 <MX_GPIO_Init+0x240>)
 8005482:	f003 f8c9 	bl	8008618 <HAL_GPIO_Init>

  /*Configure GPIO pins : LD3_Pin LD2_Pin */
  GPIO_InitStruct.Pin = LD3_Pin|LD2_Pin;
 8005486:	f44f 4381 	mov.w	r3, #16512	; 0x4080
 800548a:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 800548c:	2301      	movs	r3, #1
 800548e:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 8005490:	2300      	movs	r3, #0
 8005492:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8005494:	2300      	movs	r3, #0
 8005496:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8005498:	f107 0324 	add.w	r3, r7, #36	; 0x24
 800549c:	4619      	mov	r1, r3
 800549e:	481f      	ldr	r0, [pc, #124]	; (800551c <MX_GPIO_Init+0x22c>)
 80054a0:	f003 f8ba 	bl	8008618 <HAL_GPIO_Init>

  /*Configure GPIO pin : PG5 */
  GPIO_InitStruct.Pin = GPIO_PIN_5;
 80054a4:	2320      	movs	r3, #32
 80054a6:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80054a8:	2301      	movs	r3, #1
 80054aa:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80054ac:	2300      	movs	r3, #0
 80054ae:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80054b0:	2300      	movs	r3, #0
 80054b2:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80054b4:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80054b8:	4619      	mov	r1, r3
 80054ba:	4819      	ldr	r0, [pc, #100]	; (8005520 <MX_GPIO_Init+0x230>)
 80054bc:	f003 f8ac 	bl	8008618 <HAL_GPIO_Init>

  /*Configure GPIO pin : USB_OverCurrent_Pin */
  GPIO_InitStruct.Pin = USB_OverCurrent_Pin;
 80054c0:	2340      	movs	r3, #64	; 0x40
 80054c2:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80054c4:	2300      	movs	r3, #0
 80054c6:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80054c8:	2300      	movs	r3, #0
 80054ca:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(USB_OverCurrent_GPIO_Port, &GPIO_InitStruct);
 80054cc:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80054d0:	4619      	mov	r1, r3
 80054d2:	4813      	ldr	r0, [pc, #76]	; (8005520 <MX_GPIO_Init+0x230>)
 80054d4:	f003 f8a0 	bl	8008618 <HAL_GPIO_Init>

  /*Configure GPIO pin : PC12 */
  GPIO_InitStruct.Pin = GPIO_PIN_12;
 80054d8:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 80054dc:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 80054de:	2301      	movs	r3, #1
 80054e0:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80054e2:	2300      	movs	r3, #0
 80054e4:	62fb      	str	r3, [r7, #44]	; 0x2c
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 80054e6:	2300      	movs	r3, #0
 80054e8:	633b      	str	r3, [r7, #48]	; 0x30
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 80054ea:	f107 0324 	add.w	r3, r7, #36	; 0x24
 80054ee:	4619      	mov	r1, r3
 80054f0:	480c      	ldr	r0, [pc, #48]	; (8005524 <MX_GPIO_Init+0x234>)
 80054f2:	f003 f891 	bl	8008618 <HAL_GPIO_Init>

  /*Configure GPIO pin : PD2 */
  GPIO_InitStruct.Pin = GPIO_PIN_2;
 80054f6:	2304      	movs	r3, #4
 80054f8:	627b      	str	r3, [r7, #36]	; 0x24
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 80054fa:	2300      	movs	r3, #0
 80054fc:	62bb      	str	r3, [r7, #40]	; 0x28
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 80054fe:	2300      	movs	r3, #0
 8005500:	62fb      	str	r3, [r7, #44]	; 0x2c
  HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8005502:	f107 0324 	add.w	r3, r7, #36	; 0x24
 8005506:	4619      	mov	r1, r3
 8005508:	480a      	ldr	r0, [pc, #40]	; (8005534 <MX_GPIO_Init+0x244>)
 800550a:	f003 f885 	bl	8008618 <HAL_GPIO_Init>

}
 800550e:	bf00      	nop
 8005510:	3738      	adds	r7, #56	; 0x38
 8005512:	46bd      	mov	sp, r7
 8005514:	bd80      	pop	{r7, pc}
 8005516:	bf00      	nop
 8005518:	40021000 	.word	0x40021000
 800551c:	48000400 	.word	0x48000400
 8005520:	48001800 	.word	0x48001800
 8005524:	48000800 	.word	0x48000800
 8005528:	10110000 	.word	0x10110000
 800552c:	48001400 	.word	0x48001400
 8005530:	48001000 	.word	0x48001000
 8005534:	48000c00 	.word	0x48000c00

08005538 <QueueBuffer>:

/* USER CODE BEGIN 4 */

/*UART Receive data with interrupts no callbacks */
void QueueBuffer( char data[LINEMAX + 1],  uint32_t index_data, uint8_t index_uart){
 8005538:	b580      	push	{r7, lr}
 800553a:	b084      	sub	sp, #16
 800553c:	af00      	add	r7, sp, #0
 800553e:	60f8      	str	r0, [r7, #12]
 8005540:	60b9      	str	r1, [r7, #8]
 8005542:	4613      	mov	r3, r2
 8005544:	71fb      	strb	r3, [r7, #7]
	switch (index_uart){
 8005546:	79fb      	ldrb	r3, [r7, #7]
 8005548:	2b05      	cmp	r3, #5
 800554a:	d833      	bhi.n	80055b4 <QueueBuffer+0x7c>
 800554c:	a201      	add	r2, pc, #4	; (adr r2, 8005554 <QueueBuffer+0x1c>)
 800554e:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 8005552:	bf00      	nop
 8005554:	0800556d 	.word	0x0800556d
 8005558:	08005579 	.word	0x08005579
 800555c:	08005585 	.word	0x08005585
 8005560:	08005591 	.word	0x08005591
 8005564:	0800559d 	.word	0x0800559d
 8005568:	080055a9 	.word	0x080055a9
	case 0:
		strncpy(bufferLidar, data, index_data);
 800556c:	68ba      	ldr	r2, [r7, #8]
 800556e:	68f9      	ldr	r1, [r7, #12]
 8005570:	4816      	ldr	r0, [pc, #88]	; (80055cc <QueueBuffer+0x94>)
 8005572:	f00b f87e 	bl	8010672 <strncpy>
		break;
 8005576:	e01d      	b.n	80055b4 <QueueBuffer+0x7c>
	case 1:
		strncpy(bufferUWB, data, index_data);
 8005578:	68ba      	ldr	r2, [r7, #8]
 800557a:	68f9      	ldr	r1, [r7, #12]
 800557c:	4814      	ldr	r0, [pc, #80]	; (80055d0 <QueueBuffer+0x98>)
 800557e:	f00b f878 	bl	8010672 <strncpy>
		break;
 8005582:	e017      	b.n	80055b4 <QueueBuffer+0x7c>
	case 2:
		memcpy(bufferRadar,data, index_data);
 8005584:	68ba      	ldr	r2, [r7, #8]
 8005586:	68f9      	ldr	r1, [r7, #12]
 8005588:	4812      	ldr	r0, [pc, #72]	; (80055d4 <QueueBuffer+0x9c>)
 800558a:	f00b f84d 	bl	8010628 <memcpy>
	//	strncpy(bufferRadar, data, index_data);
		break;
 800558e:	e011      	b.n	80055b4 <QueueBuffer+0x7c>
	case 3:
		strncpy(bufferIMU , data, index_data);
 8005590:	68ba      	ldr	r2, [r7, #8]
 8005592:	68f9      	ldr	r1, [r7, #12]
 8005594:	4810      	ldr	r0, [pc, #64]	; (80055d8 <QueueBuffer+0xa0>)
 8005596:	f00b f86c 	bl	8010672 <strncpy>
		break;
 800559a:	e00b      	b.n	80055b4 <QueueBuffer+0x7c>
	case 4:
		strncpy(bufferUS, data, index_data);
 800559c:	68ba      	ldr	r2, [r7, #8]
 800559e:	68f9      	ldr	r1, [r7, #12]
 80055a0:	480e      	ldr	r0, [pc, #56]	; (80055dc <QueueBuffer+0xa4>)
 80055a2:	f00b f866 	bl	8010672 <strncpy>
		break;
 80055a6:	e005      	b.n	80055b4 <QueueBuffer+0x7c>
	case 5:
		strncpy(bufferPC, data, index_data);
 80055a8:	68ba      	ldr	r2, [r7, #8]
 80055aa:	68f9      	ldr	r1, [r7, #12]
 80055ac:	480c      	ldr	r0, [pc, #48]	; (80055e0 <QueueBuffer+0xa8>)
 80055ae:	f00b f860 	bl	8010672 <strncpy>
		break;
 80055b2:	bf00      	nop
	}

	index_buffer = index_data;
 80055b4:	68bb      	ldr	r3, [r7, #8]
 80055b6:	b29a      	uxth	r2, r3
 80055b8:	4b0a      	ldr	r3, [pc, #40]	; (80055e4 <QueueBuffer+0xac>)
 80055ba:	801a      	strh	r2, [r3, #0]
	received[index_uart] = true;
 80055bc:	79fb      	ldrb	r3, [r7, #7]
 80055be:	4a0a      	ldr	r2, [pc, #40]	; (80055e8 <QueueBuffer+0xb0>)
 80055c0:	2101      	movs	r1, #1
 80055c2:	54d1      	strb	r1, [r2, r3]
}
 80055c4:	bf00      	nop
 80055c6:	3710      	adds	r7, #16
 80055c8:	46bd      	mov	sp, r7
 80055ca:	bd80      	pop	{r7, pc}
 80055cc:	2000294c 	.word	0x2000294c
 80055d0:	200011d0 	.word	0x200011d0
 80055d4:	200019a4 	.word	0x200019a4
 80055d8:	20000228 	.word	0x20000228
 80055dc:	20002178 	.word	0x20002178
 80055e0:	200009fc 	.word	0x200009fc
 80055e4:	2000311e 	.word	0x2000311e
 80055e8:	20003120 	.word	0x20003120

080055ec <EXTI15_10_IRQHandler>:
	}
}


/// interrupt IMU Sujays
void EXTI15_10_IRQHandler(void) {
 80055ec:	b580      	push	{r7, lr}
 80055ee:	af00      	add	r7, sp, #0
	HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_14);
 80055f0:	f44f 4080 	mov.w	r0, #16384	; 0x4000
 80055f4:	f003 f9d2 	bl	800899c <HAL_GPIO_EXTI_IRQHandler>
//	mpu6050_read_sensors();
	received[3] = true;
 80055f8:	4b02      	ldr	r3, [pc, #8]	; (8005604 <EXTI15_10_IRQHandler+0x18>)
 80055fa:	2201      	movs	r2, #1
 80055fc:	70da      	strb	r2, [r3, #3]
}
 80055fe:	bf00      	nop
 8005600:	bd80      	pop	{r7, pc}
 8005602:	bf00      	nop
 8005604:	20003120 	.word	0x20003120

08005608 <reverse>:

// C program for implementation of ftoa()

// Reverses a string 'str' of length 'len'
void reverse(char* str, int len, int sign)
{
 8005608:	b480      	push	{r7}
 800560a:	b089      	sub	sp, #36	; 0x24
 800560c:	af00      	add	r7, sp, #0
 800560e:	60f8      	str	r0, [r7, #12]
 8005610:	60b9      	str	r1, [r7, #8]
 8005612:	607a      	str	r2, [r7, #4]
	int i = 0, j = len - 1, temp;
 8005614:	2300      	movs	r3, #0
 8005616:	61fb      	str	r3, [r7, #28]
 8005618:	68bb      	ldr	r3, [r7, #8]
 800561a:	3b01      	subs	r3, #1
 800561c:	61bb      	str	r3, [r7, #24]
	if(sign < 0)i++;
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	2b00      	cmp	r3, #0
 8005622:	da1c      	bge.n	800565e <reverse+0x56>
 8005624:	69fb      	ldr	r3, [r7, #28]
 8005626:	3301      	adds	r3, #1
 8005628:	61fb      	str	r3, [r7, #28]
	while (i < j) {
 800562a:	e018      	b.n	800565e <reverse+0x56>
		temp = str[i];
 800562c:	69fb      	ldr	r3, [r7, #28]
 800562e:	68fa      	ldr	r2, [r7, #12]
 8005630:	4413      	add	r3, r2
 8005632:	781b      	ldrb	r3, [r3, #0]
 8005634:	617b      	str	r3, [r7, #20]
		str[i] = str[j];
 8005636:	69bb      	ldr	r3, [r7, #24]
 8005638:	68fa      	ldr	r2, [r7, #12]
 800563a:	441a      	add	r2, r3
 800563c:	69fb      	ldr	r3, [r7, #28]
 800563e:	68f9      	ldr	r1, [r7, #12]
 8005640:	440b      	add	r3, r1
 8005642:	7812      	ldrb	r2, [r2, #0]
 8005644:	701a      	strb	r2, [r3, #0]
		str[j] = temp;
 8005646:	69bb      	ldr	r3, [r7, #24]
 8005648:	68fa      	ldr	r2, [r7, #12]
 800564a:	4413      	add	r3, r2
 800564c:	697a      	ldr	r2, [r7, #20]
 800564e:	b2d2      	uxtb	r2, r2
 8005650:	701a      	strb	r2, [r3, #0]
		i++;
 8005652:	69fb      	ldr	r3, [r7, #28]
 8005654:	3301      	adds	r3, #1
 8005656:	61fb      	str	r3, [r7, #28]
		j--;
 8005658:	69bb      	ldr	r3, [r7, #24]
 800565a:	3b01      	subs	r3, #1
 800565c:	61bb      	str	r3, [r7, #24]
	while (i < j) {
 800565e:	69fa      	ldr	r2, [r7, #28]
 8005660:	69bb      	ldr	r3, [r7, #24]
 8005662:	429a      	cmp	r2, r3
 8005664:	dbe2      	blt.n	800562c <reverse+0x24>
	}
}
 8005666:	bf00      	nop
 8005668:	3724      	adds	r7, #36	; 0x24
 800566a:	46bd      	mov	sp, r7
 800566c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8005670:	4770      	bx	lr
	...

08005674 <intToStr>:
// Converts a given integer x to string str[].
// d is the number of digits required in the output.
// If d is more than the number of digits in x,
// then 0s are added at the beginning.
int intToStr(int x, char str[], int d, int sign)
{
 8005674:	b580      	push	{r7, lr}
 8005676:	b086      	sub	sp, #24
 8005678:	af00      	add	r7, sp, #0
 800567a:	60f8      	str	r0, [r7, #12]
 800567c:	60b9      	str	r1, [r7, #8]
 800567e:	607a      	str	r2, [r7, #4]
 8005680:	603b      	str	r3, [r7, #0]
	int i = 0;
 8005682:	2300      	movs	r3, #0
 8005684:	617b      	str	r3, [r7, #20]
	if(sign < 0)str[i++]='-';
 8005686:	683b      	ldr	r3, [r7, #0]
 8005688:	2b00      	cmp	r3, #0
 800568a:	da26      	bge.n	80056da <intToStr+0x66>
 800568c:	697b      	ldr	r3, [r7, #20]
 800568e:	1c5a      	adds	r2, r3, #1
 8005690:	617a      	str	r2, [r7, #20]
 8005692:	461a      	mov	r2, r3
 8005694:	68bb      	ldr	r3, [r7, #8]
 8005696:	4413      	add	r3, r2
 8005698:	222d      	movs	r2, #45	; 0x2d
 800569a:	701a      	strb	r2, [r3, #0]
	while (x) {
 800569c:	e01d      	b.n	80056da <intToStr+0x66>
		str[i++] = (x % 10) + '0';
 800569e:	68fa      	ldr	r2, [r7, #12]
 80056a0:	4b1d      	ldr	r3, [pc, #116]	; (8005718 <intToStr+0xa4>)
 80056a2:	fb83 1302 	smull	r1, r3, r3, r2
 80056a6:	1099      	asrs	r1, r3, #2
 80056a8:	17d3      	asrs	r3, r2, #31
 80056aa:	1ac9      	subs	r1, r1, r3
 80056ac:	460b      	mov	r3, r1
 80056ae:	009b      	lsls	r3, r3, #2
 80056b0:	440b      	add	r3, r1
 80056b2:	005b      	lsls	r3, r3, #1
 80056b4:	1ad1      	subs	r1, r2, r3
 80056b6:	b2ca      	uxtb	r2, r1
 80056b8:	697b      	ldr	r3, [r7, #20]
 80056ba:	1c59      	adds	r1, r3, #1
 80056bc:	6179      	str	r1, [r7, #20]
 80056be:	4619      	mov	r1, r3
 80056c0:	68bb      	ldr	r3, [r7, #8]
 80056c2:	440b      	add	r3, r1
 80056c4:	3230      	adds	r2, #48	; 0x30
 80056c6:	b2d2      	uxtb	r2, r2
 80056c8:	701a      	strb	r2, [r3, #0]
		x = x / 10;
 80056ca:	68fb      	ldr	r3, [r7, #12]
 80056cc:	4a12      	ldr	r2, [pc, #72]	; (8005718 <intToStr+0xa4>)
 80056ce:	fb82 1203 	smull	r1, r2, r2, r3
 80056d2:	1092      	asrs	r2, r2, #2
 80056d4:	17db      	asrs	r3, r3, #31
 80056d6:	1ad3      	subs	r3, r2, r3
 80056d8:	60fb      	str	r3, [r7, #12]
	while (x) {
 80056da:	68fb      	ldr	r3, [r7, #12]
 80056dc:	2b00      	cmp	r3, #0
 80056de:	d1de      	bne.n	800569e <intToStr+0x2a>
	}

	// If number of digits required is more, then
	// add 0s at the beginning
	while (i < d)
 80056e0:	e007      	b.n	80056f2 <intToStr+0x7e>
		str[i++] = '0';
 80056e2:	697b      	ldr	r3, [r7, #20]
 80056e4:	1c5a      	adds	r2, r3, #1
 80056e6:	617a      	str	r2, [r7, #20]
 80056e8:	461a      	mov	r2, r3
 80056ea:	68bb      	ldr	r3, [r7, #8]
 80056ec:	4413      	add	r3, r2
 80056ee:	2230      	movs	r2, #48	; 0x30
 80056f0:	701a      	strb	r2, [r3, #0]
	while (i < d)
 80056f2:	697a      	ldr	r2, [r7, #20]
 80056f4:	687b      	ldr	r3, [r7, #4]
 80056f6:	429a      	cmp	r2, r3
 80056f8:	dbf3      	blt.n	80056e2 <intToStr+0x6e>

	reverse(str, i,sign);
 80056fa:	683a      	ldr	r2, [r7, #0]
 80056fc:	6979      	ldr	r1, [r7, #20]
 80056fe:	68b8      	ldr	r0, [r7, #8]
 8005700:	f7ff ff82 	bl	8005608 <reverse>
	str[i] = '\0';
 8005704:	697b      	ldr	r3, [r7, #20]
 8005706:	68ba      	ldr	r2, [r7, #8]
 8005708:	4413      	add	r3, r2
 800570a:	2200      	movs	r2, #0
 800570c:	701a      	strb	r2, [r3, #0]
	return i;
 800570e:	697b      	ldr	r3, [r7, #20]
}
 8005710:	4618      	mov	r0, r3
 8005712:	3718      	adds	r7, #24
 8005714:	46bd      	mov	sp, r7
 8005716:	bd80      	pop	{r7, pc}
 8005718:	66666667 	.word	0x66666667
 800571c:	00000000 	.word	0x00000000

08005720 <ftoa>:

// Converts a floating-point/double number to a string.
void ftoa(float n, char* res, int afterpoint)
{
 8005720:	b5b0      	push	{r4, r5, r7, lr}
 8005722:	b088      	sub	sp, #32
 8005724:	af00      	add	r7, sp, #0
 8005726:	ed87 0a03 	vstr	s0, [r7, #12]
 800572a:	60b8      	str	r0, [r7, #8]
 800572c:	6079      	str	r1, [r7, #4]
	// Extract integer part
	float nabs = fabs(n);
 800572e:	edd7 7a03 	vldr	s15, [r7, #12]
 8005732:	eef0 7ae7 	vabs.f32	s15, s15
 8005736:	edc7 7a07 	vstr	s15, [r7, #28]
	int ipart = (int)nabs;
 800573a:	edd7 7a07 	vldr	s15, [r7, #28]
 800573e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005742:	ee17 3a90 	vmov	r3, s15
 8005746:	61bb      	str	r3, [r7, #24]

	// Extract floating part
	float fpart = nabs - (float)ipart;
 8005748:	69bb      	ldr	r3, [r7, #24]
 800574a:	ee07 3a90 	vmov	s15, r3
 800574e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8005752:	ed97 7a07 	vldr	s14, [r7, #28]
 8005756:	ee77 7a67 	vsub.f32	s15, s14, s15
 800575a:	edc7 7a05 	vstr	s15, [r7, #20]

	// convert integer part to string
	int i = intToStr(ipart, res, 0, (n/nabs));
 800575e:	edd7 6a03 	vldr	s13, [r7, #12]
 8005762:	ed97 7a07 	vldr	s14, [r7, #28]
 8005766:	eec6 7a87 	vdiv.f32	s15, s13, s14
 800576a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800576e:	ee17 3a90 	vmov	r3, s15
 8005772:	2200      	movs	r2, #0
 8005774:	68b9      	ldr	r1, [r7, #8]
 8005776:	69b8      	ldr	r0, [r7, #24]
 8005778:	f7ff ff7c 	bl	8005674 <intToStr>
 800577c:	6138      	str	r0, [r7, #16]

	// check for display option after point
	if (afterpoint != 0) {
 800577e:	687b      	ldr	r3, [r7, #4]
 8005780:	2b00      	cmp	r3, #0
 8005782:	d041      	beq.n	8005808 <ftoa+0xe8>
		if(n/nabs < 0){
 8005784:	edd7 6a03 	vldr	s13, [r7, #12]
 8005788:	ed97 7a07 	vldr	s14, [r7, #28]
 800578c:	eec6 7a87 	vdiv.f32	s15, s13, s14
 8005790:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8005794:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8005798:	d505      	bpl.n	80057a6 <ftoa+0x86>
			res[i] = '.'; // add dot
 800579a:	693b      	ldr	r3, [r7, #16]
 800579c:	68ba      	ldr	r2, [r7, #8]
 800579e:	4413      	add	r3, r2
 80057a0:	222e      	movs	r2, #46	; 0x2e
 80057a2:	701a      	strb	r2, [r3, #0]
 80057a4:	e004      	b.n	80057b0 <ftoa+0x90>
		}else{
			res[i] = '.'; // add dot
 80057a6:	693b      	ldr	r3, [r7, #16]
 80057a8:	68ba      	ldr	r2, [r7, #8]
 80057aa:	4413      	add	r3, r2
 80057ac:	222e      	movs	r2, #46	; 0x2e
 80057ae:	701a      	strb	r2, [r3, #0]
		}

		// Get the value of fraction part upto given no.
		// of points after dot. The third parameter
		// is needed to handle cases like 233.007
		fpart = fpart * pow(10, afterpoint);
 80057b0:	6978      	ldr	r0, [r7, #20]
 80057b2:	f7fa fe9b 	bl	80004ec <__aeabi_f2d>
 80057b6:	4604      	mov	r4, r0
 80057b8:	460d      	mov	r5, r1
 80057ba:	6878      	ldr	r0, [r7, #4]
 80057bc:	f7fa fe84 	bl	80004c8 <__aeabi_i2d>
 80057c0:	4602      	mov	r2, r0
 80057c2:	460b      	mov	r3, r1
 80057c4:	ec43 2b11 	vmov	d1, r2, r3
 80057c8:	ed9f 0b11 	vldr	d0, [pc, #68]	; 8005810 <ftoa+0xf0>
 80057cc:	f00c fef2 	bl	80125b4 <pow>
 80057d0:	ec53 2b10 	vmov	r2, r3, d0
 80057d4:	4620      	mov	r0, r4
 80057d6:	4629      	mov	r1, r5
 80057d8:	f7fa fee0 	bl	800059c <__aeabi_dmul>
 80057dc:	4603      	mov	r3, r0
 80057de:	460c      	mov	r4, r1
 80057e0:	4618      	mov	r0, r3
 80057e2:	4621      	mov	r1, r4
 80057e4:	f7fb f9d2 	bl	8000b8c <__aeabi_d2f>
 80057e8:	4603      	mov	r3, r0
 80057ea:	617b      	str	r3, [r7, #20]

		intToStr((int)fpart, res + i + 1, afterpoint,0);
 80057ec:	edd7 7a05 	vldr	s15, [r7, #20]
 80057f0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80057f4:	693b      	ldr	r3, [r7, #16]
 80057f6:	3301      	adds	r3, #1
 80057f8:	68ba      	ldr	r2, [r7, #8]
 80057fa:	18d1      	adds	r1, r2, r3
 80057fc:	2300      	movs	r3, #0
 80057fe:	687a      	ldr	r2, [r7, #4]
 8005800:	ee17 0a90 	vmov	r0, s15
 8005804:	f7ff ff36 	bl	8005674 <intToStr>
	}
}
 8005808:	bf00      	nop
 800580a:	3720      	adds	r7, #32
 800580c:	46bd      	mov	sp, r7
 800580e:	bdb0      	pop	{r4, r5, r7, pc}
 8005810:	00000000 	.word	0x00000000
 8005814:	40240000 	.word	0x40240000

08005818 <PID>:

void PID (void){
 8005818:	b590      	push	{r4, r7, lr}
 800581a:	b083      	sub	sp, #12
 800581c:	af00      	add	r7, sp, #0
	PID_UpdateError(angledes-anglezactual);
 800581e:	4b72      	ldr	r3, [pc, #456]	; (80059e8 <PID+0x1d0>)
 8005820:	ed93 7a00 	vldr	s14, [r3]
 8005824:	4b71      	ldr	r3, [pc, #452]	; (80059ec <PID+0x1d4>)
 8005826:	edd3 7a00 	vldr	s15, [r3]
 800582a:	ee77 7a67 	vsub.f32	s15, s14, s15
 800582e:	ee17 0a90 	vmov	r0, s15
 8005832:	f7fa fe5b 	bl	80004ec <__aeabi_f2d>
 8005836:	4603      	mov	r3, r0
 8005838:	460c      	mov	r4, r1
 800583a:	ec44 3b10 	vmov	d0, r3, r4
 800583e:	f7fd fc07 	bl	8003050 <PID_UpdateError>
	steer = PID_TotalError();
 8005842:	f7fd fc45 	bl	80030d0 <PID_TotalError>
 8005846:	eef0 7a40 	vmov.f32	s15, s0
 800584a:	4b69      	ldr	r3, [pc, #420]	; (80059f0 <PID+0x1d8>)
 800584c:	edc3 7a00 	vstr	s15, [r3]

	uint8_t tempright = 1;
 8005850:	2301      	movs	r3, #1
 8005852:	71fb      	strb	r3, [r7, #7]
	uint8_t templeft = 1;
 8005854:	2301      	movs	r3, #1
 8005856:	71bb      	strb	r3, [r7, #6]
	  if(HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_7)){
 8005858:	2180      	movs	r1, #128	; 0x80
 800585a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800585e:	f003 f86d 	bl	800893c <HAL_GPIO_ReadPin>
 8005862:	4603      	mov	r3, r0
 8005864:	2b00      	cmp	r3, #0
 8005866:	f000 8083 	beq.w	8005970 <PID+0x158>
		  if (speed + (int16_t)steer > Motor_low_limit && speed + (int16_t)steer < 100){
 800586a:	4b62      	ldr	r3, [pc, #392]	; (80059f4 <PID+0x1dc>)
 800586c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005870:	461a      	mov	r2, r3
 8005872:	4b5f      	ldr	r3, [pc, #380]	; (80059f0 <PID+0x1d8>)
 8005874:	edd3 7a00 	vldr	s15, [r3]
 8005878:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800587c:	ee17 3a90 	vmov	r3, s15
 8005880:	b21b      	sxth	r3, r3
 8005882:	4413      	add	r3, r2
 8005884:	2b14      	cmp	r3, #20
 8005886:	dd1e      	ble.n	80058c6 <PID+0xae>
 8005888:	4b5a      	ldr	r3, [pc, #360]	; (80059f4 <PID+0x1dc>)
 800588a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800588e:	461a      	mov	r2, r3
 8005890:	4b57      	ldr	r3, [pc, #348]	; (80059f0 <PID+0x1d8>)
 8005892:	edd3 7a00 	vldr	s15, [r3]
 8005896:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800589a:	ee17 3a90 	vmov	r3, s15
 800589e:	b21b      	sxth	r3, r3
 80058a0:	4413      	add	r3, r2
 80058a2:	2b63      	cmp	r3, #99	; 0x63
 80058a4:	dc0f      	bgt.n	80058c6 <PID+0xae>
			  tempright = speed + (int16_t)steer;
 80058a6:	4b53      	ldr	r3, [pc, #332]	; (80059f4 <PID+0x1dc>)
 80058a8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80058ac:	b2da      	uxtb	r2, r3
 80058ae:	4b50      	ldr	r3, [pc, #320]	; (80059f0 <PID+0x1d8>)
 80058b0:	edd3 7a00 	vldr	s15, [r3]
 80058b4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058b8:	ee17 3a90 	vmov	r3, s15
 80058bc:	b21b      	sxth	r3, r3
 80058be:	b2db      	uxtb	r3, r3
 80058c0:	4413      	add	r3, r2
 80058c2:	71fb      	strb	r3, [r7, #7]
 80058c4:	e012      	b.n	80058ec <PID+0xd4>
		  }else{
				 tempright = (speed + (int16_t)steer < Motor_low_limit) ? Motor_low_limit : 100;
 80058c6:	4b4b      	ldr	r3, [pc, #300]	; (80059f4 <PID+0x1dc>)
 80058c8:	f9b3 3000 	ldrsh.w	r3, [r3]
 80058cc:	461a      	mov	r2, r3
 80058ce:	4b48      	ldr	r3, [pc, #288]	; (80059f0 <PID+0x1d8>)
 80058d0:	edd3 7a00 	vldr	s15, [r3]
 80058d4:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058d8:	ee17 3a90 	vmov	r3, s15
 80058dc:	b21b      	sxth	r3, r3
 80058de:	4413      	add	r3, r2
 80058e0:	2b13      	cmp	r3, #19
 80058e2:	dc01      	bgt.n	80058e8 <PID+0xd0>
 80058e4:	2314      	movs	r3, #20
 80058e6:	e000      	b.n	80058ea <PID+0xd2>
 80058e8:	2364      	movs	r3, #100	; 0x64
 80058ea:	71fb      	strb	r3, [r7, #7]
		  }
		  if(speed - (int16_t)steer > Motor_low_limit && speed - (int16_t)steer < 100){
 80058ec:	4b41      	ldr	r3, [pc, #260]	; (80059f4 <PID+0x1dc>)
 80058ee:	f9b3 3000 	ldrsh.w	r3, [r3]
 80058f2:	461a      	mov	r2, r3
 80058f4:	4b3e      	ldr	r3, [pc, #248]	; (80059f0 <PID+0x1d8>)
 80058f6:	edd3 7a00 	vldr	s15, [r3]
 80058fa:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80058fe:	ee17 3a90 	vmov	r3, s15
 8005902:	b21b      	sxth	r3, r3
 8005904:	1ad3      	subs	r3, r2, r3
 8005906:	2b14      	cmp	r3, #20
 8005908:	dd1e      	ble.n	8005948 <PID+0x130>
 800590a:	4b3a      	ldr	r3, [pc, #232]	; (80059f4 <PID+0x1dc>)
 800590c:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005910:	461a      	mov	r2, r3
 8005912:	4b37      	ldr	r3, [pc, #220]	; (80059f0 <PID+0x1d8>)
 8005914:	edd3 7a00 	vldr	s15, [r3]
 8005918:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800591c:	ee17 3a90 	vmov	r3, s15
 8005920:	b21b      	sxth	r3, r3
 8005922:	1ad3      	subs	r3, r2, r3
 8005924:	2b63      	cmp	r3, #99	; 0x63
 8005926:	dc0f      	bgt.n	8005948 <PID+0x130>
			  templeft = speed - (int16_t)steer;
 8005928:	4b32      	ldr	r3, [pc, #200]	; (80059f4 <PID+0x1dc>)
 800592a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800592e:	b2da      	uxtb	r2, r3
 8005930:	4b2f      	ldr	r3, [pc, #188]	; (80059f0 <PID+0x1d8>)
 8005932:	edd3 7a00 	vldr	s15, [r3]
 8005936:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800593a:	ee17 3a90 	vmov	r3, s15
 800593e:	b21b      	sxth	r3, r3
 8005940:	b2db      	uxtb	r3, r3
 8005942:	1ad3      	subs	r3, r2, r3
 8005944:	71bb      	strb	r3, [r7, #6]
 8005946:	e035      	b.n	80059b4 <PID+0x19c>
		  }else{
			  templeft = (speed - (int16_t)steer < Motor_low_limit) ? Motor_low_limit : 100;
 8005948:	4b2a      	ldr	r3, [pc, #168]	; (80059f4 <PID+0x1dc>)
 800594a:	f9b3 3000 	ldrsh.w	r3, [r3]
 800594e:	461a      	mov	r2, r3
 8005950:	4b27      	ldr	r3, [pc, #156]	; (80059f0 <PID+0x1d8>)
 8005952:	edd3 7a00 	vldr	s15, [r3]
 8005956:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 800595a:	ee17 3a90 	vmov	r3, s15
 800595e:	b21b      	sxth	r3, r3
 8005960:	1ad3      	subs	r3, r2, r3
 8005962:	2b13      	cmp	r3, #19
 8005964:	dc01      	bgt.n	800596a <PID+0x152>
 8005966:	2314      	movs	r3, #20
 8005968:	e000      	b.n	800596c <PID+0x154>
 800596a:	2364      	movs	r3, #100	; 0x64
 800596c:	71bb      	strb	r3, [r7, #6]
 800596e:	e021      	b.n	80059b4 <PID+0x19c>
		  }
	  }else{
		 tempright = (speed - (int16_t)steer < Motor_low_limit) ? Motor_low_limit : speed - (int16_t)steer;
 8005970:	4b20      	ldr	r3, [pc, #128]	; (80059f4 <PID+0x1dc>)
 8005972:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005976:	461a      	mov	r2, r3
 8005978:	4b1d      	ldr	r3, [pc, #116]	; (80059f0 <PID+0x1d8>)
 800597a:	edd3 7a00 	vldr	s15, [r3]
 800597e:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 8005982:	ee17 3a90 	vmov	r3, s15
 8005986:	b21b      	sxth	r3, r3
 8005988:	1ad3      	subs	r3, r2, r3
 800598a:	2b14      	cmp	r3, #20
 800598c:	bfb8      	it	lt
 800598e:	2314      	movlt	r3, #20
 8005990:	71fb      	strb	r3, [r7, #7]
		 templeft = (speed + (int16_t)steer > 100) ? 100 : speed + (int16_t)steer;
 8005992:	4b18      	ldr	r3, [pc, #96]	; (80059f4 <PID+0x1dc>)
 8005994:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005998:	461a      	mov	r2, r3
 800599a:	4b15      	ldr	r3, [pc, #84]	; (80059f0 <PID+0x1d8>)
 800599c:	edd3 7a00 	vldr	s15, [r3]
 80059a0:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 80059a4:	ee17 3a90 	vmov	r3, s15
 80059a8:	b21b      	sxth	r3, r3
 80059aa:	4413      	add	r3, r2
 80059ac:	2b64      	cmp	r3, #100	; 0x64
 80059ae:	bfa8      	it	ge
 80059b0:	2364      	movge	r3, #100	; 0x64
 80059b2:	71bb      	strb	r3, [r7, #6]
	  }
		TIM4->CCR3 = 59955/100*tempright;// motor right
 80059b4:	79fb      	ldrb	r3, [r7, #7]
 80059b6:	f240 2257 	movw	r2, #599	; 0x257
 80059ba:	fb02 f203 	mul.w	r2, r2, r3
 80059be:	4b0e      	ldr	r3, [pc, #56]	; (80059f8 <PID+0x1e0>)
 80059c0:	63da      	str	r2, [r3, #60]	; 0x3c
		TIM4->CCR4 = 59955/100*templeft;// motor left
 80059c2:	79bb      	ldrb	r3, [r7, #6]
 80059c4:	f240 2257 	movw	r2, #599	; 0x257
 80059c8:	fb02 f203 	mul.w	r2, r2, r3
 80059cc:	4b0a      	ldr	r3, [pc, #40]	; (80059f8 <PID+0x1e0>)
 80059ce:	641a      	str	r2, [r3, #64]	; 0x40
		HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_3);
 80059d0:	2108      	movs	r1, #8
 80059d2:	480a      	ldr	r0, [pc, #40]	; (80059fc <PID+0x1e4>)
 80059d4:	f005 f814 	bl	800aa00 <HAL_TIM_PWM_Start>
		HAL_TIM_PWM_Start(&htim4, TIM_CHANNEL_4);
 80059d8:	210c      	movs	r1, #12
 80059da:	4808      	ldr	r0, [pc, #32]	; (80059fc <PID+0x1e4>)
 80059dc:	f005 f810 	bl	800aa00 <HAL_TIM_PWM_Start>
	//PID_Init(0.75, 15e-5, 0.115);//speed

}
 80059e0:	bf00      	nop
 80059e2:	370c      	adds	r7, #12
 80059e4:	46bd      	mov	sp, r7
 80059e6:	bd90      	pop	{r4, r7, pc}
 80059e8:	2000ad68 	.word	0x2000ad68
 80059ec:	2000abfc 	.word	0x2000abfc
 80059f0:	2000312c 	.word	0x2000312c
 80059f4:	20000000 	.word	0x20000000
 80059f8:	40000800 	.word	0x40000800
 80059fc:	2000ad70 	.word	0x2000ad70

08005a00 <ReceiveData_PC>:


void ReceiveData_PC (char buff[LINEMAX + 1]){
 8005a00:	b580      	push	{r7, lr}
 8005a02:	b084      	sub	sp, #16
 8005a04:	af00      	add	r7, sp, #0
 8005a06:	6078      	str	r0, [r7, #4]
	uint8_t tempheading = heading;
 8005a08:	4ba2      	ldr	r3, [pc, #648]	; (8005c94 <ReceiveData_PC+0x294>)
 8005a0a:	781b      	ldrb	r3, [r3, #0]
 8005a0c:	73fb      	strb	r3, [r7, #15]
	_Bool Aheadingchange = false;
 8005a0e:	2300      	movs	r3, #0
 8005a10:	73bb      	strb	r3, [r7, #14]
	_Bool Dheadingchange = false;
 8005a12:	2300      	movs	r3, #0
 8005a14:	737b      	strb	r3, [r7, #13]
	for (int i = 0; i < index_buffer; i++){
 8005a16:	2300      	movs	r3, #0
 8005a18:	60bb      	str	r3, [r7, #8]
 8005a1a:	e228      	b.n	8005e6e <ReceiveData_PC+0x46e>
		  if(buff[i] == 'i'){
 8005a1c:	68bb      	ldr	r3, [r7, #8]
 8005a1e:	687a      	ldr	r2, [r7, #4]
 8005a20:	4413      	add	r3, r2
 8005a22:	781b      	ldrb	r3, [r3, #0]
 8005a24:	2b69      	cmp	r3, #105	; 0x69
 8005a26:	d109      	bne.n	8005a3c <ReceiveData_PC+0x3c>
			  increase_speed += 5;
 8005a28:	4b9b      	ldr	r3, [pc, #620]	; (8005c98 <ReceiveData_PC+0x298>)
 8005a2a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005a2e:	b29b      	uxth	r3, r3
 8005a30:	3305      	adds	r3, #5
 8005a32:	b29b      	uxth	r3, r3
 8005a34:	b21a      	sxth	r2, r3
 8005a36:	4b98      	ldr	r3, [pc, #608]	; (8005c98 <ReceiveData_PC+0x298>)
 8005a38:	801a      	strh	r2, [r3, #0]
 8005a3a:	e215      	b.n	8005e68 <ReceiveData_PC+0x468>
		  }else if(buff[i] == 'k'){
 8005a3c:	68bb      	ldr	r3, [r7, #8]
 8005a3e:	687a      	ldr	r2, [r7, #4]
 8005a40:	4413      	add	r3, r2
 8005a42:	781b      	ldrb	r3, [r3, #0]
 8005a44:	2b6b      	cmp	r3, #107	; 0x6b
 8005a46:	d109      	bne.n	8005a5c <ReceiveData_PC+0x5c>
			  increase_speed -= 5;
 8005a48:	4b93      	ldr	r3, [pc, #588]	; (8005c98 <ReceiveData_PC+0x298>)
 8005a4a:	f9b3 3000 	ldrsh.w	r3, [r3]
 8005a4e:	b29b      	uxth	r3, r3
 8005a50:	3b05      	subs	r3, #5
 8005a52:	b29b      	uxth	r3, r3
 8005a54:	b21a      	sxth	r2, r3
 8005a56:	4b90      	ldr	r3, [pc, #576]	; (8005c98 <ReceiveData_PC+0x298>)
 8005a58:	801a      	strh	r2, [r3, #0]
 8005a5a:	e205      	b.n	8005e68 <ReceiveData_PC+0x468>
		  }else if(buff[i] == 'w'){  // foward
 8005a5c:	68bb      	ldr	r3, [r7, #8]
 8005a5e:	687a      	ldr	r2, [r7, #4]
 8005a60:	4413      	add	r3, r2
 8005a62:	781b      	ldrb	r3, [r3, #0]
 8005a64:	2b77      	cmp	r3, #119	; 0x77
 8005a66:	d117      	bne.n	8005a98 <ReceiveData_PC+0x98>
			  strcpy(Direction,"move");
 8005a68:	4b8c      	ldr	r3, [pc, #560]	; (8005c9c <ReceiveData_PC+0x29c>)
 8005a6a:	4a8d      	ldr	r2, [pc, #564]	; (8005ca0 <ReceiveData_PC+0x2a0>)
 8005a6c:	6810      	ldr	r0, [r2, #0]
 8005a6e:	6018      	str	r0, [r3, #0]
 8005a70:	7912      	ldrb	r2, [r2, #4]
 8005a72:	711a      	strb	r2, [r3, #4]
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 1);
 8005a74:	2201      	movs	r2, #1
 8005a76:	2180      	movs	r1, #128	; 0x80
 8005a78:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005a7c:	f002 ff76 	bl	800896c <HAL_GPIO_WritePin>
			  distx = 1;
 8005a80:	4b88      	ldr	r3, [pc, #544]	; (8005ca4 <ReceiveData_PC+0x2a4>)
 8005a82:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005a86:	601a      	str	r2, [r3, #0]
			  disty = 0;
 8005a88:	4b87      	ldr	r3, [pc, #540]	; (8005ca8 <ReceiveData_PC+0x2a8>)
 8005a8a:	f04f 0200 	mov.w	r2, #0
 8005a8e:	601a      	str	r2, [r3, #0]
			  frontback = true;
 8005a90:	4b86      	ldr	r3, [pc, #536]	; (8005cac <ReceiveData_PC+0x2ac>)
 8005a92:	2201      	movs	r2, #1
 8005a94:	701a      	strb	r2, [r3, #0]
 8005a96:	e1e7      	b.n	8005e68 <ReceiveData_PC+0x468>
		  }else if(buff[i] == 's'){  // backward
 8005a98:	68bb      	ldr	r3, [r7, #8]
 8005a9a:	687a      	ldr	r2, [r7, #4]
 8005a9c:	4413      	add	r3, r2
 8005a9e:	781b      	ldrb	r3, [r3, #0]
 8005aa0:	2b73      	cmp	r3, #115	; 0x73
 8005aa2:	d117      	bne.n	8005ad4 <ReceiveData_PC+0xd4>
			  strcpy(Direction,"move");
 8005aa4:	4b7d      	ldr	r3, [pc, #500]	; (8005c9c <ReceiveData_PC+0x29c>)
 8005aa6:	4a7e      	ldr	r2, [pc, #504]	; (8005ca0 <ReceiveData_PC+0x2a0>)
 8005aa8:	6810      	ldr	r0, [r2, #0]
 8005aaa:	6018      	str	r0, [r3, #0]
 8005aac:	7912      	ldrb	r2, [r2, #4]
 8005aae:	711a      	strb	r2, [r3, #4]
			  frontback = false;
 8005ab0:	4b7e      	ldr	r3, [pc, #504]	; (8005cac <ReceiveData_PC+0x2ac>)
 8005ab2:	2200      	movs	r2, #0
 8005ab4:	701a      	strb	r2, [r3, #0]
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 0);
 8005ab6:	2200      	movs	r2, #0
 8005ab8:	2180      	movs	r1, #128	; 0x80
 8005aba:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005abe:	f002 ff55 	bl	800896c <HAL_GPIO_WritePin>
			  distx = 1;
 8005ac2:	4b78      	ldr	r3, [pc, #480]	; (8005ca4 <ReceiveData_PC+0x2a4>)
 8005ac4:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005ac8:	601a      	str	r2, [r3, #0]
			  disty = 0;
 8005aca:	4b77      	ldr	r3, [pc, #476]	; (8005ca8 <ReceiveData_PC+0x2a8>)
 8005acc:	f04f 0200 	mov.w	r2, #0
 8005ad0:	601a      	str	r2, [r3, #0]
 8005ad2:	e1c9      	b.n	8005e68 <ReceiveData_PC+0x468>
		  }else if(buff[i] == 'a'){  // left
 8005ad4:	68bb      	ldr	r3, [r7, #8]
 8005ad6:	687a      	ldr	r2, [r7, #4]
 8005ad8:	4413      	add	r3, r2
 8005ada:	781b      	ldrb	r3, [r3, #0]
 8005adc:	2b61      	cmp	r3, #97	; 0x61
 8005ade:	d12e      	bne.n	8005b3e <ReceiveData_PC+0x13e>
			  strcpy(Direction,"move");
 8005ae0:	4b6e      	ldr	r3, [pc, #440]	; (8005c9c <ReceiveData_PC+0x29c>)
 8005ae2:	4a6f      	ldr	r2, [pc, #444]	; (8005ca0 <ReceiveData_PC+0x2a0>)
 8005ae4:	6810      	ldr	r0, [r2, #0]
 8005ae6:	6018      	str	r0, [r3, #0]
 8005ae8:	7912      	ldrb	r2, [r2, #4]
 8005aea:	711a      	strb	r2, [r3, #4]
			  frontback = true;
 8005aec:	4b6f      	ldr	r3, [pc, #444]	; (8005cac <ReceiveData_PC+0x2ac>)
 8005aee:	2201      	movs	r2, #1
 8005af0:	701a      	strb	r2, [r3, #0]
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 1);
 8005af2:	2201      	movs	r2, #1
 8005af4:	2180      	movs	r1, #128	; 0x80
 8005af6:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005afa:	f002 ff37 	bl	800896c <HAL_GPIO_WritePin>
			  distx = 0;
 8005afe:	4b69      	ldr	r3, [pc, #420]	; (8005ca4 <ReceiveData_PC+0x2a4>)
 8005b00:	f04f 0200 	mov.w	r2, #0
 8005b04:	601a      	str	r2, [r3, #0]
			  disty = -0.001;
 8005b06:	4b68      	ldr	r3, [pc, #416]	; (8005ca8 <ReceiveData_PC+0x2a8>)
 8005b08:	4a69      	ldr	r2, [pc, #420]	; (8005cb0 <ReceiveData_PC+0x2b0>)
 8005b0a:	601a      	str	r2, [r3, #0]
			  if(tempheading < 4){
 8005b0c:	7bfb      	ldrb	r3, [r7, #15]
 8005b0e:	2b03      	cmp	r3, #3
 8005b10:	d809      	bhi.n	8005b26 <ReceiveData_PC+0x126>
				  tempheading = (Aheadingchange) ? tempheading : tempheading + 1;
 8005b12:	7bbb      	ldrb	r3, [r7, #14]
 8005b14:	2b00      	cmp	r3, #0
 8005b16:	d001      	beq.n	8005b1c <ReceiveData_PC+0x11c>
 8005b18:	7bfb      	ldrb	r3, [r7, #15]
 8005b1a:	e002      	b.n	8005b22 <ReceiveData_PC+0x122>
 8005b1c:	7bfb      	ldrb	r3, [r7, #15]
 8005b1e:	3301      	adds	r3, #1
 8005b20:	b2db      	uxtb	r3, r3
 8005b22:	73fb      	strb	r3, [r7, #15]
 8005b24:	e006      	b.n	8005b34 <ReceiveData_PC+0x134>
			  } else{
				  tempheading = (Aheadingchange) ?  tempheading : 1;
 8005b26:	7bbb      	ldrb	r3, [r7, #14]
 8005b28:	2b00      	cmp	r3, #0
 8005b2a:	d001      	beq.n	8005b30 <ReceiveData_PC+0x130>
 8005b2c:	7bfb      	ldrb	r3, [r7, #15]
 8005b2e:	e000      	b.n	8005b32 <ReceiveData_PC+0x132>
 8005b30:	2301      	movs	r3, #1
 8005b32:	73fb      	strb	r3, [r7, #15]
			  }
			  Aheadingchange = true;
 8005b34:	2301      	movs	r3, #1
 8005b36:	73bb      	strb	r3, [r7, #14]
			  Dheadingchange = false;
 8005b38:	2300      	movs	r3, #0
 8005b3a:	737b      	strb	r3, [r7, #13]
 8005b3c:	e194      	b.n	8005e68 <ReceiveData_PC+0x468>
		  }else if(buff[i] == 'd'){  // right
 8005b3e:	68bb      	ldr	r3, [r7, #8]
 8005b40:	687a      	ldr	r2, [r7, #4]
 8005b42:	4413      	add	r3, r2
 8005b44:	781b      	ldrb	r3, [r3, #0]
 8005b46:	2b64      	cmp	r3, #100	; 0x64
 8005b48:	d12e      	bne.n	8005ba8 <ReceiveData_PC+0x1a8>
			  strcpy(Direction,"move");
 8005b4a:	4b54      	ldr	r3, [pc, #336]	; (8005c9c <ReceiveData_PC+0x29c>)
 8005b4c:	4a54      	ldr	r2, [pc, #336]	; (8005ca0 <ReceiveData_PC+0x2a0>)
 8005b4e:	6810      	ldr	r0, [r2, #0]
 8005b50:	6018      	str	r0, [r3, #0]
 8005b52:	7912      	ldrb	r2, [r2, #4]
 8005b54:	711a      	strb	r2, [r3, #4]
			  frontback = true;
 8005b56:	4b55      	ldr	r3, [pc, #340]	; (8005cac <ReceiveData_PC+0x2ac>)
 8005b58:	2201      	movs	r2, #1
 8005b5a:	701a      	strb	r2, [r3, #0]
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 1);
 8005b5c:	2201      	movs	r2, #1
 8005b5e:	2180      	movs	r1, #128	; 0x80
 8005b60:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005b64:	f002 ff02 	bl	800896c <HAL_GPIO_WritePin>
			  distx = 0;
 8005b68:	4b4e      	ldr	r3, [pc, #312]	; (8005ca4 <ReceiveData_PC+0x2a4>)
 8005b6a:	f04f 0200 	mov.w	r2, #0
 8005b6e:	601a      	str	r2, [r3, #0]
			  disty = 0.001;
 8005b70:	4b4d      	ldr	r3, [pc, #308]	; (8005ca8 <ReceiveData_PC+0x2a8>)
 8005b72:	4a50      	ldr	r2, [pc, #320]	; (8005cb4 <ReceiveData_PC+0x2b4>)
 8005b74:	601a      	str	r2, [r3, #0]
			  if(tempheading > 1){
 8005b76:	7bfb      	ldrb	r3, [r7, #15]
 8005b78:	2b01      	cmp	r3, #1
 8005b7a:	d909      	bls.n	8005b90 <ReceiveData_PC+0x190>
				  tempheading = (Dheadingchange) ? tempheading : tempheading - 1;
 8005b7c:	7b7b      	ldrb	r3, [r7, #13]
 8005b7e:	2b00      	cmp	r3, #0
 8005b80:	d001      	beq.n	8005b86 <ReceiveData_PC+0x186>
 8005b82:	7bfb      	ldrb	r3, [r7, #15]
 8005b84:	e002      	b.n	8005b8c <ReceiveData_PC+0x18c>
 8005b86:	7bfb      	ldrb	r3, [r7, #15]
 8005b88:	3b01      	subs	r3, #1
 8005b8a:	b2db      	uxtb	r3, r3
 8005b8c:	73fb      	strb	r3, [r7, #15]
 8005b8e:	e006      	b.n	8005b9e <ReceiveData_PC+0x19e>
			  } else{
				  tempheading = (Dheadingchange) ?  tempheading : 4;
 8005b90:	7b7b      	ldrb	r3, [r7, #13]
 8005b92:	2b00      	cmp	r3, #0
 8005b94:	d001      	beq.n	8005b9a <ReceiveData_PC+0x19a>
 8005b96:	7bfb      	ldrb	r3, [r7, #15]
 8005b98:	e000      	b.n	8005b9c <ReceiveData_PC+0x19c>
 8005b9a:	2304      	movs	r3, #4
 8005b9c:	73fb      	strb	r3, [r7, #15]
			  }
			  Aheadingchange = false;
 8005b9e:	2300      	movs	r3, #0
 8005ba0:	73bb      	strb	r3, [r7, #14]
			  Dheadingchange = true;
 8005ba2:	2301      	movs	r3, #1
 8005ba4:	737b      	strb	r3, [r7, #13]
 8005ba6:	e15f      	b.n	8005e68 <ReceiveData_PC+0x468>


		  }else if(buff[i] == '1'){
 8005ba8:	68bb      	ldr	r3, [r7, #8]
 8005baa:	687a      	ldr	r2, [r7, #4]
 8005bac:	4413      	add	r3, r2
 8005bae:	781b      	ldrb	r3, [r3, #0]
 8005bb0:	2b31      	cmp	r3, #49	; 0x31
 8005bb2:	d117      	bne.n	8005be4 <ReceiveData_PC+0x1e4>
			  strcpy(Direction,"move");
 8005bb4:	4b39      	ldr	r3, [pc, #228]	; (8005c9c <ReceiveData_PC+0x29c>)
 8005bb6:	4a3a      	ldr	r2, [pc, #232]	; (8005ca0 <ReceiveData_PC+0x2a0>)
 8005bb8:	6810      	ldr	r0, [r2, #0]
 8005bba:	6018      	str	r0, [r3, #0]
 8005bbc:	7912      	ldrb	r2, [r2, #4]
 8005bbe:	711a      	strb	r2, [r3, #4]
			  frontback = true;
 8005bc0:	4b3a      	ldr	r3, [pc, #232]	; (8005cac <ReceiveData_PC+0x2ac>)
 8005bc2:	2201      	movs	r2, #1
 8005bc4:	701a      	strb	r2, [r3, #0]
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 1);
 8005bc6:	2201      	movs	r2, #1
 8005bc8:	2180      	movs	r1, #128	; 0x80
 8005bca:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005bce:	f002 fecd 	bl	800896c <HAL_GPIO_WritePin>
			  distx = 1;
 8005bd2:	4b34      	ldr	r3, [pc, #208]	; (8005ca4 <ReceiveData_PC+0x2a4>)
 8005bd4:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005bd8:	601a      	str	r2, [r3, #0]
			  disty = 1;
 8005bda:	4b33      	ldr	r3, [pc, #204]	; (8005ca8 <ReceiveData_PC+0x2a8>)
 8005bdc:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005be0:	601a      	str	r2, [r3, #0]
 8005be2:	e141      	b.n	8005e68 <ReceiveData_PC+0x468>
		  }else if(buff[i] == '2'){
 8005be4:	68bb      	ldr	r3, [r7, #8]
 8005be6:	687a      	ldr	r2, [r7, #4]
 8005be8:	4413      	add	r3, r2
 8005bea:	781b      	ldrb	r3, [r3, #0]
 8005bec:	2b32      	cmp	r3, #50	; 0x32
 8005bee:	d116      	bne.n	8005c1e <ReceiveData_PC+0x21e>
			  strcpy(Direction,"move");
 8005bf0:	4b2a      	ldr	r3, [pc, #168]	; (8005c9c <ReceiveData_PC+0x29c>)
 8005bf2:	4a2b      	ldr	r2, [pc, #172]	; (8005ca0 <ReceiveData_PC+0x2a0>)
 8005bf4:	6810      	ldr	r0, [r2, #0]
 8005bf6:	6018      	str	r0, [r3, #0]
 8005bf8:	7912      	ldrb	r2, [r2, #4]
 8005bfa:	711a      	strb	r2, [r3, #4]
			  frontback = true;
 8005bfc:	4b2b      	ldr	r3, [pc, #172]	; (8005cac <ReceiveData_PC+0x2ac>)
 8005bfe:	2201      	movs	r2, #1
 8005c00:	701a      	strb	r2, [r3, #0]
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 1);
 8005c02:	2201      	movs	r2, #1
 8005c04:	2180      	movs	r1, #128	; 0x80
 8005c06:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005c0a:	f002 feaf 	bl	800896c <HAL_GPIO_WritePin>
			  distx = 1;
 8005c0e:	4b25      	ldr	r3, [pc, #148]	; (8005ca4 <ReceiveData_PC+0x2a4>)
 8005c10:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005c14:	601a      	str	r2, [r3, #0]
			  disty = -1;
 8005c16:	4b24      	ldr	r3, [pc, #144]	; (8005ca8 <ReceiveData_PC+0x2a8>)
 8005c18:	4a27      	ldr	r2, [pc, #156]	; (8005cb8 <ReceiveData_PC+0x2b8>)
 8005c1a:	601a      	str	r2, [r3, #0]
 8005c1c:	e124      	b.n	8005e68 <ReceiveData_PC+0x468>
		  }else if(buff[i] == '3'){
 8005c1e:	68bb      	ldr	r3, [r7, #8]
 8005c20:	687a      	ldr	r2, [r7, #4]
 8005c22:	4413      	add	r3, r2
 8005c24:	781b      	ldrb	r3, [r3, #0]
 8005c26:	2b33      	cmp	r3, #51	; 0x33
 8005c28:	d117      	bne.n	8005c5a <ReceiveData_PC+0x25a>
			  strcpy(Direction,"move");
 8005c2a:	4b1c      	ldr	r3, [pc, #112]	; (8005c9c <ReceiveData_PC+0x29c>)
 8005c2c:	4a1c      	ldr	r2, [pc, #112]	; (8005ca0 <ReceiveData_PC+0x2a0>)
 8005c2e:	6810      	ldr	r0, [r2, #0]
 8005c30:	6018      	str	r0, [r3, #0]
 8005c32:	7912      	ldrb	r2, [r2, #4]
 8005c34:	711a      	strb	r2, [r3, #4]
			  frontback = true;
 8005c36:	4b1d      	ldr	r3, [pc, #116]	; (8005cac <ReceiveData_PC+0x2ac>)
 8005c38:	2201      	movs	r2, #1
 8005c3a:	701a      	strb	r2, [r3, #0]
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 1);
 8005c3c:	2201      	movs	r2, #1
 8005c3e:	2180      	movs	r1, #128	; 0x80
 8005c40:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005c44:	f002 fe92 	bl	800896c <HAL_GPIO_WritePin>
			  distx = 2;
 8005c48:	4b16      	ldr	r3, [pc, #88]	; (8005ca4 <ReceiveData_PC+0x2a4>)
 8005c4a:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005c4e:	601a      	str	r2, [r3, #0]
			  disty = 1;
 8005c50:	4b15      	ldr	r3, [pc, #84]	; (8005ca8 <ReceiveData_PC+0x2a8>)
 8005c52:	f04f 527e 	mov.w	r2, #1065353216	; 0x3f800000
 8005c56:	601a      	str	r2, [r3, #0]
 8005c58:	e106      	b.n	8005e68 <ReceiveData_PC+0x468>
		  }else if(buff[i] == '4'){
 8005c5a:	68bb      	ldr	r3, [r7, #8]
 8005c5c:	687a      	ldr	r2, [r7, #4]
 8005c5e:	4413      	add	r3, r2
 8005c60:	781b      	ldrb	r3, [r3, #0]
 8005c62:	2b34      	cmp	r3, #52	; 0x34
 8005c64:	d12a      	bne.n	8005cbc <ReceiveData_PC+0x2bc>
			  strcpy(Direction,"move");
 8005c66:	4b0d      	ldr	r3, [pc, #52]	; (8005c9c <ReceiveData_PC+0x29c>)
 8005c68:	4a0d      	ldr	r2, [pc, #52]	; (8005ca0 <ReceiveData_PC+0x2a0>)
 8005c6a:	6810      	ldr	r0, [r2, #0]
 8005c6c:	6018      	str	r0, [r3, #0]
 8005c6e:	7912      	ldrb	r2, [r2, #4]
 8005c70:	711a      	strb	r2, [r3, #4]
			  frontback = true;
 8005c72:	4b0e      	ldr	r3, [pc, #56]	; (8005cac <ReceiveData_PC+0x2ac>)
 8005c74:	2201      	movs	r2, #1
 8005c76:	701a      	strb	r2, [r3, #0]
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 1);
 8005c78:	2201      	movs	r2, #1
 8005c7a:	2180      	movs	r1, #128	; 0x80
 8005c7c:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005c80:	f002 fe74 	bl	800896c <HAL_GPIO_WritePin>
			  distx = 2;
 8005c84:	4b07      	ldr	r3, [pc, #28]	; (8005ca4 <ReceiveData_PC+0x2a4>)
 8005c86:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005c8a:	601a      	str	r2, [r3, #0]
			  disty = -1;
 8005c8c:	4b06      	ldr	r3, [pc, #24]	; (8005ca8 <ReceiveData_PC+0x2a8>)
 8005c8e:	4a0a      	ldr	r2, [pc, #40]	; (8005cb8 <ReceiveData_PC+0x2b8>)
 8005c90:	601a      	str	r2, [r3, #0]
 8005c92:	e0e9      	b.n	8005e68 <ReceiveData_PC+0x468>
 8005c94:	2000ad64 	.word	0x2000ad64
 8005c98:	20003126 	.word	0x20003126
 8005c9c:	20007a18 	.word	0x20007a18
 8005ca0:	080161f0 	.word	0x080161f0
 8005ca4:	20000004 	.word	0x20000004
 8005ca8:	20000008 	.word	0x20000008
 8005cac:	2000acc0 	.word	0x2000acc0
 8005cb0:	ba83126f 	.word	0xba83126f
 8005cb4:	3a83126f 	.word	0x3a83126f
 8005cb8:	bf800000 	.word	0xbf800000
		  }else if(buff[i] == '5'){
 8005cbc:	68bb      	ldr	r3, [r7, #8]
 8005cbe:	687a      	ldr	r2, [r7, #4]
 8005cc0:	4413      	add	r3, r2
 8005cc2:	781b      	ldrb	r3, [r3, #0]
 8005cc4:	2b35      	cmp	r3, #53	; 0x35
 8005cc6:	d117      	bne.n	8005cf8 <ReceiveData_PC+0x2f8>
			  strcpy(Direction,"move");
 8005cc8:	4b70      	ldr	r3, [pc, #448]	; (8005e8c <ReceiveData_PC+0x48c>)
 8005cca:	4a71      	ldr	r2, [pc, #452]	; (8005e90 <ReceiveData_PC+0x490>)
 8005ccc:	6810      	ldr	r0, [r2, #0]
 8005cce:	6018      	str	r0, [r3, #0]
 8005cd0:	7912      	ldrb	r2, [r2, #4]
 8005cd2:	711a      	strb	r2, [r3, #4]
			  frontback = true;
 8005cd4:	4b6f      	ldr	r3, [pc, #444]	; (8005e94 <ReceiveData_PC+0x494>)
 8005cd6:	2201      	movs	r2, #1
 8005cd8:	701a      	strb	r2, [r3, #0]
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 1);
 8005cda:	2201      	movs	r2, #1
 8005cdc:	2180      	movs	r1, #128	; 0x80
 8005cde:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005ce2:	f002 fe43 	bl	800896c <HAL_GPIO_WritePin>
			  distx = 2;
 8005ce6:	4b6c      	ldr	r3, [pc, #432]	; (8005e98 <ReceiveData_PC+0x498>)
 8005ce8:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 8005cec:	601a      	str	r2, [r3, #0]
			  disty = 0;
 8005cee:	4b6b      	ldr	r3, [pc, #428]	; (8005e9c <ReceiveData_PC+0x49c>)
 8005cf0:	f04f 0200 	mov.w	r2, #0
 8005cf4:	601a      	str	r2, [r3, #0]
 8005cf6:	e0b7      	b.n	8005e68 <ReceiveData_PC+0x468>
		  }else if(buff[i] == '6'){
 8005cf8:	68bb      	ldr	r3, [r7, #8]
 8005cfa:	687a      	ldr	r2, [r7, #4]
 8005cfc:	4413      	add	r3, r2
 8005cfe:	781b      	ldrb	r3, [r3, #0]
 8005d00:	2b36      	cmp	r3, #54	; 0x36
 8005d02:	d116      	bne.n	8005d32 <ReceiveData_PC+0x332>
			  strcpy(Direction,"move");
 8005d04:	4b61      	ldr	r3, [pc, #388]	; (8005e8c <ReceiveData_PC+0x48c>)
 8005d06:	4a62      	ldr	r2, [pc, #392]	; (8005e90 <ReceiveData_PC+0x490>)
 8005d08:	6810      	ldr	r0, [r2, #0]
 8005d0a:	6018      	str	r0, [r3, #0]
 8005d0c:	7912      	ldrb	r2, [r2, #4]
 8005d0e:	711a      	strb	r2, [r3, #4]
			  frontback = true;
 8005d10:	4b60      	ldr	r3, [pc, #384]	; (8005e94 <ReceiveData_PC+0x494>)
 8005d12:	2201      	movs	r2, #1
 8005d14:	701a      	strb	r2, [r3, #0]
			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 1);
 8005d16:	2201      	movs	r2, #1
 8005d18:	2180      	movs	r1, #128	; 0x80
 8005d1a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8005d1e:	f002 fe25 	bl	800896c <HAL_GPIO_WritePin>
			  distx = 13;
 8005d22:	4b5d      	ldr	r3, [pc, #372]	; (8005e98 <ReceiveData_PC+0x498>)
 8005d24:	4a5e      	ldr	r2, [pc, #376]	; (8005ea0 <ReceiveData_PC+0x4a0>)
 8005d26:	601a      	str	r2, [r3, #0]
			  disty = 0;
 8005d28:	4b5c      	ldr	r3, [pc, #368]	; (8005e9c <ReceiveData_PC+0x49c>)
 8005d2a:	f04f 0200 	mov.w	r2, #0
 8005d2e:	601a      	str	r2, [r3, #0]
 8005d30:	e09a      	b.n	8005e68 <ReceiveData_PC+0x468>
		  }else if(buff[i] == 'o'){
 8005d32:	68bb      	ldr	r3, [r7, #8]
 8005d34:	687a      	ldr	r2, [r7, #4]
 8005d36:	4413      	add	r3, r2
 8005d38:	781b      	ldrb	r3, [r3, #0]
 8005d3a:	2b6f      	cmp	r3, #111	; 0x6f
 8005d3c:	d119      	bne.n	8005d72 <ReceiveData_PC+0x372>
			  offset = false;
 8005d3e:	4b59      	ldr	r3, [pc, #356]	; (8005ea4 <ReceiveData_PC+0x4a4>)
 8005d40:	2200      	movs	r2, #0
 8005d42:	701a      	strb	r2, [r3, #0]
			  if(buff[i+1] == 'o'){
 8005d44:	68bb      	ldr	r3, [r7, #8]
 8005d46:	3301      	adds	r3, #1
 8005d48:	687a      	ldr	r2, [r7, #4]
 8005d4a:	4413      	add	r3, r2
 8005d4c:	781b      	ldrb	r3, [r3, #0]
 8005d4e:	2b6f      	cmp	r3, #111	; 0x6f
 8005d50:	d104      	bne.n	8005d5c <ReceiveData_PC+0x35c>
				  angle_accumulated = 0;
 8005d52:	4b55      	ldr	r3, [pc, #340]	; (8005ea8 <ReceiveData_PC+0x4a8>)
 8005d54:	f04f 0200 	mov.w	r2, #0
 8005d58:	601a      	str	r2, [r3, #0]
 8005d5a:	e085      	b.n	8005e68 <ReceiveData_PC+0x468>
			  }else if(buff[i+1] == 'p'){
 8005d5c:	68bb      	ldr	r3, [r7, #8]
 8005d5e:	3301      	adds	r3, #1
 8005d60:	687a      	ldr	r2, [r7, #4]
 8005d62:	4413      	add	r3, r2
 8005d64:	781b      	ldrb	r3, [r3, #0]
 8005d66:	2b70      	cmp	r3, #112	; 0x70
 8005d68:	d17e      	bne.n	8005e68 <ReceiveData_PC+0x468>
				  angle_accumulated = -180;
 8005d6a:	4b4f      	ldr	r3, [pc, #316]	; (8005ea8 <ReceiveData_PC+0x4a8>)
 8005d6c:	4a4f      	ldr	r2, [pc, #316]	; (8005eac <ReceiveData_PC+0x4ac>)
 8005d6e:	601a      	str	r2, [r3, #0]
 8005d70:	e07a      	b.n	8005e68 <ReceiveData_PC+0x468>
			  }
		  }else if(buff[i] == 'u'){
 8005d72:	68bb      	ldr	r3, [r7, #8]
 8005d74:	687a      	ldr	r2, [r7, #4]
 8005d76:	4413      	add	r3, r2
 8005d78:	781b      	ldrb	r3, [r3, #0]
 8005d7a:	2b75      	cmp	r3, #117	; 0x75
 8005d7c:	d11c      	bne.n	8005db8 <ReceiveData_PC+0x3b8>
			  HAL_UART_Transmit(&huart2,(uint8_t*)"\r", strlen("\r"),1000);
 8005d7e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005d82:	2201      	movs	r2, #1
 8005d84:	494a      	ldr	r1, [pc, #296]	; (8005eb0 <ReceiveData_PC+0x4b0>)
 8005d86:	484b      	ldr	r0, [pc, #300]	; (8005eb4 <ReceiveData_PC+0x4b4>)
 8005d88:	f005 ff40 	bl	800bc0c <HAL_UART_Transmit>
			  //osDelay(1);
			  HAL_UART_Transmit(&huart2,(uint8_t*)"\r", strlen("\r"),1000);
 8005d8c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005d90:	2201      	movs	r2, #1
 8005d92:	4947      	ldr	r1, [pc, #284]	; (8005eb0 <ReceiveData_PC+0x4b0>)
 8005d94:	4847      	ldr	r0, [pc, #284]	; (8005eb4 <ReceiveData_PC+0x4b4>)
 8005d96:	f005 ff39 	bl	800bc0c <HAL_UART_Transmit>
			  if(buff[i+1] == 'r'){
 8005d9a:	68bb      	ldr	r3, [r7, #8]
 8005d9c:	3301      	adds	r3, #1
 8005d9e:	687a      	ldr	r2, [r7, #4]
 8005da0:	4413      	add	r3, r2
 8005da2:	781b      	ldrb	r3, [r3, #0]
 8005da4:	2b72      	cmp	r3, #114	; 0x72
 8005da6:	d15f      	bne.n	8005e68 <ReceiveData_PC+0x468>
				  HAL_UART_Transmit(&huart2,(uint8_t*)"aurs 10 20\r", strlen("aurs 10 20\r"),1000);
 8005da8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005dac:	220b      	movs	r2, #11
 8005dae:	4942      	ldr	r1, [pc, #264]	; (8005eb8 <ReceiveData_PC+0x4b8>)
 8005db0:	4840      	ldr	r0, [pc, #256]	; (8005eb4 <ReceiveData_PC+0x4b4>)
 8005db2:	f005 ff2b 	bl	800bc0c <HAL_UART_Transmit>
 8005db6:	e057      	b.n	8005e68 <ReceiveData_PC+0x468>
			  }
		  }else if(buff[i] == 'q'){
 8005db8:	68bb      	ldr	r3, [r7, #8]
 8005dba:	687a      	ldr	r2, [r7, #4]
 8005dbc:	4413      	add	r3, r2
 8005dbe:	781b      	ldrb	r3, [r3, #0]
 8005dc0:	2b71      	cmp	r3, #113	; 0x71
 8005dc2:	d10d      	bne.n	8005de0 <ReceiveData_PC+0x3e0>
			  tempheading = heading;
 8005dc4:	4b3d      	ldr	r3, [pc, #244]	; (8005ebc <ReceiveData_PC+0x4bc>)
 8005dc6:	781b      	ldrb	r3, [r3, #0]
 8005dc8:	73fb      	strb	r3, [r7, #15]
			  Aheadingchange = false;
 8005dca:	2300      	movs	r3, #0
 8005dcc:	73bb      	strb	r3, [r7, #14]
			  Dheadingchange = false;
 8005dce:	2300      	movs	r3, #0
 8005dd0:	737b      	strb	r3, [r7, #13]
			  strcpy(Direction,"quit");
 8005dd2:	4b2e      	ldr	r3, [pc, #184]	; (8005e8c <ReceiveData_PC+0x48c>)
 8005dd4:	4a3a      	ldr	r2, [pc, #232]	; (8005ec0 <ReceiveData_PC+0x4c0>)
 8005dd6:	6810      	ldr	r0, [r2, #0]
 8005dd8:	6018      	str	r0, [r3, #0]
 8005dda:	7912      	ldrb	r2, [r2, #4]
 8005ddc:	711a      	strb	r2, [r3, #4]
 8005dde:	e043      	b.n	8005e68 <ReceiveData_PC+0x468>
		  }else if(buff[i] == 'c'){
 8005de0:	68bb      	ldr	r3, [r7, #8]
 8005de2:	687a      	ldr	r2, [r7, #4]
 8005de4:	4413      	add	r3, r2
 8005de6:	781b      	ldrb	r3, [r3, #0]
 8005de8:	2b63      	cmp	r3, #99	; 0x63
 8005dea:	d134      	bne.n	8005e56 <ReceiveData_PC+0x456>
			  if(buff[i+1] == 'v'){
 8005dec:	68bb      	ldr	r3, [r7, #8]
 8005dee:	3301      	adds	r3, #1
 8005df0:	687a      	ldr	r2, [r7, #4]
 8005df2:	4413      	add	r3, r2
 8005df4:	781b      	ldrb	r3, [r3, #0]
 8005df6:	2b76      	cmp	r3, #118	; 0x76
 8005df8:	d107      	bne.n	8005e0a <ReceiveData_PC+0x40a>
				  SUW = true;
 8005dfa:	4b32      	ldr	r3, [pc, #200]	; (8005ec4 <ReceiveData_PC+0x4c4>)
 8005dfc:	2201      	movs	r2, #1
 8005dfe:	701a      	strb	r2, [r3, #0]
				  tempsaveUWB = saveUWB;
 8005e00:	4b31      	ldr	r3, [pc, #196]	; (8005ec8 <ReceiveData_PC+0x4c8>)
 8005e02:	881a      	ldrh	r2, [r3, #0]
 8005e04:	4b31      	ldr	r3, [pc, #196]	; (8005ecc <ReceiveData_PC+0x4cc>)
 8005e06:	801a      	strh	r2, [r3, #0]
 8005e08:	e02e      	b.n	8005e68 <ReceiveData_PC+0x468>
			  }else if(buff[i+1] == 'b'){
 8005e0a:	68bb      	ldr	r3, [r7, #8]
 8005e0c:	3301      	adds	r3, #1
 8005e0e:	687a      	ldr	r2, [r7, #4]
 8005e10:	4413      	add	r3, r2
 8005e12:	781b      	ldrb	r3, [r3, #0]
 8005e14:	2b62      	cmp	r3, #98	; 0x62
 8005e16:	d107      	bne.n	8005e28 <ReceiveData_PC+0x428>
				  SIMU = true;
 8005e18:	4b2d      	ldr	r3, [pc, #180]	; (8005ed0 <ReceiveData_PC+0x4d0>)
 8005e1a:	2201      	movs	r2, #1
 8005e1c:	701a      	strb	r2, [r3, #0]
				  tempsaveIMU = saveIMU;
 8005e1e:	4b2d      	ldr	r3, [pc, #180]	; (8005ed4 <ReceiveData_PC+0x4d4>)
 8005e20:	881a      	ldrh	r2, [r3, #0]
 8005e22:	4b2d      	ldr	r3, [pc, #180]	; (8005ed8 <ReceiveData_PC+0x4d8>)
 8005e24:	801a      	strh	r2, [r3, #0]
 8005e26:	e01f      	b.n	8005e68 <ReceiveData_PC+0x468>
			  }else if(buff[i+1] == 'n'){
 8005e28:	68bb      	ldr	r3, [r7, #8]
 8005e2a:	3301      	adds	r3, #1
 8005e2c:	687a      	ldr	r2, [r7, #4]
 8005e2e:	4413      	add	r3, r2
 8005e30:	781b      	ldrb	r3, [r3, #0]
 8005e32:	2b6e      	cmp	r3, #110	; 0x6e
 8005e34:	d107      	bne.n	8005e46 <ReceiveData_PC+0x446>
				  SRadar = true;
 8005e36:	4b29      	ldr	r3, [pc, #164]	; (8005edc <ReceiveData_PC+0x4dc>)
 8005e38:	2201      	movs	r2, #1
 8005e3a:	701a      	strb	r2, [r3, #0]
				  tempsaveRadar = saveRadar;
 8005e3c:	4b28      	ldr	r3, [pc, #160]	; (8005ee0 <ReceiveData_PC+0x4e0>)
 8005e3e:	881a      	ldrh	r2, [r3, #0]
 8005e40:	4b28      	ldr	r3, [pc, #160]	; (8005ee4 <ReceiveData_PC+0x4e4>)
 8005e42:	801a      	strh	r2, [r3, #0]
 8005e44:	e010      	b.n	8005e68 <ReceiveData_PC+0x468>
			  }else{
				  SEKF = true;
 8005e46:	4b28      	ldr	r3, [pc, #160]	; (8005ee8 <ReceiveData_PC+0x4e8>)
 8005e48:	2201      	movs	r2, #1
 8005e4a:	701a      	strb	r2, [r3, #0]
				  tempsaveEKF = saveEKF;
 8005e4c:	4b27      	ldr	r3, [pc, #156]	; (8005eec <ReceiveData_PC+0x4ec>)
 8005e4e:	881a      	ldrh	r2, [r3, #0]
 8005e50:	4b27      	ldr	r3, [pc, #156]	; (8005ef0 <ReceiveData_PC+0x4f0>)
 8005e52:	801a      	strh	r2, [r3, #0]
 8005e54:	e008      	b.n	8005e68 <ReceiveData_PC+0x468>
			  }
		  }else if(buff[i] == 'f'){
 8005e56:	68bb      	ldr	r3, [r7, #8]
 8005e58:	687a      	ldr	r2, [r7, #4]
 8005e5a:	4413      	add	r3, r2
 8005e5c:	781b      	ldrb	r3, [r3, #0]
 8005e5e:	2b66      	cmp	r3, #102	; 0x66
 8005e60:	d102      	bne.n	8005e68 <ReceiveData_PC+0x468>
			  Initial_pos = false;
 8005e62:	4b24      	ldr	r3, [pc, #144]	; (8005ef4 <ReceiveData_PC+0x4f4>)
 8005e64:	2200      	movs	r2, #0
 8005e66:	701a      	strb	r2, [r3, #0]
	for (int i = 0; i < index_buffer; i++){
 8005e68:	68bb      	ldr	r3, [r7, #8]
 8005e6a:	3301      	adds	r3, #1
 8005e6c:	60bb      	str	r3, [r7, #8]
 8005e6e:	4b22      	ldr	r3, [pc, #136]	; (8005ef8 <ReceiveData_PC+0x4f8>)
 8005e70:	881b      	ldrh	r3, [r3, #0]
 8005e72:	461a      	mov	r2, r3
 8005e74:	68bb      	ldr	r3, [r7, #8]
 8005e76:	4293      	cmp	r3, r2
 8005e78:	f6ff add0 	blt.w	8005a1c <ReceiveData_PC+0x1c>
			  HAL_UART_Transmit(&huart2,(uint8_t*)"\r", strlen("\r"),1000);
			  HAL_UART_Transmit(&huart2,(uint8_t*)"\r", strlen("\r"),1000);*/

		  }
	  }
	heading = tempheading;
 8005e7c:	4a0f      	ldr	r2, [pc, #60]	; (8005ebc <ReceiveData_PC+0x4bc>)
 8005e7e:	7bfb      	ldrb	r3, [r7, #15]
 8005e80:	7013      	strb	r3, [r2, #0]
}
 8005e82:	bf00      	nop
 8005e84:	3710      	adds	r7, #16
 8005e86:	46bd      	mov	sp, r7
 8005e88:	bd80      	pop	{r7, pc}
 8005e8a:	bf00      	nop
 8005e8c:	20007a18 	.word	0x20007a18
 8005e90:	080161f0 	.word	0x080161f0
 8005e94:	2000acc0 	.word	0x2000acc0
 8005e98:	20000004 	.word	0x20000004
 8005e9c:	20000008 	.word	0x20000008
 8005ea0:	41500000 	.word	0x41500000
 8005ea4:	2000acc3 	.word	0x2000acc3
 8005ea8:	2000ad6c 	.word	0x2000ad6c
 8005eac:	c3340000 	.word	0xc3340000
 8005eb0:	080161e0 	.word	0x080161e0
 8005eb4:	2000b48c 	.word	0x2000b48c
 8005eb8:	080161f8 	.word	0x080161f8
 8005ebc:	2000ad64 	.word	0x2000ad64
 8005ec0:	08016204 	.word	0x08016204
 8005ec4:	20000212 	.word	0x20000212
 8005ec8:	2000020e 	.word	0x2000020e
 8005ecc:	20000210 	.word	0x20000210
 8005ed0:	20000218 	.word	0x20000218
 8005ed4:	20000214 	.word	0x20000214
 8005ed8:	20000216 	.word	0x20000216
 8005edc:	2000021e 	.word	0x2000021e
 8005ee0:	2000021a 	.word	0x2000021a
 8005ee4:	2000021c 	.word	0x2000021c
 8005ee8:	20000224 	.word	0x20000224
 8005eec:	20000220 	.word	0x20000220
 8005ef0:	20000222 	.word	0x20000222
 8005ef4:	2000020c 	.word	0x2000020c
 8005ef8:	2000311e 	.word	0x2000311e
 8005efc:	00000000 	.word	0x00000000

08005f00 <StartFusion>:
  * @param  argument: Not used 
  * @retval None
  */
/* USER CODE END Header_StartFusion */
void StartFusion(void *argument)
{
 8005f00:	b590      	push	{r4, r7, lr}
 8005f02:	b085      	sub	sp, #20
 8005f04:	af00      	add	r7, sp, #0
 8005f06:	6078      	str	r0, [r7, #4]
  /* Infinite loop */
  for(;;)
  {

	  //distance_US = HCSR4_Meas(distance_US, received);
	  if(!Initial_pos){
 8005f08:	4b1a      	ldr	r3, [pc, #104]	; (8005f74 <StartFusion+0x74>)
 8005f0a:	781b      	ldrb	r3, [r3, #0]
 8005f0c:	f083 0301 	eor.w	r3, r3, #1
 8005f10:	b2db      	uxtb	r3, r3
 8005f12:	2b00      	cmp	r3, #0
 8005f14:	d044      	beq.n	8005fa0 <StartFusion+0xa0>
			Init_localization(7,2.5,0,0);
 8005f16:	eddf 1a18 	vldr	s3, [pc, #96]	; 8005f78 <StartFusion+0x78>
 8005f1a:	ed9f 1a17 	vldr	s2, [pc, #92]	; 8005f78 <StartFusion+0x78>
 8005f1e:	eef0 0a04 	vmov.f32	s1, #4	; 0x40200000  2.5
 8005f22:	eeb1 0a0c 	vmov.f32	s0, #28	; 0x40e00000  7.0
 8005f26:	f7fb ff6b 	bl	8001e00 <Init_localization>
			Initial_pos = true;
 8005f2a:	4b12      	ldr	r3, [pc, #72]	; (8005f74 <StartFusion+0x74>)
 8005f2c:	2201      	movs	r2, #1
 8005f2e:	701a      	strb	r2, [r3, #0]
			measurementes_Z[0] = Radarx;
 8005f30:	4b12      	ldr	r3, [pc, #72]	; (8005f7c <StartFusion+0x7c>)
 8005f32:	681b      	ldr	r3, [r3, #0]
 8005f34:	4a12      	ldr	r2, [pc, #72]	; (8005f80 <StartFusion+0x80>)
 8005f36:	6013      	str	r3, [r2, #0]
			measurementes_Z[1] = Radary;
 8005f38:	4b12      	ldr	r3, [pc, #72]	; (8005f84 <StartFusion+0x84>)
 8005f3a:	681b      	ldr	r3, [r3, #0]
 8005f3c:	4a10      	ldr	r2, [pc, #64]	; (8005f80 <StartFusion+0x80>)
 8005f3e:	6053      	str	r3, [r2, #4]
			measurementes_Z[2] = speedradarx;
 8005f40:	4b11      	ldr	r3, [pc, #68]	; (8005f88 <StartFusion+0x88>)
 8005f42:	681b      	ldr	r3, [r3, #0]
 8005f44:	4a0e      	ldr	r2, [pc, #56]	; (8005f80 <StartFusion+0x80>)
 8005f46:	6093      	str	r3, [r2, #8]
			measurementes_Z[3] = speedradary;
 8005f48:	4b10      	ldr	r3, [pc, #64]	; (8005f8c <StartFusion+0x8c>)
 8005f4a:	681b      	ldr	r3, [r3, #0]
 8005f4c:	4a0c      	ldr	r2, [pc, #48]	; (8005f80 <StartFusion+0x80>)
 8005f4e:	60d3      	str	r3, [r2, #12]
			actual_freq = 1;
 8005f50:	4b0f      	ldr	r3, [pc, #60]	; (8005f90 <StartFusion+0x90>)
 8005f52:	2201      	movs	r2, #1
 8005f54:	801a      	strh	r2, [r3, #0]
			prev_freq = 1;
 8005f56:	4b0f      	ldr	r3, [pc, #60]	; (8005f94 <StartFusion+0x94>)
 8005f58:	2201      	movs	r2, #1
 8005f5a:	801a      	strh	r2, [r3, #0]
			actual_freq_radar = 1;
 8005f5c:	4b0e      	ldr	r3, [pc, #56]	; (8005f98 <StartFusion+0x98>)
 8005f5e:	2201      	movs	r2, #1
 8005f60:	801a      	strh	r2, [r3, #0]
			actual_freq_radar2 = 1;
 8005f62:	4b0e      	ldr	r3, [pc, #56]	; (8005f9c <StartFusion+0x9c>)
 8005f64:	2201      	movs	r2, #1
 8005f66:	801a      	strh	r2, [r3, #0]
			Initial_pos = true;
 8005f68:	4b02      	ldr	r3, [pc, #8]	; (8005f74 <StartFusion+0x74>)
 8005f6a:	2201      	movs	r2, #1
 8005f6c:	701a      	strb	r2, [r3, #0]
 8005f6e:	f000 bd93 	b.w	8006a98 <StartFusion+0xb98>
 8005f72:	bf00      	nop
 8005f74:	2000020c 	.word	0x2000020c
 8005f78:	00000000 	.word	0x00000000
 8005f7c:	20007a94 	.word	0x20007a94
 8005f80:	2000ac60 	.word	0x2000ac60
 8005f84:	20009c24 	.word	0x20009c24
 8005f88:	20009a08 	.word	0x20009a08
 8005f8c:	20009a1c 	.word	0x20009a1c
 8005f90:	2000abe8 	.word	0x2000abe8
 8005f94:	20009a0c 	.word	0x20009a0c
 8005f98:	2000ad50 	.word	0x2000ad50
 8005f9c:	2000ad16 	.word	0x2000ad16

	  }else if(Initial_pos){
 8005fa0:	4bc9      	ldr	r3, [pc, #804]	; (80062c8 <StartFusion+0x3c8>)
 8005fa2:	781b      	ldrb	r3, [r3, #0]
 8005fa4:	2b00      	cmp	r3, #0
 8005fa6:	f000 8577 	beq.w	8006a98 <StartFusion+0xb98>

		  if(received > 0){
			  if(SEKF && moving){
 8005faa:	4bc8      	ldr	r3, [pc, #800]	; (80062cc <StartFusion+0x3cc>)
 8005fac:	781b      	ldrb	r3, [r3, #0]
 8005fae:	2b00      	cmp	r3, #0
 8005fb0:	f000 8092 	beq.w	80060d8 <StartFusion+0x1d8>
 8005fb4:	4bc6      	ldr	r3, [pc, #792]	; (80062d0 <StartFusion+0x3d0>)
 8005fb6:	781b      	ldrb	r3, [r3, #0]
 8005fb8:	2b00      	cmp	r3, #0
 8005fba:	f000 808d 	beq.w	80060d8 <StartFusion+0x1d8>
					SEKF = (saveEKF >= tempsaveEKF + 9000) ? false : true;
 8005fbe:	4bc5      	ldr	r3, [pc, #788]	; (80062d4 <StartFusion+0x3d4>)
 8005fc0:	881b      	ldrh	r3, [r3, #0]
 8005fc2:	461a      	mov	r2, r3
 8005fc4:	4bc4      	ldr	r3, [pc, #784]	; (80062d8 <StartFusion+0x3d8>)
 8005fc6:	881b      	ldrh	r3, [r3, #0]
 8005fc8:	f503 530c 	add.w	r3, r3, #8960	; 0x2300
 8005fcc:	3328      	adds	r3, #40	; 0x28
 8005fce:	429a      	cmp	r2, r3
 8005fd0:	bfb4      	ite	lt
 8005fd2:	2301      	movlt	r3, #1
 8005fd4:	2300      	movge	r3, #0
 8005fd6:	b2da      	uxtb	r2, r3
 8005fd8:	4bbc      	ldr	r3, [pc, #752]	; (80062cc <StartFusion+0x3cc>)
 8005fda:	701a      	strb	r2, [r3, #0]
					saveEKF++;
 8005fdc:	4bbd      	ldr	r3, [pc, #756]	; (80062d4 <StartFusion+0x3d4>)
 8005fde:	881b      	ldrh	r3, [r3, #0]
 8005fe0:	3301      	adds	r3, #1
 8005fe2:	b29a      	uxth	r2, r3
 8005fe4:	4bbb      	ldr	r3, [pc, #748]	; (80062d4 <StartFusion+0x3d4>)
 8005fe6:	801a      	strh	r2, [r3, #0]

					intToStr(actual_freq, data, 0, 1);
 8005fe8:	4bbc      	ldr	r3, [pc, #752]	; (80062dc <StartFusion+0x3dc>)
 8005fea:	881b      	ldrh	r3, [r3, #0]
 8005fec:	4618      	mov	r0, r3
 8005fee:	2301      	movs	r3, #1
 8005ff0:	2200      	movs	r2, #0
 8005ff2:	49bb      	ldr	r1, [pc, #748]	; (80062e0 <StartFusion+0x3e0>)
 8005ff4:	f7ff fb3e 	bl	8005674 <intToStr>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"f   ", strlen("f   "), 1000);
 8005ff8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8005ffc:	2204      	movs	r2, #4
 8005ffe:	49b9      	ldr	r1, [pc, #740]	; (80062e4 <StartFusion+0x3e4>)
 8006000:	48b9      	ldr	r0, [pc, #740]	; (80062e8 <StartFusion+0x3e8>)
 8006002:	f005 fe03 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8006006:	48b6      	ldr	r0, [pc, #728]	; (80062e0 <StartFusion+0x3e0>)
 8006008:	f7fa f904 	bl	8000214 <strlen>
 800600c:	4603      	mov	r3, r0
 800600e:	b29a      	uxth	r2, r3
 8006010:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006014:	49b2      	ldr	r1, [pc, #712]	; (80062e0 <StartFusion+0x3e0>)
 8006016:	48b4      	ldr	r0, [pc, #720]	; (80062e8 <StartFusion+0x3e8>)
 8006018:	f005 fdf8 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 800601c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006020:	2203      	movs	r2, #3
 8006022:	49b2      	ldr	r1, [pc, #712]	; (80062ec <StartFusion+0x3ec>)
 8006024:	48b0      	ldr	r0, [pc, #704]	; (80062e8 <StartFusion+0x3e8>)
 8006026:	f005 fdf1 	bl	800bc0c <HAL_UART_Transmit>

					intToStr(actual_freq_radar, data, 0, 1);
 800602a:	4bb1      	ldr	r3, [pc, #708]	; (80062f0 <StartFusion+0x3f0>)
 800602c:	881b      	ldrh	r3, [r3, #0]
 800602e:	4618      	mov	r0, r3
 8006030:	2301      	movs	r3, #1
 8006032:	2200      	movs	r2, #0
 8006034:	49aa      	ldr	r1, [pc, #680]	; (80062e0 <StartFusion+0x3e0>)
 8006036:	f7ff fb1d 	bl	8005674 <intToStr>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"fr   ", strlen("fr   "), 1000);
 800603a:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800603e:	2205      	movs	r2, #5
 8006040:	49ac      	ldr	r1, [pc, #688]	; (80062f4 <StartFusion+0x3f4>)
 8006042:	48a9      	ldr	r0, [pc, #676]	; (80062e8 <StartFusion+0x3e8>)
 8006044:	f005 fde2 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8006048:	48a5      	ldr	r0, [pc, #660]	; (80062e0 <StartFusion+0x3e0>)
 800604a:	f7fa f8e3 	bl	8000214 <strlen>
 800604e:	4603      	mov	r3, r0
 8006050:	b29a      	uxth	r2, r3
 8006052:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006056:	49a2      	ldr	r1, [pc, #648]	; (80062e0 <StartFusion+0x3e0>)
 8006058:	48a3      	ldr	r0, [pc, #652]	; (80062e8 <StartFusion+0x3e8>)
 800605a:	f005 fdd7 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 800605e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006062:	2203      	movs	r2, #3
 8006064:	49a1      	ldr	r1, [pc, #644]	; (80062ec <StartFusion+0x3ec>)
 8006066:	48a0      	ldr	r0, [pc, #640]	; (80062e8 <StartFusion+0x3e8>)
 8006068:	f005 fdd0 	bl	800bc0c <HAL_UART_Transmit>

					ftoa(states_X[0], data, 4);
 800606c:	4ba2      	ldr	r3, [pc, #648]	; (80062f8 <StartFusion+0x3f8>)
 800606e:	edd3 7a00 	vldr	s15, [r3]
 8006072:	2104      	movs	r1, #4
 8006074:	489a      	ldr	r0, [pc, #616]	; (80062e0 <StartFusion+0x3e0>)
 8006076:	eeb0 0a67 	vmov.f32	s0, s15
 800607a:	f7ff fb51 	bl	8005720 <ftoa>
			//		HAL_UART_Transmit(&hlpuart1, (uint8_t *)"EKF X:", strlen("EKF X:"	), 1000); //m
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 800607e:	4898      	ldr	r0, [pc, #608]	; (80062e0 <StartFusion+0x3e0>)
 8006080:	f7fa f8c8 	bl	8000214 <strlen>
 8006084:	4603      	mov	r3, r0
 8006086:	b29a      	uxth	r2, r3
 8006088:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800608c:	4994      	ldr	r1, [pc, #592]	; (80062e0 <StartFusion+0x3e0>)
 800608e:	4896      	ldr	r0, [pc, #600]	; (80062e8 <StartFusion+0x3e8>)
 8006090:	f005 fdbc 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 8006094:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006098:	2203      	movs	r2, #3
 800609a:	4994      	ldr	r1, [pc, #592]	; (80062ec <StartFusion+0x3ec>)
 800609c:	4892      	ldr	r0, [pc, #584]	; (80062e8 <StartFusion+0x3e8>)
 800609e:	f005 fdb5 	bl	800bc0c <HAL_UART_Transmit>

					ftoa(states_X[1], data, 4);
 80060a2:	4b95      	ldr	r3, [pc, #596]	; (80062f8 <StartFusion+0x3f8>)
 80060a4:	edd3 7a01 	vldr	s15, [r3, #4]
 80060a8:	2104      	movs	r1, #4
 80060aa:	488d      	ldr	r0, [pc, #564]	; (80062e0 <StartFusion+0x3e0>)
 80060ac:	eeb0 0a67 	vmov.f32	s0, s15
 80060b0:	f7ff fb36 	bl	8005720 <ftoa>
			//		HAL_UART_Transmit(&hlpuart1, (uint8_t *)"EKF Y:", strlen("EKF Y:"	), 1000);  //m
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 80060b4:	488a      	ldr	r0, [pc, #552]	; (80062e0 <StartFusion+0x3e0>)
 80060b6:	f7fa f8ad 	bl	8000214 <strlen>
 80060ba:	4603      	mov	r3, r0
 80060bc:	b29a      	uxth	r2, r3
 80060be:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80060c2:	4987      	ldr	r1, [pc, #540]	; (80062e0 <StartFusion+0x3e0>)
 80060c4:	4888      	ldr	r0, [pc, #544]	; (80062e8 <StartFusion+0x3e8>)
 80060c6:	f005 fda1 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 80060ca:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80060ce:	2203      	movs	r2, #3
 80060d0:	4986      	ldr	r1, [pc, #536]	; (80062ec <StartFusion+0x3ec>)
 80060d2:	4885      	ldr	r0, [pc, #532]	; (80062e8 <StartFusion+0x3e8>)
 80060d4:	f005 fd9a 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"\r\n", strlen("\r\n"), 1000);*/

			  }

			  if (turning){
 80060d8:	4b88      	ldr	r3, [pc, #544]	; (80062fc <StartFusion+0x3fc>)
 80060da:	781b      	ldrb	r3, [r3, #0]
 80060dc:	2b00      	cmp	r3, #0
 80060de:	f000 8293 	beq.w	8006608 <StartFusion+0x708>
						memcpy(states_X_previous,states_X,sizeof(states_X));
 80060e2:	4a87      	ldr	r2, [pc, #540]	; (8006300 <StartFusion+0x400>)
 80060e4:	4b84      	ldr	r3, [pc, #528]	; (80062f8 <StartFusion+0x3f8>)
 80060e6:	4614      	mov	r4, r2
 80060e8:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80060ea:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
						memcpy(measurementes_Z_previous,measurementes_Z,sizeof(measurementes_Z));
 80060ee:	4a85      	ldr	r2, [pc, #532]	; (8006304 <StartFusion+0x404>)
 80060f0:	4b85      	ldr	r3, [pc, #532]	; (8006308 <StartFusion+0x408>)
 80060f2:	4614      	mov	r4, r2
 80060f4:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 80060f6:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
						/* Random gaussian noise measurements*/
						int dummyv = TIM7 -> CNT;
 80060fa:	4b84      	ldr	r3, [pc, #528]	; (800630c <StartFusion+0x40c>)
 80060fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 80060fe:	60bb      	str	r3, [r7, #8]
						v1  = dummyv % 1692;
 8006100:	68bb      	ldr	r3, [r7, #8]
 8006102:	4a83      	ldr	r2, [pc, #524]	; (8006310 <StartFusion+0x410>)
 8006104:	fb82 1203 	smull	r1, r2, r2, r3
 8006108:	1251      	asrs	r1, r2, #9
 800610a:	17da      	asrs	r2, r3, #31
 800610c:	1a8a      	subs	r2, r1, r2
 800610e:	f240 619c 	movw	r1, #1692	; 0x69c
 8006112:	fb01 f202 	mul.w	r2, r1, r2
 8006116:	1a9a      	subs	r2, r3, r2
 8006118:	ee07 2a90 	vmov	s15, r2
 800611c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006120:	4b7c      	ldr	r3, [pc, #496]	; (8006314 <StartFusion+0x414>)
 8006122:	edc3 7a00 	vstr	s15, [r3]
						v2  = dummyv % 908;
 8006126:	68bb      	ldr	r3, [r7, #8]
 8006128:	4a7b      	ldr	r2, [pc, #492]	; (8006318 <StartFusion+0x418>)
 800612a:	fb82 1203 	smull	r1, r2, r2, r3
 800612e:	11d1      	asrs	r1, r2, #7
 8006130:	17da      	asrs	r2, r3, #31
 8006132:	1a8a      	subs	r2, r1, r2
 8006134:	f44f 7163 	mov.w	r1, #908	; 0x38c
 8006138:	fb01 f202 	mul.w	r2, r1, r2
 800613c:	1a9a      	subs	r2, r3, r2
 800613e:	ee07 2a90 	vmov	s15, r2
 8006142:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006146:	4b75      	ldr	r3, [pc, #468]	; (800631c <StartFusion+0x41c>)
 8006148:	edc3 7a00 	vstr	s15, [r3]
						v3  = dummyv % 5822;
 800614c:	68bb      	ldr	r3, [r7, #8]
 800614e:	4a74      	ldr	r2, [pc, #464]	; (8006320 <StartFusion+0x420>)
 8006150:	fb82 1203 	smull	r1, r2, r2, r3
 8006154:	1291      	asrs	r1, r2, #10
 8006156:	17da      	asrs	r2, r3, #31
 8006158:	1a8a      	subs	r2, r1, r2
 800615a:	f241 61be 	movw	r1, #5822	; 0x16be
 800615e:	fb01 f202 	mul.w	r2, r1, r2
 8006162:	1a9a      	subs	r2, r3, r2
 8006164:	ee07 2a90 	vmov	s15, r2
 8006168:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800616c:	4b6d      	ldr	r3, [pc, #436]	; (8006324 <StartFusion+0x424>)
 800616e:	edc3 7a00 	vstr	s15, [r3]
						v4  = dummyv % 4650;
 8006172:	68bb      	ldr	r3, [r7, #8]
 8006174:	4a6c      	ldr	r2, [pc, #432]	; (8006328 <StartFusion+0x428>)
 8006176:	fb82 1203 	smull	r1, r2, r2, r3
 800617a:	441a      	add	r2, r3
 800617c:	1311      	asrs	r1, r2, #12
 800617e:	17da      	asrs	r2, r3, #31
 8006180:	1a8a      	subs	r2, r1, r2
 8006182:	f241 212a 	movw	r1, #4650	; 0x122a
 8006186:	fb01 f202 	mul.w	r2, r1, r2
 800618a:	1a9a      	subs	r2, r3, r2
 800618c:	ee07 2a90 	vmov	s15, r2
 8006190:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006194:	4b65      	ldr	r3, [pc, #404]	; (800632c <StartFusion+0x42c>)
 8006196:	edc3 7a00 	vstr	s15, [r3]
						v5  = dummyv % 5376;
 800619a:	68bb      	ldr	r3, [r7, #8]
 800619c:	4a64      	ldr	r2, [pc, #400]	; (8006330 <StartFusion+0x430>)
 800619e:	fb82 1203 	smull	r1, r2, r2, r3
 80061a2:	1291      	asrs	r1, r2, #10
 80061a4:	17da      	asrs	r2, r3, #31
 80061a6:	1a8a      	subs	r2, r1, r2
 80061a8:	f44f 51a8 	mov.w	r1, #5376	; 0x1500
 80061ac:	fb01 f202 	mul.w	r2, r1, r2
 80061b0:	1a9a      	subs	r2, r3, r2
 80061b2:	ee07 2a90 	vmov	s15, r2
 80061b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80061ba:	4b5e      	ldr	r3, [pc, #376]	; (8006334 <StartFusion+0x434>)
 80061bc:	edc3 7a00 	vstr	s15, [r3]
						v6  = dummyv % 2330;
 80061c0:	68bb      	ldr	r3, [r7, #8]
 80061c2:	4a5d      	ldr	r2, [pc, #372]	; (8006338 <StartFusion+0x438>)
 80061c4:	fb82 1203 	smull	r1, r2, r2, r3
 80061c8:	1251      	asrs	r1, r2, #9
 80061ca:	17da      	asrs	r2, r3, #31
 80061cc:	1a8a      	subs	r2, r1, r2
 80061ce:	f640 111a 	movw	r1, #2330	; 0x91a
 80061d2:	fb01 f202 	mul.w	r2, r1, r2
 80061d6:	1a9a      	subs	r2, r3, r2
 80061d8:	ee07 2a90 	vmov	s15, r2
 80061dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80061e0:	4b56      	ldr	r3, [pc, #344]	; (800633c <StartFusion+0x43c>)
 80061e2:	edc3 7a00 	vstr	s15, [r3]
						v7  = dummyv % 583;
 80061e6:	68bb      	ldr	r3, [r7, #8]
 80061e8:	4a55      	ldr	r2, [pc, #340]	; (8006340 <StartFusion+0x440>)
 80061ea:	fb82 1203 	smull	r1, r2, r2, r3
 80061ee:	1211      	asrs	r1, r2, #8
 80061f0:	17da      	asrs	r2, r3, #31
 80061f2:	1a8a      	subs	r2, r1, r2
 80061f4:	f240 2147 	movw	r1, #583	; 0x247
 80061f8:	fb01 f202 	mul.w	r2, r1, r2
 80061fc:	1a9a      	subs	r2, r3, r2
 80061fe:	ee07 2a90 	vmov	s15, r2
 8006202:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006206:	4b4f      	ldr	r3, [pc, #316]	; (8006344 <StartFusion+0x444>)
 8006208:	edc3 7a00 	vstr	s15, [r3]
						v8  = dummyv % 527;
 800620c:	68ba      	ldr	r2, [r7, #8]
 800620e:	4b4e      	ldr	r3, [pc, #312]	; (8006348 <StartFusion+0x448>)
 8006210:	fb83 1302 	smull	r1, r3, r3, r2
 8006214:	4413      	add	r3, r2
 8006216:	1259      	asrs	r1, r3, #9
 8006218:	17d3      	asrs	r3, r2, #31
 800621a:	1ac9      	subs	r1, r1, r3
 800621c:	460b      	mov	r3, r1
 800621e:	011b      	lsls	r3, r3, #4
 8006220:	440b      	add	r3, r1
 8006222:	0159      	lsls	r1, r3, #5
 8006224:	1ac9      	subs	r1, r1, r3
 8006226:	1a51      	subs	r1, r2, r1
 8006228:	ee07 1a90 	vmov	s15, r1
 800622c:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006230:	4b46      	ldr	r3, [pc, #280]	; (800634c <StartFusion+0x44c>)
 8006232:	edc3 7a00 	vstr	s15, [r3]

						v1 = v1/10000 - 0.0846;
 8006236:	4b37      	ldr	r3, [pc, #220]	; (8006314 <StartFusion+0x414>)
 8006238:	edd3 7a00 	vldr	s15, [r3]
 800623c:	ed9f 7a44 	vldr	s14, [pc, #272]	; 8006350 <StartFusion+0x450>
 8006240:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8006244:	ee16 0a90 	vmov	r0, s13
 8006248:	f7fa f950 	bl	80004ec <__aeabi_f2d>
 800624c:	a31a      	add	r3, pc, #104	; (adr r3, 80062b8 <StartFusion+0x3b8>)
 800624e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006252:	f7f9 ffeb 	bl	800022c <__aeabi_dsub>
 8006256:	4603      	mov	r3, r0
 8006258:	460c      	mov	r4, r1
 800625a:	4618      	mov	r0, r3
 800625c:	4621      	mov	r1, r4
 800625e:	f7fa fc95 	bl	8000b8c <__aeabi_d2f>
 8006262:	4602      	mov	r2, r0
 8006264:	4b2b      	ldr	r3, [pc, #172]	; (8006314 <StartFusion+0x414>)
 8006266:	601a      	str	r2, [r3, #0]
						v2 = v2/10000 - 0.0454;
 8006268:	4b2c      	ldr	r3, [pc, #176]	; (800631c <StartFusion+0x41c>)
 800626a:	edd3 7a00 	vldr	s15, [r3]
 800626e:	ed9f 7a38 	vldr	s14, [pc, #224]	; 8006350 <StartFusion+0x450>
 8006272:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8006276:	ee16 0a90 	vmov	r0, s13
 800627a:	f7fa f937 	bl	80004ec <__aeabi_f2d>
 800627e:	a310      	add	r3, pc, #64	; (adr r3, 80062c0 <StartFusion+0x3c0>)
 8006280:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006284:	f7f9 ffd2 	bl	800022c <__aeabi_dsub>
 8006288:	4603      	mov	r3, r0
 800628a:	460c      	mov	r4, r1
 800628c:	4618      	mov	r0, r3
 800628e:	4621      	mov	r1, r4
 8006290:	f7fa fc7c 	bl	8000b8c <__aeabi_d2f>
 8006294:	4602      	mov	r2, r0
 8006296:	4b21      	ldr	r3, [pc, #132]	; (800631c <StartFusion+0x41c>)
 8006298:	601a      	str	r2, [r3, #0]
						v3 = v3/10000 - 0.2911;
 800629a:	4b22      	ldr	r3, [pc, #136]	; (8006324 <StartFusion+0x424>)
 800629c:	edd3 7a00 	vldr	s15, [r3]
 80062a0:	ed9f 7a2b 	vldr	s14, [pc, #172]	; 8006350 <StartFusion+0x450>
 80062a4:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80062a8:	ee16 0a90 	vmov	r0, s13
 80062ac:	f7fa f91e 	bl	80004ec <__aeabi_f2d>
 80062b0:	e050      	b.n	8006354 <StartFusion+0x454>
 80062b2:	bf00      	nop
 80062b4:	f3af 8000 	nop.w
 80062b8:	793dd97f 	.word	0x793dd97f
 80062bc:	3fb5a858 	.word	0x3fb5a858
 80062c0:	367a0f91 	.word	0x367a0f91
 80062c4:	3fa73eab 	.word	0x3fa73eab
 80062c8:	2000020c 	.word	0x2000020c
 80062cc:	20000224 	.word	0x20000224
 80062d0:	20009a8c 	.word	0x20009a8c
 80062d4:	20000220 	.word	0x20000220
 80062d8:	20000222 	.word	0x20000222
 80062dc:	2000abe8 	.word	0x2000abe8
 80062e0:	2000b3ac 	.word	0x2000b3ac
 80062e4:	0801620c 	.word	0x0801620c
 80062e8:	2000b290 	.word	0x2000b290
 80062ec:	08016214 	.word	0x08016214
 80062f0:	2000ad50 	.word	0x2000ad50
 80062f4:	08016218 	.word	0x08016218
 80062f8:	2000ad38 	.word	0x2000ad38
 80062fc:	20007a28 	.word	0x20007a28
 8006300:	20009c14 	.word	0x20009c14
 8006304:	2000ad1c 	.word	0x2000ad1c
 8006308:	2000ac60 	.word	0x2000ac60
 800630c:	40001400 	.word	0x40001400
 8006310:	4d77397f 	.word	0x4d77397f
 8006314:	20003134 	.word	0x20003134
 8006318:	24168e19 	.word	0x24168e19
 800631c:	20003138 	.word	0x20003138
 8006320:	2d06c585 	.word	0x2d06c585
 8006324:	2000313c 	.word	0x2000313c
 8006328:	e1800e19 	.word	0xe1800e19
 800632c:	20003140 	.word	0x20003140
 8006330:	30c30c31 	.word	0x30c30c31
 8006334:	20003144 	.word	0x20003144
 8006338:	38410b35 	.word	0x38410b35
 800633c:	20003148 	.word	0x20003148
 8006340:	706962cd 	.word	0x706962cd
 8006344:	2000314c 	.word	0x2000314c
 8006348:	f8b6a623 	.word	0xf8b6a623
 800634c:	20003150 	.word	0x20003150
 8006350:	461c4000 	.word	0x461c4000
 8006354:	a3aa      	add	r3, pc, #680	; (adr r3, 8006600 <StartFusion+0x700>)
 8006356:	e9d3 2300 	ldrd	r2, r3, [r3]
 800635a:	f7f9 ff67 	bl	800022c <__aeabi_dsub>
 800635e:	4603      	mov	r3, r0
 8006360:	460c      	mov	r4, r1
 8006362:	4618      	mov	r0, r3
 8006364:	4621      	mov	r1, r4
 8006366:	f7fa fc11 	bl	8000b8c <__aeabi_d2f>
 800636a:	4602      	mov	r2, r0
 800636c:	4b8a      	ldr	r3, [pc, #552]	; (8006598 <StartFusion+0x698>)
 800636e:	601a      	str	r2, [r3, #0]
						v4 = v4/10000 - 0.2325;
 8006370:	4b8a      	ldr	r3, [pc, #552]	; (800659c <StartFusion+0x69c>)
 8006372:	edd3 7a00 	vldr	s15, [r3]
 8006376:	ed9f 7a8a 	vldr	s14, [pc, #552]	; 80065a0 <StartFusion+0x6a0>
 800637a:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800637e:	ee16 0a90 	vmov	r0, s13
 8006382:	f7fa f8b3 	bl	80004ec <__aeabi_f2d>
 8006386:	a37a      	add	r3, pc, #488	; (adr r3, 8006570 <StartFusion+0x670>)
 8006388:	e9d3 2300 	ldrd	r2, r3, [r3]
 800638c:	f7f9 ff4e 	bl	800022c <__aeabi_dsub>
 8006390:	4603      	mov	r3, r0
 8006392:	460c      	mov	r4, r1
 8006394:	4618      	mov	r0, r3
 8006396:	4621      	mov	r1, r4
 8006398:	f7fa fbf8 	bl	8000b8c <__aeabi_d2f>
 800639c:	4602      	mov	r2, r0
 800639e:	4b7f      	ldr	r3, [pc, #508]	; (800659c <StartFusion+0x69c>)
 80063a0:	601a      	str	r2, [r3, #0]
						v5 = v5/10000 - 0.2670;//0.2688;
 80063a2:	4b80      	ldr	r3, [pc, #512]	; (80065a4 <StartFusion+0x6a4>)
 80063a4:	edd3 7a00 	vldr	s15, [r3]
 80063a8:	ed9f 7a7d 	vldr	s14, [pc, #500]	; 80065a0 <StartFusion+0x6a0>
 80063ac:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80063b0:	ee16 0a90 	vmov	r0, s13
 80063b4:	f7fa f89a 	bl	80004ec <__aeabi_f2d>
 80063b8:	a36f      	add	r3, pc, #444	; (adr r3, 8006578 <StartFusion+0x678>)
 80063ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063be:	f7f9 ff35 	bl	800022c <__aeabi_dsub>
 80063c2:	4603      	mov	r3, r0
 80063c4:	460c      	mov	r4, r1
 80063c6:	4618      	mov	r0, r3
 80063c8:	4621      	mov	r1, r4
 80063ca:	f7fa fbdf 	bl	8000b8c <__aeabi_d2f>
 80063ce:	4602      	mov	r2, r0
 80063d0:	4b74      	ldr	r3, [pc, #464]	; (80065a4 <StartFusion+0x6a4>)
 80063d2:	601a      	str	r2, [r3, #0]
						v6 = v6/10000 - 0.1165;
 80063d4:	4b74      	ldr	r3, [pc, #464]	; (80065a8 <StartFusion+0x6a8>)
 80063d6:	edd3 7a00 	vldr	s15, [r3]
 80063da:	ed9f 7a71 	vldr	s14, [pc, #452]	; 80065a0 <StartFusion+0x6a0>
 80063de:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80063e2:	ee16 0a90 	vmov	r0, s13
 80063e6:	f7fa f881 	bl	80004ec <__aeabi_f2d>
 80063ea:	a365      	add	r3, pc, #404	; (adr r3, 8006580 <StartFusion+0x680>)
 80063ec:	e9d3 2300 	ldrd	r2, r3, [r3]
 80063f0:	f7f9 ff1c 	bl	800022c <__aeabi_dsub>
 80063f4:	4603      	mov	r3, r0
 80063f6:	460c      	mov	r4, r1
 80063f8:	4618      	mov	r0, r3
 80063fa:	4621      	mov	r1, r4
 80063fc:	f7fa fbc6 	bl	8000b8c <__aeabi_d2f>
 8006400:	4602      	mov	r2, r0
 8006402:	4b69      	ldr	r3, [pc, #420]	; (80065a8 <StartFusion+0x6a8>)
 8006404:	601a      	str	r2, [r3, #0]
						v7 = v7/10000 - 0.0291;
 8006406:	4b69      	ldr	r3, [pc, #420]	; (80065ac <StartFusion+0x6ac>)
 8006408:	edd3 7a00 	vldr	s15, [r3]
 800640c:	ed9f 7a64 	vldr	s14, [pc, #400]	; 80065a0 <StartFusion+0x6a0>
 8006410:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8006414:	ee16 0a90 	vmov	r0, s13
 8006418:	f7fa f868 	bl	80004ec <__aeabi_f2d>
 800641c:	a35a      	add	r3, pc, #360	; (adr r3, 8006588 <StartFusion+0x688>)
 800641e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006422:	f7f9 ff03 	bl	800022c <__aeabi_dsub>
 8006426:	4603      	mov	r3, r0
 8006428:	460c      	mov	r4, r1
 800642a:	4618      	mov	r0, r3
 800642c:	4621      	mov	r1, r4
 800642e:	f7fa fbad 	bl	8000b8c <__aeabi_d2f>
 8006432:	4602      	mov	r2, r0
 8006434:	4b5d      	ldr	r3, [pc, #372]	; (80065ac <StartFusion+0x6ac>)
 8006436:	601a      	str	r2, [r3, #0]
						v8 = v8/10000 - 0.0263;
 8006438:	4b5d      	ldr	r3, [pc, #372]	; (80065b0 <StartFusion+0x6b0>)
 800643a:	edd3 7a00 	vldr	s15, [r3]
 800643e:	ed9f 7a58 	vldr	s14, [pc, #352]	; 80065a0 <StartFusion+0x6a0>
 8006442:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8006446:	ee16 0a90 	vmov	r0, s13
 800644a:	f7fa f84f 	bl	80004ec <__aeabi_f2d>
 800644e:	a350      	add	r3, pc, #320	; (adr r3, 8006590 <StartFusion+0x690>)
 8006450:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006454:	f7f9 feea 	bl	800022c <__aeabi_dsub>
 8006458:	4603      	mov	r3, r0
 800645a:	460c      	mov	r4, r1
 800645c:	4618      	mov	r0, r3
 800645e:	4621      	mov	r1, r4
 8006460:	f7fa fb94 	bl	8000b8c <__aeabi_d2f>
 8006464:	4602      	mov	r2, r0
 8006466:	4b52      	ldr	r3, [pc, #328]	; (80065b0 <StartFusion+0x6b0>)
 8006468:	601a      	str	r2, [r3, #0]


						measurementes_Z[0] = (UWBx + v1) * weight_UWBx + (Radarx + v5) * weight_radarx;
 800646a:	4b52      	ldr	r3, [pc, #328]	; (80065b4 <StartFusion+0x6b4>)
 800646c:	ed93 7a00 	vldr	s14, [r3]
 8006470:	4b51      	ldr	r3, [pc, #324]	; (80065b8 <StartFusion+0x6b8>)
 8006472:	edd3 7a00 	vldr	s15, [r3]
 8006476:	ee37 7a27 	vadd.f32	s14, s14, s15
 800647a:	4b50      	ldr	r3, [pc, #320]	; (80065bc <StartFusion+0x6bc>)
 800647c:	edd3 7a00 	vldr	s15, [r3]
 8006480:	ee27 7a27 	vmul.f32	s14, s14, s15
 8006484:	4b4e      	ldr	r3, [pc, #312]	; (80065c0 <StartFusion+0x6c0>)
 8006486:	edd3 6a00 	vldr	s13, [r3]
 800648a:	4b46      	ldr	r3, [pc, #280]	; (80065a4 <StartFusion+0x6a4>)
 800648c:	edd3 7a00 	vldr	s15, [r3]
 8006490:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8006494:	4b4b      	ldr	r3, [pc, #300]	; (80065c4 <StartFusion+0x6c4>)
 8006496:	edd3 7a00 	vldr	s15, [r3]
 800649a:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800649e:	ee77 7a27 	vadd.f32	s15, s14, s15
 80064a2:	4b49      	ldr	r3, [pc, #292]	; (80065c8 <StartFusion+0x6c8>)
 80064a4:	edc3 7a00 	vstr	s15, [r3]
						measurementes_Z[1] = (UWBy + v2) * weight_UWBy + (Radary + v6) * weight_radary;
 80064a8:	4b48      	ldr	r3, [pc, #288]	; (80065cc <StartFusion+0x6cc>)
 80064aa:	ed93 7a00 	vldr	s14, [r3]
 80064ae:	4b48      	ldr	r3, [pc, #288]	; (80065d0 <StartFusion+0x6d0>)
 80064b0:	edd3 7a00 	vldr	s15, [r3]
 80064b4:	ee37 7a27 	vadd.f32	s14, s14, s15
 80064b8:	4b46      	ldr	r3, [pc, #280]	; (80065d4 <StartFusion+0x6d4>)
 80064ba:	edd3 7a00 	vldr	s15, [r3]
 80064be:	ee27 7a27 	vmul.f32	s14, s14, s15
 80064c2:	4b45      	ldr	r3, [pc, #276]	; (80065d8 <StartFusion+0x6d8>)
 80064c4:	edd3 6a00 	vldr	s13, [r3]
 80064c8:	4b37      	ldr	r3, [pc, #220]	; (80065a8 <StartFusion+0x6a8>)
 80064ca:	edd3 7a00 	vldr	s15, [r3]
 80064ce:	ee76 6aa7 	vadd.f32	s13, s13, s15
 80064d2:	4b42      	ldr	r3, [pc, #264]	; (80065dc <StartFusion+0x6dc>)
 80064d4:	edd3 7a00 	vldr	s15, [r3]
 80064d8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80064dc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80064e0:	4b39      	ldr	r3, [pc, #228]	; (80065c8 <StartFusion+0x6c8>)
 80064e2:	edc3 7a01 	vstr	s15, [r3, #4]
						measurementes_Z[2] = (speedUWBx + v3) * weight_speedUWBx + (speedradarx + v7) * weight_speedradarx;
 80064e6:	4b3e      	ldr	r3, [pc, #248]	; (80065e0 <StartFusion+0x6e0>)
 80064e8:	ed93 7a00 	vldr	s14, [r3]
 80064ec:	4b2a      	ldr	r3, [pc, #168]	; (8006598 <StartFusion+0x698>)
 80064ee:	edd3 7a00 	vldr	s15, [r3]
 80064f2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80064f6:	4b3b      	ldr	r3, [pc, #236]	; (80065e4 <StartFusion+0x6e4>)
 80064f8:	edd3 7a00 	vldr	s15, [r3]
 80064fc:	ee27 7a27 	vmul.f32	s14, s14, s15
 8006500:	4b39      	ldr	r3, [pc, #228]	; (80065e8 <StartFusion+0x6e8>)
 8006502:	edd3 6a00 	vldr	s13, [r3]
 8006506:	4b29      	ldr	r3, [pc, #164]	; (80065ac <StartFusion+0x6ac>)
 8006508:	edd3 7a00 	vldr	s15, [r3]
 800650c:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8006510:	4b36      	ldr	r3, [pc, #216]	; (80065ec <StartFusion+0x6ec>)
 8006512:	edd3 7a00 	vldr	s15, [r3]
 8006516:	ee66 7aa7 	vmul.f32	s15, s13, s15
 800651a:	ee77 7a27 	vadd.f32	s15, s14, s15
 800651e:	4b2a      	ldr	r3, [pc, #168]	; (80065c8 <StartFusion+0x6c8>)
 8006520:	edc3 7a02 	vstr	s15, [r3, #8]
						measurementes_Z[3] = (speedUWBy + v4) * weight_speedUWBy + (speedradary + v8) * weight_speedradary;
 8006524:	4b32      	ldr	r3, [pc, #200]	; (80065f0 <StartFusion+0x6f0>)
 8006526:	ed93 7a00 	vldr	s14, [r3]
 800652a:	4b1c      	ldr	r3, [pc, #112]	; (800659c <StartFusion+0x69c>)
 800652c:	edd3 7a00 	vldr	s15, [r3]
 8006530:	ee37 7a27 	vadd.f32	s14, s14, s15
 8006534:	4b2f      	ldr	r3, [pc, #188]	; (80065f4 <StartFusion+0x6f4>)
 8006536:	edd3 7a00 	vldr	s15, [r3]
 800653a:	ee27 7a27 	vmul.f32	s14, s14, s15
 800653e:	4b2e      	ldr	r3, [pc, #184]	; (80065f8 <StartFusion+0x6f8>)
 8006540:	edd3 6a00 	vldr	s13, [r3]
 8006544:	4b1a      	ldr	r3, [pc, #104]	; (80065b0 <StartFusion+0x6b0>)
 8006546:	edd3 7a00 	vldr	s15, [r3]
 800654a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 800654e:	4b2b      	ldr	r3, [pc, #172]	; (80065fc <StartFusion+0x6fc>)
 8006550:	edd3 7a00 	vldr	s15, [r3]
 8006554:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8006558:	ee77 7a27 	vadd.f32	s15, s14, s15
 800655c:	4b1a      	ldr	r3, [pc, #104]	; (80065c8 <StartFusion+0x6c8>)
 800655e:	edc3 7a03 	vstr	s15, [r3, #12]


						EKF_prediction();
 8006562:	f7fb f949 	bl	80017f8 <EKF_prediction>
						EKF_update();
 8006566:	f7fb fb75 	bl	8001c54 <EKF_update>
 800656a:	e295      	b.n	8006a98 <StartFusion+0xb98>
 800656c:	f3af 8000 	nop.w
 8006570:	5c28f5c3 	.word	0x5c28f5c3
 8006574:	3fcdc28f 	.word	0x3fcdc28f
 8006578:	2b020c4a 	.word	0x2b020c4a
 800657c:	3fd11687 	.word	0x3fd11687
 8006580:	a9fbe76d 	.word	0xa9fbe76d
 8006584:	3fbdd2f1 	.word	0x3fbdd2f1
 8006588:	f141205c 	.word	0xf141205c
 800658c:	3f9dcc63 	.word	0x3f9dcc63
 8006590:	1f8a0903 	.word	0x1f8a0903
 8006594:	3f9aee63 	.word	0x3f9aee63
 8006598:	2000313c 	.word	0x2000313c
 800659c:	20003140 	.word	0x20003140
 80065a0:	461c4000 	.word	0x461c4000
 80065a4:	20003144 	.word	0x20003144
 80065a8:	20003148 	.word	0x20003148
 80065ac:	2000314c 	.word	0x2000314c
 80065b0:	20003150 	.word	0x20003150
 80065b4:	2000ac58 	.word	0x2000ac58
 80065b8:	20003134 	.word	0x20003134
 80065bc:	20009a14 	.word	0x20009a14
 80065c0:	20007a94 	.word	0x20007a94
 80065c4:	20009c3c 	.word	0x20009c3c
 80065c8:	2000ac60 	.word	0x2000ac60
 80065cc:	2000acb4 	.word	0x2000acb4
 80065d0:	20003138 	.word	0x20003138
 80065d4:	20007a88 	.word	0x20007a88
 80065d8:	20009c24 	.word	0x20009c24
 80065dc:	2000abec 	.word	0x2000abec
 80065e0:	20009a28 	.word	0x20009a28
 80065e4:	20008a4c 	.word	0x20008a4c
 80065e8:	20009a08 	.word	0x20009a08
 80065ec:	2000abe0 	.word	0x2000abe0
 80065f0:	2000ad08 	.word	0x2000ad08
 80065f4:	2000abf4 	.word	0x2000abf4
 80065f8:	20009a1c 	.word	0x20009a1c
 80065fc:	2000ad34 	.word	0x2000ad34
 8006600:	e4f765fe 	.word	0xe4f765fe
 8006604:	3fd2a161 	.word	0x3fd2a161

			  }else {

						memcpy(states_X_previous,states_X,sizeof(states_X));
 8006608:	4ad5      	ldr	r2, [pc, #852]	; (8006960 <StartFusion+0xa60>)
 800660a:	4bd6      	ldr	r3, [pc, #856]	; (8006964 <StartFusion+0xa64>)
 800660c:	4614      	mov	r4, r2
 800660e:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 8006610:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
						memcpy(measurementes_Z_previous,measurementes_Z,sizeof(measurementes_Z));
 8006614:	4ad4      	ldr	r2, [pc, #848]	; (8006968 <StartFusion+0xa68>)
 8006616:	4bd5      	ldr	r3, [pc, #852]	; (800696c <StartFusion+0xa6c>)
 8006618:	4614      	mov	r4, r2
 800661a:	cb0f      	ldmia	r3, {r0, r1, r2, r3}
 800661c:	e884 000f 	stmia.w	r4, {r0, r1, r2, r3}
						/* Random gaussian noise measurements */
						int dummyv = TIM7 -> CNT;
 8006620:	4bd3      	ldr	r3, [pc, #844]	; (8006970 <StartFusion+0xa70>)
 8006622:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8006624:	60fb      	str	r3, [r7, #12]
						v1  = dummyv % 1692;
 8006626:	68fb      	ldr	r3, [r7, #12]
 8006628:	4ad2      	ldr	r2, [pc, #840]	; (8006974 <StartFusion+0xa74>)
 800662a:	fb82 1203 	smull	r1, r2, r2, r3
 800662e:	1251      	asrs	r1, r2, #9
 8006630:	17da      	asrs	r2, r3, #31
 8006632:	1a8a      	subs	r2, r1, r2
 8006634:	f240 619c 	movw	r1, #1692	; 0x69c
 8006638:	fb01 f202 	mul.w	r2, r1, r2
 800663c:	1a9a      	subs	r2, r3, r2
 800663e:	ee07 2a90 	vmov	s15, r2
 8006642:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006646:	4bcc      	ldr	r3, [pc, #816]	; (8006978 <StartFusion+0xa78>)
 8006648:	edc3 7a00 	vstr	s15, [r3]
						v2  = dummyv % 908;
 800664c:	68fb      	ldr	r3, [r7, #12]
 800664e:	4acb      	ldr	r2, [pc, #812]	; (800697c <StartFusion+0xa7c>)
 8006650:	fb82 1203 	smull	r1, r2, r2, r3
 8006654:	11d1      	asrs	r1, r2, #7
 8006656:	17da      	asrs	r2, r3, #31
 8006658:	1a8a      	subs	r2, r1, r2
 800665a:	f44f 7163 	mov.w	r1, #908	; 0x38c
 800665e:	fb01 f202 	mul.w	r2, r1, r2
 8006662:	1a9a      	subs	r2, r3, r2
 8006664:	ee07 2a90 	vmov	s15, r2
 8006668:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800666c:	4bc4      	ldr	r3, [pc, #784]	; (8006980 <StartFusion+0xa80>)
 800666e:	edc3 7a00 	vstr	s15, [r3]
						v3  = dummyv % 5822;
 8006672:	68fb      	ldr	r3, [r7, #12]
 8006674:	4ac3      	ldr	r2, [pc, #780]	; (8006984 <StartFusion+0xa84>)
 8006676:	fb82 1203 	smull	r1, r2, r2, r3
 800667a:	1291      	asrs	r1, r2, #10
 800667c:	17da      	asrs	r2, r3, #31
 800667e:	1a8a      	subs	r2, r1, r2
 8006680:	f241 61be 	movw	r1, #5822	; 0x16be
 8006684:	fb01 f202 	mul.w	r2, r1, r2
 8006688:	1a9a      	subs	r2, r3, r2
 800668a:	ee07 2a90 	vmov	s15, r2
 800668e:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006692:	4bbd      	ldr	r3, [pc, #756]	; (8006988 <StartFusion+0xa88>)
 8006694:	edc3 7a00 	vstr	s15, [r3]
						v4  = dummyv % 4650;
 8006698:	68fb      	ldr	r3, [r7, #12]
 800669a:	4abc      	ldr	r2, [pc, #752]	; (800698c <StartFusion+0xa8c>)
 800669c:	fb82 1203 	smull	r1, r2, r2, r3
 80066a0:	441a      	add	r2, r3
 80066a2:	1311      	asrs	r1, r2, #12
 80066a4:	17da      	asrs	r2, r3, #31
 80066a6:	1a8a      	subs	r2, r1, r2
 80066a8:	f241 212a 	movw	r1, #4650	; 0x122a
 80066ac:	fb01 f202 	mul.w	r2, r1, r2
 80066b0:	1a9a      	subs	r2, r3, r2
 80066b2:	ee07 2a90 	vmov	s15, r2
 80066b6:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80066ba:	4bb5      	ldr	r3, [pc, #724]	; (8006990 <StartFusion+0xa90>)
 80066bc:	edc3 7a00 	vstr	s15, [r3]
						v5  = dummyv % 5376;
 80066c0:	68fb      	ldr	r3, [r7, #12]
 80066c2:	4ab4      	ldr	r2, [pc, #720]	; (8006994 <StartFusion+0xa94>)
 80066c4:	fb82 1203 	smull	r1, r2, r2, r3
 80066c8:	1291      	asrs	r1, r2, #10
 80066ca:	17da      	asrs	r2, r3, #31
 80066cc:	1a8a      	subs	r2, r1, r2
 80066ce:	f44f 51a8 	mov.w	r1, #5376	; 0x1500
 80066d2:	fb01 f202 	mul.w	r2, r1, r2
 80066d6:	1a9a      	subs	r2, r3, r2
 80066d8:	ee07 2a90 	vmov	s15, r2
 80066dc:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80066e0:	4bad      	ldr	r3, [pc, #692]	; (8006998 <StartFusion+0xa98>)
 80066e2:	edc3 7a00 	vstr	s15, [r3]
						v6  = dummyv % 2330;
 80066e6:	68fb      	ldr	r3, [r7, #12]
 80066e8:	4aac      	ldr	r2, [pc, #688]	; (800699c <StartFusion+0xa9c>)
 80066ea:	fb82 1203 	smull	r1, r2, r2, r3
 80066ee:	1251      	asrs	r1, r2, #9
 80066f0:	17da      	asrs	r2, r3, #31
 80066f2:	1a8a      	subs	r2, r1, r2
 80066f4:	f640 111a 	movw	r1, #2330	; 0x91a
 80066f8:	fb01 f202 	mul.w	r2, r1, r2
 80066fc:	1a9a      	subs	r2, r3, r2
 80066fe:	ee07 2a90 	vmov	s15, r2
 8006702:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006706:	4ba6      	ldr	r3, [pc, #664]	; (80069a0 <StartFusion+0xaa0>)
 8006708:	edc3 7a00 	vstr	s15, [r3]
						v7  = dummyv % 583;
 800670c:	68fb      	ldr	r3, [r7, #12]
 800670e:	4aa5      	ldr	r2, [pc, #660]	; (80069a4 <StartFusion+0xaa4>)
 8006710:	fb82 1203 	smull	r1, r2, r2, r3
 8006714:	1211      	asrs	r1, r2, #8
 8006716:	17da      	asrs	r2, r3, #31
 8006718:	1a8a      	subs	r2, r1, r2
 800671a:	f240 2147 	movw	r1, #583	; 0x247
 800671e:	fb01 f202 	mul.w	r2, r1, r2
 8006722:	1a9a      	subs	r2, r3, r2
 8006724:	ee07 2a90 	vmov	s15, r2
 8006728:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 800672c:	4b9e      	ldr	r3, [pc, #632]	; (80069a8 <StartFusion+0xaa8>)
 800672e:	edc3 7a00 	vstr	s15, [r3]
						v8  = dummyv % 527;
 8006732:	68fa      	ldr	r2, [r7, #12]
 8006734:	4b9d      	ldr	r3, [pc, #628]	; (80069ac <StartFusion+0xaac>)
 8006736:	fb83 1302 	smull	r1, r3, r3, r2
 800673a:	4413      	add	r3, r2
 800673c:	1259      	asrs	r1, r3, #9
 800673e:	17d3      	asrs	r3, r2, #31
 8006740:	1ac9      	subs	r1, r1, r3
 8006742:	460b      	mov	r3, r1
 8006744:	011b      	lsls	r3, r3, #4
 8006746:	440b      	add	r3, r1
 8006748:	0159      	lsls	r1, r3, #5
 800674a:	1ac9      	subs	r1, r1, r3
 800674c:	1a51      	subs	r1, r2, r1
 800674e:	ee07 1a90 	vmov	s15, r1
 8006752:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8006756:	4b96      	ldr	r3, [pc, #600]	; (80069b0 <StartFusion+0xab0>)
 8006758:	edc3 7a00 	vstr	s15, [r3]

						v1 = v1/10000 - 0.0846;
 800675c:	4b86      	ldr	r3, [pc, #536]	; (8006978 <StartFusion+0xa78>)
 800675e:	edd3 7a00 	vldr	s15, [r3]
 8006762:	ed9f 7a94 	vldr	s14, [pc, #592]	; 80069b4 <StartFusion+0xab4>
 8006766:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800676a:	ee16 0a90 	vmov	r0, s13
 800676e:	f7f9 febd 	bl	80004ec <__aeabi_f2d>
 8006772:	a36b      	add	r3, pc, #428	; (adr r3, 8006920 <StartFusion+0xa20>)
 8006774:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006778:	f7f9 fd58 	bl	800022c <__aeabi_dsub>
 800677c:	4603      	mov	r3, r0
 800677e:	460c      	mov	r4, r1
 8006780:	4618      	mov	r0, r3
 8006782:	4621      	mov	r1, r4
 8006784:	f7fa fa02 	bl	8000b8c <__aeabi_d2f>
 8006788:	4602      	mov	r2, r0
 800678a:	4b7b      	ldr	r3, [pc, #492]	; (8006978 <StartFusion+0xa78>)
 800678c:	601a      	str	r2, [r3, #0]
						v2 = v2/10000 - 0.0454;
 800678e:	4b7c      	ldr	r3, [pc, #496]	; (8006980 <StartFusion+0xa80>)
 8006790:	edd3 7a00 	vldr	s15, [r3]
 8006794:	ed9f 7a87 	vldr	s14, [pc, #540]	; 80069b4 <StartFusion+0xab4>
 8006798:	eec7 6a87 	vdiv.f32	s13, s15, s14
 800679c:	ee16 0a90 	vmov	r0, s13
 80067a0:	f7f9 fea4 	bl	80004ec <__aeabi_f2d>
 80067a4:	a360      	add	r3, pc, #384	; (adr r3, 8006928 <StartFusion+0xa28>)
 80067a6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067aa:	f7f9 fd3f 	bl	800022c <__aeabi_dsub>
 80067ae:	4603      	mov	r3, r0
 80067b0:	460c      	mov	r4, r1
 80067b2:	4618      	mov	r0, r3
 80067b4:	4621      	mov	r1, r4
 80067b6:	f7fa f9e9 	bl	8000b8c <__aeabi_d2f>
 80067ba:	4602      	mov	r2, r0
 80067bc:	4b70      	ldr	r3, [pc, #448]	; (8006980 <StartFusion+0xa80>)
 80067be:	601a      	str	r2, [r3, #0]
						v3 = v3/10000 - 0.2911;
 80067c0:	4b71      	ldr	r3, [pc, #452]	; (8006988 <StartFusion+0xa88>)
 80067c2:	edd3 7a00 	vldr	s15, [r3]
 80067c6:	ed9f 7a7b 	vldr	s14, [pc, #492]	; 80069b4 <StartFusion+0xab4>
 80067ca:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80067ce:	ee16 0a90 	vmov	r0, s13
 80067d2:	f7f9 fe8b 	bl	80004ec <__aeabi_f2d>
 80067d6:	a356      	add	r3, pc, #344	; (adr r3, 8006930 <StartFusion+0xa30>)
 80067d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80067dc:	f7f9 fd26 	bl	800022c <__aeabi_dsub>
 80067e0:	4603      	mov	r3, r0
 80067e2:	460c      	mov	r4, r1
 80067e4:	4618      	mov	r0, r3
 80067e6:	4621      	mov	r1, r4
 80067e8:	f7fa f9d0 	bl	8000b8c <__aeabi_d2f>
 80067ec:	4602      	mov	r2, r0
 80067ee:	4b66      	ldr	r3, [pc, #408]	; (8006988 <StartFusion+0xa88>)
 80067f0:	601a      	str	r2, [r3, #0]
						v4 = v4/10000 - 0.2325;
 80067f2:	4b67      	ldr	r3, [pc, #412]	; (8006990 <StartFusion+0xa90>)
 80067f4:	edd3 7a00 	vldr	s15, [r3]
 80067f8:	ed9f 7a6e 	vldr	s14, [pc, #440]	; 80069b4 <StartFusion+0xab4>
 80067fc:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8006800:	ee16 0a90 	vmov	r0, s13
 8006804:	f7f9 fe72 	bl	80004ec <__aeabi_f2d>
 8006808:	a34b      	add	r3, pc, #300	; (adr r3, 8006938 <StartFusion+0xa38>)
 800680a:	e9d3 2300 	ldrd	r2, r3, [r3]
 800680e:	f7f9 fd0d 	bl	800022c <__aeabi_dsub>
 8006812:	4603      	mov	r3, r0
 8006814:	460c      	mov	r4, r1
 8006816:	4618      	mov	r0, r3
 8006818:	4621      	mov	r1, r4
 800681a:	f7fa f9b7 	bl	8000b8c <__aeabi_d2f>
 800681e:	4602      	mov	r2, r0
 8006820:	4b5b      	ldr	r3, [pc, #364]	; (8006990 <StartFusion+0xa90>)
 8006822:	601a      	str	r2, [r3, #0]
						v5 = v5/10000 - 0.2670;//0.2688;
 8006824:	4b5c      	ldr	r3, [pc, #368]	; (8006998 <StartFusion+0xa98>)
 8006826:	edd3 7a00 	vldr	s15, [r3]
 800682a:	ed9f 7a62 	vldr	s14, [pc, #392]	; 80069b4 <StartFusion+0xab4>
 800682e:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8006832:	ee16 0a90 	vmov	r0, s13
 8006836:	f7f9 fe59 	bl	80004ec <__aeabi_f2d>
 800683a:	a341      	add	r3, pc, #260	; (adr r3, 8006940 <StartFusion+0xa40>)
 800683c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006840:	f7f9 fcf4 	bl	800022c <__aeabi_dsub>
 8006844:	4603      	mov	r3, r0
 8006846:	460c      	mov	r4, r1
 8006848:	4618      	mov	r0, r3
 800684a:	4621      	mov	r1, r4
 800684c:	f7fa f99e 	bl	8000b8c <__aeabi_d2f>
 8006850:	4602      	mov	r2, r0
 8006852:	4b51      	ldr	r3, [pc, #324]	; (8006998 <StartFusion+0xa98>)
 8006854:	601a      	str	r2, [r3, #0]
						v6 = v6/10000 - 0.1165;
 8006856:	4b52      	ldr	r3, [pc, #328]	; (80069a0 <StartFusion+0xaa0>)
 8006858:	edd3 7a00 	vldr	s15, [r3]
 800685c:	ed9f 7a55 	vldr	s14, [pc, #340]	; 80069b4 <StartFusion+0xab4>
 8006860:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8006864:	ee16 0a90 	vmov	r0, s13
 8006868:	f7f9 fe40 	bl	80004ec <__aeabi_f2d>
 800686c:	a336      	add	r3, pc, #216	; (adr r3, 8006948 <StartFusion+0xa48>)
 800686e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8006872:	f7f9 fcdb 	bl	800022c <__aeabi_dsub>
 8006876:	4603      	mov	r3, r0
 8006878:	460c      	mov	r4, r1
 800687a:	4618      	mov	r0, r3
 800687c:	4621      	mov	r1, r4
 800687e:	f7fa f985 	bl	8000b8c <__aeabi_d2f>
 8006882:	4602      	mov	r2, r0
 8006884:	4b46      	ldr	r3, [pc, #280]	; (80069a0 <StartFusion+0xaa0>)
 8006886:	601a      	str	r2, [r3, #0]
						v7 = v7/10000 - 0.0291;
 8006888:	4b47      	ldr	r3, [pc, #284]	; (80069a8 <StartFusion+0xaa8>)
 800688a:	edd3 7a00 	vldr	s15, [r3]
 800688e:	ed9f 7a49 	vldr	s14, [pc, #292]	; 80069b4 <StartFusion+0xab4>
 8006892:	eec7 6a87 	vdiv.f32	s13, s15, s14
 8006896:	ee16 0a90 	vmov	r0, s13
 800689a:	f7f9 fe27 	bl	80004ec <__aeabi_f2d>
 800689e:	a32c      	add	r3, pc, #176	; (adr r3, 8006950 <StartFusion+0xa50>)
 80068a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068a4:	f7f9 fcc2 	bl	800022c <__aeabi_dsub>
 80068a8:	4603      	mov	r3, r0
 80068aa:	460c      	mov	r4, r1
 80068ac:	4618      	mov	r0, r3
 80068ae:	4621      	mov	r1, r4
 80068b0:	f7fa f96c 	bl	8000b8c <__aeabi_d2f>
 80068b4:	4602      	mov	r2, r0
 80068b6:	4b3c      	ldr	r3, [pc, #240]	; (80069a8 <StartFusion+0xaa8>)
 80068b8:	601a      	str	r2, [r3, #0]
						v8 = v8/10000 - 0.0263;
 80068ba:	4b3d      	ldr	r3, [pc, #244]	; (80069b0 <StartFusion+0xab0>)
 80068bc:	edd3 7a00 	vldr	s15, [r3]
 80068c0:	ed9f 7a3c 	vldr	s14, [pc, #240]	; 80069b4 <StartFusion+0xab4>
 80068c4:	eec7 6a87 	vdiv.f32	s13, s15, s14
 80068c8:	ee16 0a90 	vmov	r0, s13
 80068cc:	f7f9 fe0e 	bl	80004ec <__aeabi_f2d>
 80068d0:	a321      	add	r3, pc, #132	; (adr r3, 8006958 <StartFusion+0xa58>)
 80068d2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80068d6:	f7f9 fca9 	bl	800022c <__aeabi_dsub>
 80068da:	4603      	mov	r3, r0
 80068dc:	460c      	mov	r4, r1
 80068de:	4618      	mov	r0, r3
 80068e0:	4621      	mov	r1, r4
 80068e2:	f7fa f953 	bl	8000b8c <__aeabi_d2f>
 80068e6:	4602      	mov	r2, r0
 80068e8:	4b31      	ldr	r3, [pc, #196]	; (80069b0 <StartFusion+0xab0>)
 80068ea:	601a      	str	r2, [r3, #0]


						measurementes_Z[0] = (UWBx + v1) * weight_UWBx + (Radarx + v5) * weight_radarx;
 80068ec:	4b32      	ldr	r3, [pc, #200]	; (80069b8 <StartFusion+0xab8>)
 80068ee:	ed93 7a00 	vldr	s14, [r3]
 80068f2:	4b21      	ldr	r3, [pc, #132]	; (8006978 <StartFusion+0xa78>)
 80068f4:	edd3 7a00 	vldr	s15, [r3]
 80068f8:	ee37 7a27 	vadd.f32	s14, s14, s15
 80068fc:	4b2f      	ldr	r3, [pc, #188]	; (80069bc <StartFusion+0xabc>)
 80068fe:	edd3 7a00 	vldr	s15, [r3]
 8006902:	ee27 7a27 	vmul.f32	s14, s14, s15
 8006906:	4b2e      	ldr	r3, [pc, #184]	; (80069c0 <StartFusion+0xac0>)
 8006908:	edd3 6a00 	vldr	s13, [r3]
 800690c:	4b22      	ldr	r3, [pc, #136]	; (8006998 <StartFusion+0xa98>)
 800690e:	edd3 7a00 	vldr	s15, [r3]
 8006912:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8006916:	4b2b      	ldr	r3, [pc, #172]	; (80069c4 <StartFusion+0xac4>)
 8006918:	edd3 7a00 	vldr	s15, [r3]
 800691c:	e054      	b.n	80069c8 <StartFusion+0xac8>
 800691e:	bf00      	nop
 8006920:	793dd97f 	.word	0x793dd97f
 8006924:	3fb5a858 	.word	0x3fb5a858
 8006928:	367a0f91 	.word	0x367a0f91
 800692c:	3fa73eab 	.word	0x3fa73eab
 8006930:	e4f765fe 	.word	0xe4f765fe
 8006934:	3fd2a161 	.word	0x3fd2a161
 8006938:	5c28f5c3 	.word	0x5c28f5c3
 800693c:	3fcdc28f 	.word	0x3fcdc28f
 8006940:	2b020c4a 	.word	0x2b020c4a
 8006944:	3fd11687 	.word	0x3fd11687
 8006948:	a9fbe76d 	.word	0xa9fbe76d
 800694c:	3fbdd2f1 	.word	0x3fbdd2f1
 8006950:	f141205c 	.word	0xf141205c
 8006954:	3f9dcc63 	.word	0x3f9dcc63
 8006958:	1f8a0903 	.word	0x1f8a0903
 800695c:	3f9aee63 	.word	0x3f9aee63
 8006960:	20009c14 	.word	0x20009c14
 8006964:	2000ad38 	.word	0x2000ad38
 8006968:	2000ad1c 	.word	0x2000ad1c
 800696c:	2000ac60 	.word	0x2000ac60
 8006970:	40001400 	.word	0x40001400
 8006974:	4d77397f 	.word	0x4d77397f
 8006978:	20003134 	.word	0x20003134
 800697c:	24168e19 	.word	0x24168e19
 8006980:	20003138 	.word	0x20003138
 8006984:	2d06c585 	.word	0x2d06c585
 8006988:	2000313c 	.word	0x2000313c
 800698c:	e1800e19 	.word	0xe1800e19
 8006990:	20003140 	.word	0x20003140
 8006994:	30c30c31 	.word	0x30c30c31
 8006998:	20003144 	.word	0x20003144
 800699c:	38410b35 	.word	0x38410b35
 80069a0:	20003148 	.word	0x20003148
 80069a4:	706962cd 	.word	0x706962cd
 80069a8:	2000314c 	.word	0x2000314c
 80069ac:	f8b6a623 	.word	0xf8b6a623
 80069b0:	20003150 	.word	0x20003150
 80069b4:	461c4000 	.word	0x461c4000
 80069b8:	2000ac58 	.word	0x2000ac58
 80069bc:	20009a14 	.word	0x20009a14
 80069c0:	20007a94 	.word	0x20007a94
 80069c4:	20009c3c 	.word	0x20009c3c
 80069c8:	ee66 7aa7 	vmul.f32	s15, s13, s15
 80069cc:	ee77 7a27 	vadd.f32	s15, s14, s15
 80069d0:	4b34      	ldr	r3, [pc, #208]	; (8006aa4 <StartFusion+0xba4>)
 80069d2:	edc3 7a00 	vstr	s15, [r3]
						measurementes_Z[1] = (UWBy + v2) * weight_UWBy + (Radary + v6) * weight_radary;
 80069d6:	4b34      	ldr	r3, [pc, #208]	; (8006aa8 <StartFusion+0xba8>)
 80069d8:	ed93 7a00 	vldr	s14, [r3]
 80069dc:	4b33      	ldr	r3, [pc, #204]	; (8006aac <StartFusion+0xbac>)
 80069de:	edd3 7a00 	vldr	s15, [r3]
 80069e2:	ee37 7a27 	vadd.f32	s14, s14, s15
 80069e6:	4b32      	ldr	r3, [pc, #200]	; (8006ab0 <StartFusion+0xbb0>)
 80069e8:	edd3 7a00 	vldr	s15, [r3]
 80069ec:	ee27 7a27 	vmul.f32	s14, s14, s15
 80069f0:	4b30      	ldr	r3, [pc, #192]	; (8006ab4 <StartFusion+0xbb4>)
 80069f2:	edd3 6a00 	vldr	s13, [r3]
 80069f6:	4b30      	ldr	r3, [pc, #192]	; (8006ab8 <StartFusion+0xbb8>)
 80069f8:	edd3 7a00 	vldr	s15, [r3]
 80069fc:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8006a00:	4b2e      	ldr	r3, [pc, #184]	; (8006abc <StartFusion+0xbbc>)
 8006a02:	edd3 7a00 	vldr	s15, [r3]
 8006a06:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8006a0a:	ee77 7a27 	vadd.f32	s15, s14, s15
 8006a0e:	4b25      	ldr	r3, [pc, #148]	; (8006aa4 <StartFusion+0xba4>)
 8006a10:	edc3 7a01 	vstr	s15, [r3, #4]
						measurementes_Z[2] = (speedUWBx + v3) * weight_speedUWBx + (speedradarx + v7) * weight_speedradarx;
 8006a14:	4b2a      	ldr	r3, [pc, #168]	; (8006ac0 <StartFusion+0xbc0>)
 8006a16:	ed93 7a00 	vldr	s14, [r3]
 8006a1a:	4b2a      	ldr	r3, [pc, #168]	; (8006ac4 <StartFusion+0xbc4>)
 8006a1c:	edd3 7a00 	vldr	s15, [r3]
 8006a20:	ee37 7a27 	vadd.f32	s14, s14, s15
 8006a24:	4b28      	ldr	r3, [pc, #160]	; (8006ac8 <StartFusion+0xbc8>)
 8006a26:	edd3 7a00 	vldr	s15, [r3]
 8006a2a:	ee27 7a27 	vmul.f32	s14, s14, s15
 8006a2e:	4b27      	ldr	r3, [pc, #156]	; (8006acc <StartFusion+0xbcc>)
 8006a30:	edd3 6a00 	vldr	s13, [r3]
 8006a34:	4b26      	ldr	r3, [pc, #152]	; (8006ad0 <StartFusion+0xbd0>)
 8006a36:	edd3 7a00 	vldr	s15, [r3]
 8006a3a:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8006a3e:	4b25      	ldr	r3, [pc, #148]	; (8006ad4 <StartFusion+0xbd4>)
 8006a40:	edd3 7a00 	vldr	s15, [r3]
 8006a44:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8006a48:	ee77 7a27 	vadd.f32	s15, s14, s15
 8006a4c:	4b15      	ldr	r3, [pc, #84]	; (8006aa4 <StartFusion+0xba4>)
 8006a4e:	edc3 7a02 	vstr	s15, [r3, #8]
						measurementes_Z[3] = (speedUWBy + v4) * weight_speedUWBy + (speedradary + v8) * weight_speedradary;
 8006a52:	4b21      	ldr	r3, [pc, #132]	; (8006ad8 <StartFusion+0xbd8>)
 8006a54:	ed93 7a00 	vldr	s14, [r3]
 8006a58:	4b20      	ldr	r3, [pc, #128]	; (8006adc <StartFusion+0xbdc>)
 8006a5a:	edd3 7a00 	vldr	s15, [r3]
 8006a5e:	ee37 7a27 	vadd.f32	s14, s14, s15
 8006a62:	4b1f      	ldr	r3, [pc, #124]	; (8006ae0 <StartFusion+0xbe0>)
 8006a64:	edd3 7a00 	vldr	s15, [r3]
 8006a68:	ee27 7a27 	vmul.f32	s14, s14, s15
 8006a6c:	4b1d      	ldr	r3, [pc, #116]	; (8006ae4 <StartFusion+0xbe4>)
 8006a6e:	edd3 6a00 	vldr	s13, [r3]
 8006a72:	4b1d      	ldr	r3, [pc, #116]	; (8006ae8 <StartFusion+0xbe8>)
 8006a74:	edd3 7a00 	vldr	s15, [r3]
 8006a78:	ee76 6aa7 	vadd.f32	s13, s13, s15
 8006a7c:	4b1b      	ldr	r3, [pc, #108]	; (8006aec <StartFusion+0xbec>)
 8006a7e:	edd3 7a00 	vldr	s15, [r3]
 8006a82:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8006a86:	ee77 7a27 	vadd.f32	s15, s14, s15
 8006a8a:	4b06      	ldr	r3, [pc, #24]	; (8006aa4 <StartFusion+0xba4>)
 8006a8c:	edc3 7a03 	vstr	s15, [r3, #12]


						EKF_prediction();
 8006a90:	f7fa feb2 	bl	80017f8 <EKF_prediction>
						EKF_update();
 8006a94:	f7fb f8de 	bl	8001c54 <EKF_update>




	  //HAL_GPIO_TogglePin(LD3_GPIO_Port, LD3_Pin);
    osDelay(1);
 8006a98:	2001      	movs	r0, #1
 8006a9a:	f007 f967 	bl	800dd6c <osDelay>
	  if(!Initial_pos){
 8006a9e:	f7ff ba33 	b.w	8005f08 <StartFusion+0x8>
 8006aa2:	bf00      	nop
 8006aa4:	2000ac60 	.word	0x2000ac60
 8006aa8:	2000acb4 	.word	0x2000acb4
 8006aac:	20003138 	.word	0x20003138
 8006ab0:	20007a88 	.word	0x20007a88
 8006ab4:	20009c24 	.word	0x20009c24
 8006ab8:	20003148 	.word	0x20003148
 8006abc:	2000abec 	.word	0x2000abec
 8006ac0:	20009a28 	.word	0x20009a28
 8006ac4:	2000313c 	.word	0x2000313c
 8006ac8:	20008a4c 	.word	0x20008a4c
 8006acc:	20009a08 	.word	0x20009a08
 8006ad0:	2000314c 	.word	0x2000314c
 8006ad4:	2000abe0 	.word	0x2000abe0
 8006ad8:	2000ad08 	.word	0x2000ad08
 8006adc:	20003140 	.word	0x20003140
 8006ae0:	2000abf4 	.word	0x2000abf4
 8006ae4:	20009a1c 	.word	0x20009a1c
 8006ae8:	20003150 	.word	0x20003150
 8006aec:	2000ad34 	.word	0x2000ad34

08006af0 <StartRxSensors>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_StartRxSensors */
void StartRxSensors(void *argument)
{
 8006af0:	e92d 43b0 	stmdb	sp!, {r4, r5, r7, r8, r9, lr}
 8006af4:	b088      	sub	sp, #32
 8006af6:	af00      	add	r7, sp, #0
 8006af8:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN StartRxSensors */
	uint16_t counter_imu = 500;
 8006afa:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 8006afe:	83fb      	strh	r3, [r7, #30]
	  float bias_gyro = 0;
 8006b00:	f04f 0300 	mov.w	r3, #0
 8006b04:	61bb      	str	r3, [r7, #24]
  /* Infinite loop */
  for(;;)
  {
	  if(received[3]){  //
 8006b06:	4b5c      	ldr	r3, [pc, #368]	; (8006c78 <StartRxSensors+0x188>)
 8006b08:	78db      	ldrb	r3, [r3, #3]
 8006b0a:	2b00      	cmp	r3, #0
 8006b0c:	f000 81a5 	beq.w	8006e5a <StartRxSensors+0x36a>
			  received[3] = false;
 8006b10:	4b59      	ldr	r3, [pc, #356]	; (8006c78 <StartRxSensors+0x188>)
 8006b12:	2200      	movs	r2, #0
 8006b14:	70da      	strb	r2, [r3, #3]
//			  HAL_UART_Transmit(&hlpuart1,(uint8_t*)bufferIMU, index_buffer,1000);

			  	accel_x_g2_previous = accel_x_g2;
 8006b16:	4b59      	ldr	r3, [pc, #356]	; (8006c7c <StartRxSensors+0x18c>)
 8006b18:	681b      	ldr	r3, [r3, #0]
 8006b1a:	4a59      	ldr	r2, [pc, #356]	; (8006c80 <StartRxSensors+0x190>)
 8006b1c:	6013      	str	r3, [r2, #0]
				mpu6050_read_sensors();
 8006b1e:	f7fb fc71 	bl	8002404 <mpu6050_read_sensors>
				offsetcount = IMU_Meas(offsetcount);
 8006b22:	4b58      	ldr	r3, [pc, #352]	; (8006c84 <StartRxSensors+0x194>)
 8006b24:	881b      	ldrh	r3, [r3, #0]
 8006b26:	4618      	mov	r0, r3
 8006b28:	f7fb fd32 	bl	8002590 <IMU_Meas>
 8006b2c:	4603      	mov	r3, r0
 8006b2e:	461a      	mov	r2, r3
 8006b30:	4b54      	ldr	r3, [pc, #336]	; (8006c84 <StartRxSensors+0x194>)
 8006b32:	801a      	strh	r2, [r3, #0]
				start_imu = HAL_GetTick();
 8006b34:	f001 fc60 	bl	80083f8 <HAL_GetTick>
 8006b38:	ee07 0a90 	vmov	s15, r0
 8006b3c:	eef8 7a67 	vcvt.f32.u32	s15, s15
 8006b40:	4b51      	ldr	r3, [pc, #324]	; (8006c88 <StartRxSensors+0x198>)
 8006b42:	edc3 7a00 	vstr	s15, [r3]
				float delta_angle = (gyro_z_rad2 * deltatime_imu)/10;
 8006b46:	4b51      	ldr	r3, [pc, #324]	; (8006c8c <StartRxSensors+0x19c>)
 8006b48:	ed93 7a00 	vldr	s14, [r3]
 8006b4c:	4b50      	ldr	r3, [pc, #320]	; (8006c90 <StartRxSensors+0x1a0>)
 8006b4e:	edd3 7a00 	vldr	s15, [r3]
 8006b52:	ee27 7a27 	vmul.f32	s14, s14, s15
 8006b56:	eef2 6a04 	vmov.f32	s13, #36	; 0x41200000  10.0
 8006b5a:	eec7 7a26 	vdiv.f32	s15, s14, s13
 8006b5e:	edc7 7a04 	vstr	s15, [r7, #16]
			  	if (counter_imu++ > 499 && moving == false){
 8006b62:	8bfb      	ldrh	r3, [r7, #30]
 8006b64:	1c5a      	adds	r2, r3, #1
 8006b66:	83fa      	strh	r2, [r7, #30]
 8006b68:	f5b3 7ffa 	cmp.w	r3, #500	; 0x1f4
 8006b6c:	d30a      	bcc.n	8006b84 <StartRxSensors+0x94>
 8006b6e:	4b49      	ldr	r3, [pc, #292]	; (8006c94 <StartRxSensors+0x1a4>)
 8006b70:	781b      	ldrb	r3, [r3, #0]
 8006b72:	f083 0301 	eor.w	r3, r3, #1
 8006b76:	b2db      	uxtb	r3, r3
 8006b78:	2b00      	cmp	r3, #0
 8006b7a:	d003      	beq.n	8006b84 <StartRxSensors+0x94>
			  		bias_gyro = delta_angle;
 8006b7c:	693b      	ldr	r3, [r7, #16]
 8006b7e:	61bb      	str	r3, [r7, #24]
			  		counter_imu = 0;
 8006b80:	2300      	movs	r3, #0
 8006b82:	83fb      	strh	r3, [r7, #30]

			  	}
				angle_accumulated += (delta_angle - bias_gyro);
 8006b84:	ed97 7a04 	vldr	s14, [r7, #16]
 8006b88:	edd7 7a06 	vldr	s15, [r7, #24]
 8006b8c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8006b90:	4b41      	ldr	r3, [pc, #260]	; (8006c98 <StartRxSensors+0x1a8>)
 8006b92:	edd3 7a00 	vldr	s15, [r3]
 8006b96:	ee77 7a27 	vadd.f32	s15, s14, s15
 8006b9a:	4b3f      	ldr	r3, [pc, #252]	; (8006c98 <StartRxSensors+0x1a8>)
 8006b9c:	edc3 7a00 	vstr	s15, [r3]
				float UVy = cosf(angle_accumulated);
 8006ba0:	4b3d      	ldr	r3, [pc, #244]	; (8006c98 <StartRxSensors+0x1a8>)
 8006ba2:	edd3 7a00 	vldr	s15, [r3]
 8006ba6:	eeb0 0a67 	vmov.f32	s0, s15
 8006baa:	f00b fc29 	bl	8012400 <cosf>
 8006bae:	ed87 0a03 	vstr	s0, [r7, #12]
				float UVx = sinf(angle_accumulated);
 8006bb2:	4b39      	ldr	r3, [pc, #228]	; (8006c98 <StartRxSensors+0x1a8>)
 8006bb4:	edd3 7a00 	vldr	s15, [r3]
 8006bb8:	eeb0 0a67 	vmov.f32	s0, s15
 8006bbc:	f00b fc60 	bl	8012480 <sinf>
 8006bc0:	ed87 0a02 	vstr	s0, [r7, #8]
				if(angle_accumulated > angle_accumulated2 + 10 || angle_accumulated < angle_accumulated2 - 10 && test_straight == 999){
 8006bc4:	4b35      	ldr	r3, [pc, #212]	; (8006c9c <StartRxSensors+0x1ac>)
 8006bc6:	edd3 7a00 	vldr	s15, [r3]
 8006bca:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8006bce:	ee37 7a87 	vadd.f32	s14, s15, s14
 8006bd2:	4b31      	ldr	r3, [pc, #196]	; (8006c98 <StartRxSensors+0x1a8>)
 8006bd4:	edd3 7a00 	vldr	s15, [r3]
 8006bd8:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8006bdc:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006be0:	d414      	bmi.n	8006c0c <StartRxSensors+0x11c>
 8006be2:	4b2e      	ldr	r3, [pc, #184]	; (8006c9c <StartRxSensors+0x1ac>)
 8006be4:	edd3 7a00 	vldr	s15, [r3]
 8006be8:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8006bec:	ee37 7ac7 	vsub.f32	s14, s15, s14
 8006bf0:	4b29      	ldr	r3, [pc, #164]	; (8006c98 <StartRxSensors+0x1a8>)
 8006bf2:	edd3 7a00 	vldr	s15, [r3]
 8006bf6:	eeb4 7ae7 	vcmpe.f32	s14, s15
 8006bfa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8006bfe:	dd20      	ble.n	8006c42 <StartRxSensors+0x152>
 8006c00:	4b27      	ldr	r3, [pc, #156]	; (8006ca0 <StartRxSensors+0x1b0>)
 8006c02:	881b      	ldrh	r3, [r3, #0]
 8006c04:	f240 32e7 	movw	r2, #999	; 0x3e7
 8006c08:	4293      	cmp	r3, r2
 8006c0a:	d11a      	bne.n	8006c42 <StartRxSensors+0x152>
					actual_freq = (prev_freq == 5 ) ? 1 : 5;
 8006c0c:	4b25      	ldr	r3, [pc, #148]	; (8006ca4 <StartRxSensors+0x1b4>)
 8006c0e:	881b      	ldrh	r3, [r3, #0]
 8006c10:	2b05      	cmp	r3, #5
 8006c12:	d101      	bne.n	8006c18 <StartRxSensors+0x128>
 8006c14:	2201      	movs	r2, #1
 8006c16:	e000      	b.n	8006c1a <StartRxSensors+0x12a>
 8006c18:	2205      	movs	r2, #5
 8006c1a:	4b23      	ldr	r3, [pc, #140]	; (8006ca8 <StartRxSensors+0x1b8>)
 8006c1c:	801a      	strh	r2, [r3, #0]
					prev_freq = actual_freq;
 8006c1e:	4b22      	ldr	r3, [pc, #136]	; (8006ca8 <StartRxSensors+0x1b8>)
 8006c20:	881a      	ldrh	r2, [r3, #0]
 8006c22:	4b20      	ldr	r3, [pc, #128]	; (8006ca4 <StartRxSensors+0x1b4>)
 8006c24:	801a      	strh	r2, [r3, #0]
					actual_freq_radar = (actual_freq_radar2 == 5 ) ? 1 : 5;
 8006c26:	4b21      	ldr	r3, [pc, #132]	; (8006cac <StartRxSensors+0x1bc>)
 8006c28:	881b      	ldrh	r3, [r3, #0]
 8006c2a:	2b05      	cmp	r3, #5
 8006c2c:	d101      	bne.n	8006c32 <StartRxSensors+0x142>
 8006c2e:	2201      	movs	r2, #1
 8006c30:	e000      	b.n	8006c34 <StartRxSensors+0x144>
 8006c32:	2205      	movs	r2, #5
 8006c34:	4b1e      	ldr	r3, [pc, #120]	; (8006cb0 <StartRxSensors+0x1c0>)
 8006c36:	801a      	strh	r2, [r3, #0]
					actual_freq_radar2 = actual_freq_radar;
 8006c38:	4b1d      	ldr	r3, [pc, #116]	; (8006cb0 <StartRxSensors+0x1c0>)
 8006c3a:	881a      	ldrh	r2, [r3, #0]
 8006c3c:	4b1b      	ldr	r3, [pc, #108]	; (8006cac <StartRxSensors+0x1bc>)
 8006c3e:	801a      	strh	r2, [r3, #0]
 8006c40:	e03f      	b.n	8006cc2 <StartRxSensors+0x1d2>
				}else if(test_straight == 999){
 8006c42:	4b17      	ldr	r3, [pc, #92]	; (8006ca0 <StartRxSensors+0x1b0>)
 8006c44:	881b      	ldrh	r3, [r3, #0]
 8006c46:	f240 32e7 	movw	r2, #999	; 0x3e7
 8006c4a:	4293      	cmp	r3, r2
 8006c4c:	d139      	bne.n	8006cc2 <StartRxSensors+0x1d2>
						actual_freq = actual_freq + 1;
 8006c4e:	4b16      	ldr	r3, [pc, #88]	; (8006ca8 <StartRxSensors+0x1b8>)
 8006c50:	881b      	ldrh	r3, [r3, #0]
 8006c52:	3301      	adds	r3, #1
 8006c54:	b29a      	uxth	r2, r3
 8006c56:	4b14      	ldr	r3, [pc, #80]	; (8006ca8 <StartRxSensors+0x1b8>)
 8006c58:	801a      	strh	r2, [r3, #0]
						actual_freq = (actual_freq > 10) ? 10 : actual_freq;
 8006c5a:	4b13      	ldr	r3, [pc, #76]	; (8006ca8 <StartRxSensors+0x1b8>)
 8006c5c:	881b      	ldrh	r3, [r3, #0]
 8006c5e:	2b0a      	cmp	r3, #10
 8006c60:	bf28      	it	cs
 8006c62:	230a      	movcs	r3, #10
 8006c64:	b29a      	uxth	r2, r3
 8006c66:	4b10      	ldr	r3, [pc, #64]	; (8006ca8 <StartRxSensors+0x1b8>)
 8006c68:	801a      	strh	r2, [r3, #0]

					actual_freq = (prev_freq == 1) ? 5 : actual_freq;
 8006c6a:	4b0e      	ldr	r3, [pc, #56]	; (8006ca4 <StartRxSensors+0x1b4>)
 8006c6c:	881b      	ldrh	r3, [r3, #0]
 8006c6e:	2b01      	cmp	r3, #1
 8006c70:	d020      	beq.n	8006cb4 <StartRxSensors+0x1c4>
 8006c72:	4b0d      	ldr	r3, [pc, #52]	; (8006ca8 <StartRxSensors+0x1b8>)
 8006c74:	881b      	ldrh	r3, [r3, #0]
 8006c76:	e01e      	b.n	8006cb6 <StartRxSensors+0x1c6>
 8006c78:	20003120 	.word	0x20003120
 8006c7c:	20007a0c 	.word	0x20007a0c
 8006c80:	20009c34 	.word	0x20009c34
 8006c84:	20003130 	.word	0x20003130
 8006c88:	20008a54 	.word	0x20008a54
 8006c8c:	2000ac00 	.word	0x2000ac00
 8006c90:	20009a44 	.word	0x20009a44
 8006c94:	20009a8c 	.word	0x20009a8c
 8006c98:	2000ad6c 	.word	0x2000ad6c
 8006c9c:	20007a80 	.word	0x20007a80
 8006ca0:	20009c28 	.word	0x20009c28
 8006ca4:	20009a0c 	.word	0x20009a0c
 8006ca8:	2000abe8 	.word	0x2000abe8
 8006cac:	2000ad16 	.word	0x2000ad16
 8006cb0:	2000ad50 	.word	0x2000ad50
 8006cb4:	2305      	movs	r3, #5
 8006cb6:	4ab8      	ldr	r2, [pc, #736]	; (8006f98 <StartRxSensors+0x4a8>)
 8006cb8:	8013      	strh	r3, [r2, #0]
					prev_freq = actual_freq;
 8006cba:	4bb7      	ldr	r3, [pc, #732]	; (8006f98 <StartRxSensors+0x4a8>)
 8006cbc:	881a      	ldrh	r2, [r3, #0]
 8006cbe:	4bb7      	ldr	r3, [pc, #732]	; (8006f9c <StartRxSensors+0x4ac>)
 8006cc0:	801a      	strh	r2, [r3, #0]
				}

				if(test_straight++ > 1000){
 8006cc2:	4bb7      	ldr	r3, [pc, #732]	; (8006fa0 <StartRxSensors+0x4b0>)
 8006cc4:	881b      	ldrh	r3, [r3, #0]
 8006cc6:	1c5a      	adds	r2, r3, #1
 8006cc8:	b291      	uxth	r1, r2
 8006cca:	4ab5      	ldr	r2, [pc, #724]	; (8006fa0 <StartRxSensors+0x4b0>)
 8006ccc:	8011      	strh	r1, [r2, #0]
 8006cce:	f5b3 7f7a 	cmp.w	r3, #1000	; 0x3e8
 8006cd2:	d906      	bls.n	8006ce2 <StartRxSensors+0x1f2>
					angle_accumulated2 = angle_accumulated;
 8006cd4:	4bb3      	ldr	r3, [pc, #716]	; (8006fa4 <StartRxSensors+0x4b4>)
 8006cd6:	681b      	ldr	r3, [r3, #0]
 8006cd8:	4ab3      	ldr	r2, [pc, #716]	; (8006fa8 <StartRxSensors+0x4b8>)
 8006cda:	6013      	str	r3, [r2, #0]
					test_straight=0;
 8006cdc:	4bb0      	ldr	r3, [pc, #704]	; (8006fa0 <StartRxSensors+0x4b0>)
 8006cde:	2200      	movs	r2, #0
 8006ce0:	801a      	strh	r2, [r3, #0]
				}


				 	 if(SIMU){
 8006ce2:	4bb2      	ldr	r3, [pc, #712]	; (8006fac <StartRxSensors+0x4bc>)
 8006ce4:	781b      	ldrb	r3, [r3, #0]
 8006ce6:	2b00      	cmp	r3, #0
 8006ce8:	f000 80b7 	beq.w	8006e5a <StartRxSensors+0x36a>
					 	SIMU = (saveIMU >= tempsaveIMU + 100) ? false : true;
 8006cec:	4bb0      	ldr	r3, [pc, #704]	; (8006fb0 <StartRxSensors+0x4c0>)
 8006cee:	881b      	ldrh	r3, [r3, #0]
 8006cf0:	461a      	mov	r2, r3
 8006cf2:	4bb0      	ldr	r3, [pc, #704]	; (8006fb4 <StartRxSensors+0x4c4>)
 8006cf4:	881b      	ldrh	r3, [r3, #0]
 8006cf6:	3364      	adds	r3, #100	; 0x64
 8006cf8:	429a      	cmp	r2, r3
 8006cfa:	bfb4      	ite	lt
 8006cfc:	2301      	movlt	r3, #1
 8006cfe:	2300      	movge	r3, #0
 8006d00:	b2da      	uxtb	r2, r3
 8006d02:	4baa      	ldr	r3, [pc, #680]	; (8006fac <StartRxSensors+0x4bc>)
 8006d04:	701a      	strb	r2, [r3, #0]

						saveIMU++;
 8006d06:	4baa      	ldr	r3, [pc, #680]	; (8006fb0 <StartRxSensors+0x4c0>)
 8006d08:	881b      	ldrh	r3, [r3, #0]
 8006d0a:	3301      	adds	r3, #1
 8006d0c:	b29a      	uxth	r2, r3
 8006d0e:	4ba8      	ldr	r3, [pc, #672]	; (8006fb0 <StartRxSensors+0x4c0>)
 8006d10:	801a      	strh	r2, [r3, #0]
						ftoa(angle_accumulated, data, 6);
 8006d12:	4ba4      	ldr	r3, [pc, #656]	; (8006fa4 <StartRxSensors+0x4b4>)
 8006d14:	edd3 7a00 	vldr	s15, [r3]
 8006d18:	2106      	movs	r1, #6
 8006d1a:	48a7      	ldr	r0, [pc, #668]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006d1c:	eeb0 0a67 	vmov.f32	s0, s15
 8006d20:	f7fe fcfe 	bl	8005720 <ftoa>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)"Angleacc:", strlen("Angleacc:"	), 1000); // deg
 8006d24:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006d28:	2209      	movs	r2, #9
 8006d2a:	49a4      	ldr	r1, [pc, #656]	; (8006fbc <StartRxSensors+0x4cc>)
 8006d2c:	48a4      	ldr	r0, [pc, #656]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006d2e:	f004 ff6d 	bl	800bc0c <HAL_UART_Transmit>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8006d32:	48a1      	ldr	r0, [pc, #644]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006d34:	f7f9 fa6e 	bl	8000214 <strlen>
 8006d38:	4603      	mov	r3, r0
 8006d3a:	b29a      	uxth	r2, r3
 8006d3c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006d40:	499d      	ldr	r1, [pc, #628]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006d42:	489f      	ldr	r0, [pc, #636]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006d44:	f004 ff62 	bl	800bc0c <HAL_UART_Transmit>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 8006d48:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006d4c:	2203      	movs	r2, #3
 8006d4e:	499d      	ldr	r1, [pc, #628]	; (8006fc4 <StartRxSensors+0x4d4>)
 8006d50:	489b      	ldr	r0, [pc, #620]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006d52:	f004 ff5b 	bl	800bc0c <HAL_UART_Transmit>

						ftoa(accel_x_g2, data, 4);
 8006d56:	4b9c      	ldr	r3, [pc, #624]	; (8006fc8 <StartRxSensors+0x4d8>)
 8006d58:	edd3 7a00 	vldr	s15, [r3]
 8006d5c:	2104      	movs	r1, #4
 8006d5e:	4896      	ldr	r0, [pc, #600]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006d60:	eeb0 0a67 	vmov.f32	s0, s15
 8006d64:	f7fe fcdc 	bl	8005720 <ftoa>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)"Accel X:", strlen("Accel X:"	), 1000);  // m/s^2
 8006d68:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006d6c:	2208      	movs	r2, #8
 8006d6e:	4997      	ldr	r1, [pc, #604]	; (8006fcc <StartRxSensors+0x4dc>)
 8006d70:	4893      	ldr	r0, [pc, #588]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006d72:	f004 ff4b 	bl	800bc0c <HAL_UART_Transmit>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8006d76:	4890      	ldr	r0, [pc, #576]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006d78:	f7f9 fa4c 	bl	8000214 <strlen>
 8006d7c:	4603      	mov	r3, r0
 8006d7e:	b29a      	uxth	r2, r3
 8006d80:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006d84:	498c      	ldr	r1, [pc, #560]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006d86:	488e      	ldr	r0, [pc, #568]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006d88:	f004 ff40 	bl	800bc0c <HAL_UART_Transmit>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 8006d8c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006d90:	2203      	movs	r2, #3
 8006d92:	498c      	ldr	r1, [pc, #560]	; (8006fc4 <StartRxSensors+0x4d4>)
 8006d94:	488a      	ldr	r0, [pc, #552]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006d96:	f004 ff39 	bl	800bc0c <HAL_UART_Transmit>

						ftoa(accel_y_g2, data, 4);
 8006d9a:	4b8d      	ldr	r3, [pc, #564]	; (8006fd0 <StartRxSensors+0x4e0>)
 8006d9c:	edd3 7a00 	vldr	s15, [r3]
 8006da0:	2104      	movs	r1, #4
 8006da2:	4885      	ldr	r0, [pc, #532]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006da4:	eeb0 0a67 	vmov.f32	s0, s15
 8006da8:	f7fe fcba 	bl	8005720 <ftoa>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)"Accel Y:", strlen("Accel Y:"	), 1000);  //// m/s^2
 8006dac:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006db0:	2208      	movs	r2, #8
 8006db2:	4988      	ldr	r1, [pc, #544]	; (8006fd4 <StartRxSensors+0x4e4>)
 8006db4:	4882      	ldr	r0, [pc, #520]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006db6:	f004 ff29 	bl	800bc0c <HAL_UART_Transmit>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8006dba:	487f      	ldr	r0, [pc, #508]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006dbc:	f7f9 fa2a 	bl	8000214 <strlen>
 8006dc0:	4603      	mov	r3, r0
 8006dc2:	b29a      	uxth	r2, r3
 8006dc4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006dc8:	497b      	ldr	r1, [pc, #492]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006dca:	487d      	ldr	r0, [pc, #500]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006dcc:	f004 ff1e 	bl	800bc0c <HAL_UART_Transmit>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 8006dd0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006dd4:	2203      	movs	r2, #3
 8006dd6:	497b      	ldr	r1, [pc, #492]	; (8006fc4 <StartRxSensors+0x4d4>)
 8006dd8:	4879      	ldr	r0, [pc, #484]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006dda:	f004 ff17 	bl	800bc0c <HAL_UART_Transmit>

						ftoa(UVx, data, 4);
 8006dde:	2104      	movs	r1, #4
 8006de0:	4875      	ldr	r0, [pc, #468]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006de2:	ed97 0a02 	vldr	s0, [r7, #8]
 8006de6:	f7fe fc9b 	bl	8005720 <ftoa>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)"Speed X:", strlen("Speed X:"	), 1000);  // m/s
 8006dea:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006dee:	2208      	movs	r2, #8
 8006df0:	4979      	ldr	r1, [pc, #484]	; (8006fd8 <StartRxSensors+0x4e8>)
 8006df2:	4873      	ldr	r0, [pc, #460]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006df4:	f004 ff0a 	bl	800bc0c <HAL_UART_Transmit>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8006df8:	486f      	ldr	r0, [pc, #444]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006dfa:	f7f9 fa0b 	bl	8000214 <strlen>
 8006dfe:	4603      	mov	r3, r0
 8006e00:	b29a      	uxth	r2, r3
 8006e02:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006e06:	496c      	ldr	r1, [pc, #432]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006e08:	486d      	ldr	r0, [pc, #436]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006e0a:	f004 feff 	bl	800bc0c <HAL_UART_Transmit>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 8006e0e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006e12:	2203      	movs	r2, #3
 8006e14:	496b      	ldr	r1, [pc, #428]	; (8006fc4 <StartRxSensors+0x4d4>)
 8006e16:	486a      	ldr	r0, [pc, #424]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006e18:	f004 fef8 	bl	800bc0c <HAL_UART_Transmit>

						ftoa(UVy, data, 4);
 8006e1c:	2104      	movs	r1, #4
 8006e1e:	4866      	ldr	r0, [pc, #408]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006e20:	ed97 0a03 	vldr	s0, [r7, #12]
 8006e24:	f7fe fc7c 	bl	8005720 <ftoa>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)"Speed Z:", strlen("Speed Z:"	), 1000);  // m/s
 8006e28:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006e2c:	2208      	movs	r2, #8
 8006e2e:	496b      	ldr	r1, [pc, #428]	; (8006fdc <StartRxSensors+0x4ec>)
 8006e30:	4863      	ldr	r0, [pc, #396]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006e32:	f004 feeb 	bl	800bc0c <HAL_UART_Transmit>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8006e36:	4860      	ldr	r0, [pc, #384]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006e38:	f7f9 f9ec 	bl	8000214 <strlen>
 8006e3c:	4603      	mov	r3, r0
 8006e3e:	b29a      	uxth	r2, r3
 8006e40:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006e44:	495c      	ldr	r1, [pc, #368]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006e46:	485e      	ldr	r0, [pc, #376]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006e48:	f004 fee0 	bl	800bc0c <HAL_UART_Transmit>
						HAL_UART_Transmit(&hlpuart1, (uint8_t *)" \r\n", strlen(" \r\n"), 1000);
 8006e4c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006e50:	2203      	movs	r2, #3
 8006e52:	4963      	ldr	r1, [pc, #396]	; (8006fe0 <StartRxSensors+0x4f0>)
 8006e54:	485a      	ldr	r0, [pc, #360]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006e56:	f004 fed9 	bl	800bc0c <HAL_UART_Transmit>

					}


		  } if(received[1]){  // UWB
 8006e5a:	4b62      	ldr	r3, [pc, #392]	; (8006fe4 <StartRxSensors+0x4f4>)
 8006e5c:	785b      	ldrb	r3, [r3, #1]
 8006e5e:	2b00      	cmp	r3, #0
 8006e60:	f000 818d 	beq.w	800717e <StartRxSensors+0x68e>
			  received[1] = false;
 8006e64:	4b5f      	ldr	r3, [pc, #380]	; (8006fe4 <StartRxSensors+0x4f4>)
 8006e66:	2200      	movs	r2, #0
 8006e68:	705a      	strb	r2, [r3, #1]
	//		  float tempSpeedUWBx;
		//	  float tempSpeedUWBy;

			  if(SUW){
 8006e6a:	4b5f      	ldr	r3, [pc, #380]	; (8006fe8 <StartRxSensors+0x4f8>)
 8006e6c:	781b      	ldrb	r3, [r3, #0]
 8006e6e:	2b00      	cmp	r3, #0
 8006e70:	f000 80db 	beq.w	800702a <StartRxSensors+0x53a>
				  SUW = (saveUWB >= tempsaveUWB + 100) ? false : true;
 8006e74:	4b5d      	ldr	r3, [pc, #372]	; (8006fec <StartRxSensors+0x4fc>)
 8006e76:	881b      	ldrh	r3, [r3, #0]
 8006e78:	461a      	mov	r2, r3
 8006e7a:	4b5d      	ldr	r3, [pc, #372]	; (8006ff0 <StartRxSensors+0x500>)
 8006e7c:	881b      	ldrh	r3, [r3, #0]
 8006e7e:	3364      	adds	r3, #100	; 0x64
 8006e80:	429a      	cmp	r2, r3
 8006e82:	bfb4      	ite	lt
 8006e84:	2301      	movlt	r3, #1
 8006e86:	2300      	movge	r3, #0
 8006e88:	b2da      	uxtb	r2, r3
 8006e8a:	4b57      	ldr	r3, [pc, #348]	; (8006fe8 <StartRxSensors+0x4f8>)
 8006e8c:	701a      	strb	r2, [r3, #0]

				  	saveUWB++;
 8006e8e:	4b57      	ldr	r3, [pc, #348]	; (8006fec <StartRxSensors+0x4fc>)
 8006e90:	881b      	ldrh	r3, [r3, #0]
 8006e92:	3301      	adds	r3, #1
 8006e94:	b29a      	uxth	r2, r3
 8006e96:	4b55      	ldr	r3, [pc, #340]	; (8006fec <StartRxSensors+0x4fc>)
 8006e98:	801a      	strh	r2, [r3, #0]
					ftoa(UWBx, data, 4);
 8006e9a:	4b56      	ldr	r3, [pc, #344]	; (8006ff4 <StartRxSensors+0x504>)
 8006e9c:	edd3 7a00 	vldr	s15, [r3]
 8006ea0:	2104      	movs	r1, #4
 8006ea2:	4845      	ldr	r0, [pc, #276]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006ea4:	eeb0 0a67 	vmov.f32	s0, s15
 8006ea8:	f7fe fc3a 	bl	8005720 <ftoa>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"UWBx:", strlen("UWBx:"	), 1000);  // m
 8006eac:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006eb0:	2205      	movs	r2, #5
 8006eb2:	4951      	ldr	r1, [pc, #324]	; (8006ff8 <StartRxSensors+0x508>)
 8006eb4:	4842      	ldr	r0, [pc, #264]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006eb6:	f004 fea9 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8006eba:	483f      	ldr	r0, [pc, #252]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006ebc:	f7f9 f9aa 	bl	8000214 <strlen>
 8006ec0:	4603      	mov	r3, r0
 8006ec2:	b29a      	uxth	r2, r3
 8006ec4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006ec8:	493b      	ldr	r1, [pc, #236]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006eca:	483d      	ldr	r0, [pc, #244]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006ecc:	f004 fe9e 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 8006ed0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006ed4:	2203      	movs	r2, #3
 8006ed6:	493b      	ldr	r1, [pc, #236]	; (8006fc4 <StartRxSensors+0x4d4>)
 8006ed8:	4839      	ldr	r0, [pc, #228]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006eda:	f004 fe97 	bl	800bc0c <HAL_UART_Transmit>

					ftoa(UWBy, data, 4);
 8006ede:	4b47      	ldr	r3, [pc, #284]	; (8006ffc <StartRxSensors+0x50c>)
 8006ee0:	edd3 7a00 	vldr	s15, [r3]
 8006ee4:	2104      	movs	r1, #4
 8006ee6:	4834      	ldr	r0, [pc, #208]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006ee8:	eeb0 0a67 	vmov.f32	s0, s15
 8006eec:	f7fe fc18 	bl	8005720 <ftoa>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"UWBy:", strlen("UWBy:"	), 1000);  // m
 8006ef0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006ef4:	2205      	movs	r2, #5
 8006ef6:	4942      	ldr	r1, [pc, #264]	; (8007000 <StartRxSensors+0x510>)
 8006ef8:	4831      	ldr	r0, [pc, #196]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006efa:	f004 fe87 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8006efe:	482e      	ldr	r0, [pc, #184]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006f00:	f7f9 f988 	bl	8000214 <strlen>
 8006f04:	4603      	mov	r3, r0
 8006f06:	b29a      	uxth	r2, r3
 8006f08:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006f0c:	492a      	ldr	r1, [pc, #168]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006f0e:	482c      	ldr	r0, [pc, #176]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006f10:	f004 fe7c 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 8006f14:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006f18:	2203      	movs	r2, #3
 8006f1a:	492a      	ldr	r1, [pc, #168]	; (8006fc4 <StartRxSensors+0x4d4>)
 8006f1c:	4828      	ldr	r0, [pc, #160]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006f1e:	f004 fe75 	bl	800bc0c <HAL_UART_Transmit>

					ftoa(speedUWBx, data, 4);
 8006f22:	4b38      	ldr	r3, [pc, #224]	; (8007004 <StartRxSensors+0x514>)
 8006f24:	edd3 7a00 	vldr	s15, [r3]
 8006f28:	2104      	movs	r1, #4
 8006f2a:	4823      	ldr	r0, [pc, #140]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006f2c:	eeb0 0a67 	vmov.f32	s0, s15
 8006f30:	f7fe fbf6 	bl	8005720 <ftoa>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"UWBVx:", strlen("UWBVx:"	), 1000); // m/s
 8006f34:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006f38:	2206      	movs	r2, #6
 8006f3a:	4933      	ldr	r1, [pc, #204]	; (8007008 <StartRxSensors+0x518>)
 8006f3c:	4820      	ldr	r0, [pc, #128]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006f3e:	f004 fe65 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8006f42:	481d      	ldr	r0, [pc, #116]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006f44:	f7f9 f966 	bl	8000214 <strlen>
 8006f48:	4603      	mov	r3, r0
 8006f4a:	b29a      	uxth	r2, r3
 8006f4c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006f50:	4919      	ldr	r1, [pc, #100]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006f52:	481b      	ldr	r0, [pc, #108]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006f54:	f004 fe5a 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 8006f58:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006f5c:	2203      	movs	r2, #3
 8006f5e:	4919      	ldr	r1, [pc, #100]	; (8006fc4 <StartRxSensors+0x4d4>)
 8006f60:	4817      	ldr	r0, [pc, #92]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006f62:	f004 fe53 	bl	800bc0c <HAL_UART_Transmit>

					ftoa(speedUWBy, data, 4);
 8006f66:	4b29      	ldr	r3, [pc, #164]	; (800700c <StartRxSensors+0x51c>)
 8006f68:	edd3 7a00 	vldr	s15, [r3]
 8006f6c:	2104      	movs	r1, #4
 8006f6e:	4812      	ldr	r0, [pc, #72]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006f70:	eeb0 0a67 	vmov.f32	s0, s15
 8006f74:	f7fe fbd4 	bl	8005720 <ftoa>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)"UWBVy:", strlen("UWBVy:"	), 1000); // m/s
 8006f78:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006f7c:	2206      	movs	r2, #6
 8006f7e:	4924      	ldr	r1, [pc, #144]	; (8007010 <StartRxSensors+0x520>)
 8006f80:	480f      	ldr	r0, [pc, #60]	; (8006fc0 <StartRxSensors+0x4d0>)
 8006f82:	f004 fe43 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8006f86:	480c      	ldr	r0, [pc, #48]	; (8006fb8 <StartRxSensors+0x4c8>)
 8006f88:	f7f9 f944 	bl	8000214 <strlen>
 8006f8c:	4603      	mov	r3, r0
 8006f8e:	b29a      	uxth	r2, r3
 8006f90:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8006f94:	e03e      	b.n	8007014 <StartRxSensors+0x524>
 8006f96:	bf00      	nop
 8006f98:	2000abe8 	.word	0x2000abe8
 8006f9c:	20009a0c 	.word	0x20009a0c
 8006fa0:	20009c28 	.word	0x20009c28
 8006fa4:	2000ad6c 	.word	0x2000ad6c
 8006fa8:	20007a80 	.word	0x20007a80
 8006fac:	20000218 	.word	0x20000218
 8006fb0:	20000214 	.word	0x20000214
 8006fb4:	20000216 	.word	0x20000216
 8006fb8:	2000b3ac 	.word	0x2000b3ac
 8006fbc:	08016220 	.word	0x08016220
 8006fc0:	2000b290 	.word	0x2000b290
 8006fc4:	08016214 	.word	0x08016214
 8006fc8:	20007a0c 	.word	0x20007a0c
 8006fcc:	0801622c 	.word	0x0801622c
 8006fd0:	20007a20 	.word	0x20007a20
 8006fd4:	08016238 	.word	0x08016238
 8006fd8:	08016244 	.word	0x08016244
 8006fdc:	08016250 	.word	0x08016250
 8006fe0:	0801625c 	.word	0x0801625c
 8006fe4:	20003120 	.word	0x20003120
 8006fe8:	20000212 	.word	0x20000212
 8006fec:	2000020e 	.word	0x2000020e
 8006ff0:	20000210 	.word	0x20000210
 8006ff4:	2000ac58 	.word	0x2000ac58
 8006ff8:	08016260 	.word	0x08016260
 8006ffc:	2000acb4 	.word	0x2000acb4
 8007000:	08016268 	.word	0x08016268
 8007004:	20009a28 	.word	0x20009a28
 8007008:	08016270 	.word	0x08016270
 800700c:	2000ad08 	.word	0x2000ad08
 8007010:	08016278 	.word	0x08016278
 8007014:	4922      	ldr	r1, [pc, #136]	; (80070a0 <StartRxSensors+0x5b0>)
 8007016:	4823      	ldr	r0, [pc, #140]	; (80070a4 <StartRxSensors+0x5b4>)
 8007018:	f004 fdf8 	bl	800bc0c <HAL_UART_Transmit>
					HAL_UART_Transmit(&hlpuart1, (uint8_t *)" \r\n", strlen(" \r\n"), 1000);
 800701c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007020:	2203      	movs	r2, #3
 8007022:	4921      	ldr	r1, [pc, #132]	; (80070a8 <StartRxSensors+0x5b8>)
 8007024:	481f      	ldr	r0, [pc, #124]	; (80070a4 <StartRxSensors+0x5b4>)
 8007026:	f004 fdf1 	bl	800bc0c <HAL_UART_Transmit>
/*				  HAL_UART_Transmit(&hlpuart1,(uint8_t*)bufferUWB, index_buffer,1000);// debug
				  HAL_UART_Transmit(&hlpuart1,(uint8_t*)"\r", strlen("\r"),1000);
				  */
			  }

			  if(UWB_sampling++ >= 11-actual_freq){
 800702a:	4b20      	ldr	r3, [pc, #128]	; (80070ac <StartRxSensors+0x5bc>)
 800702c:	881b      	ldrh	r3, [r3, #0]
 800702e:	1c5a      	adds	r2, r3, #1
 8007030:	b291      	uxth	r1, r2
 8007032:	4a1e      	ldr	r2, [pc, #120]	; (80070ac <StartRxSensors+0x5bc>)
 8007034:	8011      	strh	r1, [r2, #0]
 8007036:	461a      	mov	r2, r3
 8007038:	4b1d      	ldr	r3, [pc, #116]	; (80070b0 <StartRxSensors+0x5c0>)
 800703a:	881b      	ldrh	r3, [r3, #0]
 800703c:	f1c3 030b 	rsb	r3, r3, #11
 8007040:	429a      	cmp	r2, r3
 8007042:	db03      	blt.n	800704c <StartRxSensors+0x55c>
				  UWB_sampling = 1;
 8007044:	4b19      	ldr	r3, [pc, #100]	; (80070ac <StartRxSensors+0x5bc>)
 8007046:	2201      	movs	r2, #1
 8007048:	801a      	strh	r2, [r3, #0]
 800704a:	e098      	b.n	800717e <StartRxSensors+0x68e>
			  }else{
					  if(bufferUWB[index_buffer-1] == 'p'){
 800704c:	4b19      	ldr	r3, [pc, #100]	; (80070b4 <StartRxSensors+0x5c4>)
 800704e:	881b      	ldrh	r3, [r3, #0]
 8007050:	3b01      	subs	r3, #1
 8007052:	4a19      	ldr	r2, [pc, #100]	; (80070b8 <StartRxSensors+0x5c8>)
 8007054:	5cd3      	ldrb	r3, [r2, r3]
 8007056:	2b70      	cmp	r3, #112	; 0x70
 8007058:	d109      	bne.n	800706e <StartRxSensors+0x57e>
						  osDelay(1);
 800705a:	2001      	movs	r0, #1
 800705c:	f006 fe86 	bl	800dd6c <osDelay>
						  HAL_UART_Transmit(&huart2,(uint8_t*)"lec\r", strlen("lec\r"),1000);
 8007060:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007064:	2204      	movs	r2, #4
 8007066:	4915      	ldr	r1, [pc, #84]	; (80070bc <StartRxSensors+0x5cc>)
 8007068:	4815      	ldr	r0, [pc, #84]	; (80070c0 <StartRxSensors+0x5d0>)
 800706a:	f004 fdcf 	bl	800bc0c <HAL_UART_Transmit>
					  }
					  if (strncmp("POS",bufferUWB,3)== 0){
 800706e:	2203      	movs	r2, #3
 8007070:	4911      	ldr	r1, [pc, #68]	; (80070b8 <StartRxSensors+0x5c8>)
 8007072:	4814      	ldr	r0, [pc, #80]	; (80070c4 <StartRxSensors+0x5d4>)
 8007074:	f009 faeb 	bl	801064e <strncmp>
 8007078:	4603      	mov	r3, r0
 800707a:	2b00      	cmp	r3, #0
 800707c:	d159      	bne.n	8007132 <StartRxSensors+0x642>
						  UWBx = atof(bufferUWB+11);
 800707e:	4b12      	ldr	r3, [pc, #72]	; (80070c8 <StartRxSensors+0x5d8>)
 8007080:	4618      	mov	r0, r3
 8007082:	f009 faa3 	bl	80105cc <atof>
 8007086:	ec54 3b10 	vmov	r3, r4, d0
 800708a:	4618      	mov	r0, r3
 800708c:	4621      	mov	r1, r4
 800708e:	f7f9 fd7d 	bl	8000b8c <__aeabi_d2f>
 8007092:	4602      	mov	r2, r0
 8007094:	4b0d      	ldr	r3, [pc, #52]	; (80070cc <StartRxSensors+0x5dc>)
 8007096:	601a      	str	r2, [r3, #0]
						  int i = 11;
 8007098:	230b      	movs	r3, #11
 800709a:	617b      	str	r3, [r7, #20]
						  while(bufferUWB[i] != ',')i++;
 800709c:	e01b      	b.n	80070d6 <StartRxSensors+0x5e6>
 800709e:	bf00      	nop
 80070a0:	2000b3ac 	.word	0x2000b3ac
 80070a4:	2000b290 	.word	0x2000b290
 80070a8:	0801625c 	.word	0x0801625c
 80070ac:	20009a38 	.word	0x20009a38
 80070b0:	2000abe8 	.word	0x2000abe8
 80070b4:	2000311e 	.word	0x2000311e
 80070b8:	200011d0 	.word	0x200011d0
 80070bc:	08016280 	.word	0x08016280
 80070c0:	2000b48c 	.word	0x2000b48c
 80070c4:	08016288 	.word	0x08016288
 80070c8:	200011db 	.word	0x200011db
 80070cc:	2000ac58 	.word	0x2000ac58
 80070d0:	697b      	ldr	r3, [r7, #20]
 80070d2:	3301      	adds	r3, #1
 80070d4:	617b      	str	r3, [r7, #20]
 80070d6:	4ab6      	ldr	r2, [pc, #728]	; (80073b0 <StartRxSensors+0x8c0>)
 80070d8:	697b      	ldr	r3, [r7, #20]
 80070da:	4413      	add	r3, r2
 80070dc:	781b      	ldrb	r3, [r3, #0]
 80070de:	2b2c      	cmp	r3, #44	; 0x2c
 80070e0:	d1f6      	bne.n	80070d0 <StartRxSensors+0x5e0>
						  UWBy = atof(bufferUWB+i+1);
 80070e2:	697b      	ldr	r3, [r7, #20]
 80070e4:	3301      	adds	r3, #1
 80070e6:	4ab2      	ldr	r2, [pc, #712]	; (80073b0 <StartRxSensors+0x8c0>)
 80070e8:	4413      	add	r3, r2
 80070ea:	4618      	mov	r0, r3
 80070ec:	f009 fa6e 	bl	80105cc <atof>
 80070f0:	ec54 3b10 	vmov	r3, r4, d0
 80070f4:	4618      	mov	r0, r3
 80070f6:	4621      	mov	r1, r4
 80070f8:	f7f9 fd48 	bl	8000b8c <__aeabi_d2f>
 80070fc:	4602      	mov	r2, r0
 80070fe:	4bad      	ldr	r3, [pc, #692]	; (80073b4 <StartRxSensors+0x8c4>)
 8007100:	601a      	str	r2, [r3, #0]

						  if (isnanf(UWBx) || isnanf(UWBy)){
 8007102:	4bad      	ldr	r3, [pc, #692]	; (80073b8 <StartRxSensors+0x8c8>)
 8007104:	edd3 7a00 	vldr	s15, [r3]
 8007108:	eef4 7a67 	vcmp.f32	s15, s15
 800710c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007110:	d607      	bvs.n	8007122 <StartRxSensors+0x632>
 8007112:	4ba8      	ldr	r3, [pc, #672]	; (80073b4 <StartRxSensors+0x8c4>)
 8007114:	edd3 7a00 	vldr	s15, [r3]
 8007118:	eef4 7a67 	vcmp.f32	s15, s15
 800711c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007120:	d707      	bvc.n	8007132 <StartRxSensors+0x642>
							  UWBx = UWBx_previous;
 8007122:	4ba6      	ldr	r3, [pc, #664]	; (80073bc <StartRxSensors+0x8cc>)
 8007124:	681b      	ldr	r3, [r3, #0]
 8007126:	4aa4      	ldr	r2, [pc, #656]	; (80073b8 <StartRxSensors+0x8c8>)
 8007128:	6013      	str	r3, [r2, #0]
							  UWBy = UWBy_previous;
 800712a:	4ba5      	ldr	r3, [pc, #660]	; (80073c0 <StartRxSensors+0x8d0>)
 800712c:	681b      	ldr	r3, [r3, #0]
 800712e:	4aa1      	ldr	r2, [pc, #644]	; (80073b4 <StartRxSensors+0x8c4>)
 8007130:	6013      	str	r3, [r2, #0]
						  }
					}

						speedUWBx = (UWBx-UWBx_previous) * 10;
 8007132:	4ba1      	ldr	r3, [pc, #644]	; (80073b8 <StartRxSensors+0x8c8>)
 8007134:	ed93 7a00 	vldr	s14, [r3]
 8007138:	4ba0      	ldr	r3, [pc, #640]	; (80073bc <StartRxSensors+0x8cc>)
 800713a:	edd3 7a00 	vldr	s15, [r3]
 800713e:	ee77 7a67 	vsub.f32	s15, s14, s15
 8007142:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8007146:	ee67 7a87 	vmul.f32	s15, s15, s14
 800714a:	4b9e      	ldr	r3, [pc, #632]	; (80073c4 <StartRxSensors+0x8d4>)
 800714c:	edc3 7a00 	vstr	s15, [r3]
						speedUWBy = (UWBy-UWBy_previous) * 10;
 8007150:	4b98      	ldr	r3, [pc, #608]	; (80073b4 <StartRxSensors+0x8c4>)
 8007152:	ed93 7a00 	vldr	s14, [r3]
 8007156:	4b9a      	ldr	r3, [pc, #616]	; (80073c0 <StartRxSensors+0x8d0>)
 8007158:	edd3 7a00 	vldr	s15, [r3]
 800715c:	ee77 7a67 	vsub.f32	s15, s14, s15
 8007160:	eeb2 7a04 	vmov.f32	s14, #36	; 0x41200000  10.0
 8007164:	ee67 7a87 	vmul.f32	s15, s15, s14
 8007168:	4b97      	ldr	r3, [pc, #604]	; (80073c8 <StartRxSensors+0x8d8>)
 800716a:	edc3 7a00 	vstr	s15, [r3]
						UWBx_previous = UWBx;
 800716e:	4b92      	ldr	r3, [pc, #584]	; (80073b8 <StartRxSensors+0x8c8>)
 8007170:	681b      	ldr	r3, [r3, #0]
 8007172:	4a92      	ldr	r2, [pc, #584]	; (80073bc <StartRxSensors+0x8cc>)
 8007174:	6013      	str	r3, [r2, #0]
						UWBy_previous = UWBy;
 8007176:	4b8f      	ldr	r3, [pc, #572]	; (80073b4 <StartRxSensors+0x8c4>)
 8007178:	681b      	ldr	r3, [r3, #0]
 800717a:	4a91      	ldr	r2, [pc, #580]	; (80073c0 <StartRxSensors+0x8d0>)
 800717c:	6013      	str	r3, [r2, #0]
			}

		  } if(received[2]){  // Radar
 800717e:	4b93      	ldr	r3, [pc, #588]	; (80073cc <StartRxSensors+0x8dc>)
 8007180:	789b      	ldrb	r3, [r3, #2]
 8007182:	2b00      	cmp	r3, #0
 8007184:	f000 80cf 	beq.w	8007326 <StartRxSensors+0x836>
			  received[2] = false;
 8007188:	4b90      	ldr	r3, [pc, #576]	; (80073cc <StartRxSensors+0x8dc>)
 800718a:	2200      	movs	r2, #0
 800718c:	709a      	strb	r2, [r3, #2]

			   numObj = 0;
 800718e:	4b90      	ldr	r3, [pc, #576]	; (80073d0 <StartRxSensors+0x8e0>)
 8007190:	2200      	movs	r2, #0
 8007192:	801a      	strh	r2, [r3, #0]
			   numClu = 0;
 8007194:	4b8f      	ldr	r3, [pc, #572]	; (80073d4 <StartRxSensors+0x8e4>)
 8007196:	2200      	movs	r2, #0
 8007198:	801a      	strh	r2, [r3, #0]
			   count_ch_freq_radar++;
 800719a:	4b8f      	ldr	r3, [pc, #572]	; (80073d8 <StartRxSensors+0x8e8>)
 800719c:	681b      	ldr	r3, [r3, #0]
 800719e:	3301      	adds	r3, #1
 80071a0:	4a8d      	ldr	r2, [pc, #564]	; (80073d8 <StartRxSensors+0x8e8>)
 80071a2:	6013      	str	r3, [r2, #0]
			   if (turning == false && prev_freq_radar++ >= actual_freq_radar /*powf(2,actual_freq_radar-1)*/){
 80071a4:	4b8d      	ldr	r3, [pc, #564]	; (80073dc <StartRxSensors+0x8ec>)
 80071a6:	781b      	ldrb	r3, [r3, #0]
 80071a8:	f083 0301 	eor.w	r3, r3, #1
 80071ac:	b2db      	uxtb	r3, r3
 80071ae:	2b00      	cmp	r3, #0
 80071b0:	d019      	beq.n	80071e6 <StartRxSensors+0x6f6>
 80071b2:	4b8b      	ldr	r3, [pc, #556]	; (80073e0 <StartRxSensors+0x8f0>)
 80071b4:	881b      	ldrh	r3, [r3, #0]
 80071b6:	1c5a      	adds	r2, r3, #1
 80071b8:	b291      	uxth	r1, r2
 80071ba:	4a89      	ldr	r2, [pc, #548]	; (80073e0 <StartRxSensors+0x8f0>)
 80071bc:	8011      	strh	r1, [r2, #0]
 80071be:	4a89      	ldr	r2, [pc, #548]	; (80073e4 <StartRxSensors+0x8f4>)
 80071c0:	8812      	ldrh	r2, [r2, #0]
 80071c2:	4293      	cmp	r3, r2
 80071c4:	d30f      	bcc.n	80071e6 <StartRxSensors+0x6f6>
				   prev_freq_radar = 1;
 80071c6:	4b86      	ldr	r3, [pc, #536]	; (80073e0 <StartRxSensors+0x8f0>)
 80071c8:	2201      	movs	r2, #1
 80071ca:	801a      	strh	r2, [r3, #0]
				   getdata_Radar(bufferRadar);
 80071cc:	4886      	ldr	r0, [pc, #536]	; (80073e8 <StartRxSensors+0x8f8>)
 80071ce:	f7fb ffb1 	bl	8003134 <getdata_Radar>
				   if(Initial_pos && numObj > 0) getPos_Radar();
 80071d2:	4b86      	ldr	r3, [pc, #536]	; (80073ec <StartRxSensors+0x8fc>)
 80071d4:	781b      	ldrb	r3, [r3, #0]
 80071d6:	2b00      	cmp	r3, #0
 80071d8:	d005      	beq.n	80071e6 <StartRxSensors+0x6f6>
 80071da:	4b7d      	ldr	r3, [pc, #500]	; (80073d0 <StartRxSensors+0x8e0>)
 80071dc:	881b      	ldrh	r3, [r3, #0]
 80071de:	2b00      	cmp	r3, #0
 80071e0:	d001      	beq.n	80071e6 <StartRxSensors+0x6f6>
 80071e2:	f7fc fadd 	bl	80037a0 <getPos_Radar>
			   }

			  if(SRadar /*&& moving*/){
 80071e6:	4b82      	ldr	r3, [pc, #520]	; (80073f0 <StartRxSensors+0x900>)
 80071e8:	781b      	ldrb	r3, [r3, #0]
 80071ea:	2b00      	cmp	r3, #0
 80071ec:	f000 809b 	beq.w	8007326 <StartRxSensors+0x836>
				  SRadar = (saveRadar >= tempsaveRadar + 100) ? false : true;
 80071f0:	4b80      	ldr	r3, [pc, #512]	; (80073f4 <StartRxSensors+0x904>)
 80071f2:	881b      	ldrh	r3, [r3, #0]
 80071f4:	461a      	mov	r2, r3
 80071f6:	4b80      	ldr	r3, [pc, #512]	; (80073f8 <StartRxSensors+0x908>)
 80071f8:	881b      	ldrh	r3, [r3, #0]
 80071fa:	3364      	adds	r3, #100	; 0x64
 80071fc:	429a      	cmp	r2, r3
 80071fe:	bfb4      	ite	lt
 8007200:	2301      	movlt	r3, #1
 8007202:	2300      	movge	r3, #0
 8007204:	b2da      	uxtb	r2, r3
 8007206:	4b7a      	ldr	r3, [pc, #488]	; (80073f0 <StartRxSensors+0x900>)
 8007208:	701a      	strb	r2, [r3, #0]
				  saveRadar++;
 800720a:	4b7a      	ldr	r3, [pc, #488]	; (80073f4 <StartRxSensors+0x904>)
 800720c:	881b      	ldrh	r3, [r3, #0]
 800720e:	3301      	adds	r3, #1
 8007210:	b29a      	uxth	r2, r3
 8007212:	4b78      	ldr	r3, [pc, #480]	; (80073f4 <StartRxSensors+0x904>)
 8007214:	801a      	strh	r2, [r3, #0]

				  ftoa(Radarx, data, 4);
 8007216:	4b79      	ldr	r3, [pc, #484]	; (80073fc <StartRxSensors+0x90c>)
 8007218:	edd3 7a00 	vldr	s15, [r3]
 800721c:	2104      	movs	r1, #4
 800721e:	4878      	ldr	r0, [pc, #480]	; (8007400 <StartRxSensors+0x910>)
 8007220:	eeb0 0a67 	vmov.f32	s0, s15
 8007224:	f7fe fa7c 	bl	8005720 <ftoa>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)"Radarx:", strlen("Radarx:"	), 1000); // m
 8007228:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800722c:	2207      	movs	r2, #7
 800722e:	4975      	ldr	r1, [pc, #468]	; (8007404 <StartRxSensors+0x914>)
 8007230:	4875      	ldr	r0, [pc, #468]	; (8007408 <StartRxSensors+0x918>)
 8007232:	f004 fceb 	bl	800bc0c <HAL_UART_Transmit>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8007236:	4872      	ldr	r0, [pc, #456]	; (8007400 <StartRxSensors+0x910>)
 8007238:	f7f8 ffec 	bl	8000214 <strlen>
 800723c:	4603      	mov	r3, r0
 800723e:	b29a      	uxth	r2, r3
 8007240:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007244:	496e      	ldr	r1, [pc, #440]	; (8007400 <StartRxSensors+0x910>)
 8007246:	4870      	ldr	r0, [pc, #448]	; (8007408 <StartRxSensors+0x918>)
 8007248:	f004 fce0 	bl	800bc0c <HAL_UART_Transmit>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 800724c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007250:	2203      	movs	r2, #3
 8007252:	496e      	ldr	r1, [pc, #440]	; (800740c <StartRxSensors+0x91c>)
 8007254:	486c      	ldr	r0, [pc, #432]	; (8007408 <StartRxSensors+0x918>)
 8007256:	f004 fcd9 	bl	800bc0c <HAL_UART_Transmit>

				  ftoa(Radary, data, 4);
 800725a:	4b6d      	ldr	r3, [pc, #436]	; (8007410 <StartRxSensors+0x920>)
 800725c:	edd3 7a00 	vldr	s15, [r3]
 8007260:	2104      	movs	r1, #4
 8007262:	4867      	ldr	r0, [pc, #412]	; (8007400 <StartRxSensors+0x910>)
 8007264:	eeb0 0a67 	vmov.f32	s0, s15
 8007268:	f7fe fa5a 	bl	8005720 <ftoa>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)"Radary:", strlen("Radary:"	), 1000);  // m
 800726c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007270:	2207      	movs	r2, #7
 8007272:	4968      	ldr	r1, [pc, #416]	; (8007414 <StartRxSensors+0x924>)
 8007274:	4864      	ldr	r0, [pc, #400]	; (8007408 <StartRxSensors+0x918>)
 8007276:	f004 fcc9 	bl	800bc0c <HAL_UART_Transmit>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 800727a:	4861      	ldr	r0, [pc, #388]	; (8007400 <StartRxSensors+0x910>)
 800727c:	f7f8 ffca 	bl	8000214 <strlen>
 8007280:	4603      	mov	r3, r0
 8007282:	b29a      	uxth	r2, r3
 8007284:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007288:	495d      	ldr	r1, [pc, #372]	; (8007400 <StartRxSensors+0x910>)
 800728a:	485f      	ldr	r0, [pc, #380]	; (8007408 <StartRxSensors+0x918>)
 800728c:	f004 fcbe 	bl	800bc0c <HAL_UART_Transmit>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 8007290:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007294:	2203      	movs	r2, #3
 8007296:	495d      	ldr	r1, [pc, #372]	; (800740c <StartRxSensors+0x91c>)
 8007298:	485b      	ldr	r0, [pc, #364]	; (8007408 <StartRxSensors+0x918>)
 800729a:	f004 fcb7 	bl	800bc0c <HAL_UART_Transmit>

				  ftoa(speedradarx, data, 4);
 800729e:	4b5e      	ldr	r3, [pc, #376]	; (8007418 <StartRxSensors+0x928>)
 80072a0:	edd3 7a00 	vldr	s15, [r3]
 80072a4:	2104      	movs	r1, #4
 80072a6:	4856      	ldr	r0, [pc, #344]	; (8007400 <StartRxSensors+0x910>)
 80072a8:	eeb0 0a67 	vmov.f32	s0, s15
 80072ac:	f7fe fa38 	bl	8005720 <ftoa>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)"Speedx:", strlen("Speedx:"	), 1000); // m/s
 80072b0:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80072b4:	2207      	movs	r2, #7
 80072b6:	4959      	ldr	r1, [pc, #356]	; (800741c <StartRxSensors+0x92c>)
 80072b8:	4853      	ldr	r0, [pc, #332]	; (8007408 <StartRxSensors+0x918>)
 80072ba:	f004 fca7 	bl	800bc0c <HAL_UART_Transmit>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 80072be:	4850      	ldr	r0, [pc, #320]	; (8007400 <StartRxSensors+0x910>)
 80072c0:	f7f8 ffa8 	bl	8000214 <strlen>
 80072c4:	4603      	mov	r3, r0
 80072c6:	b29a      	uxth	r2, r3
 80072c8:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80072cc:	494c      	ldr	r1, [pc, #304]	; (8007400 <StartRxSensors+0x910>)
 80072ce:	484e      	ldr	r0, [pc, #312]	; (8007408 <StartRxSensors+0x918>)
 80072d0:	f004 fc9c 	bl	800bc0c <HAL_UART_Transmit>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)"   ", strlen("   "), 1000);
 80072d4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80072d8:	2203      	movs	r2, #3
 80072da:	494c      	ldr	r1, [pc, #304]	; (800740c <StartRxSensors+0x91c>)
 80072dc:	484a      	ldr	r0, [pc, #296]	; (8007408 <StartRxSensors+0x918>)
 80072de:	f004 fc95 	bl	800bc0c <HAL_UART_Transmit>

				  ftoa(speedradary, data, 4);
 80072e2:	4b4f      	ldr	r3, [pc, #316]	; (8007420 <StartRxSensors+0x930>)
 80072e4:	edd3 7a00 	vldr	s15, [r3]
 80072e8:	2104      	movs	r1, #4
 80072ea:	4845      	ldr	r0, [pc, #276]	; (8007400 <StartRxSensors+0x910>)
 80072ec:	eeb0 0a67 	vmov.f32	s0, s15
 80072f0:	f7fe fa16 	bl	8005720 <ftoa>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)"Speedy:", strlen("Speedy:"	), 1000); // m/s
 80072f4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 80072f8:	2207      	movs	r2, #7
 80072fa:	494a      	ldr	r1, [pc, #296]	; (8007424 <StartRxSensors+0x934>)
 80072fc:	4842      	ldr	r0, [pc, #264]	; (8007408 <StartRxSensors+0x918>)
 80072fe:	f004 fc85 	bl	800bc0c <HAL_UART_Transmit>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
 8007302:	483f      	ldr	r0, [pc, #252]	; (8007400 <StartRxSensors+0x910>)
 8007304:	f7f8 ff86 	bl	8000214 <strlen>
 8007308:	4603      	mov	r3, r0
 800730a:	b29a      	uxth	r2, r3
 800730c:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007310:	493b      	ldr	r1, [pc, #236]	; (8007400 <StartRxSensors+0x910>)
 8007312:	483d      	ldr	r0, [pc, #244]	; (8007408 <StartRxSensors+0x918>)
 8007314:	f004 fc7a 	bl	800bc0c <HAL_UART_Transmit>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)"\r\n", strlen("\r\n"), 1000);
 8007318:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800731c:	2202      	movs	r2, #2
 800731e:	4942      	ldr	r1, [pc, #264]	; (8007428 <StartRxSensors+0x938>)
 8007320:	4839      	ldr	r0, [pc, #228]	; (8007408 <StartRxSensors+0x918>)
 8007322:	f004 fc73 	bl	800bc0c <HAL_UART_Transmit>
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)"\r\n", strlen("\r\n"), 1000);
				  HAL_UART_Transmit(&hlpuart1, (uint8_t *)"\r\n", strlen("\r\n"), 1000);*/
			  }


		  } if(received[0]){  //
 8007326:	4b29      	ldr	r3, [pc, #164]	; (80073cc <StartRxSensors+0x8dc>)
 8007328:	781b      	ldrb	r3, [r3, #0]
 800732a:	2b00      	cmp	r3, #0
 800732c:	d00a      	beq.n	8007344 <StartRxSensors+0x854>
			  received[0] = false;
 800732e:	4b27      	ldr	r3, [pc, #156]	; (80073cc <StartRxSensors+0x8dc>)
 8007330:	2200      	movs	r2, #0
 8007332:	701a      	strb	r2, [r3, #0]
				  HAL_UART_Transmit(&huart4,(uint8_t*)bufferLidar, index_buffer,1000);
 8007334:	4b3d      	ldr	r3, [pc, #244]	; (800742c <StartRxSensors+0x93c>)
 8007336:	881a      	ldrh	r2, [r3, #0]
 8007338:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 800733c:	493c      	ldr	r1, [pc, #240]	; (8007430 <StartRxSensors+0x940>)
 800733e:	483d      	ldr	r0, [pc, #244]	; (8007434 <StartRxSensors+0x944>)
 8007340:	f004 fc64 	bl	800bc0c <HAL_UART_Transmit>
		  } if(received[4]){
 8007344:	4b21      	ldr	r3, [pc, #132]	; (80073cc <StartRxSensors+0x8dc>)
 8007346:	791b      	ldrb	r3, [r3, #4]
 8007348:	2b00      	cmp	r3, #0
 800734a:	d002      	beq.n	8007352 <StartRxSensors+0x862>
		  	  received[4] = false;
 800734c:	4b1f      	ldr	r3, [pc, #124]	; (80073cc <StartRxSensors+0x8dc>)
 800734e:	2200      	movs	r2, #0
 8007350:	711a      	strb	r2, [r3, #4]
*/
				  //move = 30001;

		  	  }

		  } if(received[5]){  // PC
 8007352:	4b1e      	ldr	r3, [pc, #120]	; (80073cc <StartRxSensors+0x8dc>)
 8007354:	795b      	ldrb	r3, [r3, #5]
 8007356:	2b00      	cmp	r3, #0
 8007358:	f000 80e9 	beq.w	800752e <StartRxSensors+0xa3e>
			  received[5] = false;
 800735c:	4b1b      	ldr	r3, [pc, #108]	; (80073cc <StartRxSensors+0x8dc>)
 800735e:	2200      	movs	r2, #0
 8007360:	715a      	strb	r2, [r3, #5]

			  ReceiveData_PC(bufferPC);
 8007362:	4835      	ldr	r0, [pc, #212]	; (8007438 <StartRxSensors+0x948>)
 8007364:	f7fe fb4c 	bl	8005a00 <ReceiveData_PC>
			  disth = sqrt(distx*distx+disty*disty);
 8007368:	4b34      	ldr	r3, [pc, #208]	; (800743c <StartRxSensors+0x94c>)
 800736a:	ed93 7a00 	vldr	s14, [r3]
 800736e:	4b33      	ldr	r3, [pc, #204]	; (800743c <StartRxSensors+0x94c>)
 8007370:	edd3 7a00 	vldr	s15, [r3]
 8007374:	ee27 7a27 	vmul.f32	s14, s14, s15
 8007378:	4b31      	ldr	r3, [pc, #196]	; (8007440 <StartRxSensors+0x950>)
 800737a:	edd3 6a00 	vldr	s13, [r3]
 800737e:	4b30      	ldr	r3, [pc, #192]	; (8007440 <StartRxSensors+0x950>)
 8007380:	edd3 7a00 	vldr	s15, [r3]
 8007384:	ee66 7aa7 	vmul.f32	s15, s13, s15
 8007388:	ee77 7a27 	vadd.f32	s15, s14, s15
 800738c:	ee17 0a90 	vmov	r0, s15
 8007390:	f7f9 f8ac 	bl	80004ec <__aeabi_f2d>
 8007394:	4603      	mov	r3, r0
 8007396:	460c      	mov	r4, r1
 8007398:	ec44 3b10 	vmov	d0, r3, r4
 800739c:	f00b fa7a 	bl	8012894 <sqrt>
 80073a0:	ec54 3b10 	vmov	r3, r4, d0
 80073a4:	4618      	mov	r0, r3
 80073a6:	4621      	mov	r1, r4
 80073a8:	f7f9 fbf0 	bl	8000b8c <__aeabi_d2f>
 80073ac:	e04a      	b.n	8007444 <StartRxSensors+0x954>
 80073ae:	bf00      	nop
 80073b0:	200011d0 	.word	0x200011d0
 80073b4:	2000acb4 	.word	0x2000acb4
 80073b8:	2000ac58 	.word	0x2000ac58
 80073bc:	20009c38 	.word	0x20009c38
 80073c0:	20007a30 	.word	0x20007a30
 80073c4:	20009a28 	.word	0x20009a28
 80073c8:	2000ad08 	.word	0x2000ad08
 80073cc:	20003120 	.word	0x20003120
 80073d0:	2000ad14 	.word	0x2000ad14
 80073d4:	2000ac54 	.word	0x2000ac54
 80073d8:	200099f8 	.word	0x200099f8
 80073dc:	20007a28 	.word	0x20007a28
 80073e0:	20009a18 	.word	0x20009a18
 80073e4:	2000ad50 	.word	0x2000ad50
 80073e8:	200019a4 	.word	0x200019a4
 80073ec:	2000020c 	.word	0x2000020c
 80073f0:	2000021e 	.word	0x2000021e
 80073f4:	2000021a 	.word	0x2000021a
 80073f8:	2000021c 	.word	0x2000021c
 80073fc:	20007a94 	.word	0x20007a94
 8007400:	2000b3ac 	.word	0x2000b3ac
 8007404:	0801628c 	.word	0x0801628c
 8007408:	2000b290 	.word	0x2000b290
 800740c:	08016214 	.word	0x08016214
 8007410:	20009c24 	.word	0x20009c24
 8007414:	08016294 	.word	0x08016294
 8007418:	20009a08 	.word	0x20009a08
 800741c:	0801629c 	.word	0x0801629c
 8007420:	20009a1c 	.word	0x20009a1c
 8007424:	080162a4 	.word	0x080162a4
 8007428:	080162ac 	.word	0x080162ac
 800742c:	2000311e 	.word	0x2000311e
 8007430:	2000294c 	.word	0x2000294c
 8007434:	2000b3c0 	.word	0x2000b3c0
 8007438:	200009fc 	.word	0x200009fc
 800743c:	20000004 	.word	0x20000004
 8007440:	20000008 	.word	0x20000008
 8007444:	4602      	mov	r2, r0
 8007446:	4b3e      	ldr	r3, [pc, #248]	; (8007540 <StartRxSensors+0xa50>)
 8007448:	601a      	str	r2, [r3, #0]
			  anglez = acos(distx/disth)*180/3.14159;
 800744a:	4b3e      	ldr	r3, [pc, #248]	; (8007544 <StartRxSensors+0xa54>)
 800744c:	ed93 7a00 	vldr	s14, [r3]
 8007450:	4b3b      	ldr	r3, [pc, #236]	; (8007540 <StartRxSensors+0xa50>)
 8007452:	edd3 7a00 	vldr	s15, [r3]
 8007456:	eec7 6a27 	vdiv.f32	s13, s14, s15
 800745a:	ee16 0a90 	vmov	r0, s13
 800745e:	f7f9 f845 	bl	80004ec <__aeabi_f2d>
 8007462:	4603      	mov	r3, r0
 8007464:	460c      	mov	r4, r1
 8007466:	ec44 3b10 	vmov	d0, r3, r4
 800746a:	f00b f84b 	bl	8012504 <acos>
 800746e:	ec51 0b10 	vmov	r0, r1, d0
 8007472:	f04f 0200 	mov.w	r2, #0
 8007476:	4b34      	ldr	r3, [pc, #208]	; (8007548 <StartRxSensors+0xa58>)
 8007478:	f7f9 f890 	bl	800059c <__aeabi_dmul>
 800747c:	4603      	mov	r3, r0
 800747e:	460c      	mov	r4, r1
 8007480:	4618      	mov	r0, r3
 8007482:	4621      	mov	r1, r4
 8007484:	a32c      	add	r3, pc, #176	; (adr r3, 8007538 <StartRxSensors+0xa48>)
 8007486:	e9d3 2300 	ldrd	r2, r3, [r3]
 800748a:	f7f9 f9b1 	bl	80007f0 <__aeabi_ddiv>
 800748e:	4603      	mov	r3, r0
 8007490:	460c      	mov	r4, r1
 8007492:	4618      	mov	r0, r3
 8007494:	4621      	mov	r1, r4
 8007496:	f7f9 fb79 	bl	8000b8c <__aeabi_d2f>
 800749a:	4602      	mov	r2, r0
 800749c:	4b2b      	ldr	r3, [pc, #172]	; (800754c <StartRxSensors+0xa5c>)
 800749e:	601a      	str	r2, [r3, #0]
			  anglez = (disty == 0) ? anglez : anglez * (disty/fabs(disty));
 80074a0:	4b2b      	ldr	r3, [pc, #172]	; (8007550 <StartRxSensors+0xa60>)
 80074a2:	edd3 7a00 	vldr	s15, [r3]
 80074a6:	eef5 7a40 	vcmp.f32	s15, #0.0
 80074aa:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80074ae:	d02a      	beq.n	8007506 <StartRxSensors+0xa16>
 80074b0:	4b26      	ldr	r3, [pc, #152]	; (800754c <StartRxSensors+0xa5c>)
 80074b2:	681b      	ldr	r3, [r3, #0]
 80074b4:	4618      	mov	r0, r3
 80074b6:	f7f9 f819 	bl	80004ec <__aeabi_f2d>
 80074ba:	4604      	mov	r4, r0
 80074bc:	460d      	mov	r5, r1
 80074be:	4b24      	ldr	r3, [pc, #144]	; (8007550 <StartRxSensors+0xa60>)
 80074c0:	681b      	ldr	r3, [r3, #0]
 80074c2:	4618      	mov	r0, r3
 80074c4:	f7f9 f812 	bl	80004ec <__aeabi_f2d>
 80074c8:	4680      	mov	r8, r0
 80074ca:	4689      	mov	r9, r1
 80074cc:	4b20      	ldr	r3, [pc, #128]	; (8007550 <StartRxSensors+0xa60>)
 80074ce:	edd3 7a00 	vldr	s15, [r3]
 80074d2:	eef0 7ae7 	vabs.f32	s15, s15
 80074d6:	ee17 0a90 	vmov	r0, s15
 80074da:	f7f9 f807 	bl	80004ec <__aeabi_f2d>
 80074de:	4602      	mov	r2, r0
 80074e0:	460b      	mov	r3, r1
 80074e2:	4640      	mov	r0, r8
 80074e4:	4649      	mov	r1, r9
 80074e6:	f7f9 f983 	bl	80007f0 <__aeabi_ddiv>
 80074ea:	4602      	mov	r2, r0
 80074ec:	460b      	mov	r3, r1
 80074ee:	4620      	mov	r0, r4
 80074f0:	4629      	mov	r1, r5
 80074f2:	f7f9 f853 	bl	800059c <__aeabi_dmul>
 80074f6:	4603      	mov	r3, r0
 80074f8:	460c      	mov	r4, r1
 80074fa:	4618      	mov	r0, r3
 80074fc:	4621      	mov	r1, r4
 80074fe:	f7f9 fb45 	bl	8000b8c <__aeabi_d2f>
 8007502:	4603      	mov	r3, r0
 8007504:	e001      	b.n	800750a <StartRxSensors+0xa1a>
 8007506:	4b11      	ldr	r3, [pc, #68]	; (800754c <StartRxSensors+0xa5c>)
 8007508:	681b      	ldr	r3, [r3, #0]
 800750a:	4a10      	ldr	r2, [pc, #64]	; (800754c <StartRxSensors+0xa5c>)
 800750c:	6013      	str	r3, [r2, #0]
			  angledes = anglez;
 800750e:	4b0f      	ldr	r3, [pc, #60]	; (800754c <StartRxSensors+0xa5c>)
 8007510:	681b      	ldr	r3, [r3, #0]
 8007512:	4a10      	ldr	r2, [pc, #64]	; (8007554 <StartRxSensors+0xa64>)
 8007514:	6013      	str	r3, [r2, #0]
			  anglezactual = 0;
 8007516:	4b10      	ldr	r3, [pc, #64]	; (8007558 <StartRxSensors+0xa68>)
 8007518:	f04f 0200 	mov.w	r2, #0
 800751c:	601a      	str	r2, [r3, #0]
//				PID_Init(1.165,1.e-4,0.115);
			  PID_Init(4,4e-4,0.115);
 800751e:	ed9f 1a0f 	vldr	s2, [pc, #60]	; 800755c <StartRxSensors+0xa6c>
 8007522:	eddf 0a0f 	vldr	s1, [pc, #60]	; 8007560 <StartRxSensors+0xa70>
 8007526:	eeb1 0a00 	vmov.f32	s0, #16	; 0x40800000  4.0
 800752a:	f7fb fd5b 	bl	8002fe4 <PID_Init>

			 // HAL_UART_Transmit(&hlpuart1,(uint8_t*)bufferPC, index_buffer,1000);

		  }

	osDelay(1);
 800752e:	2001      	movs	r0, #1
 8007530:	f006 fc1c 	bl	800dd6c <osDelay>
	  if(received[3]){  //
 8007534:	f7ff bae7 	b.w	8006b06 <StartRxSensors+0x16>
 8007538:	f01b866e 	.word	0xf01b866e
 800753c:	400921f9 	.word	0x400921f9
 8007540:	20008a44 	.word	0x20008a44
 8007544:	20000004 	.word	0x20000004
 8007548:	40668000 	.word	0x40668000
 800754c:	20009a34 	.word	0x20009a34
 8007550:	20000008 	.word	0x20000008
 8007554:	2000ad68 	.word	0x2000ad68
 8007558:	2000abfc 	.word	0x2000abfc
 800755c:	3deb851f 	.word	0x3deb851f
 8007560:	39d1b717 	.word	0x39d1b717

08007564 <Start_Motors_Ctrl>:
* @param argument: Not used
* @retval None
*/
/* USER CODE END Header_Start_Motors_Ctrl */
void Start_Motors_Ctrl(void *argument)
{
 8007564:	b580      	push	{r7, lr}
 8007566:	b082      	sub	sp, #8
 8007568:	af00      	add	r7, sp, #0
 800756a:	6078      	str	r0, [r7, #4]
  /* Infinite loop */

  for(;;)
    {
	  //HAL_GPIO_WritePin(LD2_GPIO_Port, LD2_Pin, HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_5));
  	  if(increase_speed != 0){
 800756c:	4b41      	ldr	r3, [pc, #260]	; (8007674 <Start_Motors_Ctrl+0x110>)
 800756e:	f9b3 3000 	ldrsh.w	r3, [r3]
 8007572:	2b00      	cmp	r3, #0
 8007574:	d01f      	beq.n	80075b6 <Start_Motors_Ctrl+0x52>
  	  		  speed = speed + increase_speed;
 8007576:	4b40      	ldr	r3, [pc, #256]	; (8007678 <Start_Motors_Ctrl+0x114>)
 8007578:	f9b3 3000 	ldrsh.w	r3, [r3]
 800757c:	b29a      	uxth	r2, r3
 800757e:	4b3d      	ldr	r3, [pc, #244]	; (8007674 <Start_Motors_Ctrl+0x110>)
 8007580:	f9b3 3000 	ldrsh.w	r3, [r3]
 8007584:	b29b      	uxth	r3, r3
 8007586:	4413      	add	r3, r2
 8007588:	b29b      	uxth	r3, r3
 800758a:	b21a      	sxth	r2, r3
 800758c:	4b3a      	ldr	r3, [pc, #232]	; (8007678 <Start_Motors_Ctrl+0x114>)
 800758e:	801a      	strh	r2, [r3, #0]
  	  		  if (speed < 25) speed=25; // lower limit motors work
 8007590:	4b39      	ldr	r3, [pc, #228]	; (8007678 <Start_Motors_Ctrl+0x114>)
 8007592:	f9b3 3000 	ldrsh.w	r3, [r3]
 8007596:	2b18      	cmp	r3, #24
 8007598:	dc02      	bgt.n	80075a0 <Start_Motors_Ctrl+0x3c>
 800759a:	4b37      	ldr	r3, [pc, #220]	; (8007678 <Start_Motors_Ctrl+0x114>)
 800759c:	2219      	movs	r2, #25
 800759e:	801a      	strh	r2, [r3, #0]
  	  		  if (speed > 100) speed=100; // safe upper limit for motors
 80075a0:	4b35      	ldr	r3, [pc, #212]	; (8007678 <Start_Motors_Ctrl+0x114>)
 80075a2:	f9b3 3000 	ldrsh.w	r3, [r3]
 80075a6:	2b64      	cmp	r3, #100	; 0x64
 80075a8:	dd02      	ble.n	80075b0 <Start_Motors_Ctrl+0x4c>
 80075aa:	4b33      	ldr	r3, [pc, #204]	; (8007678 <Start_Motors_Ctrl+0x114>)
 80075ac:	2264      	movs	r2, #100	; 0x64
 80075ae:	801a      	strh	r2, [r3, #0]
  	  		  increase_speed = 0;
 80075b0:	4b30      	ldr	r3, [pc, #192]	; (8007674 <Start_Motors_Ctrl+0x110>)
 80075b2:	2200      	movs	r2, #0
 80075b4:	801a      	strh	r2, [r3, #0]

  	  	  }

  	if(strcmp(Direction, "move") == 0){
 80075b6:	4931      	ldr	r1, [pc, #196]	; (800767c <Start_Motors_Ctrl+0x118>)
 80075b8:	4831      	ldr	r0, [pc, #196]	; (8007680 <Start_Motors_Ctrl+0x11c>)
 80075ba:	f7f8 fe21 	bl	8000200 <strcmp>
 80075be:	4603      	mov	r3, r0
 80075c0:	2b00      	cmp	r3, #0
 80075c2:	d10f      	bne.n	80075e4 <Start_Motors_Ctrl+0x80>
  			  moving = true;
 80075c4:	4b2f      	ldr	r3, [pc, #188]	; (8007684 <Start_Motors_Ctrl+0x120>)
 80075c6:	2201      	movs	r2, #1
 80075c8:	701a      	strb	r2, [r3, #0]
  			  move++;
 80075ca:	4b2f      	ldr	r3, [pc, #188]	; (8007688 <Start_Motors_Ctrl+0x124>)
 80075cc:	881b      	ldrh	r3, [r3, #0]
 80075ce:	3301      	adds	r3, #1
 80075d0:	b29a      	uxth	r2, r3
 80075d2:	4b2d      	ldr	r3, [pc, #180]	; (8007688 <Start_Motors_Ctrl+0x124>)
 80075d4:	801a      	strh	r2, [r3, #0]
  		/*	  float dummytime = HAL_GetTick();
  			ftoa(dummytime, data, 4);
			HAL_UART_Transmit(&hlpuart1, (uint8_t *)"Time start:", strlen("Time start:"	), 1000); // m/s
			HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
			HAL_UART_Transmit(&hlpuart1, (uint8_t *)"\r\n", strlen("\r\n"), 1000);
  			*/  strcpy(Direction,"IDLE");
 80075d6:	4b2a      	ldr	r3, [pc, #168]	; (8007680 <Start_Motors_Ctrl+0x11c>)
 80075d8:	4a2c      	ldr	r2, [pc, #176]	; (800768c <Start_Motors_Ctrl+0x128>)
 80075da:	6810      	ldr	r0, [r2, #0]
 80075dc:	6018      	str	r0, [r3, #0]
 80075de:	7912      	ldrb	r2, [r2, #4]
 80075e0:	711a      	strb	r2, [r3, #4]
 80075e2:	e043      	b.n	800766c <Start_Motors_Ctrl+0x108>
  		  }else if(strcmp(Direction, "quit") == 0 || move == 0 || /*move > 30000 ||*/
 80075e4:	492a      	ldr	r1, [pc, #168]	; (8007690 <Start_Motors_Ctrl+0x12c>)
 80075e6:	4826      	ldr	r0, [pc, #152]	; (8007680 <Start_Motors_Ctrl+0x11c>)
 80075e8:	f7f8 fe0a 	bl	8000200 <strcmp>
 80075ec:	4603      	mov	r3, r0
 80075ee:	2b00      	cmp	r3, #0
 80075f0:	d01f      	beq.n	8007632 <Start_Motors_Ctrl+0xce>
 80075f2:	4b25      	ldr	r3, [pc, #148]	; (8007688 <Start_Motors_Ctrl+0x124>)
 80075f4:	881b      	ldrh	r3, [r3, #0]
 80075f6:	2b00      	cmp	r3, #0
 80075f8:	d01b      	beq.n	8007632 <Start_Motors_Ctrl+0xce>
  				  (disth <= 0  && (anglez >= -IMU_angle_acc  || anglez <= IMU_angle_acc) )   ){
 80075fa:	4b26      	ldr	r3, [pc, #152]	; (8007694 <Start_Motors_Ctrl+0x130>)
 80075fc:	edd3 7a00 	vldr	s15, [r3]
  		  }else if(strcmp(Direction, "quit") == 0 || move == 0 || /*move > 30000 ||*/
 8007600:	eef5 7ac0 	vcmpe.f32	s15, #0.0
 8007604:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007608:	d82e      	bhi.n	8007668 <Start_Motors_Ctrl+0x104>
  				  (disth <= 0  && (anglez >= -IMU_angle_acc  || anglez <= IMU_angle_acc) )   ){
 800760a:	4b23      	ldr	r3, [pc, #140]	; (8007698 <Start_Motors_Ctrl+0x134>)
 800760c:	edd3 7a00 	vldr	s15, [r3]
 8007610:	eeb9 7a04 	vmov.f32	s14, #148	; 0xc0a00000 -5.0
 8007614:	eef4 7ac7 	vcmpe.f32	s15, s14
 8007618:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 800761c:	da09      	bge.n	8007632 <Start_Motors_Ctrl+0xce>
 800761e:	4b1e      	ldr	r3, [pc, #120]	; (8007698 <Start_Motors_Ctrl+0x134>)
 8007620:	edd3 7a00 	vldr	s15, [r3]
 8007624:	eeb1 7a04 	vmov.f32	s14, #20	; 0x40a00000  5.0
 8007628:	eef4 7ac7 	vcmpe.f32	s15, s14
 800762c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8007630:	d81a      	bhi.n	8007668 <Start_Motors_Ctrl+0x104>
  			  HAL_TIM_PWM_Stop(&htim4, TIM_CHANNEL_3);
 8007632:	2108      	movs	r1, #8
 8007634:	4819      	ldr	r0, [pc, #100]	; (800769c <Start_Motors_Ctrl+0x138>)
 8007636:	f003 fa3b 	bl	800aab0 <HAL_TIM_PWM_Stop>
  			  HAL_TIM_PWM_Stop(&htim4, TIM_CHANNEL_4);
 800763a:	210c      	movs	r1, #12
 800763c:	4817      	ldr	r0, [pc, #92]	; (800769c <Start_Motors_Ctrl+0x138>)
 800763e:	f003 fa37 	bl	800aab0 <HAL_TIM_PWM_Stop>
  			  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 0);
 8007642:	2200      	movs	r2, #0
 8007644:	2180      	movs	r1, #128	; 0x80
 8007646:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800764a:	f001 f98f 	bl	800896c <HAL_GPIO_WritePin>
  		/*	  if(move != 0) {
  				  osDelay(1000);
  				  offset = false;
  			  }*/
  			  move = 0;
 800764e:	4b0e      	ldr	r3, [pc, #56]	; (8007688 <Start_Motors_Ctrl+0x124>)
 8007650:	2200      	movs	r2, #0
 8007652:	801a      	strh	r2, [r3, #0]
  				ftoa(dummytime, data, 4);
  				HAL_UART_Transmit(&hlpuart1, (uint8_t *)"Time stop:", strlen("Time stop:"	), 1000); // m/s
  				HAL_UART_Transmit(&hlpuart1, (uint8_t *)data, strlen(data), 1000);
  				HAL_UART_Transmit(&hlpuart1, (uint8_t *)"\r\n", strlen("\r\n"), 1000);
  			  }*/
  			  moving = false;
 8007654:	4b0b      	ldr	r3, [pc, #44]	; (8007684 <Start_Motors_Ctrl+0x120>)
 8007656:	2200      	movs	r2, #0
 8007658:	701a      	strb	r2, [r3, #0]
  			  strcpy(Direction,"IDLE");
 800765a:	4b09      	ldr	r3, [pc, #36]	; (8007680 <Start_Motors_Ctrl+0x11c>)
 800765c:	4a0b      	ldr	r2, [pc, #44]	; (800768c <Start_Motors_Ctrl+0x128>)
 800765e:	6810      	ldr	r0, [r2, #0]
 8007660:	6018      	str	r0, [r3, #0]
 8007662:	7912      	ldrb	r2, [r2, #4]
 8007664:	711a      	strb	r2, [r3, #4]
 8007666:	e001      	b.n	800766c <Start_Motors_Ctrl+0x108>
  		  }else{
  			  PID();
 8007668:	f7fe f8d6 	bl	8005818 <PID>

  		  }
      osDelay(1);
 800766c:	2001      	movs	r0, #1
 800766e:	f006 fb7d 	bl	800dd6c <osDelay>
  	  if(increase_speed != 0){
 8007672:	e77b      	b.n	800756c <Start_Motors_Ctrl+0x8>
 8007674:	20003126 	.word	0x20003126
 8007678:	20000000 	.word	0x20000000
 800767c:	080161f0 	.word	0x080161f0
 8007680:	20007a18 	.word	0x20007a18
 8007684:	20009a8c 	.word	0x20009a8c
 8007688:	20003128 	.word	0x20003128
 800768c:	080161d8 	.word	0x080161d8
 8007690:	08016204 	.word	0x08016204
 8007694:	20008a44 	.word	0x20008a44
 8007698:	20009a34 	.word	0x20009a34
 800769c:	2000ad70 	.word	0x2000ad70

080076a0 <HAL_TIM_PeriodElapsedCallback>:
  * a global variable "uwTick" used as application time base.
  * @param  htim : TIM handle
  * @retval None
  */
void HAL_TIM_PeriodElapsedCallback(TIM_HandleTypeDef *htim)
{
 80076a0:	b580      	push	{r7, lr}
 80076a2:	b082      	sub	sp, #8
 80076a4:	af00      	add	r7, sp, #0
 80076a6:	6078      	str	r0, [r7, #4]
  /* USER CODE BEGIN Callback 0 */

  /* USER CODE END Callback 0 */
  if (htim->Instance == TIM8) {
 80076a8:	687b      	ldr	r3, [r7, #4]
 80076aa:	681b      	ldr	r3, [r3, #0]
 80076ac:	4a04      	ldr	r2, [pc, #16]	; (80076c0 <HAL_TIM_PeriodElapsedCallback+0x20>)
 80076ae:	4293      	cmp	r3, r2
 80076b0:	d101      	bne.n	80076b6 <HAL_TIM_PeriodElapsedCallback+0x16>
    HAL_IncTick();
 80076b2:	f000 fe8f 	bl	80083d4 <HAL_IncTick>
  }
  /* USER CODE BEGIN Callback 1 */

  /* USER CODE END Callback 1 */
}
 80076b6:	bf00      	nop
 80076b8:	3708      	adds	r7, #8
 80076ba:	46bd      	mov	sp, r7
 80076bc:	bd80      	pop	{r7, pc}
 80076be:	bf00      	nop
 80076c0:	40013400 	.word	0x40013400

080076c4 <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 80076c4:	b480      	push	{r7}
 80076c6:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */

  /* USER CODE END Error_Handler_Debug */
}
 80076c8:	bf00      	nop
 80076ca:	46bd      	mov	sp, r7
 80076cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80076d0:	4770      	bx	lr
	...

080076d4 <HAL_MspInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef *htim);
                                        /**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 80076d4:	b580      	push	{r7, lr}
 80076d6:	b082      	sub	sp, #8
 80076d8:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 80076da:	4b11      	ldr	r3, [pc, #68]	; (8007720 <HAL_MspInit+0x4c>)
 80076dc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80076de:	4a10      	ldr	r2, [pc, #64]	; (8007720 <HAL_MspInit+0x4c>)
 80076e0:	f043 0301 	orr.w	r3, r3, #1
 80076e4:	6613      	str	r3, [r2, #96]	; 0x60
 80076e6:	4b0e      	ldr	r3, [pc, #56]	; (8007720 <HAL_MspInit+0x4c>)
 80076e8:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 80076ea:	f003 0301 	and.w	r3, r3, #1
 80076ee:	607b      	str	r3, [r7, #4]
 80076f0:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 80076f2:	4b0b      	ldr	r3, [pc, #44]	; (8007720 <HAL_MspInit+0x4c>)
 80076f4:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80076f6:	4a0a      	ldr	r2, [pc, #40]	; (8007720 <HAL_MspInit+0x4c>)
 80076f8:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 80076fc:	6593      	str	r3, [r2, #88]	; 0x58
 80076fe:	4b08      	ldr	r3, [pc, #32]	; (8007720 <HAL_MspInit+0x4c>)
 8007700:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007702:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007706:	603b      	str	r3, [r7, #0]
 8007708:	683b      	ldr	r3, [r7, #0]

  /* System interrupt init*/
  /* PendSV_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(PendSV_IRQn, 15, 0);
 800770a:	2200      	movs	r2, #0
 800770c:	210f      	movs	r1, #15
 800770e:	f06f 0001 	mvn.w	r0, #1
 8007712:	f000 ff57 	bl	80085c4 <HAL_NVIC_SetPriority>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 8007716:	bf00      	nop
 8007718:	3708      	adds	r7, #8
 800771a:	46bd      	mov	sp, r7
 800771c:	bd80      	pop	{r7, pc}
 800771e:	bf00      	nop
 8007720:	40021000 	.word	0x40021000

08007724 <HAL_I2C_MspInit>:
* This function configures the hardware resources used in this example
* @param hi2c: I2C handle pointer
* @retval None
*/
void HAL_I2C_MspInit(I2C_HandleTypeDef* hi2c)
{
 8007724:	b580      	push	{r7, lr}
 8007726:	b08a      	sub	sp, #40	; 0x28
 8007728:	af00      	add	r7, sp, #0
 800772a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 800772c:	f107 0314 	add.w	r3, r7, #20
 8007730:	2200      	movs	r2, #0
 8007732:	601a      	str	r2, [r3, #0]
 8007734:	605a      	str	r2, [r3, #4]
 8007736:	609a      	str	r2, [r3, #8]
 8007738:	60da      	str	r2, [r3, #12]
 800773a:	611a      	str	r2, [r3, #16]
  if(hi2c->Instance==I2C1)
 800773c:	687b      	ldr	r3, [r7, #4]
 800773e:	681b      	ldr	r3, [r3, #0]
 8007740:	4a17      	ldr	r2, [pc, #92]	; (80077a0 <HAL_I2C_MspInit+0x7c>)
 8007742:	4293      	cmp	r3, r2
 8007744:	d128      	bne.n	8007798 <HAL_I2C_MspInit+0x74>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */
  
    __HAL_RCC_GPIOB_CLK_ENABLE();
 8007746:	4b17      	ldr	r3, [pc, #92]	; (80077a4 <HAL_I2C_MspInit+0x80>)
 8007748:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800774a:	4a16      	ldr	r2, [pc, #88]	; (80077a4 <HAL_I2C_MspInit+0x80>)
 800774c:	f043 0302 	orr.w	r3, r3, #2
 8007750:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007752:	4b14      	ldr	r3, [pc, #80]	; (80077a4 <HAL_I2C_MspInit+0x80>)
 8007754:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007756:	f003 0302 	and.w	r3, r3, #2
 800775a:	613b      	str	r3, [r7, #16]
 800775c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration    
    PB8     ------> I2C1_SCL
    PB9     ------> I2C1_SDA 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 800775e:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007762:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 8007764:	2312      	movs	r3, #18
 8007766:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 8007768:	2301      	movs	r3, #1
 800776a:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800776c:	2303      	movs	r3, #3
 800776e:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 8007770:	2304      	movs	r3, #4
 8007772:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 8007774:	f107 0314 	add.w	r3, r7, #20
 8007778:	4619      	mov	r1, r3
 800777a:	480b      	ldr	r0, [pc, #44]	; (80077a8 <HAL_I2C_MspInit+0x84>)
 800777c:	f000 ff4c 	bl	8008618 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 8007780:	4b08      	ldr	r3, [pc, #32]	; (80077a4 <HAL_I2C_MspInit+0x80>)
 8007782:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007784:	4a07      	ldr	r2, [pc, #28]	; (80077a4 <HAL_I2C_MspInit+0x80>)
 8007786:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 800778a:	6593      	str	r3, [r2, #88]	; 0x58
 800778c:	4b05      	ldr	r3, [pc, #20]	; (80077a4 <HAL_I2C_MspInit+0x80>)
 800778e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007790:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 8007794:	60fb      	str	r3, [r7, #12]
 8007796:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }

}
 8007798:	bf00      	nop
 800779a:	3728      	adds	r7, #40	; 0x28
 800779c:	46bd      	mov	sp, r7
 800779e:	bd80      	pop	{r7, pc}
 80077a0:	40005400 	.word	0x40005400
 80077a4:	40021000 	.word	0x40021000
 80077a8:	48000400 	.word	0x48000400

080077ac <HAL_UART_MspInit>:
* This function configures the hardware resources used in this example
* @param huart: UART handle pointer
* @retval None
*/
void HAL_UART_MspInit(UART_HandleTypeDef* huart)
{
 80077ac:	b580      	push	{r7, lr}
 80077ae:	b092      	sub	sp, #72	; 0x48
 80077b0:	af00      	add	r7, sp, #0
 80077b2:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 80077b4:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80077b8:	2200      	movs	r2, #0
 80077ba:	601a      	str	r2, [r3, #0]
 80077bc:	605a      	str	r2, [r3, #4]
 80077be:	609a      	str	r2, [r3, #8]
 80077c0:	60da      	str	r2, [r3, #12]
 80077c2:	611a      	str	r2, [r3, #16]
  if(huart->Instance==LPUART1)
 80077c4:	687b      	ldr	r3, [r7, #4]
 80077c6:	681b      	ldr	r3, [r3, #0]
 80077c8:	4a77      	ldr	r2, [pc, #476]	; (80079a8 <HAL_UART_MspInit+0x1fc>)
 80077ca:	4293      	cmp	r3, r2
 80077cc:	d12b      	bne.n	8007826 <HAL_UART_MspInit+0x7a>
  {
  /* USER CODE BEGIN LPUART1_MspInit 0 */

  /* USER CODE END LPUART1_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_LPUART1_CLK_ENABLE();
 80077ce:	4b77      	ldr	r3, [pc, #476]	; (80079ac <HAL_UART_MspInit+0x200>)
 80077d0:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80077d2:	4a76      	ldr	r2, [pc, #472]	; (80079ac <HAL_UART_MspInit+0x200>)
 80077d4:	f043 0301 	orr.w	r3, r3, #1
 80077d8:	65d3      	str	r3, [r2, #92]	; 0x5c
 80077da:	4b74      	ldr	r3, [pc, #464]	; (80079ac <HAL_UART_MspInit+0x200>)
 80077dc:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 80077de:	f003 0301 	and.w	r3, r3, #1
 80077e2:	633b      	str	r3, [r7, #48]	; 0x30
 80077e4:	6b3b      	ldr	r3, [r7, #48]	; 0x30
  
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80077e6:	4b71      	ldr	r3, [pc, #452]	; (80079ac <HAL_UART_MspInit+0x200>)
 80077e8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80077ea:	4a70      	ldr	r2, [pc, #448]	; (80079ac <HAL_UART_MspInit+0x200>)
 80077ec:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80077f0:	64d3      	str	r3, [r2, #76]	; 0x4c
 80077f2:	4b6e      	ldr	r3, [pc, #440]	; (80079ac <HAL_UART_MspInit+0x200>)
 80077f4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80077f6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80077fa:	62fb      	str	r3, [r7, #44]	; 0x2c
 80077fc:	6afb      	ldr	r3, [r7, #44]	; 0x2c
    HAL_PWREx_EnableVddIO2();
 80077fe:	f001 fc43 	bl	8009088 <HAL_PWREx_EnableVddIO2>
    /**LPUART1 GPIO Configuration    
    PG7     ------> LPUART1_TX
    PG8     ------> LPUART1_RX 
    */
    GPIO_InitStruct.Pin = STLINK_TX_Pin|STLINK_RX_Pin;
 8007802:	f44f 73c0 	mov.w	r3, #384	; 0x180
 8007806:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007808:	2302      	movs	r3, #2
 800780a:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 800780c:	2300      	movs	r3, #0
 800780e:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8007810:	2303      	movs	r3, #3
 8007812:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF8_LPUART1;
 8007814:	2308      	movs	r3, #8
 8007816:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 8007818:	f107 0334 	add.w	r3, r7, #52	; 0x34
 800781c:	4619      	mov	r1, r3
 800781e:	4864      	ldr	r0, [pc, #400]	; (80079b0 <HAL_UART_MspInit+0x204>)
 8007820:	f000 fefa 	bl	8008618 <HAL_GPIO_Init>
  /* USER CODE BEGIN USART3_MspInit 1 */

  /* USER CODE END USART3_MspInit 1 */
  }

}
 8007824:	e0bb      	b.n	800799e <HAL_UART_MspInit+0x1f2>
  else if(huart->Instance==UART4)
 8007826:	687b      	ldr	r3, [r7, #4]
 8007828:	681b      	ldr	r3, [r3, #0]
 800782a:	4a62      	ldr	r2, [pc, #392]	; (80079b4 <HAL_UART_MspInit+0x208>)
 800782c:	4293      	cmp	r3, r2
 800782e:	d129      	bne.n	8007884 <HAL_UART_MspInit+0xd8>
    __HAL_RCC_UART4_CLK_ENABLE();
 8007830:	4b5e      	ldr	r3, [pc, #376]	; (80079ac <HAL_UART_MspInit+0x200>)
 8007832:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007834:	4a5d      	ldr	r2, [pc, #372]	; (80079ac <HAL_UART_MspInit+0x200>)
 8007836:	f443 2300 	orr.w	r3, r3, #524288	; 0x80000
 800783a:	6593      	str	r3, [r2, #88]	; 0x58
 800783c:	4b5b      	ldr	r3, [pc, #364]	; (80079ac <HAL_UART_MspInit+0x200>)
 800783e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007840:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 8007844:	62bb      	str	r3, [r7, #40]	; 0x28
 8007846:	6abb      	ldr	r3, [r7, #40]	; 0x28
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8007848:	4b58      	ldr	r3, [pc, #352]	; (80079ac <HAL_UART_MspInit+0x200>)
 800784a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800784c:	4a57      	ldr	r2, [pc, #348]	; (80079ac <HAL_UART_MspInit+0x200>)
 800784e:	f043 0301 	orr.w	r3, r3, #1
 8007852:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007854:	4b55      	ldr	r3, [pc, #340]	; (80079ac <HAL_UART_MspInit+0x200>)
 8007856:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007858:	f003 0301 	and.w	r3, r3, #1
 800785c:	627b      	str	r3, [r7, #36]	; 0x24
 800785e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
    GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
 8007860:	2303      	movs	r3, #3
 8007862:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007864:	2302      	movs	r3, #2
 8007866:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007868:	2300      	movs	r3, #0
 800786a:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800786c:	2303      	movs	r3, #3
 800786e:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF8_UART4;
 8007870:	2308      	movs	r3, #8
 8007872:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8007874:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8007878:	4619      	mov	r1, r3
 800787a:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 800787e:	f000 fecb 	bl	8008618 <HAL_GPIO_Init>
}
 8007882:	e08c      	b.n	800799e <HAL_UART_MspInit+0x1f2>
  else if(huart->Instance==USART1)
 8007884:	687b      	ldr	r3, [r7, #4]
 8007886:	681b      	ldr	r3, [r3, #0]
 8007888:	4a4b      	ldr	r2, [pc, #300]	; (80079b8 <HAL_UART_MspInit+0x20c>)
 800788a:	4293      	cmp	r3, r2
 800788c:	d12b      	bne.n	80078e6 <HAL_UART_MspInit+0x13a>
    __HAL_RCC_USART1_CLK_ENABLE();
 800788e:	4b47      	ldr	r3, [pc, #284]	; (80079ac <HAL_UART_MspInit+0x200>)
 8007890:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007892:	4a46      	ldr	r2, [pc, #280]	; (80079ac <HAL_UART_MspInit+0x200>)
 8007894:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 8007898:	6613      	str	r3, [r2, #96]	; 0x60
 800789a:	4b44      	ldr	r3, [pc, #272]	; (80079ac <HAL_UART_MspInit+0x200>)
 800789c:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800789e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 80078a2:	623b      	str	r3, [r7, #32]
 80078a4:	6a3b      	ldr	r3, [r7, #32]
    __HAL_RCC_GPIOG_CLK_ENABLE();
 80078a6:	4b41      	ldr	r3, [pc, #260]	; (80079ac <HAL_UART_MspInit+0x200>)
 80078a8:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80078aa:	4a40      	ldr	r2, [pc, #256]	; (80079ac <HAL_UART_MspInit+0x200>)
 80078ac:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 80078b0:	64d3      	str	r3, [r2, #76]	; 0x4c
 80078b2:	4b3e      	ldr	r3, [pc, #248]	; (80079ac <HAL_UART_MspInit+0x200>)
 80078b4:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 80078b6:	f003 0340 	and.w	r3, r3, #64	; 0x40
 80078ba:	61fb      	str	r3, [r7, #28]
 80078bc:	69fb      	ldr	r3, [r7, #28]
    HAL_PWREx_EnableVddIO2();
 80078be:	f001 fbe3 	bl	8009088 <HAL_PWREx_EnableVddIO2>
    GPIO_InitStruct.Pin = GPIO_PIN_9|GPIO_PIN_10;
 80078c2:	f44f 63c0 	mov.w	r3, #1536	; 0x600
 80078c6:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 80078c8:	2302      	movs	r3, #2
 80078ca:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 80078cc:	2300      	movs	r3, #0
 80078ce:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 80078d0:	2303      	movs	r3, #3
 80078d2:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF7_USART1;
 80078d4:	2307      	movs	r3, #7
 80078d6:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(GPIOG, &GPIO_InitStruct);
 80078d8:	f107 0334 	add.w	r3, r7, #52	; 0x34
 80078dc:	4619      	mov	r1, r3
 80078de:	4834      	ldr	r0, [pc, #208]	; (80079b0 <HAL_UART_MspInit+0x204>)
 80078e0:	f000 fe9a 	bl	8008618 <HAL_GPIO_Init>
}
 80078e4:	e05b      	b.n	800799e <HAL_UART_MspInit+0x1f2>
  else if(huart->Instance==USART2)
 80078e6:	687b      	ldr	r3, [r7, #4]
 80078e8:	681b      	ldr	r3, [r3, #0]
 80078ea:	4a34      	ldr	r2, [pc, #208]	; (80079bc <HAL_UART_MspInit+0x210>)
 80078ec:	4293      	cmp	r3, r2
 80078ee:	d128      	bne.n	8007942 <HAL_UART_MspInit+0x196>
    __HAL_RCC_USART2_CLK_ENABLE();
 80078f0:	4b2e      	ldr	r3, [pc, #184]	; (80079ac <HAL_UART_MspInit+0x200>)
 80078f2:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80078f4:	4a2d      	ldr	r2, [pc, #180]	; (80079ac <HAL_UART_MspInit+0x200>)
 80078f6:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 80078fa:	6593      	str	r3, [r2, #88]	; 0x58
 80078fc:	4b2b      	ldr	r3, [pc, #172]	; (80079ac <HAL_UART_MspInit+0x200>)
 80078fe:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007900:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8007904:	61bb      	str	r3, [r7, #24]
 8007906:	69bb      	ldr	r3, [r7, #24]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8007908:	4b28      	ldr	r3, [pc, #160]	; (80079ac <HAL_UART_MspInit+0x200>)
 800790a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800790c:	4a27      	ldr	r2, [pc, #156]	; (80079ac <HAL_UART_MspInit+0x200>)
 800790e:	f043 0308 	orr.w	r3, r3, #8
 8007912:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007914:	4b25      	ldr	r3, [pc, #148]	; (80079ac <HAL_UART_MspInit+0x200>)
 8007916:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007918:	f003 0308 	and.w	r3, r3, #8
 800791c:	617b      	str	r3, [r7, #20]
 800791e:	697b      	ldr	r3, [r7, #20]
    GPIO_InitStruct.Pin = GPIO_PIN_5|GPIO_PIN_6;
 8007920:	2360      	movs	r3, #96	; 0x60
 8007922:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007924:	2302      	movs	r3, #2
 8007926:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007928:	2300      	movs	r3, #0
 800792a:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800792c:	2303      	movs	r3, #3
 800792e:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 8007930:	2307      	movs	r3, #7
 8007932:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8007934:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8007938:	4619      	mov	r1, r3
 800793a:	4821      	ldr	r0, [pc, #132]	; (80079c0 <HAL_UART_MspInit+0x214>)
 800793c:	f000 fe6c 	bl	8008618 <HAL_GPIO_Init>
}
 8007940:	e02d      	b.n	800799e <HAL_UART_MspInit+0x1f2>
  else if(huart->Instance==USART3)
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	681b      	ldr	r3, [r3, #0]
 8007946:	4a1f      	ldr	r2, [pc, #124]	; (80079c4 <HAL_UART_MspInit+0x218>)
 8007948:	4293      	cmp	r3, r2
 800794a:	d128      	bne.n	800799e <HAL_UART_MspInit+0x1f2>
    __HAL_RCC_USART3_CLK_ENABLE();
 800794c:	4b17      	ldr	r3, [pc, #92]	; (80079ac <HAL_UART_MspInit+0x200>)
 800794e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007950:	4a16      	ldr	r2, [pc, #88]	; (80079ac <HAL_UART_MspInit+0x200>)
 8007952:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8007956:	6593      	str	r3, [r2, #88]	; 0x58
 8007958:	4b14      	ldr	r3, [pc, #80]	; (80079ac <HAL_UART_MspInit+0x200>)
 800795a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800795c:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 8007960:	613b      	str	r3, [r7, #16]
 8007962:	693b      	ldr	r3, [r7, #16]
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8007964:	4b11      	ldr	r3, [pc, #68]	; (80079ac <HAL_UART_MspInit+0x200>)
 8007966:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007968:	4a10      	ldr	r2, [pc, #64]	; (80079ac <HAL_UART_MspInit+0x200>)
 800796a:	f043 0308 	orr.w	r3, r3, #8
 800796e:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007970:	4b0e      	ldr	r3, [pc, #56]	; (80079ac <HAL_UART_MspInit+0x200>)
 8007972:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007974:	f003 0308 	and.w	r3, r3, #8
 8007978:	60fb      	str	r3, [r7, #12]
 800797a:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = STLK_RX_Pin|STLK_TX_Pin;
 800797c:	f44f 7340 	mov.w	r3, #768	; 0x300
 8007980:	637b      	str	r3, [r7, #52]	; 0x34
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007982:	2302      	movs	r3, #2
 8007984:	63bb      	str	r3, [r7, #56]	; 0x38
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007986:	2300      	movs	r3, #0
 8007988:	63fb      	str	r3, [r7, #60]	; 0x3c
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 800798a:	2303      	movs	r3, #3
 800798c:	643b      	str	r3, [r7, #64]	; 0x40
    GPIO_InitStruct.Alternate = GPIO_AF7_USART3;
 800798e:	2307      	movs	r3, #7
 8007990:	647b      	str	r3, [r7, #68]	; 0x44
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8007992:	f107 0334 	add.w	r3, r7, #52	; 0x34
 8007996:	4619      	mov	r1, r3
 8007998:	4809      	ldr	r0, [pc, #36]	; (80079c0 <HAL_UART_MspInit+0x214>)
 800799a:	f000 fe3d 	bl	8008618 <HAL_GPIO_Init>
}
 800799e:	bf00      	nop
 80079a0:	3748      	adds	r7, #72	; 0x48
 80079a2:	46bd      	mov	sp, r7
 80079a4:	bd80      	pop	{r7, pc}
 80079a6:	bf00      	nop
 80079a8:	40008000 	.word	0x40008000
 80079ac:	40021000 	.word	0x40021000
 80079b0:	48001800 	.word	0x48001800
 80079b4:	40004c00 	.word	0x40004c00
 80079b8:	40013800 	.word	0x40013800
 80079bc:	40004400 	.word	0x40004400
 80079c0:	48000c00 	.word	0x48000c00
 80079c4:	40004800 	.word	0x40004800

080079c8 <HAL_TIM_Base_MspInit>:
* This function configures the hardware resources used in this example
* @param htim_base: TIM_Base handle pointer
* @retval None
*/
void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* htim_base)
{
 80079c8:	b480      	push	{r7}
 80079ca:	b087      	sub	sp, #28
 80079cc:	af00      	add	r7, sp, #0
 80079ce:	6078      	str	r0, [r7, #4]
  if(htim_base->Instance==TIM2)
 80079d0:	687b      	ldr	r3, [r7, #4]
 80079d2:	681b      	ldr	r3, [r3, #0]
 80079d4:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 80079d8:	d10c      	bne.n	80079f4 <HAL_TIM_Base_MspInit+0x2c>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* Peripheral clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 80079da:	4b1b      	ldr	r3, [pc, #108]	; (8007a48 <HAL_TIM_Base_MspInit+0x80>)
 80079dc:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80079de:	4a1a      	ldr	r2, [pc, #104]	; (8007a48 <HAL_TIM_Base_MspInit+0x80>)
 80079e0:	f043 0301 	orr.w	r3, r3, #1
 80079e4:	6593      	str	r3, [r2, #88]	; 0x58
 80079e6:	4b18      	ldr	r3, [pc, #96]	; (8007a48 <HAL_TIM_Base_MspInit+0x80>)
 80079e8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 80079ea:	f003 0301 	and.w	r3, r3, #1
 80079ee:	617b      	str	r3, [r7, #20]
 80079f0:	697b      	ldr	r3, [r7, #20]
  /* USER CODE BEGIN TIM7_MspInit 1 */

  /* USER CODE END TIM7_MspInit 1 */
  }

}
 80079f2:	e022      	b.n	8007a3a <HAL_TIM_Base_MspInit+0x72>
  else if(htim_base->Instance==TIM4)
 80079f4:	687b      	ldr	r3, [r7, #4]
 80079f6:	681b      	ldr	r3, [r3, #0]
 80079f8:	4a14      	ldr	r2, [pc, #80]	; (8007a4c <HAL_TIM_Base_MspInit+0x84>)
 80079fa:	4293      	cmp	r3, r2
 80079fc:	d10c      	bne.n	8007a18 <HAL_TIM_Base_MspInit+0x50>
    __HAL_RCC_TIM4_CLK_ENABLE();
 80079fe:	4b12      	ldr	r3, [pc, #72]	; (8007a48 <HAL_TIM_Base_MspInit+0x80>)
 8007a00:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007a02:	4a11      	ldr	r2, [pc, #68]	; (8007a48 <HAL_TIM_Base_MspInit+0x80>)
 8007a04:	f043 0304 	orr.w	r3, r3, #4
 8007a08:	6593      	str	r3, [r2, #88]	; 0x58
 8007a0a:	4b0f      	ldr	r3, [pc, #60]	; (8007a48 <HAL_TIM_Base_MspInit+0x80>)
 8007a0c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007a0e:	f003 0304 	and.w	r3, r3, #4
 8007a12:	613b      	str	r3, [r7, #16]
 8007a14:	693b      	ldr	r3, [r7, #16]
}
 8007a16:	e010      	b.n	8007a3a <HAL_TIM_Base_MspInit+0x72>
  else if(htim_base->Instance==TIM7)
 8007a18:	687b      	ldr	r3, [r7, #4]
 8007a1a:	681b      	ldr	r3, [r3, #0]
 8007a1c:	4a0c      	ldr	r2, [pc, #48]	; (8007a50 <HAL_TIM_Base_MspInit+0x88>)
 8007a1e:	4293      	cmp	r3, r2
 8007a20:	d10b      	bne.n	8007a3a <HAL_TIM_Base_MspInit+0x72>
    __HAL_RCC_TIM7_CLK_ENABLE();
 8007a22:	4b09      	ldr	r3, [pc, #36]	; (8007a48 <HAL_TIM_Base_MspInit+0x80>)
 8007a24:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007a26:	4a08      	ldr	r2, [pc, #32]	; (8007a48 <HAL_TIM_Base_MspInit+0x80>)
 8007a28:	f043 0320 	orr.w	r3, r3, #32
 8007a2c:	6593      	str	r3, [r2, #88]	; 0x58
 8007a2e:	4b06      	ldr	r3, [pc, #24]	; (8007a48 <HAL_TIM_Base_MspInit+0x80>)
 8007a30:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007a32:	f003 0320 	and.w	r3, r3, #32
 8007a36:	60fb      	str	r3, [r7, #12]
 8007a38:	68fb      	ldr	r3, [r7, #12]
}
 8007a3a:	bf00      	nop
 8007a3c:	371c      	adds	r7, #28
 8007a3e:	46bd      	mov	sp, r7
 8007a40:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007a44:	4770      	bx	lr
 8007a46:	bf00      	nop
 8007a48:	40021000 	.word	0x40021000
 8007a4c:	40000800 	.word	0x40000800
 8007a50:	40001400 	.word	0x40001400

08007a54 <HAL_TIM_MspPostInit>:

void HAL_TIM_MspPostInit(TIM_HandleTypeDef* htim)
{
 8007a54:	b580      	push	{r7, lr}
 8007a56:	b08a      	sub	sp, #40	; 0x28
 8007a58:	af00      	add	r7, sp, #0
 8007a5a:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8007a5c:	f107 0314 	add.w	r3, r7, #20
 8007a60:	2200      	movs	r2, #0
 8007a62:	601a      	str	r2, [r3, #0]
 8007a64:	605a      	str	r2, [r3, #4]
 8007a66:	609a      	str	r2, [r3, #8]
 8007a68:	60da      	str	r2, [r3, #12]
 8007a6a:	611a      	str	r2, [r3, #16]
  if(htim->Instance==TIM2)
 8007a6c:	687b      	ldr	r3, [r7, #4]
 8007a6e:	681b      	ldr	r3, [r3, #0]
 8007a70:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 8007a74:	d11d      	bne.n	8007ab2 <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8007a76:	4b22      	ldr	r3, [pc, #136]	; (8007b00 <HAL_TIM_MspPostInit+0xac>)
 8007a78:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007a7a:	4a21      	ldr	r2, [pc, #132]	; (8007b00 <HAL_TIM_MspPostInit+0xac>)
 8007a7c:	f043 0301 	orr.w	r3, r3, #1
 8007a80:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007a82:	4b1f      	ldr	r3, [pc, #124]	; (8007b00 <HAL_TIM_MspPostInit+0xac>)
 8007a84:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007a86:	f003 0301 	and.w	r3, r3, #1
 8007a8a:	613b      	str	r3, [r7, #16]
 8007a8c:	693b      	ldr	r3, [r7, #16]
    /**TIM2 GPIO Configuration    
    PA5     ------> TIM2_CH1 
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 8007a8e:	2320      	movs	r3, #32
 8007a90:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007a92:	2302      	movs	r3, #2
 8007a94:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007a96:	2300      	movs	r3, #0
 8007a98:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8007a9a:	2300      	movs	r3, #0
 8007a9c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 8007a9e:	2301      	movs	r3, #1
 8007aa0:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8007aa2:	f107 0314 	add.w	r3, r7, #20
 8007aa6:	4619      	mov	r1, r3
 8007aa8:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8007aac:	f000 fdb4 	bl	8008618 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM4_MspPostInit 1 */

  /* USER CODE END TIM4_MspPostInit 1 */
  }

}
 8007ab0:	e021      	b.n	8007af6 <HAL_TIM_MspPostInit+0xa2>
  else if(htim->Instance==TIM4)
 8007ab2:	687b      	ldr	r3, [r7, #4]
 8007ab4:	681b      	ldr	r3, [r3, #0]
 8007ab6:	4a13      	ldr	r2, [pc, #76]	; (8007b04 <HAL_TIM_MspPostInit+0xb0>)
 8007ab8:	4293      	cmp	r3, r2
 8007aba:	d11c      	bne.n	8007af6 <HAL_TIM_MspPostInit+0xa2>
    __HAL_RCC_GPIOD_CLK_ENABLE();
 8007abc:	4b10      	ldr	r3, [pc, #64]	; (8007b00 <HAL_TIM_MspPostInit+0xac>)
 8007abe:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007ac0:	4a0f      	ldr	r2, [pc, #60]	; (8007b00 <HAL_TIM_MspPostInit+0xac>)
 8007ac2:	f043 0308 	orr.w	r3, r3, #8
 8007ac6:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007ac8:	4b0d      	ldr	r3, [pc, #52]	; (8007b00 <HAL_TIM_MspPostInit+0xac>)
 8007aca:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007acc:	f003 0308 	and.w	r3, r3, #8
 8007ad0:	60fb      	str	r3, [r7, #12]
 8007ad2:	68fb      	ldr	r3, [r7, #12]
    GPIO_InitStruct.Pin = GPIO_PIN_14|GPIO_PIN_15;
 8007ad4:	f44f 4340 	mov.w	r3, #49152	; 0xc000
 8007ad8:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007ada:	2302      	movs	r3, #2
 8007adc:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007ade:	2300      	movs	r3, #0
 8007ae0:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 8007ae2:	2300      	movs	r3, #0
 8007ae4:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF2_TIM4;
 8007ae6:	2302      	movs	r3, #2
 8007ae8:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOD, &GPIO_InitStruct);
 8007aea:	f107 0314 	add.w	r3, r7, #20
 8007aee:	4619      	mov	r1, r3
 8007af0:	4805      	ldr	r0, [pc, #20]	; (8007b08 <HAL_TIM_MspPostInit+0xb4>)
 8007af2:	f000 fd91 	bl	8008618 <HAL_GPIO_Init>
}
 8007af6:	bf00      	nop
 8007af8:	3728      	adds	r7, #40	; 0x28
 8007afa:	46bd      	mov	sp, r7
 8007afc:	bd80      	pop	{r7, pc}
 8007afe:	bf00      	nop
 8007b00:	40021000 	.word	0x40021000
 8007b04:	40000800 	.word	0x40000800
 8007b08:	48000c00 	.word	0x48000c00

08007b0c <HAL_PCD_MspInit>:
* This function configures the hardware resources used in this example
* @param hpcd: PCD handle pointer
* @retval None
*/
void HAL_PCD_MspInit(PCD_HandleTypeDef* hpcd)
{
 8007b0c:	b580      	push	{r7, lr}
 8007b0e:	b08a      	sub	sp, #40	; 0x28
 8007b10:	af00      	add	r7, sp, #0
 8007b12:	6078      	str	r0, [r7, #4]
  GPIO_InitTypeDef GPIO_InitStruct = {0};
 8007b14:	f107 0314 	add.w	r3, r7, #20
 8007b18:	2200      	movs	r2, #0
 8007b1a:	601a      	str	r2, [r3, #0]
 8007b1c:	605a      	str	r2, [r3, #4]
 8007b1e:	609a      	str	r2, [r3, #8]
 8007b20:	60da      	str	r2, [r3, #12]
 8007b22:	611a      	str	r2, [r3, #16]
  if(hpcd->Instance==USB_OTG_FS)
 8007b24:	687b      	ldr	r3, [r7, #4]
 8007b26:	681b      	ldr	r3, [r3, #0]
 8007b28:	f1b3 4fa0 	cmp.w	r3, #1342177280	; 0x50000000
 8007b2c:	d154      	bne.n	8007bd8 <HAL_PCD_MspInit+0xcc>
  {
  /* USER CODE BEGIN USB_OTG_FS_MspInit 0 */

  /* USER CODE END USB_OTG_FS_MspInit 0 */
  
    __HAL_RCC_GPIOA_CLK_ENABLE();
 8007b2e:	4b2c      	ldr	r3, [pc, #176]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007b30:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b32:	4a2b      	ldr	r2, [pc, #172]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007b34:	f043 0301 	orr.w	r3, r3, #1
 8007b38:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007b3a:	4b29      	ldr	r3, [pc, #164]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007b3c:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b3e:	f003 0301 	and.w	r3, r3, #1
 8007b42:	613b      	str	r3, [r7, #16]
 8007b44:	693b      	ldr	r3, [r7, #16]
    PA9     ------> USB_OTG_FS_VBUS
    PA10     ------> USB_OTG_FS_ID
    PA11     ------> USB_OTG_FS_DM
    PA12     ------> USB_OTG_FS_DP 
    */
    GPIO_InitStruct.Pin = USB_SOF_Pin|USB_ID_Pin|USB_DM_Pin|USB_DP_Pin;
 8007b46:	f44f 53e8 	mov.w	r3, #7424	; 0x1d00
 8007b4a:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 8007b4c:	2302      	movs	r3, #2
 8007b4e:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007b50:	2300      	movs	r3, #0
 8007b52:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 8007b54:	2303      	movs	r3, #3
 8007b56:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF10_OTG_FS;
 8007b58:	230a      	movs	r3, #10
 8007b5a:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 8007b5c:	f107 0314 	add.w	r3, r7, #20
 8007b60:	4619      	mov	r1, r3
 8007b62:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8007b66:	f000 fd57 	bl	8008618 <HAL_GPIO_Init>

    GPIO_InitStruct.Pin = USB_VBUS_Pin;
 8007b6a:	f44f 7300 	mov.w	r3, #512	; 0x200
 8007b6e:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 8007b70:	2300      	movs	r3, #0
 8007b72:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 8007b74:	2300      	movs	r3, #0
 8007b76:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(USB_VBUS_GPIO_Port, &GPIO_InitStruct);
 8007b78:	f107 0314 	add.w	r3, r7, #20
 8007b7c:	4619      	mov	r1, r3
 8007b7e:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8007b82:	f000 fd49 	bl	8008618 <HAL_GPIO_Init>

    /* Peripheral clock enable */
    __HAL_RCC_USB_OTG_FS_CLK_ENABLE();
 8007b86:	4b16      	ldr	r3, [pc, #88]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007b88:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b8a:	4a15      	ldr	r2, [pc, #84]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007b8c:	f443 5380 	orr.w	r3, r3, #4096	; 0x1000
 8007b90:	64d3      	str	r3, [r2, #76]	; 0x4c
 8007b92:	4b13      	ldr	r3, [pc, #76]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007b94:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 8007b96:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8007b9a:	60fb      	str	r3, [r7, #12]
 8007b9c:	68fb      	ldr	r3, [r7, #12]

    /* Enable VDDUSB */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 8007b9e:	4b10      	ldr	r3, [pc, #64]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007ba0:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007ba2:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007ba6:	2b00      	cmp	r3, #0
 8007ba8:	d114      	bne.n	8007bd4 <HAL_PCD_MspInit+0xc8>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 8007baa:	4b0d      	ldr	r3, [pc, #52]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007bac:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007bae:	4a0c      	ldr	r2, [pc, #48]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007bb0:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8007bb4:	6593      	str	r3, [r2, #88]	; 0x58
 8007bb6:	4b0a      	ldr	r3, [pc, #40]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007bb8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007bba:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8007bbe:	60bb      	str	r3, [r7, #8]
 8007bc0:	68bb      	ldr	r3, [r7, #8]
      HAL_PWREx_EnableVddUSB();
 8007bc2:	f001 fa51 	bl	8009068 <HAL_PWREx_EnableVddUSB>
      __HAL_RCC_PWR_CLK_DISABLE();
 8007bc6:	4b06      	ldr	r3, [pc, #24]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007bc8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8007bca:	4a05      	ldr	r2, [pc, #20]	; (8007be0 <HAL_PCD_MspInit+0xd4>)
 8007bcc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8007bd0:	6593      	str	r3, [r2, #88]	; 0x58
  /* USER CODE BEGIN USB_OTG_FS_MspInit 1 */

  /* USER CODE END USB_OTG_FS_MspInit 1 */
  }

}
 8007bd2:	e001      	b.n	8007bd8 <HAL_PCD_MspInit+0xcc>
      HAL_PWREx_EnableVddUSB();
 8007bd4:	f001 fa48 	bl	8009068 <HAL_PWREx_EnableVddUSB>
}
 8007bd8:	bf00      	nop
 8007bda:	3728      	adds	r7, #40	; 0x28
 8007bdc:	46bd      	mov	sp, r7
 8007bde:	bd80      	pop	{r7, pc}
 8007be0:	40021000 	.word	0x40021000

08007be4 <HAL_InitTick>:
 8007be4:	b580      	push	{r7, lr}
 8007be6:	b08c      	sub	sp, #48	; 0x30
 8007be8:	af00      	add	r7, sp, #0
 8007bea:	6078      	str	r0, [r7, #4]
 8007bec:	2300      	movs	r3, #0
 8007bee:	62fb      	str	r3, [r7, #44]	; 0x2c
 8007bf0:	2300      	movs	r3, #0
 8007bf2:	62bb      	str	r3, [r7, #40]	; 0x28
 8007bf4:	2200      	movs	r2, #0
 8007bf6:	6879      	ldr	r1, [r7, #4]
 8007bf8:	202c      	movs	r0, #44	; 0x2c
 8007bfa:	f000 fce3 	bl	80085c4 <HAL_NVIC_SetPriority>
 8007bfe:	202c      	movs	r0, #44	; 0x2c
 8007c00:	f000 fcfc 	bl	80085fc <HAL_NVIC_EnableIRQ>
 8007c04:	4b1e      	ldr	r3, [pc, #120]	; (8007c80 <HAL_InitTick+0x9c>)
 8007c06:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007c08:	4a1d      	ldr	r2, [pc, #116]	; (8007c80 <HAL_InitTick+0x9c>)
 8007c0a:	f443 5300 	orr.w	r3, r3, #8192	; 0x2000
 8007c0e:	6613      	str	r3, [r2, #96]	; 0x60
 8007c10:	4b1b      	ldr	r3, [pc, #108]	; (8007c80 <HAL_InitTick+0x9c>)
 8007c12:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8007c14:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 8007c18:	60fb      	str	r3, [r7, #12]
 8007c1a:	68fb      	ldr	r3, [r7, #12]
 8007c1c:	f107 0210 	add.w	r2, r7, #16
 8007c20:	f107 0314 	add.w	r3, r7, #20
 8007c24:	4611      	mov	r1, r2
 8007c26:	4618      	mov	r0, r3
 8007c28:	f002 f852 	bl	8009cd0 <HAL_RCC_GetClockConfig>
 8007c2c:	f002 f83a 	bl	8009ca4 <HAL_RCC_GetPCLK2Freq>
 8007c30:	62f8      	str	r0, [r7, #44]	; 0x2c
 8007c32:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 8007c34:	4a13      	ldr	r2, [pc, #76]	; (8007c84 <HAL_InitTick+0xa0>)
 8007c36:	fba2 2303 	umull	r2, r3, r2, r3
 8007c3a:	0c9b      	lsrs	r3, r3, #18
 8007c3c:	3b01      	subs	r3, #1
 8007c3e:	62bb      	str	r3, [r7, #40]	; 0x28
 8007c40:	4b11      	ldr	r3, [pc, #68]	; (8007c88 <HAL_InitTick+0xa4>)
 8007c42:	4a12      	ldr	r2, [pc, #72]	; (8007c8c <HAL_InitTick+0xa8>)
 8007c44:	601a      	str	r2, [r3, #0]
 8007c46:	4b10      	ldr	r3, [pc, #64]	; (8007c88 <HAL_InitTick+0xa4>)
 8007c48:	f240 32e7 	movw	r2, #999	; 0x3e7
 8007c4c:	60da      	str	r2, [r3, #12]
 8007c4e:	4a0e      	ldr	r2, [pc, #56]	; (8007c88 <HAL_InitTick+0xa4>)
 8007c50:	6abb      	ldr	r3, [r7, #40]	; 0x28
 8007c52:	6053      	str	r3, [r2, #4]
 8007c54:	4b0c      	ldr	r3, [pc, #48]	; (8007c88 <HAL_InitTick+0xa4>)
 8007c56:	2200      	movs	r2, #0
 8007c58:	611a      	str	r2, [r3, #16]
 8007c5a:	4b0b      	ldr	r3, [pc, #44]	; (8007c88 <HAL_InitTick+0xa4>)
 8007c5c:	2200      	movs	r2, #0
 8007c5e:	609a      	str	r2, [r3, #8]
 8007c60:	4809      	ldr	r0, [pc, #36]	; (8007c88 <HAL_InitTick+0xa4>)
 8007c62:	f002 fe41 	bl	800a8e8 <HAL_TIM_Base_Init>
 8007c66:	4603      	mov	r3, r0
 8007c68:	2b00      	cmp	r3, #0
 8007c6a:	d104      	bne.n	8007c76 <HAL_InitTick+0x92>
 8007c6c:	4806      	ldr	r0, [pc, #24]	; (8007c88 <HAL_InitTick+0xa4>)
 8007c6e:	f002 fe67 	bl	800a940 <HAL_TIM_Base_Start_IT>
 8007c72:	4603      	mov	r3, r0
 8007c74:	e000      	b.n	8007c78 <HAL_InitTick+0x94>
 8007c76:	2301      	movs	r3, #1
 8007c78:	4618      	mov	r0, r3
 8007c7a:	3730      	adds	r7, #48	; 0x30
 8007c7c:	46bd      	mov	sp, r7
 8007c7e:	bd80      	pop	{r7, pc}
 8007c80:	40021000 	.word	0x40021000
 8007c84:	431bde83 	.word	0x431bde83
 8007c88:	2000b55c 	.word	0x2000b55c
 8007c8c:	40013400 	.word	0x40013400

08007c90 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 8007c90:	b480      	push	{r7}
 8007c92:	af00      	add	r7, sp, #0

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */

  /* USER CODE END NonMaskableInt_IRQn 1 */
}
 8007c94:	bf00      	nop
 8007c96:	46bd      	mov	sp, r7
 8007c98:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007c9c:	4770      	bx	lr
	...

08007ca0 <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 8007ca0:	b580      	push	{r7, lr}
 8007ca2:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */
	HAL_UART_Transmit(&hlpuart1, (uint8_t *)"fatal error", strlen("fatal error"), 1000);
 8007ca4:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 8007ca8:	220b      	movs	r2, #11
 8007caa:	4909      	ldr	r1, [pc, #36]	; (8007cd0 <HardFault_Handler+0x30>)
 8007cac:	4809      	ldr	r0, [pc, #36]	; (8007cd4 <HardFault_Handler+0x34>)
 8007cae:	f003 ffad 	bl	800bc0c <HAL_UART_Transmit>
	HAL_TIM_PWM_Stop(&htim4, TIM_CHANNEL_3);
 8007cb2:	2108      	movs	r1, #8
 8007cb4:	4808      	ldr	r0, [pc, #32]	; (8007cd8 <HardFault_Handler+0x38>)
 8007cb6:	f002 fefb 	bl	800aab0 <HAL_TIM_PWM_Stop>
	HAL_TIM_PWM_Stop(&htim4, TIM_CHANNEL_4);
 8007cba:	210c      	movs	r1, #12
 8007cbc:	4806      	ldr	r0, [pc, #24]	; (8007cd8 <HardFault_Handler+0x38>)
 8007cbe:	f002 fef7 	bl	800aab0 <HAL_TIM_PWM_Stop>
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_7, 0);
 8007cc2:	2200      	movs	r2, #0
 8007cc4:	2180      	movs	r1, #128	; 0x80
 8007cc6:	f04f 4090 	mov.w	r0, #1207959552	; 0x48000000
 8007cca:	f000 fe4f 	bl	800896c <HAL_GPIO_WritePin>
  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 8007cce:	e7fe      	b.n	8007cce <HardFault_Handler+0x2e>
 8007cd0:	080162b0 	.word	0x080162b0
 8007cd4:	2000b290 	.word	0x2000b290
 8007cd8:	2000ad70 	.word	0x2000ad70

08007cdc <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 8007cdc:	b480      	push	{r7}
 8007cde:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 8007ce0:	e7fe      	b.n	8007ce0 <MemManage_Handler+0x4>

08007ce2 <BusFault_Handler>:

/**
  * @brief This function handles Prefetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 8007ce2:	b480      	push	{r7}
 8007ce4:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 8007ce6:	e7fe      	b.n	8007ce6 <BusFault_Handler+0x4>

08007ce8 <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 8007ce8:	b480      	push	{r7}
 8007cea:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 8007cec:	e7fe      	b.n	8007cec <UsageFault_Handler+0x4>

08007cee <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 8007cee:	b480      	push	{r7}
 8007cf0:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 8007cf2:	bf00      	nop
 8007cf4:	46bd      	mov	sp, r7
 8007cf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007cfa:	4770      	bx	lr

08007cfc <TIM8_UP_IRQHandler>:

/**
  * @brief This function handles TIM8 update interrupt.
  */
void TIM8_UP_IRQHandler(void)
{
 8007cfc:	b580      	push	{r7, lr}
 8007cfe:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN TIM8_UP_IRQn 0 */

  /* USER CODE END TIM8_UP_IRQn 0 */
  HAL_TIM_IRQHandler(&htim8);
 8007d00:	4802      	ldr	r0, [pc, #8]	; (8007d0c <TIM8_UP_IRQHandler+0x10>)
 8007d02:	f002 ff43 	bl	800ab8c <HAL_TIM_IRQHandler>
  /* USER CODE BEGIN TIM8_UP_IRQn 1 */

  /* USER CODE END TIM8_UP_IRQn 1 */
}
 8007d06:	bf00      	nop
 8007d08:	bd80      	pop	{r7, pc}
 8007d0a:	bf00      	nop
 8007d0c:	2000b55c 	.word	0x2000b55c

08007d10 <_sbrk>:
 8007d10:	b580      	push	{r7, lr}
 8007d12:	b084      	sub	sp, #16
 8007d14:	af00      	add	r7, sp, #0
 8007d16:	6078      	str	r0, [r7, #4]
 8007d18:	4b11      	ldr	r3, [pc, #68]	; (8007d60 <_sbrk+0x50>)
 8007d1a:	681b      	ldr	r3, [r3, #0]
 8007d1c:	2b00      	cmp	r3, #0
 8007d1e:	d102      	bne.n	8007d26 <_sbrk+0x16>
 8007d20:	4b0f      	ldr	r3, [pc, #60]	; (8007d60 <_sbrk+0x50>)
 8007d22:	4a10      	ldr	r2, [pc, #64]	; (8007d64 <_sbrk+0x54>)
 8007d24:	601a      	str	r2, [r3, #0]
 8007d26:	4b0e      	ldr	r3, [pc, #56]	; (8007d60 <_sbrk+0x50>)
 8007d28:	681b      	ldr	r3, [r3, #0]
 8007d2a:	60fb      	str	r3, [r7, #12]
 8007d2c:	4b0c      	ldr	r3, [pc, #48]	; (8007d60 <_sbrk+0x50>)
 8007d2e:	681a      	ldr	r2, [r3, #0]
 8007d30:	687b      	ldr	r3, [r7, #4]
 8007d32:	4413      	add	r3, r2
 8007d34:	466a      	mov	r2, sp
 8007d36:	4293      	cmp	r3, r2
 8007d38:	d907      	bls.n	8007d4a <_sbrk+0x3a>
 8007d3a:	f008 fc4b 	bl	80105d4 <__errno>
 8007d3e:	4602      	mov	r2, r0
 8007d40:	230c      	movs	r3, #12
 8007d42:	6013      	str	r3, [r2, #0]
 8007d44:	f04f 33ff 	mov.w	r3, #4294967295
 8007d48:	e006      	b.n	8007d58 <_sbrk+0x48>
 8007d4a:	4b05      	ldr	r3, [pc, #20]	; (8007d60 <_sbrk+0x50>)
 8007d4c:	681a      	ldr	r2, [r3, #0]
 8007d4e:	687b      	ldr	r3, [r7, #4]
 8007d50:	4413      	add	r3, r2
 8007d52:	4a03      	ldr	r2, [pc, #12]	; (8007d60 <_sbrk+0x50>)
 8007d54:	6013      	str	r3, [r2, #0]
 8007d56:	68fb      	ldr	r3, [r7, #12]
 8007d58:	4618      	mov	r0, r3
 8007d5a:	3710      	adds	r7, #16
 8007d5c:	46bd      	mov	sp, r7
 8007d5e:	bd80      	pop	{r7, pc}
 8007d60:	20003154 	.word	0x20003154
 8007d64:	2000b5e8 	.word	0x2000b5e8

08007d68 <SystemInit>:
 8007d68:	b480      	push	{r7}
 8007d6a:	af00      	add	r7, sp, #0
 8007d6c:	4b17      	ldr	r3, [pc, #92]	; (8007dcc <SystemInit+0x64>)
 8007d6e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 8007d72:	4a16      	ldr	r2, [pc, #88]	; (8007dcc <SystemInit+0x64>)
 8007d74:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 8007d78:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88
 8007d7c:	4b14      	ldr	r3, [pc, #80]	; (8007dd0 <SystemInit+0x68>)
 8007d7e:	681b      	ldr	r3, [r3, #0]
 8007d80:	4a13      	ldr	r2, [pc, #76]	; (8007dd0 <SystemInit+0x68>)
 8007d82:	f043 0301 	orr.w	r3, r3, #1
 8007d86:	6013      	str	r3, [r2, #0]
 8007d88:	4b11      	ldr	r3, [pc, #68]	; (8007dd0 <SystemInit+0x68>)
 8007d8a:	2200      	movs	r2, #0
 8007d8c:	609a      	str	r2, [r3, #8]
 8007d8e:	4b10      	ldr	r3, [pc, #64]	; (8007dd0 <SystemInit+0x68>)
 8007d90:	681b      	ldr	r3, [r3, #0]
 8007d92:	4a0f      	ldr	r2, [pc, #60]	; (8007dd0 <SystemInit+0x68>)
 8007d94:	f023 53a8 	bic.w	r3, r3, #352321536	; 0x15000000
 8007d98:	f423 2310 	bic.w	r3, r3, #589824	; 0x90000
 8007d9c:	6013      	str	r3, [r2, #0]
 8007d9e:	4b0c      	ldr	r3, [pc, #48]	; (8007dd0 <SystemInit+0x68>)
 8007da0:	f44f 5280 	mov.w	r2, #4096	; 0x1000
 8007da4:	60da      	str	r2, [r3, #12]
 8007da6:	4b0a      	ldr	r3, [pc, #40]	; (8007dd0 <SystemInit+0x68>)
 8007da8:	681b      	ldr	r3, [r3, #0]
 8007daa:	4a09      	ldr	r2, [pc, #36]	; (8007dd0 <SystemInit+0x68>)
 8007dac:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 8007db0:	6013      	str	r3, [r2, #0]
 8007db2:	4b07      	ldr	r3, [pc, #28]	; (8007dd0 <SystemInit+0x68>)
 8007db4:	2200      	movs	r2, #0
 8007db6:	619a      	str	r2, [r3, #24]
 8007db8:	4b04      	ldr	r3, [pc, #16]	; (8007dcc <SystemInit+0x64>)
 8007dba:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 8007dbe:	609a      	str	r2, [r3, #8]
 8007dc0:	bf00      	nop
 8007dc2:	46bd      	mov	sp, r7
 8007dc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8007dc8:	4770      	bx	lr
 8007dca:	bf00      	nop
 8007dcc:	e000ed00 	.word	0xe000ed00
 8007dd0:	40021000 	.word	0x40021000

08007dd4 <UART4_IRQHandler>:

/*functions*/


void USART_IMU_IRQHandler(void) // Sync and Queue NMEA Sentences
{
 8007dd4:	b580      	push	{r7, lr}
 8007dd6:	b082      	sub	sp, #8
 8007dd8:	af00      	add	r7, sp, #0
	 static char rx_buffer[LINEMAX + 1]; // Local holding buffer to build line, w/NUL
	 static int rx_index = 0;
	 if (USART_IMU->ISR & USART_ISR_ORE) // Overrun Error
 8007dda:	4b29      	ldr	r3, [pc, #164]	; (8007e80 <UART4_IRQHandler+0xac>)
 8007ddc:	69db      	ldr	r3, [r3, #28]
 8007dde:	f003 0308 	and.w	r3, r3, #8
 8007de2:	2b00      	cmp	r3, #0
 8007de4:	d002      	beq.n	8007dec <UART4_IRQHandler+0x18>
		 USART_IMU->ICR = USART_ICR_ORECF;
 8007de6:	4b26      	ldr	r3, [pc, #152]	; (8007e80 <UART4_IRQHandler+0xac>)
 8007de8:	2208      	movs	r2, #8
 8007dea:	621a      	str	r2, [r3, #32]
	 if (USART_IMU->ISR & USART_ISR_NE) // Noise Error
 8007dec:	4b24      	ldr	r3, [pc, #144]	; (8007e80 <UART4_IRQHandler+0xac>)
 8007dee:	69db      	ldr	r3, [r3, #28]
 8007df0:	f003 0304 	and.w	r3, r3, #4
 8007df4:	2b00      	cmp	r3, #0
 8007df6:	d002      	beq.n	8007dfe <UART4_IRQHandler+0x2a>
		 USART_IMU->ICR = USART_ICR_NCF;
 8007df8:	4b21      	ldr	r3, [pc, #132]	; (8007e80 <UART4_IRQHandler+0xac>)
 8007dfa:	2204      	movs	r2, #4
 8007dfc:	621a      	str	r2, [r3, #32]
	 if (USART_IMU->ISR & USART_ISR_FE) // Framing Error
 8007dfe:	4b20      	ldr	r3, [pc, #128]	; (8007e80 <UART4_IRQHandler+0xac>)
 8007e00:	69db      	ldr	r3, [r3, #28]
 8007e02:	f003 0302 	and.w	r3, r3, #2
 8007e06:	2b00      	cmp	r3, #0
 8007e08:	d002      	beq.n	8007e10 <UART4_IRQHandler+0x3c>
		 USART_IMU->ICR = USART_ICR_FECF;
 8007e0a:	4b1d      	ldr	r3, [pc, #116]	; (8007e80 <UART4_IRQHandler+0xac>)
 8007e0c:	2202      	movs	r2, #2
 8007e0e:	621a      	str	r2, [r3, #32]
	 if (USART_IMU->ISR & USART_ISR_RXNE) // Received character?
 8007e10:	4b1b      	ldr	r3, [pc, #108]	; (8007e80 <UART4_IRQHandler+0xac>)
 8007e12:	69db      	ldr	r3, [r3, #28]
 8007e14:	f003 0320 	and.w	r3, r3, #32
 8007e18:	2b00      	cmp	r3, #0
 8007e1a:	d02c      	beq.n	8007e76 <UART4_IRQHandler+0xa2>
	 {
		 char rx = (char)(USART_IMU->RDR & 0xFF);
 8007e1c:	4b18      	ldr	r3, [pc, #96]	; (8007e80 <UART4_IRQHandler+0xac>)
 8007e1e:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8007e20:	b29b      	uxth	r3, r3
 8007e22:	71fb      	strb	r3, [r7, #7]
		 if ((rx == '\r') || (rx == '\n')) // Is this an end-of-line condition, either will suffice?
 8007e24:	79fb      	ldrb	r3, [r7, #7]
 8007e26:	2b0d      	cmp	r3, #13
 8007e28:	d002      	beq.n	8007e30 <UART4_IRQHandler+0x5c>
 8007e2a:	79fb      	ldrb	r3, [r7, #7]
 8007e2c:	2b0a      	cmp	r3, #10
 8007e2e:	d10e      	bne.n	8007e4e <UART4_IRQHandler+0x7a>
		 {
			 if (rx_index != 0) // Line has some content?
 8007e30:	4b14      	ldr	r3, [pc, #80]	; (8007e84 <UART4_IRQHandler+0xb0>)
 8007e32:	681b      	ldr	r3, [r3, #0]
 8007e34:	2b00      	cmp	r3, #0
 8007e36:	d01e      	beq.n	8007e76 <UART4_IRQHandler+0xa2>
			 {
				 //rx_buffer[rx_index++] = 0; // Add NUL if required down stream
				 QueueBuffer(rx_buffer, rx_index,3); // Copy to queue from live dynamic receive buffer
 8007e38:	4b12      	ldr	r3, [pc, #72]	; (8007e84 <UART4_IRQHandler+0xb0>)
 8007e3a:	681b      	ldr	r3, [r3, #0]
 8007e3c:	2203      	movs	r2, #3
 8007e3e:	4619      	mov	r1, r3
 8007e40:	4811      	ldr	r0, [pc, #68]	; (8007e88 <UART4_IRQHandler+0xb4>)
 8007e42:	f7fd fb79 	bl	8005538 <QueueBuffer>
				 //HAL_UART_Transmit(&hlpuart1, rx_buffer, rx_index, 1000);
				 rx_index = 0; // Reset content pointer
 8007e46:	4b0f      	ldr	r3, [pc, #60]	; (8007e84 <UART4_IRQHandler+0xb0>)
 8007e48:	2200      	movs	r2, #0
 8007e4a:	601a      	str	r2, [r3, #0]
			 if (rx_index != 0) // Line has some content?
 8007e4c:	e013      	b.n	8007e76 <UART4_IRQHandler+0xa2>
			 }
		 }
		 else
		 {
			 if ((rx == '$') || (rx_index == LINEMAX)) // If resync or overflows pull back to start
 8007e4e:	79fb      	ldrb	r3, [r7, #7]
 8007e50:	2b24      	cmp	r3, #36	; 0x24
 8007e52:	d004      	beq.n	8007e5e <UART4_IRQHandler+0x8a>
 8007e54:	4b0b      	ldr	r3, [pc, #44]	; (8007e84 <UART4_IRQHandler+0xb0>)
 8007e56:	681b      	ldr	r3, [r3, #0]
 8007e58:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8007e5c:	d102      	bne.n	8007e64 <UART4_IRQHandler+0x90>
			 rx_index = 0;
 8007e5e:	4b09      	ldr	r3, [pc, #36]	; (8007e84 <UART4_IRQHandler+0xb0>)
 8007e60:	2200      	movs	r2, #0
 8007e62:	601a      	str	r2, [r3, #0]
			 rx_buffer[rx_index++] = rx; // Copy to buffer and increment
 8007e64:	4b07      	ldr	r3, [pc, #28]	; (8007e84 <UART4_IRQHandler+0xb0>)
 8007e66:	681b      	ldr	r3, [r3, #0]
 8007e68:	1c5a      	adds	r2, r3, #1
 8007e6a:	4906      	ldr	r1, [pc, #24]	; (8007e84 <UART4_IRQHandler+0xb0>)
 8007e6c:	600a      	str	r2, [r1, #0]
 8007e6e:	4906      	ldr	r1, [pc, #24]	; (8007e88 <UART4_IRQHandler+0xb4>)
 8007e70:	79fa      	ldrb	r2, [r7, #7]
 8007e72:	54ca      	strb	r2, [r1, r3]
		 }
	 }

}
 8007e74:	e7ff      	b.n	8007e76 <UART4_IRQHandler+0xa2>
 8007e76:	bf00      	nop
 8007e78:	3708      	adds	r7, #8
 8007e7a:	46bd      	mov	sp, r7
 8007e7c:	bd80      	pop	{r7, pc}
 8007e7e:	bf00      	nop
 8007e80:	40004c00 	.word	0x40004c00
 8007e84:	20003160 	.word	0x20003160
 8007e88:	20003164 	.word	0x20003164

08007e8c <USART2_IRQHandler>:


void USART_UWB_IRQHandler(void) // Sync and Queue NMEA Sentences
{
 8007e8c:	b580      	push	{r7, lr}
 8007e8e:	b082      	sub	sp, #8
 8007e90:	af00      	add	r7, sp, #0
	 static char rx_buffer[LINEMAX + 1]; // Local holding buffer to build line, w/NUL
	 static int rx_index = 0;
	 if (USART_UWB->ISR & USART_ISR_ORE) // Overrun Error
 8007e92:	4b29      	ldr	r3, [pc, #164]	; (8007f38 <USART2_IRQHandler+0xac>)
 8007e94:	69db      	ldr	r3, [r3, #28]
 8007e96:	f003 0308 	and.w	r3, r3, #8
 8007e9a:	2b00      	cmp	r3, #0
 8007e9c:	d002      	beq.n	8007ea4 <USART2_IRQHandler+0x18>
		 USART_UWB->ICR = USART_ICR_ORECF;
 8007e9e:	4b26      	ldr	r3, [pc, #152]	; (8007f38 <USART2_IRQHandler+0xac>)
 8007ea0:	2208      	movs	r2, #8
 8007ea2:	621a      	str	r2, [r3, #32]
	 if (USART_UWB->ISR & USART_ISR_NE) // Noise Error
 8007ea4:	4b24      	ldr	r3, [pc, #144]	; (8007f38 <USART2_IRQHandler+0xac>)
 8007ea6:	69db      	ldr	r3, [r3, #28]
 8007ea8:	f003 0304 	and.w	r3, r3, #4
 8007eac:	2b00      	cmp	r3, #0
 8007eae:	d002      	beq.n	8007eb6 <USART2_IRQHandler+0x2a>
		 USART_UWB->ICR = USART_ICR_NCF;
 8007eb0:	4b21      	ldr	r3, [pc, #132]	; (8007f38 <USART2_IRQHandler+0xac>)
 8007eb2:	2204      	movs	r2, #4
 8007eb4:	621a      	str	r2, [r3, #32]
	 if (USART_UWB->ISR & USART_ISR_FE) // Framing Error
 8007eb6:	4b20      	ldr	r3, [pc, #128]	; (8007f38 <USART2_IRQHandler+0xac>)
 8007eb8:	69db      	ldr	r3, [r3, #28]
 8007eba:	f003 0302 	and.w	r3, r3, #2
 8007ebe:	2b00      	cmp	r3, #0
 8007ec0:	d002      	beq.n	8007ec8 <USART2_IRQHandler+0x3c>
		 USART_UWB->ICR = USART_ICR_FECF;
 8007ec2:	4b1d      	ldr	r3, [pc, #116]	; (8007f38 <USART2_IRQHandler+0xac>)
 8007ec4:	2202      	movs	r2, #2
 8007ec6:	621a      	str	r2, [r3, #32]
	 if (USART_UWB->ISR & USART_ISR_RXNE) // Received character?
 8007ec8:	4b1b      	ldr	r3, [pc, #108]	; (8007f38 <USART2_IRQHandler+0xac>)
 8007eca:	69db      	ldr	r3, [r3, #28]
 8007ecc:	f003 0320 	and.w	r3, r3, #32
 8007ed0:	2b00      	cmp	r3, #0
 8007ed2:	d02c      	beq.n	8007f2e <USART2_IRQHandler+0xa2>
	 {
		 char rx = (char)(USART_UWB->RDR & 0xFF);
 8007ed4:	4b18      	ldr	r3, [pc, #96]	; (8007f38 <USART2_IRQHandler+0xac>)
 8007ed6:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8007ed8:	b29b      	uxth	r3, r3
 8007eda:	71fb      	strb	r3, [r7, #7]
		 if ((rx == '\r') || (rx == '\n')) // Is this an end-of-line condition, either will suffice?
 8007edc:	79fb      	ldrb	r3, [r7, #7]
 8007ede:	2b0d      	cmp	r3, #13
 8007ee0:	d002      	beq.n	8007ee8 <USART2_IRQHandler+0x5c>
 8007ee2:	79fb      	ldrb	r3, [r7, #7]
 8007ee4:	2b0a      	cmp	r3, #10
 8007ee6:	d10e      	bne.n	8007f06 <USART2_IRQHandler+0x7a>
		 {
			 if (rx_index != 0) // Line has some content?
 8007ee8:	4b14      	ldr	r3, [pc, #80]	; (8007f3c <USART2_IRQHandler+0xb0>)
 8007eea:	681b      	ldr	r3, [r3, #0]
 8007eec:	2b00      	cmp	r3, #0
 8007eee:	d01e      	beq.n	8007f2e <USART2_IRQHandler+0xa2>
			 {
				 //rx_buffer[rx_index++] = 0; // Add NUL if required down stream
				 QueueBuffer(rx_buffer, rx_index, 1); // Copy to queue from live dynamic receive buffer
 8007ef0:	4b12      	ldr	r3, [pc, #72]	; (8007f3c <USART2_IRQHandler+0xb0>)
 8007ef2:	681b      	ldr	r3, [r3, #0]
 8007ef4:	2201      	movs	r2, #1
 8007ef6:	4619      	mov	r1, r3
 8007ef8:	4811      	ldr	r0, [pc, #68]	; (8007f40 <USART2_IRQHandler+0xb4>)
 8007efa:	f7fd fb1d 	bl	8005538 <QueueBuffer>
				 //HAL_UART_Transmit(&hlpuart1, rx_buffer, rx_index, 1000);
				 rx_index = 0; // Reset content pointer
 8007efe:	4b0f      	ldr	r3, [pc, #60]	; (8007f3c <USART2_IRQHandler+0xb0>)
 8007f00:	2200      	movs	r2, #0
 8007f02:	601a      	str	r2, [r3, #0]
			 if (rx_index != 0) // Line has some content?
 8007f04:	e013      	b.n	8007f2e <USART2_IRQHandler+0xa2>
			 }
		 }
		 else
		 {
			 if ((rx == '$') || (rx_index == LINEMAX)) // If resync or overflows pull back to start
 8007f06:	79fb      	ldrb	r3, [r7, #7]
 8007f08:	2b24      	cmp	r3, #36	; 0x24
 8007f0a:	d004      	beq.n	8007f16 <USART2_IRQHandler+0x8a>
 8007f0c:	4b0b      	ldr	r3, [pc, #44]	; (8007f3c <USART2_IRQHandler+0xb0>)
 8007f0e:	681b      	ldr	r3, [r3, #0]
 8007f10:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8007f14:	d102      	bne.n	8007f1c <USART2_IRQHandler+0x90>
			 rx_index = 0;
 8007f16:	4b09      	ldr	r3, [pc, #36]	; (8007f3c <USART2_IRQHandler+0xb0>)
 8007f18:	2200      	movs	r2, #0
 8007f1a:	601a      	str	r2, [r3, #0]
			 rx_buffer[rx_index++] = rx; // Copy to buffer and increment
 8007f1c:	4b07      	ldr	r3, [pc, #28]	; (8007f3c <USART2_IRQHandler+0xb0>)
 8007f1e:	681b      	ldr	r3, [r3, #0]
 8007f20:	1c5a      	adds	r2, r3, #1
 8007f22:	4906      	ldr	r1, [pc, #24]	; (8007f3c <USART2_IRQHandler+0xb0>)
 8007f24:	600a      	str	r2, [r1, #0]
 8007f26:	4906      	ldr	r1, [pc, #24]	; (8007f40 <USART2_IRQHandler+0xb4>)
 8007f28:	79fa      	ldrb	r2, [r7, #7]
 8007f2a:	54ca      	strb	r2, [r1, r3]
		 }
	 }

}
 8007f2c:	e7ff      	b.n	8007f2e <USART2_IRQHandler+0xa2>
 8007f2e:	bf00      	nop
 8007f30:	3708      	adds	r7, #8
 8007f32:	46bd      	mov	sp, r7
 8007f34:	bd80      	pop	{r7, pc}
 8007f36:	bf00      	nop
 8007f38:	40004400 	.word	0x40004400
 8007f3c:	20003938 	.word	0x20003938
 8007f40:	2000393c 	.word	0x2000393c

08007f44 <USART3_IRQHandler>:


void USART_Radar_IRQHandler(void) // Sync and Queue NMEA Sentences
{
 8007f44:	b580      	push	{r7, lr}
 8007f46:	b084      	sub	sp, #16
 8007f48:	af00      	add	r7, sp, #0
	 static char rx_buffer[LINEMAX + 1]; // Local holding buffer to build line, w/NUL
	 static int rx_index = 0;
	 if (USART_Radar->ISR & USART_ISR_ORE) // Overrun Error
 8007f4a:	4b6c      	ldr	r3, [pc, #432]	; (80080fc <USART3_IRQHandler+0x1b8>)
 8007f4c:	69db      	ldr	r3, [r3, #28]
 8007f4e:	f003 0308 	and.w	r3, r3, #8
 8007f52:	2b00      	cmp	r3, #0
 8007f54:	d002      	beq.n	8007f5c <USART3_IRQHandler+0x18>
		 USART_Radar->ICR = USART_ICR_ORECF;
 8007f56:	4b69      	ldr	r3, [pc, #420]	; (80080fc <USART3_IRQHandler+0x1b8>)
 8007f58:	2208      	movs	r2, #8
 8007f5a:	621a      	str	r2, [r3, #32]
	 if (USART_Radar->ISR & USART_ISR_NE) // Noise Error
 8007f5c:	4b67      	ldr	r3, [pc, #412]	; (80080fc <USART3_IRQHandler+0x1b8>)
 8007f5e:	69db      	ldr	r3, [r3, #28]
 8007f60:	f003 0304 	and.w	r3, r3, #4
 8007f64:	2b00      	cmp	r3, #0
 8007f66:	d002      	beq.n	8007f6e <USART3_IRQHandler+0x2a>
		 USART_Radar->ICR = USART_ICR_NCF;
 8007f68:	4b64      	ldr	r3, [pc, #400]	; (80080fc <USART3_IRQHandler+0x1b8>)
 8007f6a:	2204      	movs	r2, #4
 8007f6c:	621a      	str	r2, [r3, #32]
	 if (USART_Radar->ISR & USART_ISR_FE) // Framing Error
 8007f6e:	4b63      	ldr	r3, [pc, #396]	; (80080fc <USART3_IRQHandler+0x1b8>)
 8007f70:	69db      	ldr	r3, [r3, #28]
 8007f72:	f003 0302 	and.w	r3, r3, #2
 8007f76:	2b00      	cmp	r3, #0
 8007f78:	d002      	beq.n	8007f80 <USART3_IRQHandler+0x3c>
		 USART_Radar->ICR = USART_ICR_FECF;
 8007f7a:	4b60      	ldr	r3, [pc, #384]	; (80080fc <USART3_IRQHandler+0x1b8>)
 8007f7c:	2202      	movs	r2, #2
 8007f7e:	621a      	str	r2, [r3, #32]
	 if (USART_Radar->ISR & USART_ISR_RXNE) // Received character?
 8007f80:	4b5e      	ldr	r3, [pc, #376]	; (80080fc <USART3_IRQHandler+0x1b8>)
 8007f82:	69db      	ldr	r3, [r3, #28]
 8007f84:	f003 0320 	and.w	r3, r3, #32
 8007f88:	2b00      	cmp	r3, #0
 8007f8a:	f000 80b2 	beq.w	80080f2 <USART3_IRQHandler+0x1ae>
	 {
		 char rx = (char)(USART_Radar->RDR & 0xFF);
 8007f8e:	4b5b      	ldr	r3, [pc, #364]	; (80080fc <USART3_IRQHandler+0x1b8>)
 8007f90:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8007f92:	b29b      	uxth	r3, r3
 8007f94:	73fb      	strb	r3, [r7, #15]

		 if ( (syncRadar == 0xFF) && counterRadar == lengthdataRadar-1 && counterRadar > 15)
 8007f96:	4b5a      	ldr	r3, [pc, #360]	; (8008100 <USART3_IRQHandler+0x1bc>)
 8007f98:	781b      	ldrb	r3, [r3, #0]
 8007f9a:	2bff      	cmp	r3, #255	; 0xff
 8007f9c:	d128      	bne.n	8007ff0 <USART3_IRQHandler+0xac>
 8007f9e:	4b59      	ldr	r3, [pc, #356]	; (8008104 <USART3_IRQHandler+0x1c0>)
 8007fa0:	881b      	ldrh	r3, [r3, #0]
 8007fa2:	461a      	mov	r2, r3
 8007fa4:	4b58      	ldr	r3, [pc, #352]	; (8008108 <USART3_IRQHandler+0x1c4>)
 8007fa6:	681b      	ldr	r3, [r3, #0]
 8007fa8:	3b01      	subs	r3, #1
 8007faa:	429a      	cmp	r2, r3
 8007fac:	d120      	bne.n	8007ff0 <USART3_IRQHandler+0xac>
 8007fae:	4b55      	ldr	r3, [pc, #340]	; (8008104 <USART3_IRQHandler+0x1c0>)
 8007fb0:	881b      	ldrh	r3, [r3, #0]
 8007fb2:	2b0f      	cmp	r3, #15
 8007fb4:	d91c      	bls.n	8007ff0 <USART3_IRQHandler+0xac>
		 {
			 rx_buffer[rx_index++] = rx; // Copy to buffer and increment
 8007fb6:	4b55      	ldr	r3, [pc, #340]	; (800810c <USART3_IRQHandler+0x1c8>)
 8007fb8:	681b      	ldr	r3, [r3, #0]
 8007fba:	1c5a      	adds	r2, r3, #1
 8007fbc:	4953      	ldr	r1, [pc, #332]	; (800810c <USART3_IRQHandler+0x1c8>)
 8007fbe:	600a      	str	r2, [r1, #0]
 8007fc0:	4953      	ldr	r1, [pc, #332]	; (8008110 <USART3_IRQHandler+0x1cc>)
 8007fc2:	7bfa      	ldrb	r2, [r7, #15]
 8007fc4:	54ca      	strb	r2, [r1, r3]
			 QueueBuffer(rx_buffer, rx_index, 2); // Copy to queue from live dynamic receive buffer
 8007fc6:	4b51      	ldr	r3, [pc, #324]	; (800810c <USART3_IRQHandler+0x1c8>)
 8007fc8:	681b      	ldr	r3, [r3, #0]
 8007fca:	2202      	movs	r2, #2
 8007fcc:	4619      	mov	r1, r3
 8007fce:	4850      	ldr	r0, [pc, #320]	; (8008110 <USART3_IRQHandler+0x1cc>)
 8007fd0:	f7fd fab2 	bl	8005538 <QueueBuffer>
			 rx_index = 0; // Reset content pointer
 8007fd4:	4b4d      	ldr	r3, [pc, #308]	; (800810c <USART3_IRQHandler+0x1c8>)
 8007fd6:	2200      	movs	r2, #0
 8007fd8:	601a      	str	r2, [r3, #0]
			 counterRadar = 0;
 8007fda:	4b4a      	ldr	r3, [pc, #296]	; (8008104 <USART3_IRQHandler+0x1c0>)
 8007fdc:	2200      	movs	r2, #0
 8007fde:	801a      	strh	r2, [r3, #0]
			 lengthdataRadar = 0;
 8007fe0:	4b49      	ldr	r3, [pc, #292]	; (8008108 <USART3_IRQHandler+0x1c4>)
 8007fe2:	2200      	movs	r2, #0
 8007fe4:	601a      	str	r2, [r3, #0]
			 syncRadar = 0b00000000;
 8007fe6:	4b46      	ldr	r3, [pc, #280]	; (8008100 <USART3_IRQHandler+0x1bc>)
 8007fe8:	2200      	movs	r2, #0
 8007fea:	701a      	strb	r2, [r3, #0]
		 {
 8007fec:	bf00      	nop
		 }


	 }

}
 8007fee:	e080      	b.n	80080f2 <USART3_IRQHandler+0x1ae>
			 if ((rx_index == LINEMAX)) // If resync or overflows pull back to start
 8007ff0:	4b46      	ldr	r3, [pc, #280]	; (800810c <USART3_IRQHandler+0x1c8>)
 8007ff2:	681b      	ldr	r3, [r3, #0]
 8007ff4:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8007ff8:	d102      	bne.n	8008000 <USART3_IRQHandler+0xbc>
			 rx_index = 0;
 8007ffa:	4b44      	ldr	r3, [pc, #272]	; (800810c <USART3_IRQHandler+0x1c8>)
 8007ffc:	2200      	movs	r2, #0
 8007ffe:	601a      	str	r2, [r3, #0]
			 if(syncRadar == 0xFF)
 8008000:	4b3f      	ldr	r3, [pc, #252]	; (8008100 <USART3_IRQHandler+0x1bc>)
 8008002:	781b      	ldrb	r3, [r3, #0]
 8008004:	2bff      	cmp	r3, #255	; 0xff
 8008006:	d124      	bne.n	8008052 <USART3_IRQHandler+0x10e>
				 if (counterRadar >= 12 && counterRadar <= 15){
 8008008:	4b3e      	ldr	r3, [pc, #248]	; (8008104 <USART3_IRQHandler+0x1c0>)
 800800a:	881b      	ldrh	r3, [r3, #0]
 800800c:	2b0b      	cmp	r3, #11
 800800e:	d911      	bls.n	8008034 <USART3_IRQHandler+0xf0>
 8008010:	4b3c      	ldr	r3, [pc, #240]	; (8008104 <USART3_IRQHandler+0x1c0>)
 8008012:	881b      	ldrh	r3, [r3, #0]
 8008014:	2b0f      	cmp	r3, #15
 8008016:	d80d      	bhi.n	8008034 <USART3_IRQHandler+0xf0>
					 uint32_t templengthradar = rx << (8 * (counterRadar - 12));
 8008018:	7bfa      	ldrb	r2, [r7, #15]
 800801a:	4b3a      	ldr	r3, [pc, #232]	; (8008104 <USART3_IRQHandler+0x1c0>)
 800801c:	881b      	ldrh	r3, [r3, #0]
 800801e:	3b0c      	subs	r3, #12
 8008020:	00db      	lsls	r3, r3, #3
 8008022:	fa02 f303 	lsl.w	r3, r2, r3
 8008026:	60bb      	str	r3, [r7, #8]
					 lengthdataRadar += templengthradar;
 8008028:	4b37      	ldr	r3, [pc, #220]	; (8008108 <USART3_IRQHandler+0x1c4>)
 800802a:	681a      	ldr	r2, [r3, #0]
 800802c:	68bb      	ldr	r3, [r7, #8]
 800802e:	4413      	add	r3, r2
 8008030:	4a35      	ldr	r2, [pc, #212]	; (8008108 <USART3_IRQHandler+0x1c4>)
 8008032:	6013      	str	r3, [r2, #0]
				 rx_buffer[rx_index++] = rx; // Copy to buffer and increment
 8008034:	4b35      	ldr	r3, [pc, #212]	; (800810c <USART3_IRQHandler+0x1c8>)
 8008036:	681b      	ldr	r3, [r3, #0]
 8008038:	1c5a      	adds	r2, r3, #1
 800803a:	4934      	ldr	r1, [pc, #208]	; (800810c <USART3_IRQHandler+0x1c8>)
 800803c:	600a      	str	r2, [r1, #0]
 800803e:	4934      	ldr	r1, [pc, #208]	; (8008110 <USART3_IRQHandler+0x1cc>)
 8008040:	7bfa      	ldrb	r2, [r7, #15]
 8008042:	54ca      	strb	r2, [r1, r3]
				 counterRadar++;
 8008044:	4b2f      	ldr	r3, [pc, #188]	; (8008104 <USART3_IRQHandler+0x1c0>)
 8008046:	881b      	ldrh	r3, [r3, #0]
 8008048:	3301      	adds	r3, #1
 800804a:	b29a      	uxth	r2, r3
 800804c:	4b2d      	ldr	r3, [pc, #180]	; (8008104 <USART3_IRQHandler+0x1c0>)
 800804e:	801a      	strh	r2, [r3, #0]
}
 8008050:	e04f      	b.n	80080f2 <USART3_IRQHandler+0x1ae>
				 if (counterRadar)
 8008052:	4b2c      	ldr	r3, [pc, #176]	; (8008104 <USART3_IRQHandler+0x1c0>)
 8008054:	881b      	ldrh	r3, [r3, #0]
 8008056:	2b00      	cmp	r3, #0
 8008058:	d034      	beq.n	80080c4 <USART3_IRQHandler+0x180>
					 uint8_t tempsync[8] = {0x02, 0x01, 0x04, 0x03, 0x06, 0x05, 0x08, 0x07};
 800805a:	4a2e      	ldr	r2, [pc, #184]	; (8008114 <USART3_IRQHandler+0x1d0>)
 800805c:	463b      	mov	r3, r7
 800805e:	e892 0003 	ldmia.w	r2, {r0, r1}
 8008062:	e883 0003 	stmia.w	r3, {r0, r1}
					 if (rx == tempsync[counterRadar])
 8008066:	4b27      	ldr	r3, [pc, #156]	; (8008104 <USART3_IRQHandler+0x1c0>)
 8008068:	881b      	ldrh	r3, [r3, #0]
 800806a:	f107 0210 	add.w	r2, r7, #16
 800806e:	4413      	add	r3, r2
 8008070:	f813 3c10 	ldrb.w	r3, [r3, #-16]
 8008074:	7bfa      	ldrb	r2, [r7, #15]
 8008076:	429a      	cmp	r2, r3
 8008078:	d11a      	bne.n	80080b0 <USART3_IRQHandler+0x16c>
						 syncRadar += (1 << counterRadar);
 800807a:	4b22      	ldr	r3, [pc, #136]	; (8008104 <USART3_IRQHandler+0x1c0>)
 800807c:	881b      	ldrh	r3, [r3, #0]
 800807e:	461a      	mov	r2, r3
 8008080:	2301      	movs	r3, #1
 8008082:	4093      	lsls	r3, r2
 8008084:	b2da      	uxtb	r2, r3
 8008086:	4b1e      	ldr	r3, [pc, #120]	; (8008100 <USART3_IRQHandler+0x1bc>)
 8008088:	781b      	ldrb	r3, [r3, #0]
 800808a:	4413      	add	r3, r2
 800808c:	b2da      	uxtb	r2, r3
 800808e:	4b1c      	ldr	r3, [pc, #112]	; (8008100 <USART3_IRQHandler+0x1bc>)
 8008090:	701a      	strb	r2, [r3, #0]
						 counterRadar++;
 8008092:	4b1c      	ldr	r3, [pc, #112]	; (8008104 <USART3_IRQHandler+0x1c0>)
 8008094:	881b      	ldrh	r3, [r3, #0]
 8008096:	3301      	adds	r3, #1
 8008098:	b29a      	uxth	r2, r3
 800809a:	4b1a      	ldr	r3, [pc, #104]	; (8008104 <USART3_IRQHandler+0x1c0>)
 800809c:	801a      	strh	r2, [r3, #0]
						 rx_buffer[rx_index++] = rx; // Copy to buffer and increment
 800809e:	4b1b      	ldr	r3, [pc, #108]	; (800810c <USART3_IRQHandler+0x1c8>)
 80080a0:	681b      	ldr	r3, [r3, #0]
 80080a2:	1c5a      	adds	r2, r3, #1
 80080a4:	4919      	ldr	r1, [pc, #100]	; (800810c <USART3_IRQHandler+0x1c8>)
 80080a6:	600a      	str	r2, [r1, #0]
 80080a8:	4919      	ldr	r1, [pc, #100]	; (8008110 <USART3_IRQHandler+0x1cc>)
 80080aa:	7bfa      	ldrb	r2, [r7, #15]
 80080ac:	54ca      	strb	r2, [r1, r3]
}
 80080ae:	e020      	b.n	80080f2 <USART3_IRQHandler+0x1ae>
						 syncRadar = 0b00000000;
 80080b0:	4b13      	ldr	r3, [pc, #76]	; (8008100 <USART3_IRQHandler+0x1bc>)
 80080b2:	2200      	movs	r2, #0
 80080b4:	701a      	strb	r2, [r3, #0]
						 counterRadar = 0x00;
 80080b6:	4b13      	ldr	r3, [pc, #76]	; (8008104 <USART3_IRQHandler+0x1c0>)
 80080b8:	2200      	movs	r2, #0
 80080ba:	801a      	strh	r2, [r3, #0]
						 rx_index = 0;
 80080bc:	4b13      	ldr	r3, [pc, #76]	; (800810c <USART3_IRQHandler+0x1c8>)
 80080be:	2200      	movs	r2, #0
 80080c0:	601a      	str	r2, [r3, #0]
}
 80080c2:	e016      	b.n	80080f2 <USART3_IRQHandler+0x1ae>
					 if(rx == 0x02){
 80080c4:	7bfb      	ldrb	r3, [r7, #15]
 80080c6:	2b02      	cmp	r3, #2
 80080c8:	d113      	bne.n	80080f2 <USART3_IRQHandler+0x1ae>
						 syncRadar++;
 80080ca:	4b0d      	ldr	r3, [pc, #52]	; (8008100 <USART3_IRQHandler+0x1bc>)
 80080cc:	781b      	ldrb	r3, [r3, #0]
 80080ce:	3301      	adds	r3, #1
 80080d0:	b2da      	uxtb	r2, r3
 80080d2:	4b0b      	ldr	r3, [pc, #44]	; (8008100 <USART3_IRQHandler+0x1bc>)
 80080d4:	701a      	strb	r2, [r3, #0]
						 counterRadar++;
 80080d6:	4b0b      	ldr	r3, [pc, #44]	; (8008104 <USART3_IRQHandler+0x1c0>)
 80080d8:	881b      	ldrh	r3, [r3, #0]
 80080da:	3301      	adds	r3, #1
 80080dc:	b29a      	uxth	r2, r3
 80080de:	4b09      	ldr	r3, [pc, #36]	; (8008104 <USART3_IRQHandler+0x1c0>)
 80080e0:	801a      	strh	r2, [r3, #0]
						 rx_buffer[rx_index++] = rx; // Copy to buffer and increment
 80080e2:	4b0a      	ldr	r3, [pc, #40]	; (800810c <USART3_IRQHandler+0x1c8>)
 80080e4:	681b      	ldr	r3, [r3, #0]
 80080e6:	1c5a      	adds	r2, r3, #1
 80080e8:	4908      	ldr	r1, [pc, #32]	; (800810c <USART3_IRQHandler+0x1c8>)
 80080ea:	600a      	str	r2, [r1, #0]
 80080ec:	4908      	ldr	r1, [pc, #32]	; (8008110 <USART3_IRQHandler+0x1cc>)
 80080ee:	7bfa      	ldrb	r2, [r7, #15]
 80080f0:	54ca      	strb	r2, [r1, r3]
}
 80080f2:	bf00      	nop
 80080f4:	3710      	adds	r7, #16
 80080f6:	46bd      	mov	sp, r7
 80080f8:	bd80      	pop	{r7, pc}
 80080fa:	bf00      	nop
 80080fc:	40004800 	.word	0x40004800
 8008100:	20003158 	.word	0x20003158
 8008104:	2000315a 	.word	0x2000315a
 8008108:	2000315c 	.word	0x2000315c
 800810c:	20004110 	.word	0x20004110
 8008110:	20004114 	.word	0x20004114
 8008114:	080162bc 	.word	0x080162bc

08008118 <USART1_IRQHandler>:

void USART_Lidar_IRQHandler(void) // Sync and Queue NMEA Sentences
{
 8008118:	b580      	push	{r7, lr}
 800811a:	b082      	sub	sp, #8
 800811c:	af00      	add	r7, sp, #0
	 static char rx_buffer[LINEMAX + 1]; // Local holding buffer to build line, w/NUL
	 static int rx_index = 0;
	 if (USART_Lidar->ISR & USART_ISR_ORE) // Overrun Error
 800811e:	4b29      	ldr	r3, [pc, #164]	; (80081c4 <USART1_IRQHandler+0xac>)
 8008120:	69db      	ldr	r3, [r3, #28]
 8008122:	f003 0308 	and.w	r3, r3, #8
 8008126:	2b00      	cmp	r3, #0
 8008128:	d002      	beq.n	8008130 <USART1_IRQHandler+0x18>
		 USART_Lidar->ICR = USART_ICR_ORECF;
 800812a:	4b26      	ldr	r3, [pc, #152]	; (80081c4 <USART1_IRQHandler+0xac>)
 800812c:	2208      	movs	r2, #8
 800812e:	621a      	str	r2, [r3, #32]
	 if (USART_Lidar->ISR & USART_ISR_NE) // Noise Error
 8008130:	4b24      	ldr	r3, [pc, #144]	; (80081c4 <USART1_IRQHandler+0xac>)
 8008132:	69db      	ldr	r3, [r3, #28]
 8008134:	f003 0304 	and.w	r3, r3, #4
 8008138:	2b00      	cmp	r3, #0
 800813a:	d002      	beq.n	8008142 <USART1_IRQHandler+0x2a>
		 USART_Lidar->ICR = USART_ICR_NCF;
 800813c:	4b21      	ldr	r3, [pc, #132]	; (80081c4 <USART1_IRQHandler+0xac>)
 800813e:	2204      	movs	r2, #4
 8008140:	621a      	str	r2, [r3, #32]
	 if (USART_Lidar->ISR & USART_ISR_FE) // Framing Error
 8008142:	4b20      	ldr	r3, [pc, #128]	; (80081c4 <USART1_IRQHandler+0xac>)
 8008144:	69db      	ldr	r3, [r3, #28]
 8008146:	f003 0302 	and.w	r3, r3, #2
 800814a:	2b00      	cmp	r3, #0
 800814c:	d002      	beq.n	8008154 <USART1_IRQHandler+0x3c>
		 USART_Lidar->ICR = USART_ICR_FECF;
 800814e:	4b1d      	ldr	r3, [pc, #116]	; (80081c4 <USART1_IRQHandler+0xac>)
 8008150:	2202      	movs	r2, #2
 8008152:	621a      	str	r2, [r3, #32]
	 if (USART_Lidar->ISR & USART_ISR_RXNE) // Received character?
 8008154:	4b1b      	ldr	r3, [pc, #108]	; (80081c4 <USART1_IRQHandler+0xac>)
 8008156:	69db      	ldr	r3, [r3, #28]
 8008158:	f003 0320 	and.w	r3, r3, #32
 800815c:	2b00      	cmp	r3, #0
 800815e:	d02c      	beq.n	80081ba <USART1_IRQHandler+0xa2>
	 {
		 char rx = (char)(USART_Lidar->RDR & 0xFF);
 8008160:	4b18      	ldr	r3, [pc, #96]	; (80081c4 <USART1_IRQHandler+0xac>)
 8008162:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 8008164:	b29b      	uxth	r3, r3
 8008166:	71fb      	strb	r3, [r7, #7]
		 if ((rx == '\r') || (rx == '\n')) // Is this an end-of-line condition, either will suffice?
 8008168:	79fb      	ldrb	r3, [r7, #7]
 800816a:	2b0d      	cmp	r3, #13
 800816c:	d002      	beq.n	8008174 <USART1_IRQHandler+0x5c>
 800816e:	79fb      	ldrb	r3, [r7, #7]
 8008170:	2b0a      	cmp	r3, #10
 8008172:	d10e      	bne.n	8008192 <USART1_IRQHandler+0x7a>
		 {
			 if (rx_index != 0) // Line has some content?
 8008174:	4b14      	ldr	r3, [pc, #80]	; (80081c8 <USART1_IRQHandler+0xb0>)
 8008176:	681b      	ldr	r3, [r3, #0]
 8008178:	2b00      	cmp	r3, #0
 800817a:	d01e      	beq.n	80081ba <USART1_IRQHandler+0xa2>
			 {
				 //rx_buffer[rx_index++] = 0; // Add NUL if required down stream
				 QueueBuffer(rx_buffer, rx_index, 0); // Copy to queue from live dynamic receive buffer
 800817c:	4b12      	ldr	r3, [pc, #72]	; (80081c8 <USART1_IRQHandler+0xb0>)
 800817e:	681b      	ldr	r3, [r3, #0]
 8008180:	2200      	movs	r2, #0
 8008182:	4619      	mov	r1, r3
 8008184:	4811      	ldr	r0, [pc, #68]	; (80081cc <USART1_IRQHandler+0xb4>)
 8008186:	f7fd f9d7 	bl	8005538 <QueueBuffer>
				 //HAL_UART_Transmit(&hlpuart1, rx_buffer, rx_index, 1000);
				 rx_index = 0; // Reset content pointer
 800818a:	4b0f      	ldr	r3, [pc, #60]	; (80081c8 <USART1_IRQHandler+0xb0>)
 800818c:	2200      	movs	r2, #0
 800818e:	601a      	str	r2, [r3, #0]
			 if (rx_index != 0) // Line has some content?
 8008190:	e013      	b.n	80081ba <USART1_IRQHandler+0xa2>
			 }
		 }
		 else
		 {
			 if ((rx == '$') || (rx_index == LINEMAX)) // If resync or overflows pull back to start
 8008192:	79fb      	ldrb	r3, [r7, #7]
 8008194:	2b24      	cmp	r3, #36	; 0x24
 8008196:	d004      	beq.n	80081a2 <USART1_IRQHandler+0x8a>
 8008198:	4b0b      	ldr	r3, [pc, #44]	; (80081c8 <USART1_IRQHandler+0xb0>)
 800819a:	681b      	ldr	r3, [r3, #0]
 800819c:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 80081a0:	d102      	bne.n	80081a8 <USART1_IRQHandler+0x90>
			 rx_index = 0;
 80081a2:	4b09      	ldr	r3, [pc, #36]	; (80081c8 <USART1_IRQHandler+0xb0>)
 80081a4:	2200      	movs	r2, #0
 80081a6:	601a      	str	r2, [r3, #0]
			 rx_buffer[rx_index++] = rx; // Copy to buffer and increment
 80081a8:	4b07      	ldr	r3, [pc, #28]	; (80081c8 <USART1_IRQHandler+0xb0>)
 80081aa:	681b      	ldr	r3, [r3, #0]
 80081ac:	1c5a      	adds	r2, r3, #1
 80081ae:	4906      	ldr	r1, [pc, #24]	; (80081c8 <USART1_IRQHandler+0xb0>)
 80081b0:	600a      	str	r2, [r1, #0]
 80081b2:	4906      	ldr	r1, [pc, #24]	; (80081cc <USART1_IRQHandler+0xb4>)
 80081b4:	79fa      	ldrb	r2, [r7, #7]
 80081b6:	54ca      	strb	r2, [r1, r3]
		 }
	 }

}
 80081b8:	e7ff      	b.n	80081ba <USART1_IRQHandler+0xa2>
 80081ba:	bf00      	nop
 80081bc:	3708      	adds	r7, #8
 80081be:	46bd      	mov	sp, r7
 80081c0:	bd80      	pop	{r7, pc}
 80081c2:	bf00      	nop
 80081c4:	40013800 	.word	0x40013800
 80081c8:	200048e8 	.word	0x200048e8
 80081cc:	200048ec 	.word	0x200048ec

080081d0 <UART5_IRQHandler>:


void USART_US_IRQHandler(void) // Sync and Queue NMEA Sentences
{
 80081d0:	b580      	push	{r7, lr}
 80081d2:	b082      	sub	sp, #8
 80081d4:	af00      	add	r7, sp, #0
	 static char rx_buffer[LINEMAX + 1]; // Local holding buffer to build line, w/NUL
	 static int rx_index = 0;
	 if (USART_US->ISR & USART_ISR_ORE) // Overrun Error
 80081d6:	4b29      	ldr	r3, [pc, #164]	; (800827c <UART5_IRQHandler+0xac>)
 80081d8:	69db      	ldr	r3, [r3, #28]
 80081da:	f003 0308 	and.w	r3, r3, #8
 80081de:	2b00      	cmp	r3, #0
 80081e0:	d002      	beq.n	80081e8 <UART5_IRQHandler+0x18>
		 USART_US->ICR = USART_ICR_ORECF;
 80081e2:	4b26      	ldr	r3, [pc, #152]	; (800827c <UART5_IRQHandler+0xac>)
 80081e4:	2208      	movs	r2, #8
 80081e6:	621a      	str	r2, [r3, #32]
	 if (USART_US->ISR & USART_ISR_NE) // Noise Error
 80081e8:	4b24      	ldr	r3, [pc, #144]	; (800827c <UART5_IRQHandler+0xac>)
 80081ea:	69db      	ldr	r3, [r3, #28]
 80081ec:	f003 0304 	and.w	r3, r3, #4
 80081f0:	2b00      	cmp	r3, #0
 80081f2:	d002      	beq.n	80081fa <UART5_IRQHandler+0x2a>
		 USART_US->ICR = USART_ICR_NCF;
 80081f4:	4b21      	ldr	r3, [pc, #132]	; (800827c <UART5_IRQHandler+0xac>)
 80081f6:	2204      	movs	r2, #4
 80081f8:	621a      	str	r2, [r3, #32]
	 if (USART_US->ISR & USART_ISR_FE) // Framing Error
 80081fa:	4b20      	ldr	r3, [pc, #128]	; (800827c <UART5_IRQHandler+0xac>)
 80081fc:	69db      	ldr	r3, [r3, #28]
 80081fe:	f003 0302 	and.w	r3, r3, #2
 8008202:	2b00      	cmp	r3, #0
 8008204:	d002      	beq.n	800820c <UART5_IRQHandler+0x3c>
		 USART_US->ICR = USART_ICR_FECF;
 8008206:	4b1d      	ldr	r3, [pc, #116]	; (800827c <UART5_IRQHandler+0xac>)
 8008208:	2202      	movs	r2, #2
 800820a:	621a      	str	r2, [r3, #32]
	 if (USART_US->ISR & USART_ISR_RXNE) // Received character?
 800820c:	4b1b      	ldr	r3, [pc, #108]	; (800827c <UART5_IRQHandler+0xac>)
 800820e:	69db      	ldr	r3, [r3, #28]
 8008210:	f003 0320 	and.w	r3, r3, #32
 8008214:	2b00      	cmp	r3, #0
 8008216:	d02c      	beq.n	8008272 <UART5_IRQHandler+0xa2>
	 {
		 char rx = (char)(USART_US->RDR & 0xFF);
 8008218:	4b18      	ldr	r3, [pc, #96]	; (800827c <UART5_IRQHandler+0xac>)
 800821a:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 800821c:	b29b      	uxth	r3, r3
 800821e:	71fb      	strb	r3, [r7, #7]
		 if ((rx == '\r') || (rx == '\n')) // Is this an end-of-line condition, either will suffice?
 8008220:	79fb      	ldrb	r3, [r7, #7]
 8008222:	2b0d      	cmp	r3, #13
 8008224:	d002      	beq.n	800822c <UART5_IRQHandler+0x5c>
 8008226:	79fb      	ldrb	r3, [r7, #7]
 8008228:	2b0a      	cmp	r3, #10
 800822a:	d10e      	bne.n	800824a <UART5_IRQHandler+0x7a>
		 {
			 if (rx_index != 0) // Line has some content?
 800822c:	4b14      	ldr	r3, [pc, #80]	; (8008280 <UART5_IRQHandler+0xb0>)
 800822e:	681b      	ldr	r3, [r3, #0]
 8008230:	2b00      	cmp	r3, #0
 8008232:	d01e      	beq.n	8008272 <UART5_IRQHandler+0xa2>
			 {
				 //rx_buffer[rx_index++] = 0; // Add NUL if required down stream
				 QueueBuffer(rx_buffer, rx_index, 4); // Copy to queue from live dynamic receive buffer
 8008234:	4b12      	ldr	r3, [pc, #72]	; (8008280 <UART5_IRQHandler+0xb0>)
 8008236:	681b      	ldr	r3, [r3, #0]
 8008238:	2204      	movs	r2, #4
 800823a:	4619      	mov	r1, r3
 800823c:	4811      	ldr	r0, [pc, #68]	; (8008284 <UART5_IRQHandler+0xb4>)
 800823e:	f7fd f97b 	bl	8005538 <QueueBuffer>
				 //HAL_UART_Transmit(&hlpuart1, rx_buffer, rx_index, 1000);
				 rx_index = 0; // Reset content pointer
 8008242:	4b0f      	ldr	r3, [pc, #60]	; (8008280 <UART5_IRQHandler+0xb0>)
 8008244:	2200      	movs	r2, #0
 8008246:	601a      	str	r2, [r3, #0]
			 if (rx_index != 0) // Line has some content?
 8008248:	e013      	b.n	8008272 <UART5_IRQHandler+0xa2>
			 }
		 }
		 else
		 {
			 if ((rx == '$') || (rx_index == LINEMAX)) // If resync or overflows pull back to start
 800824a:	79fb      	ldrb	r3, [r7, #7]
 800824c:	2b24      	cmp	r3, #36	; 0x24
 800824e:	d004      	beq.n	800825a <UART5_IRQHandler+0x8a>
 8008250:	4b0b      	ldr	r3, [pc, #44]	; (8008280 <UART5_IRQHandler+0xb0>)
 8008252:	681b      	ldr	r3, [r3, #0]
 8008254:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8008258:	d102      	bne.n	8008260 <UART5_IRQHandler+0x90>
			 rx_index = 0;
 800825a:	4b09      	ldr	r3, [pc, #36]	; (8008280 <UART5_IRQHandler+0xb0>)
 800825c:	2200      	movs	r2, #0
 800825e:	601a      	str	r2, [r3, #0]
			 rx_buffer[rx_index++] = rx; // Copy to buffer and increment
 8008260:	4b07      	ldr	r3, [pc, #28]	; (8008280 <UART5_IRQHandler+0xb0>)
 8008262:	681b      	ldr	r3, [r3, #0]
 8008264:	1c5a      	adds	r2, r3, #1
 8008266:	4906      	ldr	r1, [pc, #24]	; (8008280 <UART5_IRQHandler+0xb0>)
 8008268:	600a      	str	r2, [r1, #0]
 800826a:	4906      	ldr	r1, [pc, #24]	; (8008284 <UART5_IRQHandler+0xb4>)
 800826c:	79fa      	ldrb	r2, [r7, #7]
 800826e:	54ca      	strb	r2, [r1, r3]
		 }
	 }

}
 8008270:	e7ff      	b.n	8008272 <UART5_IRQHandler+0xa2>
 8008272:	bf00      	nop
 8008274:	3708      	adds	r7, #8
 8008276:	46bd      	mov	sp, r7
 8008278:	bd80      	pop	{r7, pc}
 800827a:	bf00      	nop
 800827c:	40005000 	.word	0x40005000
 8008280:	200050c0 	.word	0x200050c0
 8008284:	200050c4 	.word	0x200050c4

08008288 <LPUART1_IRQHandler>:


void USART_PC_IRQHandler(void) // Sync and Queue NMEA Sentences
{
 8008288:	b580      	push	{r7, lr}
 800828a:	b082      	sub	sp, #8
 800828c:	af00      	add	r7, sp, #0
	 static char rx_buffer[LINEMAX + 1]; // Local holding buffer to build line, w/NUL
	 static int rx_index = 0;
	 if (USART_PC->ISR & USART_ISR_ORE) // Overrun Error
 800828e:	4b29      	ldr	r3, [pc, #164]	; (8008334 <LPUART1_IRQHandler+0xac>)
 8008290:	69db      	ldr	r3, [r3, #28]
 8008292:	f003 0308 	and.w	r3, r3, #8
 8008296:	2b00      	cmp	r3, #0
 8008298:	d002      	beq.n	80082a0 <LPUART1_IRQHandler+0x18>
		 USART_PC->ICR = USART_ICR_ORECF;
 800829a:	4b26      	ldr	r3, [pc, #152]	; (8008334 <LPUART1_IRQHandler+0xac>)
 800829c:	2208      	movs	r2, #8
 800829e:	621a      	str	r2, [r3, #32]
	 if (USART_PC->ISR & USART_ISR_NE) // Noise Error
 80082a0:	4b24      	ldr	r3, [pc, #144]	; (8008334 <LPUART1_IRQHandler+0xac>)
 80082a2:	69db      	ldr	r3, [r3, #28]
 80082a4:	f003 0304 	and.w	r3, r3, #4
 80082a8:	2b00      	cmp	r3, #0
 80082aa:	d002      	beq.n	80082b2 <LPUART1_IRQHandler+0x2a>
		 USART_PC->ICR = USART_ICR_NCF;
 80082ac:	4b21      	ldr	r3, [pc, #132]	; (8008334 <LPUART1_IRQHandler+0xac>)
 80082ae:	2204      	movs	r2, #4
 80082b0:	621a      	str	r2, [r3, #32]
	 if (USART_PC->ISR & USART_ISR_FE) // Framing Error
 80082b2:	4b20      	ldr	r3, [pc, #128]	; (8008334 <LPUART1_IRQHandler+0xac>)
 80082b4:	69db      	ldr	r3, [r3, #28]
 80082b6:	f003 0302 	and.w	r3, r3, #2
 80082ba:	2b00      	cmp	r3, #0
 80082bc:	d002      	beq.n	80082c4 <LPUART1_IRQHandler+0x3c>
		 USART_PC->ICR = USART_ICR_FECF;
 80082be:	4b1d      	ldr	r3, [pc, #116]	; (8008334 <LPUART1_IRQHandler+0xac>)
 80082c0:	2202      	movs	r2, #2
 80082c2:	621a      	str	r2, [r3, #32]
	 if (USART_PC->ISR & USART_ISR_RXNE) // Received character?
 80082c4:	4b1b      	ldr	r3, [pc, #108]	; (8008334 <LPUART1_IRQHandler+0xac>)
 80082c6:	69db      	ldr	r3, [r3, #28]
 80082c8:	f003 0320 	and.w	r3, r3, #32
 80082cc:	2b00      	cmp	r3, #0
 80082ce:	d02c      	beq.n	800832a <LPUART1_IRQHandler+0xa2>
	 {
		 char rx = (char)(USART_PC->RDR & 0xFF);
 80082d0:	4b18      	ldr	r3, [pc, #96]	; (8008334 <LPUART1_IRQHandler+0xac>)
 80082d2:	8c9b      	ldrh	r3, [r3, #36]	; 0x24
 80082d4:	b29b      	uxth	r3, r3
 80082d6:	71fb      	strb	r3, [r7, #7]
		 if ((rx == '\r') || (rx == '\n')) // Is this an end-of-line condition, either will suffice?
 80082d8:	79fb      	ldrb	r3, [r7, #7]
 80082da:	2b0d      	cmp	r3, #13
 80082dc:	d002      	beq.n	80082e4 <LPUART1_IRQHandler+0x5c>
 80082de:	79fb      	ldrb	r3, [r7, #7]
 80082e0:	2b0a      	cmp	r3, #10
 80082e2:	d10e      	bne.n	8008302 <LPUART1_IRQHandler+0x7a>
		 {
			 if (rx_index != 0) // Line has some content?
 80082e4:	4b14      	ldr	r3, [pc, #80]	; (8008338 <LPUART1_IRQHandler+0xb0>)
 80082e6:	681b      	ldr	r3, [r3, #0]
 80082e8:	2b00      	cmp	r3, #0
 80082ea:	d01e      	beq.n	800832a <LPUART1_IRQHandler+0xa2>
			 {
				 //rx_buffer[rx_index++] = 0; // Add NUL if required down stream
				 QueueBuffer(rx_buffer, rx_index, 5); // Copy to queue from live dynamic receive buffer
 80082ec:	4b12      	ldr	r3, [pc, #72]	; (8008338 <LPUART1_IRQHandler+0xb0>)
 80082ee:	681b      	ldr	r3, [r3, #0]
 80082f0:	2205      	movs	r2, #5
 80082f2:	4619      	mov	r1, r3
 80082f4:	4811      	ldr	r0, [pc, #68]	; (800833c <LPUART1_IRQHandler+0xb4>)
 80082f6:	f7fd f91f 	bl	8005538 <QueueBuffer>
				 //HAL_UART_Transmit(&hlpuart1, rx_buffer, rx_index, 1000);
				 rx_index = 0; // Reset content pointer
 80082fa:	4b0f      	ldr	r3, [pc, #60]	; (8008338 <LPUART1_IRQHandler+0xb0>)
 80082fc:	2200      	movs	r2, #0
 80082fe:	601a      	str	r2, [r3, #0]
			 if (rx_index != 0) // Line has some content?
 8008300:	e013      	b.n	800832a <LPUART1_IRQHandler+0xa2>
			 }
		 }
		 else
		 {
			 if ((rx == '$') || (rx_index == LINEMAX)) // If resync or overflows pull back to start
 8008302:	79fb      	ldrb	r3, [r7, #7]
 8008304:	2b24      	cmp	r3, #36	; 0x24
 8008306:	d004      	beq.n	8008312 <LPUART1_IRQHandler+0x8a>
 8008308:	4b0b      	ldr	r3, [pc, #44]	; (8008338 <LPUART1_IRQHandler+0xb0>)
 800830a:	681b      	ldr	r3, [r3, #0]
 800830c:	f5b3 6ffa 	cmp.w	r3, #2000	; 0x7d0
 8008310:	d102      	bne.n	8008318 <LPUART1_IRQHandler+0x90>
			 rx_index = 0;
 8008312:	4b09      	ldr	r3, [pc, #36]	; (8008338 <LPUART1_IRQHandler+0xb0>)
 8008314:	2200      	movs	r2, #0
 8008316:	601a      	str	r2, [r3, #0]
			 rx_buffer[rx_index++] = rx; // Copy to buffer and increment
 8008318:	4b07      	ldr	r3, [pc, #28]	; (8008338 <LPUART1_IRQHandler+0xb0>)
 800831a:	681b      	ldr	r3, [r3, #0]
 800831c:	1c5a      	adds	r2, r3, #1
 800831e:	4906      	ldr	r1, [pc, #24]	; (8008338 <LPUART1_IRQHandler+0xb0>)
 8008320:	600a      	str	r2, [r1, #0]
 8008322:	4906      	ldr	r1, [pc, #24]	; (800833c <LPUART1_IRQHandler+0xb4>)
 8008324:	79fa      	ldrb	r2, [r7, #7]
 8008326:	54ca      	strb	r2, [r1, r3]
		 }
	 }

}
 8008328:	e7ff      	b.n	800832a <LPUART1_IRQHandler+0xa2>
 800832a:	bf00      	nop
 800832c:	3708      	adds	r7, #8
 800832e:	46bd      	mov	sp, r7
 8008330:	bd80      	pop	{r7, pc}
 8008332:	bf00      	nop
 8008334:	40008000 	.word	0x40008000
 8008338:	20005898 	.word	0x20005898
 800833c:	2000589c 	.word	0x2000589c

08008340 <Reset_Handler>:
 8008340:	f8df d034 	ldr.w	sp, [pc, #52]	; 8008378 <LoopForever+0x2>
 8008344:	2100      	movs	r1, #0
 8008346:	e003      	b.n	8008350 <LoopCopyDataInit>

08008348 <CopyDataInit>:
 8008348:	4b0c      	ldr	r3, [pc, #48]	; (800837c <LoopForever+0x6>)
 800834a:	585b      	ldr	r3, [r3, r1]
 800834c:	5043      	str	r3, [r0, r1]
 800834e:	3104      	adds	r1, #4

08008350 <LoopCopyDataInit>:
 8008350:	480b      	ldr	r0, [pc, #44]	; (8008380 <LoopForever+0xa>)
 8008352:	4b0c      	ldr	r3, [pc, #48]	; (8008384 <LoopForever+0xe>)
 8008354:	1842      	adds	r2, r0, r1
 8008356:	429a      	cmp	r2, r3
 8008358:	d3f6      	bcc.n	8008348 <CopyDataInit>
 800835a:	4a0b      	ldr	r2, [pc, #44]	; (8008388 <LoopForever+0x12>)
 800835c:	e002      	b.n	8008364 <LoopFillZerobss>

0800835e <FillZerobss>:
 800835e:	2300      	movs	r3, #0
 8008360:	f842 3b04 	str.w	r3, [r2], #4

08008364 <LoopFillZerobss>:
 8008364:	4b09      	ldr	r3, [pc, #36]	; (800838c <LoopForever+0x16>)
 8008366:	429a      	cmp	r2, r3
 8008368:	d3f9      	bcc.n	800835e <FillZerobss>
 800836a:	f7ff fcfd 	bl	8007d68 <SystemInit>
 800836e:	f008 f937 	bl	80105e0 <__libc_init_array>
 8008372:	f7fc f9fb 	bl	800476c <main>

08008376 <LoopForever>:
 8008376:	e7fe      	b.n	8008376 <LoopForever>
 8008378:	200a0000 	.word	0x200a0000
 800837c:	08016c38 	.word	0x08016c38
 8008380:	20000000 	.word	0x20000000
 8008384:	200001f0 	.word	0x200001f0
 8008388:	200001f0 	.word	0x200001f0
 800838c:	2000b5e4 	.word	0x2000b5e4

08008390 <ADC1_IRQHandler>:
 8008390:	e7fe      	b.n	8008390 <ADC1_IRQHandler>
	...

08008394 <HAL_Init>:
 8008394:	b580      	push	{r7, lr}
 8008396:	b082      	sub	sp, #8
 8008398:	af00      	add	r7, sp, #0
 800839a:	2300      	movs	r3, #0
 800839c:	71fb      	strb	r3, [r7, #7]
 800839e:	4b0c      	ldr	r3, [pc, #48]	; (80083d0 <HAL_Init+0x3c>)
 80083a0:	681b      	ldr	r3, [r3, #0]
 80083a2:	4a0b      	ldr	r2, [pc, #44]	; (80083d0 <HAL_Init+0x3c>)
 80083a4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80083a8:	6013      	str	r3, [r2, #0]
 80083aa:	2003      	movs	r0, #3
 80083ac:	f000 f8ff 	bl	80085ae <HAL_NVIC_SetPriorityGrouping>
 80083b0:	2000      	movs	r0, #0
 80083b2:	f7ff fc17 	bl	8007be4 <HAL_InitTick>
 80083b6:	4603      	mov	r3, r0
 80083b8:	2b00      	cmp	r3, #0
 80083ba:	d002      	beq.n	80083c2 <HAL_Init+0x2e>
 80083bc:	2301      	movs	r3, #1
 80083be:	71fb      	strb	r3, [r7, #7]
 80083c0:	e001      	b.n	80083c6 <HAL_Init+0x32>
 80083c2:	f7ff f987 	bl	80076d4 <HAL_MspInit>
 80083c6:	79fb      	ldrb	r3, [r7, #7]
 80083c8:	4618      	mov	r0, r3
 80083ca:	3708      	adds	r7, #8
 80083cc:	46bd      	mov	sp, r7
 80083ce:	bd80      	pop	{r7, pc}
 80083d0:	40022000 	.word	0x40022000

080083d4 <HAL_IncTick>:
 80083d4:	b480      	push	{r7}
 80083d6:	af00      	add	r7, sp, #0
 80083d8:	4b05      	ldr	r3, [pc, #20]	; (80083f0 <HAL_IncTick+0x1c>)
 80083da:	681a      	ldr	r2, [r3, #0]
 80083dc:	4b05      	ldr	r3, [pc, #20]	; (80083f4 <HAL_IncTick+0x20>)
 80083de:	681b      	ldr	r3, [r3, #0]
 80083e0:	4413      	add	r3, r2
 80083e2:	4a03      	ldr	r2, [pc, #12]	; (80083f0 <HAL_IncTick+0x1c>)
 80083e4:	6013      	str	r3, [r2, #0]
 80083e6:	bf00      	nop
 80083e8:	46bd      	mov	sp, r7
 80083ea:	f85d 7b04 	ldr.w	r7, [sp], #4
 80083ee:	4770      	bx	lr
 80083f0:	2000b59c 	.word	0x2000b59c
 80083f4:	20000014 	.word	0x20000014

080083f8 <HAL_GetTick>:
 80083f8:	b480      	push	{r7}
 80083fa:	af00      	add	r7, sp, #0
 80083fc:	4b03      	ldr	r3, [pc, #12]	; (800840c <HAL_GetTick+0x14>)
 80083fe:	681b      	ldr	r3, [r3, #0]
 8008400:	4618      	mov	r0, r3
 8008402:	46bd      	mov	sp, r7
 8008404:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008408:	4770      	bx	lr
 800840a:	bf00      	nop
 800840c:	2000b59c 	.word	0x2000b59c

08008410 <HAL_Delay>:
 8008410:	b580      	push	{r7, lr}
 8008412:	b084      	sub	sp, #16
 8008414:	af00      	add	r7, sp, #0
 8008416:	6078      	str	r0, [r7, #4]
 8008418:	f7ff ffee 	bl	80083f8 <HAL_GetTick>
 800841c:	60b8      	str	r0, [r7, #8]
 800841e:	687b      	ldr	r3, [r7, #4]
 8008420:	60fb      	str	r3, [r7, #12]
 8008422:	68fb      	ldr	r3, [r7, #12]
 8008424:	f1b3 3fff 	cmp.w	r3, #4294967295
 8008428:	d004      	beq.n	8008434 <HAL_Delay+0x24>
 800842a:	4b09      	ldr	r3, [pc, #36]	; (8008450 <HAL_Delay+0x40>)
 800842c:	681b      	ldr	r3, [r3, #0]
 800842e:	68fa      	ldr	r2, [r7, #12]
 8008430:	4413      	add	r3, r2
 8008432:	60fb      	str	r3, [r7, #12]
 8008434:	bf00      	nop
 8008436:	f7ff ffdf 	bl	80083f8 <HAL_GetTick>
 800843a:	4602      	mov	r2, r0
 800843c:	68bb      	ldr	r3, [r7, #8]
 800843e:	1ad3      	subs	r3, r2, r3
 8008440:	68fa      	ldr	r2, [r7, #12]
 8008442:	429a      	cmp	r2, r3
 8008444:	d8f7      	bhi.n	8008436 <HAL_Delay+0x26>
 8008446:	bf00      	nop
 8008448:	3710      	adds	r7, #16
 800844a:	46bd      	mov	sp, r7
 800844c:	bd80      	pop	{r7, pc}
 800844e:	bf00      	nop
 8008450:	20000014 	.word	0x20000014

08008454 <__NVIC_SetPriorityGrouping>:
 8008454:	b480      	push	{r7}
 8008456:	b085      	sub	sp, #20
 8008458:	af00      	add	r7, sp, #0
 800845a:	6078      	str	r0, [r7, #4]
 800845c:	687b      	ldr	r3, [r7, #4]
 800845e:	f003 0307 	and.w	r3, r3, #7
 8008462:	60fb      	str	r3, [r7, #12]
 8008464:	4b0c      	ldr	r3, [pc, #48]	; (8008498 <__NVIC_SetPriorityGrouping+0x44>)
 8008466:	68db      	ldr	r3, [r3, #12]
 8008468:	60bb      	str	r3, [r7, #8]
 800846a:	68ba      	ldr	r2, [r7, #8]
 800846c:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 8008470:	4013      	ands	r3, r2
 8008472:	60bb      	str	r3, [r7, #8]
 8008474:	68fb      	ldr	r3, [r7, #12]
 8008476:	021a      	lsls	r2, r3, #8
 8008478:	68bb      	ldr	r3, [r7, #8]
 800847a:	4313      	orrs	r3, r2
 800847c:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 8008480:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 8008484:	60bb      	str	r3, [r7, #8]
 8008486:	4a04      	ldr	r2, [pc, #16]	; (8008498 <__NVIC_SetPriorityGrouping+0x44>)
 8008488:	68bb      	ldr	r3, [r7, #8]
 800848a:	60d3      	str	r3, [r2, #12]
 800848c:	bf00      	nop
 800848e:	3714      	adds	r7, #20
 8008490:	46bd      	mov	sp, r7
 8008492:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008496:	4770      	bx	lr
 8008498:	e000ed00 	.word	0xe000ed00

0800849c <__NVIC_GetPriorityGrouping>:
 800849c:	b480      	push	{r7}
 800849e:	af00      	add	r7, sp, #0
 80084a0:	4b04      	ldr	r3, [pc, #16]	; (80084b4 <__NVIC_GetPriorityGrouping+0x18>)
 80084a2:	68db      	ldr	r3, [r3, #12]
 80084a4:	0a1b      	lsrs	r3, r3, #8
 80084a6:	f003 0307 	and.w	r3, r3, #7
 80084aa:	4618      	mov	r0, r3
 80084ac:	46bd      	mov	sp, r7
 80084ae:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084b2:	4770      	bx	lr
 80084b4:	e000ed00 	.word	0xe000ed00

080084b8 <__NVIC_EnableIRQ>:
 80084b8:	b480      	push	{r7}
 80084ba:	b083      	sub	sp, #12
 80084bc:	af00      	add	r7, sp, #0
 80084be:	4603      	mov	r3, r0
 80084c0:	71fb      	strb	r3, [r7, #7]
 80084c2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80084c6:	2b00      	cmp	r3, #0
 80084c8:	db0b      	blt.n	80084e2 <__NVIC_EnableIRQ+0x2a>
 80084ca:	79fb      	ldrb	r3, [r7, #7]
 80084cc:	f003 021f 	and.w	r2, r3, #31
 80084d0:	4907      	ldr	r1, [pc, #28]	; (80084f0 <__NVIC_EnableIRQ+0x38>)
 80084d2:	f997 3007 	ldrsb.w	r3, [r7, #7]
 80084d6:	095b      	lsrs	r3, r3, #5
 80084d8:	2001      	movs	r0, #1
 80084da:	fa00 f202 	lsl.w	r2, r0, r2
 80084de:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 80084e2:	bf00      	nop
 80084e4:	370c      	adds	r7, #12
 80084e6:	46bd      	mov	sp, r7
 80084e8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80084ec:	4770      	bx	lr
 80084ee:	bf00      	nop
 80084f0:	e000e100 	.word	0xe000e100

080084f4 <__NVIC_SetPriority>:
 80084f4:	b480      	push	{r7}
 80084f6:	b083      	sub	sp, #12
 80084f8:	af00      	add	r7, sp, #0
 80084fa:	4603      	mov	r3, r0
 80084fc:	6039      	str	r1, [r7, #0]
 80084fe:	71fb      	strb	r3, [r7, #7]
 8008500:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008504:	2b00      	cmp	r3, #0
 8008506:	db0a      	blt.n	800851e <__NVIC_SetPriority+0x2a>
 8008508:	683b      	ldr	r3, [r7, #0]
 800850a:	b2da      	uxtb	r2, r3
 800850c:	490c      	ldr	r1, [pc, #48]	; (8008540 <__NVIC_SetPriority+0x4c>)
 800850e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 8008512:	0112      	lsls	r2, r2, #4
 8008514:	b2d2      	uxtb	r2, r2
 8008516:	440b      	add	r3, r1
 8008518:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
 800851c:	e00a      	b.n	8008534 <__NVIC_SetPriority+0x40>
 800851e:	683b      	ldr	r3, [r7, #0]
 8008520:	b2da      	uxtb	r2, r3
 8008522:	4908      	ldr	r1, [pc, #32]	; (8008544 <__NVIC_SetPriority+0x50>)
 8008524:	79fb      	ldrb	r3, [r7, #7]
 8008526:	f003 030f 	and.w	r3, r3, #15
 800852a:	3b04      	subs	r3, #4
 800852c:	0112      	lsls	r2, r2, #4
 800852e:	b2d2      	uxtb	r2, r2
 8008530:	440b      	add	r3, r1
 8008532:	761a      	strb	r2, [r3, #24]
 8008534:	bf00      	nop
 8008536:	370c      	adds	r7, #12
 8008538:	46bd      	mov	sp, r7
 800853a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800853e:	4770      	bx	lr
 8008540:	e000e100 	.word	0xe000e100
 8008544:	e000ed00 	.word	0xe000ed00

08008548 <NVIC_EncodePriority>:
 8008548:	b480      	push	{r7}
 800854a:	b089      	sub	sp, #36	; 0x24
 800854c:	af00      	add	r7, sp, #0
 800854e:	60f8      	str	r0, [r7, #12]
 8008550:	60b9      	str	r1, [r7, #8]
 8008552:	607a      	str	r2, [r7, #4]
 8008554:	68fb      	ldr	r3, [r7, #12]
 8008556:	f003 0307 	and.w	r3, r3, #7
 800855a:	61fb      	str	r3, [r7, #28]
 800855c:	69fb      	ldr	r3, [r7, #28]
 800855e:	f1c3 0307 	rsb	r3, r3, #7
 8008562:	2b04      	cmp	r3, #4
 8008564:	bf28      	it	cs
 8008566:	2304      	movcs	r3, #4
 8008568:	61bb      	str	r3, [r7, #24]
 800856a:	69fb      	ldr	r3, [r7, #28]
 800856c:	3304      	adds	r3, #4
 800856e:	2b06      	cmp	r3, #6
 8008570:	d902      	bls.n	8008578 <NVIC_EncodePriority+0x30>
 8008572:	69fb      	ldr	r3, [r7, #28]
 8008574:	3b03      	subs	r3, #3
 8008576:	e000      	b.n	800857a <NVIC_EncodePriority+0x32>
 8008578:	2300      	movs	r3, #0
 800857a:	617b      	str	r3, [r7, #20]
 800857c:	f04f 32ff 	mov.w	r2, #4294967295
 8008580:	69bb      	ldr	r3, [r7, #24]
 8008582:	fa02 f303 	lsl.w	r3, r2, r3
 8008586:	43da      	mvns	r2, r3
 8008588:	68bb      	ldr	r3, [r7, #8]
 800858a:	401a      	ands	r2, r3
 800858c:	697b      	ldr	r3, [r7, #20]
 800858e:	409a      	lsls	r2, r3
 8008590:	f04f 31ff 	mov.w	r1, #4294967295
 8008594:	697b      	ldr	r3, [r7, #20]
 8008596:	fa01 f303 	lsl.w	r3, r1, r3
 800859a:	43d9      	mvns	r1, r3
 800859c:	687b      	ldr	r3, [r7, #4]
 800859e:	400b      	ands	r3, r1
 80085a0:	4313      	orrs	r3, r2
 80085a2:	4618      	mov	r0, r3
 80085a4:	3724      	adds	r7, #36	; 0x24
 80085a6:	46bd      	mov	sp, r7
 80085a8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80085ac:	4770      	bx	lr

080085ae <HAL_NVIC_SetPriorityGrouping>:
 80085ae:	b580      	push	{r7, lr}
 80085b0:	b082      	sub	sp, #8
 80085b2:	af00      	add	r7, sp, #0
 80085b4:	6078      	str	r0, [r7, #4]
 80085b6:	6878      	ldr	r0, [r7, #4]
 80085b8:	f7ff ff4c 	bl	8008454 <__NVIC_SetPriorityGrouping>
 80085bc:	bf00      	nop
 80085be:	3708      	adds	r7, #8
 80085c0:	46bd      	mov	sp, r7
 80085c2:	bd80      	pop	{r7, pc}

080085c4 <HAL_NVIC_SetPriority>:
 80085c4:	b580      	push	{r7, lr}
 80085c6:	b086      	sub	sp, #24
 80085c8:	af00      	add	r7, sp, #0
 80085ca:	4603      	mov	r3, r0
 80085cc:	60b9      	str	r1, [r7, #8]
 80085ce:	607a      	str	r2, [r7, #4]
 80085d0:	73fb      	strb	r3, [r7, #15]
 80085d2:	2300      	movs	r3, #0
 80085d4:	617b      	str	r3, [r7, #20]
 80085d6:	f7ff ff61 	bl	800849c <__NVIC_GetPriorityGrouping>
 80085da:	6178      	str	r0, [r7, #20]
 80085dc:	687a      	ldr	r2, [r7, #4]
 80085de:	68b9      	ldr	r1, [r7, #8]
 80085e0:	6978      	ldr	r0, [r7, #20]
 80085e2:	f7ff ffb1 	bl	8008548 <NVIC_EncodePriority>
 80085e6:	4602      	mov	r2, r0
 80085e8:	f997 300f 	ldrsb.w	r3, [r7, #15]
 80085ec:	4611      	mov	r1, r2
 80085ee:	4618      	mov	r0, r3
 80085f0:	f7ff ff80 	bl	80084f4 <__NVIC_SetPriority>
 80085f4:	bf00      	nop
 80085f6:	3718      	adds	r7, #24
 80085f8:	46bd      	mov	sp, r7
 80085fa:	bd80      	pop	{r7, pc}

080085fc <HAL_NVIC_EnableIRQ>:
 80085fc:	b580      	push	{r7, lr}
 80085fe:	b082      	sub	sp, #8
 8008600:	af00      	add	r7, sp, #0
 8008602:	4603      	mov	r3, r0
 8008604:	71fb      	strb	r3, [r7, #7]
 8008606:	f997 3007 	ldrsb.w	r3, [r7, #7]
 800860a:	4618      	mov	r0, r3
 800860c:	f7ff ff54 	bl	80084b8 <__NVIC_EnableIRQ>
 8008610:	bf00      	nop
 8008612:	3708      	adds	r7, #8
 8008614:	46bd      	mov	sp, r7
 8008616:	bd80      	pop	{r7, pc}

08008618 <HAL_GPIO_Init>:
 8008618:	b480      	push	{r7}
 800861a:	b087      	sub	sp, #28
 800861c:	af00      	add	r7, sp, #0
 800861e:	6078      	str	r0, [r7, #4]
 8008620:	6039      	str	r1, [r7, #0]
 8008622:	2300      	movs	r3, #0
 8008624:	617b      	str	r3, [r7, #20]
 8008626:	e166      	b.n	80088f6 <HAL_GPIO_Init+0x2de>
 8008628:	683b      	ldr	r3, [r7, #0]
 800862a:	681a      	ldr	r2, [r3, #0]
 800862c:	2101      	movs	r1, #1
 800862e:	697b      	ldr	r3, [r7, #20]
 8008630:	fa01 f303 	lsl.w	r3, r1, r3
 8008634:	4013      	ands	r3, r2
 8008636:	60fb      	str	r3, [r7, #12]
 8008638:	68fb      	ldr	r3, [r7, #12]
 800863a:	2b00      	cmp	r3, #0
 800863c:	f000 8158 	beq.w	80088f0 <HAL_GPIO_Init+0x2d8>
 8008640:	683b      	ldr	r3, [r7, #0]
 8008642:	685b      	ldr	r3, [r3, #4]
 8008644:	2b01      	cmp	r3, #1
 8008646:	d00b      	beq.n	8008660 <HAL_GPIO_Init+0x48>
 8008648:	683b      	ldr	r3, [r7, #0]
 800864a:	685b      	ldr	r3, [r3, #4]
 800864c:	2b02      	cmp	r3, #2
 800864e:	d007      	beq.n	8008660 <HAL_GPIO_Init+0x48>
 8008650:	683b      	ldr	r3, [r7, #0]
 8008652:	685b      	ldr	r3, [r3, #4]
 8008654:	2b11      	cmp	r3, #17
 8008656:	d003      	beq.n	8008660 <HAL_GPIO_Init+0x48>
 8008658:	683b      	ldr	r3, [r7, #0]
 800865a:	685b      	ldr	r3, [r3, #4]
 800865c:	2b12      	cmp	r3, #18
 800865e:	d130      	bne.n	80086c2 <HAL_GPIO_Init+0xaa>
 8008660:	687b      	ldr	r3, [r7, #4]
 8008662:	689b      	ldr	r3, [r3, #8]
 8008664:	613b      	str	r3, [r7, #16]
 8008666:	697b      	ldr	r3, [r7, #20]
 8008668:	005b      	lsls	r3, r3, #1
 800866a:	2203      	movs	r2, #3
 800866c:	fa02 f303 	lsl.w	r3, r2, r3
 8008670:	43db      	mvns	r3, r3
 8008672:	693a      	ldr	r2, [r7, #16]
 8008674:	4013      	ands	r3, r2
 8008676:	613b      	str	r3, [r7, #16]
 8008678:	683b      	ldr	r3, [r7, #0]
 800867a:	68da      	ldr	r2, [r3, #12]
 800867c:	697b      	ldr	r3, [r7, #20]
 800867e:	005b      	lsls	r3, r3, #1
 8008680:	fa02 f303 	lsl.w	r3, r2, r3
 8008684:	693a      	ldr	r2, [r7, #16]
 8008686:	4313      	orrs	r3, r2
 8008688:	613b      	str	r3, [r7, #16]
 800868a:	687b      	ldr	r3, [r7, #4]
 800868c:	693a      	ldr	r2, [r7, #16]
 800868e:	609a      	str	r2, [r3, #8]
 8008690:	687b      	ldr	r3, [r7, #4]
 8008692:	685b      	ldr	r3, [r3, #4]
 8008694:	613b      	str	r3, [r7, #16]
 8008696:	2201      	movs	r2, #1
 8008698:	697b      	ldr	r3, [r7, #20]
 800869a:	fa02 f303 	lsl.w	r3, r2, r3
 800869e:	43db      	mvns	r3, r3
 80086a0:	693a      	ldr	r2, [r7, #16]
 80086a2:	4013      	ands	r3, r2
 80086a4:	613b      	str	r3, [r7, #16]
 80086a6:	683b      	ldr	r3, [r7, #0]
 80086a8:	685b      	ldr	r3, [r3, #4]
 80086aa:	091b      	lsrs	r3, r3, #4
 80086ac:	f003 0201 	and.w	r2, r3, #1
 80086b0:	697b      	ldr	r3, [r7, #20]
 80086b2:	fa02 f303 	lsl.w	r3, r2, r3
 80086b6:	693a      	ldr	r2, [r7, #16]
 80086b8:	4313      	orrs	r3, r2
 80086ba:	613b      	str	r3, [r7, #16]
 80086bc:	687b      	ldr	r3, [r7, #4]
 80086be:	693a      	ldr	r2, [r7, #16]
 80086c0:	605a      	str	r2, [r3, #4]
 80086c2:	687b      	ldr	r3, [r7, #4]
 80086c4:	68db      	ldr	r3, [r3, #12]
 80086c6:	613b      	str	r3, [r7, #16]
 80086c8:	697b      	ldr	r3, [r7, #20]
 80086ca:	005b      	lsls	r3, r3, #1
 80086cc:	2203      	movs	r2, #3
 80086ce:	fa02 f303 	lsl.w	r3, r2, r3
 80086d2:	43db      	mvns	r3, r3
 80086d4:	693a      	ldr	r2, [r7, #16]
 80086d6:	4013      	ands	r3, r2
 80086d8:	613b      	str	r3, [r7, #16]
 80086da:	683b      	ldr	r3, [r7, #0]
 80086dc:	689a      	ldr	r2, [r3, #8]
 80086de:	697b      	ldr	r3, [r7, #20]
 80086e0:	005b      	lsls	r3, r3, #1
 80086e2:	fa02 f303 	lsl.w	r3, r2, r3
 80086e6:	693a      	ldr	r2, [r7, #16]
 80086e8:	4313      	orrs	r3, r2
 80086ea:	613b      	str	r3, [r7, #16]
 80086ec:	687b      	ldr	r3, [r7, #4]
 80086ee:	693a      	ldr	r2, [r7, #16]
 80086f0:	60da      	str	r2, [r3, #12]
 80086f2:	683b      	ldr	r3, [r7, #0]
 80086f4:	685b      	ldr	r3, [r3, #4]
 80086f6:	2b02      	cmp	r3, #2
 80086f8:	d003      	beq.n	8008702 <HAL_GPIO_Init+0xea>
 80086fa:	683b      	ldr	r3, [r7, #0]
 80086fc:	685b      	ldr	r3, [r3, #4]
 80086fe:	2b12      	cmp	r3, #18
 8008700:	d123      	bne.n	800874a <HAL_GPIO_Init+0x132>
 8008702:	697b      	ldr	r3, [r7, #20]
 8008704:	08da      	lsrs	r2, r3, #3
 8008706:	687b      	ldr	r3, [r7, #4]
 8008708:	3208      	adds	r2, #8
 800870a:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 800870e:	613b      	str	r3, [r7, #16]
 8008710:	697b      	ldr	r3, [r7, #20]
 8008712:	f003 0307 	and.w	r3, r3, #7
 8008716:	009b      	lsls	r3, r3, #2
 8008718:	220f      	movs	r2, #15
 800871a:	fa02 f303 	lsl.w	r3, r2, r3
 800871e:	43db      	mvns	r3, r3
 8008720:	693a      	ldr	r2, [r7, #16]
 8008722:	4013      	ands	r3, r2
 8008724:	613b      	str	r3, [r7, #16]
 8008726:	683b      	ldr	r3, [r7, #0]
 8008728:	691a      	ldr	r2, [r3, #16]
 800872a:	697b      	ldr	r3, [r7, #20]
 800872c:	f003 0307 	and.w	r3, r3, #7
 8008730:	009b      	lsls	r3, r3, #2
 8008732:	fa02 f303 	lsl.w	r3, r2, r3
 8008736:	693a      	ldr	r2, [r7, #16]
 8008738:	4313      	orrs	r3, r2
 800873a:	613b      	str	r3, [r7, #16]
 800873c:	697b      	ldr	r3, [r7, #20]
 800873e:	08da      	lsrs	r2, r3, #3
 8008740:	687b      	ldr	r3, [r7, #4]
 8008742:	3208      	adds	r2, #8
 8008744:	6939      	ldr	r1, [r7, #16]
 8008746:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
 800874a:	687b      	ldr	r3, [r7, #4]
 800874c:	681b      	ldr	r3, [r3, #0]
 800874e:	613b      	str	r3, [r7, #16]
 8008750:	697b      	ldr	r3, [r7, #20]
 8008752:	005b      	lsls	r3, r3, #1
 8008754:	2203      	movs	r2, #3
 8008756:	fa02 f303 	lsl.w	r3, r2, r3
 800875a:	43db      	mvns	r3, r3
 800875c:	693a      	ldr	r2, [r7, #16]
 800875e:	4013      	ands	r3, r2
 8008760:	613b      	str	r3, [r7, #16]
 8008762:	683b      	ldr	r3, [r7, #0]
 8008764:	685b      	ldr	r3, [r3, #4]
 8008766:	f003 0203 	and.w	r2, r3, #3
 800876a:	697b      	ldr	r3, [r7, #20]
 800876c:	005b      	lsls	r3, r3, #1
 800876e:	fa02 f303 	lsl.w	r3, r2, r3
 8008772:	693a      	ldr	r2, [r7, #16]
 8008774:	4313      	orrs	r3, r2
 8008776:	613b      	str	r3, [r7, #16]
 8008778:	687b      	ldr	r3, [r7, #4]
 800877a:	693a      	ldr	r2, [r7, #16]
 800877c:	601a      	str	r2, [r3, #0]
 800877e:	683b      	ldr	r3, [r7, #0]
 8008780:	685b      	ldr	r3, [r3, #4]
 8008782:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8008786:	2b00      	cmp	r3, #0
 8008788:	f000 80b2 	beq.w	80088f0 <HAL_GPIO_Init+0x2d8>
 800878c:	4b61      	ldr	r3, [pc, #388]	; (8008914 <HAL_GPIO_Init+0x2fc>)
 800878e:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 8008790:	4a60      	ldr	r2, [pc, #384]	; (8008914 <HAL_GPIO_Init+0x2fc>)
 8008792:	f043 0301 	orr.w	r3, r3, #1
 8008796:	6613      	str	r3, [r2, #96]	; 0x60
 8008798:	4b5e      	ldr	r3, [pc, #376]	; (8008914 <HAL_GPIO_Init+0x2fc>)
 800879a:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800879c:	f003 0301 	and.w	r3, r3, #1
 80087a0:	60bb      	str	r3, [r7, #8]
 80087a2:	68bb      	ldr	r3, [r7, #8]
 80087a4:	4a5c      	ldr	r2, [pc, #368]	; (8008918 <HAL_GPIO_Init+0x300>)
 80087a6:	697b      	ldr	r3, [r7, #20]
 80087a8:	089b      	lsrs	r3, r3, #2
 80087aa:	3302      	adds	r3, #2
 80087ac:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 80087b0:	613b      	str	r3, [r7, #16]
 80087b2:	697b      	ldr	r3, [r7, #20]
 80087b4:	f003 0303 	and.w	r3, r3, #3
 80087b8:	009b      	lsls	r3, r3, #2
 80087ba:	220f      	movs	r2, #15
 80087bc:	fa02 f303 	lsl.w	r3, r2, r3
 80087c0:	43db      	mvns	r3, r3
 80087c2:	693a      	ldr	r2, [r7, #16]
 80087c4:	4013      	ands	r3, r2
 80087c6:	613b      	str	r3, [r7, #16]
 80087c8:	687b      	ldr	r3, [r7, #4]
 80087ca:	f1b3 4f90 	cmp.w	r3, #1207959552	; 0x48000000
 80087ce:	d02b      	beq.n	8008828 <HAL_GPIO_Init+0x210>
 80087d0:	687b      	ldr	r3, [r7, #4]
 80087d2:	4a52      	ldr	r2, [pc, #328]	; (800891c <HAL_GPIO_Init+0x304>)
 80087d4:	4293      	cmp	r3, r2
 80087d6:	d025      	beq.n	8008824 <HAL_GPIO_Init+0x20c>
 80087d8:	687b      	ldr	r3, [r7, #4]
 80087da:	4a51      	ldr	r2, [pc, #324]	; (8008920 <HAL_GPIO_Init+0x308>)
 80087dc:	4293      	cmp	r3, r2
 80087de:	d01f      	beq.n	8008820 <HAL_GPIO_Init+0x208>
 80087e0:	687b      	ldr	r3, [r7, #4]
 80087e2:	4a50      	ldr	r2, [pc, #320]	; (8008924 <HAL_GPIO_Init+0x30c>)
 80087e4:	4293      	cmp	r3, r2
 80087e6:	d019      	beq.n	800881c <HAL_GPIO_Init+0x204>
 80087e8:	687b      	ldr	r3, [r7, #4]
 80087ea:	4a4f      	ldr	r2, [pc, #316]	; (8008928 <HAL_GPIO_Init+0x310>)
 80087ec:	4293      	cmp	r3, r2
 80087ee:	d013      	beq.n	8008818 <HAL_GPIO_Init+0x200>
 80087f0:	687b      	ldr	r3, [r7, #4]
 80087f2:	4a4e      	ldr	r2, [pc, #312]	; (800892c <HAL_GPIO_Init+0x314>)
 80087f4:	4293      	cmp	r3, r2
 80087f6:	d00d      	beq.n	8008814 <HAL_GPIO_Init+0x1fc>
 80087f8:	687b      	ldr	r3, [r7, #4]
 80087fa:	4a4d      	ldr	r2, [pc, #308]	; (8008930 <HAL_GPIO_Init+0x318>)
 80087fc:	4293      	cmp	r3, r2
 80087fe:	d007      	beq.n	8008810 <HAL_GPIO_Init+0x1f8>
 8008800:	687b      	ldr	r3, [r7, #4]
 8008802:	4a4c      	ldr	r2, [pc, #304]	; (8008934 <HAL_GPIO_Init+0x31c>)
 8008804:	4293      	cmp	r3, r2
 8008806:	d101      	bne.n	800880c <HAL_GPIO_Init+0x1f4>
 8008808:	2307      	movs	r3, #7
 800880a:	e00e      	b.n	800882a <HAL_GPIO_Init+0x212>
 800880c:	2308      	movs	r3, #8
 800880e:	e00c      	b.n	800882a <HAL_GPIO_Init+0x212>
 8008810:	2306      	movs	r3, #6
 8008812:	e00a      	b.n	800882a <HAL_GPIO_Init+0x212>
 8008814:	2305      	movs	r3, #5
 8008816:	e008      	b.n	800882a <HAL_GPIO_Init+0x212>
 8008818:	2304      	movs	r3, #4
 800881a:	e006      	b.n	800882a <HAL_GPIO_Init+0x212>
 800881c:	2303      	movs	r3, #3
 800881e:	e004      	b.n	800882a <HAL_GPIO_Init+0x212>
 8008820:	2302      	movs	r3, #2
 8008822:	e002      	b.n	800882a <HAL_GPIO_Init+0x212>
 8008824:	2301      	movs	r3, #1
 8008826:	e000      	b.n	800882a <HAL_GPIO_Init+0x212>
 8008828:	2300      	movs	r3, #0
 800882a:	697a      	ldr	r2, [r7, #20]
 800882c:	f002 0203 	and.w	r2, r2, #3
 8008830:	0092      	lsls	r2, r2, #2
 8008832:	4093      	lsls	r3, r2
 8008834:	693a      	ldr	r2, [r7, #16]
 8008836:	4313      	orrs	r3, r2
 8008838:	613b      	str	r3, [r7, #16]
 800883a:	4937      	ldr	r1, [pc, #220]	; (8008918 <HAL_GPIO_Init+0x300>)
 800883c:	697b      	ldr	r3, [r7, #20]
 800883e:	089b      	lsrs	r3, r3, #2
 8008840:	3302      	adds	r3, #2
 8008842:	693a      	ldr	r2, [r7, #16]
 8008844:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8008848:	4b3b      	ldr	r3, [pc, #236]	; (8008938 <HAL_GPIO_Init+0x320>)
 800884a:	681b      	ldr	r3, [r3, #0]
 800884c:	613b      	str	r3, [r7, #16]
 800884e:	68fb      	ldr	r3, [r7, #12]
 8008850:	43db      	mvns	r3, r3
 8008852:	693a      	ldr	r2, [r7, #16]
 8008854:	4013      	ands	r3, r2
 8008856:	613b      	str	r3, [r7, #16]
 8008858:	683b      	ldr	r3, [r7, #0]
 800885a:	685b      	ldr	r3, [r3, #4]
 800885c:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 8008860:	2b00      	cmp	r3, #0
 8008862:	d003      	beq.n	800886c <HAL_GPIO_Init+0x254>
 8008864:	693a      	ldr	r2, [r7, #16]
 8008866:	68fb      	ldr	r3, [r7, #12]
 8008868:	4313      	orrs	r3, r2
 800886a:	613b      	str	r3, [r7, #16]
 800886c:	4a32      	ldr	r2, [pc, #200]	; (8008938 <HAL_GPIO_Init+0x320>)
 800886e:	693b      	ldr	r3, [r7, #16]
 8008870:	6013      	str	r3, [r2, #0]
 8008872:	4b31      	ldr	r3, [pc, #196]	; (8008938 <HAL_GPIO_Init+0x320>)
 8008874:	685b      	ldr	r3, [r3, #4]
 8008876:	613b      	str	r3, [r7, #16]
 8008878:	68fb      	ldr	r3, [r7, #12]
 800887a:	43db      	mvns	r3, r3
 800887c:	693a      	ldr	r2, [r7, #16]
 800887e:	4013      	ands	r3, r2
 8008880:	613b      	str	r3, [r7, #16]
 8008882:	683b      	ldr	r3, [r7, #0]
 8008884:	685b      	ldr	r3, [r3, #4]
 8008886:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800888a:	2b00      	cmp	r3, #0
 800888c:	d003      	beq.n	8008896 <HAL_GPIO_Init+0x27e>
 800888e:	693a      	ldr	r2, [r7, #16]
 8008890:	68fb      	ldr	r3, [r7, #12]
 8008892:	4313      	orrs	r3, r2
 8008894:	613b      	str	r3, [r7, #16]
 8008896:	4a28      	ldr	r2, [pc, #160]	; (8008938 <HAL_GPIO_Init+0x320>)
 8008898:	693b      	ldr	r3, [r7, #16]
 800889a:	6053      	str	r3, [r2, #4]
 800889c:	4b26      	ldr	r3, [pc, #152]	; (8008938 <HAL_GPIO_Init+0x320>)
 800889e:	689b      	ldr	r3, [r3, #8]
 80088a0:	613b      	str	r3, [r7, #16]
 80088a2:	68fb      	ldr	r3, [r7, #12]
 80088a4:	43db      	mvns	r3, r3
 80088a6:	693a      	ldr	r2, [r7, #16]
 80088a8:	4013      	ands	r3, r2
 80088aa:	613b      	str	r3, [r7, #16]
 80088ac:	683b      	ldr	r3, [r7, #0]
 80088ae:	685b      	ldr	r3, [r3, #4]
 80088b0:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 80088b4:	2b00      	cmp	r3, #0
 80088b6:	d003      	beq.n	80088c0 <HAL_GPIO_Init+0x2a8>
 80088b8:	693a      	ldr	r2, [r7, #16]
 80088ba:	68fb      	ldr	r3, [r7, #12]
 80088bc:	4313      	orrs	r3, r2
 80088be:	613b      	str	r3, [r7, #16]
 80088c0:	4a1d      	ldr	r2, [pc, #116]	; (8008938 <HAL_GPIO_Init+0x320>)
 80088c2:	693b      	ldr	r3, [r7, #16]
 80088c4:	6093      	str	r3, [r2, #8]
 80088c6:	4b1c      	ldr	r3, [pc, #112]	; (8008938 <HAL_GPIO_Init+0x320>)
 80088c8:	68db      	ldr	r3, [r3, #12]
 80088ca:	613b      	str	r3, [r7, #16]
 80088cc:	68fb      	ldr	r3, [r7, #12]
 80088ce:	43db      	mvns	r3, r3
 80088d0:	693a      	ldr	r2, [r7, #16]
 80088d2:	4013      	ands	r3, r2
 80088d4:	613b      	str	r3, [r7, #16]
 80088d6:	683b      	ldr	r3, [r7, #0]
 80088d8:	685b      	ldr	r3, [r3, #4]
 80088da:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 80088de:	2b00      	cmp	r3, #0
 80088e0:	d003      	beq.n	80088ea <HAL_GPIO_Init+0x2d2>
 80088e2:	693a      	ldr	r2, [r7, #16]
 80088e4:	68fb      	ldr	r3, [r7, #12]
 80088e6:	4313      	orrs	r3, r2
 80088e8:	613b      	str	r3, [r7, #16]
 80088ea:	4a13      	ldr	r2, [pc, #76]	; (8008938 <HAL_GPIO_Init+0x320>)
 80088ec:	693b      	ldr	r3, [r7, #16]
 80088ee:	60d3      	str	r3, [r2, #12]
 80088f0:	697b      	ldr	r3, [r7, #20]
 80088f2:	3301      	adds	r3, #1
 80088f4:	617b      	str	r3, [r7, #20]
 80088f6:	683b      	ldr	r3, [r7, #0]
 80088f8:	681a      	ldr	r2, [r3, #0]
 80088fa:	697b      	ldr	r3, [r7, #20]
 80088fc:	fa22 f303 	lsr.w	r3, r2, r3
 8008900:	2b00      	cmp	r3, #0
 8008902:	f47f ae91 	bne.w	8008628 <HAL_GPIO_Init+0x10>
 8008906:	bf00      	nop
 8008908:	371c      	adds	r7, #28
 800890a:	46bd      	mov	sp, r7
 800890c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008910:	4770      	bx	lr
 8008912:	bf00      	nop
 8008914:	40021000 	.word	0x40021000
 8008918:	40010000 	.word	0x40010000
 800891c:	48000400 	.word	0x48000400
 8008920:	48000800 	.word	0x48000800
 8008924:	48000c00 	.word	0x48000c00
 8008928:	48001000 	.word	0x48001000
 800892c:	48001400 	.word	0x48001400
 8008930:	48001800 	.word	0x48001800
 8008934:	48001c00 	.word	0x48001c00
 8008938:	40010400 	.word	0x40010400

0800893c <HAL_GPIO_ReadPin>:
 800893c:	b480      	push	{r7}
 800893e:	b085      	sub	sp, #20
 8008940:	af00      	add	r7, sp, #0
 8008942:	6078      	str	r0, [r7, #4]
 8008944:	460b      	mov	r3, r1
 8008946:	807b      	strh	r3, [r7, #2]
 8008948:	687b      	ldr	r3, [r7, #4]
 800894a:	691a      	ldr	r2, [r3, #16]
 800894c:	887b      	ldrh	r3, [r7, #2]
 800894e:	4013      	ands	r3, r2
 8008950:	2b00      	cmp	r3, #0
 8008952:	d002      	beq.n	800895a <HAL_GPIO_ReadPin+0x1e>
 8008954:	2301      	movs	r3, #1
 8008956:	73fb      	strb	r3, [r7, #15]
 8008958:	e001      	b.n	800895e <HAL_GPIO_ReadPin+0x22>
 800895a:	2300      	movs	r3, #0
 800895c:	73fb      	strb	r3, [r7, #15]
 800895e:	7bfb      	ldrb	r3, [r7, #15]
 8008960:	4618      	mov	r0, r3
 8008962:	3714      	adds	r7, #20
 8008964:	46bd      	mov	sp, r7
 8008966:	f85d 7b04 	ldr.w	r7, [sp], #4
 800896a:	4770      	bx	lr

0800896c <HAL_GPIO_WritePin>:
 800896c:	b480      	push	{r7}
 800896e:	b083      	sub	sp, #12
 8008970:	af00      	add	r7, sp, #0
 8008972:	6078      	str	r0, [r7, #4]
 8008974:	460b      	mov	r3, r1
 8008976:	807b      	strh	r3, [r7, #2]
 8008978:	4613      	mov	r3, r2
 800897a:	707b      	strb	r3, [r7, #1]
 800897c:	787b      	ldrb	r3, [r7, #1]
 800897e:	2b00      	cmp	r3, #0
 8008980:	d003      	beq.n	800898a <HAL_GPIO_WritePin+0x1e>
 8008982:	887a      	ldrh	r2, [r7, #2]
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	619a      	str	r2, [r3, #24]
 8008988:	e002      	b.n	8008990 <HAL_GPIO_WritePin+0x24>
 800898a:	887a      	ldrh	r2, [r7, #2]
 800898c:	687b      	ldr	r3, [r7, #4]
 800898e:	629a      	str	r2, [r3, #40]	; 0x28
 8008990:	bf00      	nop
 8008992:	370c      	adds	r7, #12
 8008994:	46bd      	mov	sp, r7
 8008996:	f85d 7b04 	ldr.w	r7, [sp], #4
 800899a:	4770      	bx	lr

0800899c <HAL_GPIO_EXTI_IRQHandler>:
 800899c:	b580      	push	{r7, lr}
 800899e:	b082      	sub	sp, #8
 80089a0:	af00      	add	r7, sp, #0
 80089a2:	4603      	mov	r3, r0
 80089a4:	80fb      	strh	r3, [r7, #6]
 80089a6:	4b08      	ldr	r3, [pc, #32]	; (80089c8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80089a8:	695a      	ldr	r2, [r3, #20]
 80089aa:	88fb      	ldrh	r3, [r7, #6]
 80089ac:	4013      	ands	r3, r2
 80089ae:	2b00      	cmp	r3, #0
 80089b0:	d006      	beq.n	80089c0 <HAL_GPIO_EXTI_IRQHandler+0x24>
 80089b2:	4a05      	ldr	r2, [pc, #20]	; (80089c8 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 80089b4:	88fb      	ldrh	r3, [r7, #6]
 80089b6:	6153      	str	r3, [r2, #20]
 80089b8:	88fb      	ldrh	r3, [r7, #6]
 80089ba:	4618      	mov	r0, r3
 80089bc:	f000 f806 	bl	80089cc <HAL_GPIO_EXTI_Callback>
 80089c0:	bf00      	nop
 80089c2:	3708      	adds	r7, #8
 80089c4:	46bd      	mov	sp, r7
 80089c6:	bd80      	pop	{r7, pc}
 80089c8:	40010400 	.word	0x40010400

080089cc <HAL_GPIO_EXTI_Callback>:
 80089cc:	b480      	push	{r7}
 80089ce:	b083      	sub	sp, #12
 80089d0:	af00      	add	r7, sp, #0
 80089d2:	4603      	mov	r3, r0
 80089d4:	80fb      	strh	r3, [r7, #6]
 80089d6:	bf00      	nop
 80089d8:	370c      	adds	r7, #12
 80089da:	46bd      	mov	sp, r7
 80089dc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80089e0:	4770      	bx	lr

080089e2 <HAL_I2C_Init>:
 80089e2:	b580      	push	{r7, lr}
 80089e4:	b082      	sub	sp, #8
 80089e6:	af00      	add	r7, sp, #0
 80089e8:	6078      	str	r0, [r7, #4]
 80089ea:	687b      	ldr	r3, [r7, #4]
 80089ec:	2b00      	cmp	r3, #0
 80089ee:	d101      	bne.n	80089f4 <HAL_I2C_Init+0x12>
 80089f0:	2301      	movs	r3, #1
 80089f2:	e081      	b.n	8008af8 <HAL_I2C_Init+0x116>
 80089f4:	687b      	ldr	r3, [r7, #4]
 80089f6:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 80089fa:	b2db      	uxtb	r3, r3
 80089fc:	2b00      	cmp	r3, #0
 80089fe:	d106      	bne.n	8008a0e <HAL_I2C_Init+0x2c>
 8008a00:	687b      	ldr	r3, [r7, #4]
 8008a02:	2200      	movs	r2, #0
 8008a04:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008a08:	6878      	ldr	r0, [r7, #4]
 8008a0a:	f7fe fe8b 	bl	8007724 <HAL_I2C_MspInit>
 8008a0e:	687b      	ldr	r3, [r7, #4]
 8008a10:	2224      	movs	r2, #36	; 0x24
 8008a12:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008a16:	687b      	ldr	r3, [r7, #4]
 8008a18:	681b      	ldr	r3, [r3, #0]
 8008a1a:	681a      	ldr	r2, [r3, #0]
 8008a1c:	687b      	ldr	r3, [r7, #4]
 8008a1e:	681b      	ldr	r3, [r3, #0]
 8008a20:	f022 0201 	bic.w	r2, r2, #1
 8008a24:	601a      	str	r2, [r3, #0]
 8008a26:	687b      	ldr	r3, [r7, #4]
 8008a28:	685a      	ldr	r2, [r3, #4]
 8008a2a:	687b      	ldr	r3, [r7, #4]
 8008a2c:	681b      	ldr	r3, [r3, #0]
 8008a2e:	f022 6270 	bic.w	r2, r2, #251658240	; 0xf000000
 8008a32:	611a      	str	r2, [r3, #16]
 8008a34:	687b      	ldr	r3, [r7, #4]
 8008a36:	681b      	ldr	r3, [r3, #0]
 8008a38:	689a      	ldr	r2, [r3, #8]
 8008a3a:	687b      	ldr	r3, [r7, #4]
 8008a3c:	681b      	ldr	r3, [r3, #0]
 8008a3e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8008a42:	609a      	str	r2, [r3, #8]
 8008a44:	687b      	ldr	r3, [r7, #4]
 8008a46:	68db      	ldr	r3, [r3, #12]
 8008a48:	2b01      	cmp	r3, #1
 8008a4a:	d107      	bne.n	8008a5c <HAL_I2C_Init+0x7a>
 8008a4c:	687b      	ldr	r3, [r7, #4]
 8008a4e:	689a      	ldr	r2, [r3, #8]
 8008a50:	687b      	ldr	r3, [r7, #4]
 8008a52:	681b      	ldr	r3, [r3, #0]
 8008a54:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 8008a58:	609a      	str	r2, [r3, #8]
 8008a5a:	e006      	b.n	8008a6a <HAL_I2C_Init+0x88>
 8008a5c:	687b      	ldr	r3, [r7, #4]
 8008a5e:	689a      	ldr	r2, [r3, #8]
 8008a60:	687b      	ldr	r3, [r7, #4]
 8008a62:	681b      	ldr	r3, [r3, #0]
 8008a64:	f442 4204 	orr.w	r2, r2, #33792	; 0x8400
 8008a68:	609a      	str	r2, [r3, #8]
 8008a6a:	687b      	ldr	r3, [r7, #4]
 8008a6c:	68db      	ldr	r3, [r3, #12]
 8008a6e:	2b02      	cmp	r3, #2
 8008a70:	d104      	bne.n	8008a7c <HAL_I2C_Init+0x9a>
 8008a72:	687b      	ldr	r3, [r7, #4]
 8008a74:	681b      	ldr	r3, [r3, #0]
 8008a76:	f44f 6200 	mov.w	r2, #2048	; 0x800
 8008a7a:	605a      	str	r2, [r3, #4]
 8008a7c:	687b      	ldr	r3, [r7, #4]
 8008a7e:	681b      	ldr	r3, [r3, #0]
 8008a80:	685b      	ldr	r3, [r3, #4]
 8008a82:	687a      	ldr	r2, [r7, #4]
 8008a84:	6812      	ldr	r2, [r2, #0]
 8008a86:	f043 7300 	orr.w	r3, r3, #33554432	; 0x2000000
 8008a8a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 8008a8e:	6053      	str	r3, [r2, #4]
 8008a90:	687b      	ldr	r3, [r7, #4]
 8008a92:	681b      	ldr	r3, [r3, #0]
 8008a94:	68da      	ldr	r2, [r3, #12]
 8008a96:	687b      	ldr	r3, [r7, #4]
 8008a98:	681b      	ldr	r3, [r3, #0]
 8008a9a:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 8008a9e:	60da      	str	r2, [r3, #12]
 8008aa0:	687b      	ldr	r3, [r7, #4]
 8008aa2:	691a      	ldr	r2, [r3, #16]
 8008aa4:	687b      	ldr	r3, [r7, #4]
 8008aa6:	695b      	ldr	r3, [r3, #20]
 8008aa8:	ea42 0103 	orr.w	r1, r2, r3
 8008aac:	687b      	ldr	r3, [r7, #4]
 8008aae:	699b      	ldr	r3, [r3, #24]
 8008ab0:	021a      	lsls	r2, r3, #8
 8008ab2:	687b      	ldr	r3, [r7, #4]
 8008ab4:	681b      	ldr	r3, [r3, #0]
 8008ab6:	430a      	orrs	r2, r1
 8008ab8:	60da      	str	r2, [r3, #12]
 8008aba:	687b      	ldr	r3, [r7, #4]
 8008abc:	69d9      	ldr	r1, [r3, #28]
 8008abe:	687b      	ldr	r3, [r7, #4]
 8008ac0:	6a1a      	ldr	r2, [r3, #32]
 8008ac2:	687b      	ldr	r3, [r7, #4]
 8008ac4:	681b      	ldr	r3, [r3, #0]
 8008ac6:	430a      	orrs	r2, r1
 8008ac8:	601a      	str	r2, [r3, #0]
 8008aca:	687b      	ldr	r3, [r7, #4]
 8008acc:	681b      	ldr	r3, [r3, #0]
 8008ace:	681a      	ldr	r2, [r3, #0]
 8008ad0:	687b      	ldr	r3, [r7, #4]
 8008ad2:	681b      	ldr	r3, [r3, #0]
 8008ad4:	f042 0201 	orr.w	r2, r2, #1
 8008ad8:	601a      	str	r2, [r3, #0]
 8008ada:	687b      	ldr	r3, [r7, #4]
 8008adc:	2200      	movs	r2, #0
 8008ade:	645a      	str	r2, [r3, #68]	; 0x44
 8008ae0:	687b      	ldr	r3, [r7, #4]
 8008ae2:	2220      	movs	r2, #32
 8008ae4:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008ae8:	687b      	ldr	r3, [r7, #4]
 8008aea:	2200      	movs	r2, #0
 8008aec:	631a      	str	r2, [r3, #48]	; 0x30
 8008aee:	687b      	ldr	r3, [r7, #4]
 8008af0:	2200      	movs	r2, #0
 8008af2:	f883 2042 	strb.w	r2, [r3, #66]	; 0x42
 8008af6:	2300      	movs	r3, #0
 8008af8:	4618      	mov	r0, r3
 8008afa:	3708      	adds	r7, #8
 8008afc:	46bd      	mov	sp, r7
 8008afe:	bd80      	pop	{r7, pc}

08008b00 <HAL_I2CEx_ConfigAnalogFilter>:
 8008b00:	b480      	push	{r7}
 8008b02:	b083      	sub	sp, #12
 8008b04:	af00      	add	r7, sp, #0
 8008b06:	6078      	str	r0, [r7, #4]
 8008b08:	6039      	str	r1, [r7, #0]
 8008b0a:	687b      	ldr	r3, [r7, #4]
 8008b0c:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8008b10:	b2db      	uxtb	r3, r3
 8008b12:	2b20      	cmp	r3, #32
 8008b14:	d138      	bne.n	8008b88 <HAL_I2CEx_ConfigAnalogFilter+0x88>
 8008b16:	687b      	ldr	r3, [r7, #4]
 8008b18:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8008b1c:	2b01      	cmp	r3, #1
 8008b1e:	d101      	bne.n	8008b24 <HAL_I2CEx_ConfigAnalogFilter+0x24>
 8008b20:	2302      	movs	r3, #2
 8008b22:	e032      	b.n	8008b8a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8008b24:	687b      	ldr	r3, [r7, #4]
 8008b26:	2201      	movs	r2, #1
 8008b28:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008b2c:	687b      	ldr	r3, [r7, #4]
 8008b2e:	2224      	movs	r2, #36	; 0x24
 8008b30:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008b34:	687b      	ldr	r3, [r7, #4]
 8008b36:	681b      	ldr	r3, [r3, #0]
 8008b38:	681a      	ldr	r2, [r3, #0]
 8008b3a:	687b      	ldr	r3, [r7, #4]
 8008b3c:	681b      	ldr	r3, [r3, #0]
 8008b3e:	f022 0201 	bic.w	r2, r2, #1
 8008b42:	601a      	str	r2, [r3, #0]
 8008b44:	687b      	ldr	r3, [r7, #4]
 8008b46:	681b      	ldr	r3, [r3, #0]
 8008b48:	681a      	ldr	r2, [r3, #0]
 8008b4a:	687b      	ldr	r3, [r7, #4]
 8008b4c:	681b      	ldr	r3, [r3, #0]
 8008b4e:	f422 5280 	bic.w	r2, r2, #4096	; 0x1000
 8008b52:	601a      	str	r2, [r3, #0]
 8008b54:	687b      	ldr	r3, [r7, #4]
 8008b56:	681b      	ldr	r3, [r3, #0]
 8008b58:	6819      	ldr	r1, [r3, #0]
 8008b5a:	687b      	ldr	r3, [r7, #4]
 8008b5c:	681b      	ldr	r3, [r3, #0]
 8008b5e:	683a      	ldr	r2, [r7, #0]
 8008b60:	430a      	orrs	r2, r1
 8008b62:	601a      	str	r2, [r3, #0]
 8008b64:	687b      	ldr	r3, [r7, #4]
 8008b66:	681b      	ldr	r3, [r3, #0]
 8008b68:	681a      	ldr	r2, [r3, #0]
 8008b6a:	687b      	ldr	r3, [r7, #4]
 8008b6c:	681b      	ldr	r3, [r3, #0]
 8008b6e:	f042 0201 	orr.w	r2, r2, #1
 8008b72:	601a      	str	r2, [r3, #0]
 8008b74:	687b      	ldr	r3, [r7, #4]
 8008b76:	2220      	movs	r2, #32
 8008b78:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008b7c:	687b      	ldr	r3, [r7, #4]
 8008b7e:	2200      	movs	r2, #0
 8008b80:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008b84:	2300      	movs	r3, #0
 8008b86:	e000      	b.n	8008b8a <HAL_I2CEx_ConfigAnalogFilter+0x8a>
 8008b88:	2302      	movs	r3, #2
 8008b8a:	4618      	mov	r0, r3
 8008b8c:	370c      	adds	r7, #12
 8008b8e:	46bd      	mov	sp, r7
 8008b90:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008b94:	4770      	bx	lr

08008b96 <HAL_I2CEx_ConfigDigitalFilter>:
 8008b96:	b480      	push	{r7}
 8008b98:	b085      	sub	sp, #20
 8008b9a:	af00      	add	r7, sp, #0
 8008b9c:	6078      	str	r0, [r7, #4]
 8008b9e:	6039      	str	r1, [r7, #0]
 8008ba0:	687b      	ldr	r3, [r7, #4]
 8008ba2:	f893 3041 	ldrb.w	r3, [r3, #65]	; 0x41
 8008ba6:	b2db      	uxtb	r3, r3
 8008ba8:	2b20      	cmp	r3, #32
 8008baa:	d139      	bne.n	8008c20 <HAL_I2CEx_ConfigDigitalFilter+0x8a>
 8008bac:	687b      	ldr	r3, [r7, #4]
 8008bae:	f893 3040 	ldrb.w	r3, [r3, #64]	; 0x40
 8008bb2:	2b01      	cmp	r3, #1
 8008bb4:	d101      	bne.n	8008bba <HAL_I2CEx_ConfigDigitalFilter+0x24>
 8008bb6:	2302      	movs	r3, #2
 8008bb8:	e033      	b.n	8008c22 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8008bba:	687b      	ldr	r3, [r7, #4]
 8008bbc:	2201      	movs	r2, #1
 8008bbe:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008bc2:	687b      	ldr	r3, [r7, #4]
 8008bc4:	2224      	movs	r2, #36	; 0x24
 8008bc6:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008bca:	687b      	ldr	r3, [r7, #4]
 8008bcc:	681b      	ldr	r3, [r3, #0]
 8008bce:	681a      	ldr	r2, [r3, #0]
 8008bd0:	687b      	ldr	r3, [r7, #4]
 8008bd2:	681b      	ldr	r3, [r3, #0]
 8008bd4:	f022 0201 	bic.w	r2, r2, #1
 8008bd8:	601a      	str	r2, [r3, #0]
 8008bda:	687b      	ldr	r3, [r7, #4]
 8008bdc:	681b      	ldr	r3, [r3, #0]
 8008bde:	681b      	ldr	r3, [r3, #0]
 8008be0:	60fb      	str	r3, [r7, #12]
 8008be2:	68fb      	ldr	r3, [r7, #12]
 8008be4:	f423 6370 	bic.w	r3, r3, #3840	; 0xf00
 8008be8:	60fb      	str	r3, [r7, #12]
 8008bea:	683b      	ldr	r3, [r7, #0]
 8008bec:	021b      	lsls	r3, r3, #8
 8008bee:	68fa      	ldr	r2, [r7, #12]
 8008bf0:	4313      	orrs	r3, r2
 8008bf2:	60fb      	str	r3, [r7, #12]
 8008bf4:	687b      	ldr	r3, [r7, #4]
 8008bf6:	681b      	ldr	r3, [r3, #0]
 8008bf8:	68fa      	ldr	r2, [r7, #12]
 8008bfa:	601a      	str	r2, [r3, #0]
 8008bfc:	687b      	ldr	r3, [r7, #4]
 8008bfe:	681b      	ldr	r3, [r3, #0]
 8008c00:	681a      	ldr	r2, [r3, #0]
 8008c02:	687b      	ldr	r3, [r7, #4]
 8008c04:	681b      	ldr	r3, [r3, #0]
 8008c06:	f042 0201 	orr.w	r2, r2, #1
 8008c0a:	601a      	str	r2, [r3, #0]
 8008c0c:	687b      	ldr	r3, [r7, #4]
 8008c0e:	2220      	movs	r2, #32
 8008c10:	f883 2041 	strb.w	r2, [r3, #65]	; 0x41
 8008c14:	687b      	ldr	r3, [r7, #4]
 8008c16:	2200      	movs	r2, #0
 8008c18:	f883 2040 	strb.w	r2, [r3, #64]	; 0x40
 8008c1c:	2300      	movs	r3, #0
 8008c1e:	e000      	b.n	8008c22 <HAL_I2CEx_ConfigDigitalFilter+0x8c>
 8008c20:	2302      	movs	r3, #2
 8008c22:	4618      	mov	r0, r3
 8008c24:	3714      	adds	r7, #20
 8008c26:	46bd      	mov	sp, r7
 8008c28:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008c2c:	4770      	bx	lr

08008c2e <HAL_PCD_Init>:
 8008c2e:	b5f0      	push	{r4, r5, r6, r7, lr}
 8008c30:	b08f      	sub	sp, #60	; 0x3c
 8008c32:	af0a      	add	r7, sp, #40	; 0x28
 8008c34:	6078      	str	r0, [r7, #4]
 8008c36:	687b      	ldr	r3, [r7, #4]
 8008c38:	2b00      	cmp	r3, #0
 8008c3a:	d101      	bne.n	8008c40 <HAL_PCD_Init+0x12>
 8008c3c:	2301      	movs	r3, #1
 8008c3e:	e116      	b.n	8008e6e <HAL_PCD_Init+0x240>
 8008c40:	687b      	ldr	r3, [r7, #4]
 8008c42:	681b      	ldr	r3, [r3, #0]
 8008c44:	60bb      	str	r3, [r7, #8]
 8008c46:	687b      	ldr	r3, [r7, #4]
 8008c48:	f893 33bd 	ldrb.w	r3, [r3, #957]	; 0x3bd
 8008c4c:	b2db      	uxtb	r3, r3
 8008c4e:	2b00      	cmp	r3, #0
 8008c50:	d106      	bne.n	8008c60 <HAL_PCD_Init+0x32>
 8008c52:	687b      	ldr	r3, [r7, #4]
 8008c54:	2200      	movs	r2, #0
 8008c56:	f883 23bc 	strb.w	r2, [r3, #956]	; 0x3bc
 8008c5a:	6878      	ldr	r0, [r7, #4]
 8008c5c:	f7fe ff56 	bl	8007b0c <HAL_PCD_MspInit>
 8008c60:	687b      	ldr	r3, [r7, #4]
 8008c62:	2203      	movs	r2, #3
 8008c64:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd
 8008c68:	68bb      	ldr	r3, [r7, #8]
 8008c6a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8008c6c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008c70:	2b00      	cmp	r3, #0
 8008c72:	d102      	bne.n	8008c7a <HAL_PCD_Init+0x4c>
 8008c74:	687b      	ldr	r3, [r7, #4]
 8008c76:	2200      	movs	r2, #0
 8008c78:	611a      	str	r2, [r3, #16]
 8008c7a:	687b      	ldr	r3, [r7, #4]
 8008c7c:	681b      	ldr	r3, [r3, #0]
 8008c7e:	4618      	mov	r0, r3
 8008c80:	f004 fd26 	bl	800d6d0 <USB_DisableGlobalInt>
 8008c84:	687b      	ldr	r3, [r7, #4]
 8008c86:	681b      	ldr	r3, [r3, #0]
 8008c88:	603b      	str	r3, [r7, #0]
 8008c8a:	687e      	ldr	r6, [r7, #4]
 8008c8c:	466d      	mov	r5, sp
 8008c8e:	f106 0410 	add.w	r4, r6, #16
 8008c92:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008c94:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8008c96:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008c98:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8008c9a:	e894 0003 	ldmia.w	r4, {r0, r1}
 8008c9e:	e885 0003 	stmia.w	r5, {r0, r1}
 8008ca2:	1d33      	adds	r3, r6, #4
 8008ca4:	cb0e      	ldmia	r3, {r1, r2, r3}
 8008ca6:	6838      	ldr	r0, [r7, #0]
 8008ca8:	f004 fcc0 	bl	800d62c <USB_CoreInit>
 8008cac:	4603      	mov	r3, r0
 8008cae:	2b00      	cmp	r3, #0
 8008cb0:	d005      	beq.n	8008cbe <HAL_PCD_Init+0x90>
 8008cb2:	687b      	ldr	r3, [r7, #4]
 8008cb4:	2202      	movs	r2, #2
 8008cb6:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd
 8008cba:	2301      	movs	r3, #1
 8008cbc:	e0d7      	b.n	8008e6e <HAL_PCD_Init+0x240>
 8008cbe:	687b      	ldr	r3, [r7, #4]
 8008cc0:	681b      	ldr	r3, [r3, #0]
 8008cc2:	2100      	movs	r1, #0
 8008cc4:	4618      	mov	r0, r3
 8008cc6:	f004 fd14 	bl	800d6f2 <USB_SetCurrentMode>
 8008cca:	2300      	movs	r3, #0
 8008ccc:	73fb      	strb	r3, [r7, #15]
 8008cce:	e04a      	b.n	8008d66 <HAL_PCD_Init+0x138>
 8008cd0:	7bfa      	ldrb	r2, [r7, #15]
 8008cd2:	6879      	ldr	r1, [r7, #4]
 8008cd4:	4613      	mov	r3, r2
 8008cd6:	00db      	lsls	r3, r3, #3
 8008cd8:	1a9b      	subs	r3, r3, r2
 8008cda:	009b      	lsls	r3, r3, #2
 8008cdc:	440b      	add	r3, r1
 8008cde:	333d      	adds	r3, #61	; 0x3d
 8008ce0:	2201      	movs	r2, #1
 8008ce2:	701a      	strb	r2, [r3, #0]
 8008ce4:	7bfa      	ldrb	r2, [r7, #15]
 8008ce6:	6879      	ldr	r1, [r7, #4]
 8008ce8:	4613      	mov	r3, r2
 8008cea:	00db      	lsls	r3, r3, #3
 8008cec:	1a9b      	subs	r3, r3, r2
 8008cee:	009b      	lsls	r3, r3, #2
 8008cf0:	440b      	add	r3, r1
 8008cf2:	333c      	adds	r3, #60	; 0x3c
 8008cf4:	7bfa      	ldrb	r2, [r7, #15]
 8008cf6:	701a      	strb	r2, [r3, #0]
 8008cf8:	7bfa      	ldrb	r2, [r7, #15]
 8008cfa:	7bfb      	ldrb	r3, [r7, #15]
 8008cfc:	b298      	uxth	r0, r3
 8008cfe:	6879      	ldr	r1, [r7, #4]
 8008d00:	4613      	mov	r3, r2
 8008d02:	00db      	lsls	r3, r3, #3
 8008d04:	1a9b      	subs	r3, r3, r2
 8008d06:	009b      	lsls	r3, r3, #2
 8008d08:	440b      	add	r3, r1
 8008d0a:	3342      	adds	r3, #66	; 0x42
 8008d0c:	4602      	mov	r2, r0
 8008d0e:	801a      	strh	r2, [r3, #0]
 8008d10:	7bfa      	ldrb	r2, [r7, #15]
 8008d12:	6879      	ldr	r1, [r7, #4]
 8008d14:	4613      	mov	r3, r2
 8008d16:	00db      	lsls	r3, r3, #3
 8008d18:	1a9b      	subs	r3, r3, r2
 8008d1a:	009b      	lsls	r3, r3, #2
 8008d1c:	440b      	add	r3, r1
 8008d1e:	333f      	adds	r3, #63	; 0x3f
 8008d20:	2200      	movs	r2, #0
 8008d22:	701a      	strb	r2, [r3, #0]
 8008d24:	7bfa      	ldrb	r2, [r7, #15]
 8008d26:	6879      	ldr	r1, [r7, #4]
 8008d28:	4613      	mov	r3, r2
 8008d2a:	00db      	lsls	r3, r3, #3
 8008d2c:	1a9b      	subs	r3, r3, r2
 8008d2e:	009b      	lsls	r3, r3, #2
 8008d30:	440b      	add	r3, r1
 8008d32:	3344      	adds	r3, #68	; 0x44
 8008d34:	2200      	movs	r2, #0
 8008d36:	601a      	str	r2, [r3, #0]
 8008d38:	7bfa      	ldrb	r2, [r7, #15]
 8008d3a:	6879      	ldr	r1, [r7, #4]
 8008d3c:	4613      	mov	r3, r2
 8008d3e:	00db      	lsls	r3, r3, #3
 8008d40:	1a9b      	subs	r3, r3, r2
 8008d42:	009b      	lsls	r3, r3, #2
 8008d44:	440b      	add	r3, r1
 8008d46:	3348      	adds	r3, #72	; 0x48
 8008d48:	2200      	movs	r2, #0
 8008d4a:	601a      	str	r2, [r3, #0]
 8008d4c:	7bfa      	ldrb	r2, [r7, #15]
 8008d4e:	6879      	ldr	r1, [r7, #4]
 8008d50:	4613      	mov	r3, r2
 8008d52:	00db      	lsls	r3, r3, #3
 8008d54:	1a9b      	subs	r3, r3, r2
 8008d56:	009b      	lsls	r3, r3, #2
 8008d58:	440b      	add	r3, r1
 8008d5a:	3350      	adds	r3, #80	; 0x50
 8008d5c:	2200      	movs	r2, #0
 8008d5e:	601a      	str	r2, [r3, #0]
 8008d60:	7bfb      	ldrb	r3, [r7, #15]
 8008d62:	3301      	adds	r3, #1
 8008d64:	73fb      	strb	r3, [r7, #15]
 8008d66:	7bfa      	ldrb	r2, [r7, #15]
 8008d68:	687b      	ldr	r3, [r7, #4]
 8008d6a:	685b      	ldr	r3, [r3, #4]
 8008d6c:	429a      	cmp	r2, r3
 8008d6e:	d3af      	bcc.n	8008cd0 <HAL_PCD_Init+0xa2>
 8008d70:	2300      	movs	r3, #0
 8008d72:	73fb      	strb	r3, [r7, #15]
 8008d74:	e044      	b.n	8008e00 <HAL_PCD_Init+0x1d2>
 8008d76:	7bfa      	ldrb	r2, [r7, #15]
 8008d78:	6879      	ldr	r1, [r7, #4]
 8008d7a:	4613      	mov	r3, r2
 8008d7c:	00db      	lsls	r3, r3, #3
 8008d7e:	1a9b      	subs	r3, r3, r2
 8008d80:	009b      	lsls	r3, r3, #2
 8008d82:	440b      	add	r3, r1
 8008d84:	f203 13fd 	addw	r3, r3, #509	; 0x1fd
 8008d88:	2200      	movs	r2, #0
 8008d8a:	701a      	strb	r2, [r3, #0]
 8008d8c:	7bfa      	ldrb	r2, [r7, #15]
 8008d8e:	6879      	ldr	r1, [r7, #4]
 8008d90:	4613      	mov	r3, r2
 8008d92:	00db      	lsls	r3, r3, #3
 8008d94:	1a9b      	subs	r3, r3, r2
 8008d96:	009b      	lsls	r3, r3, #2
 8008d98:	440b      	add	r3, r1
 8008d9a:	f503 73fe 	add.w	r3, r3, #508	; 0x1fc
 8008d9e:	7bfa      	ldrb	r2, [r7, #15]
 8008da0:	701a      	strb	r2, [r3, #0]
 8008da2:	7bfa      	ldrb	r2, [r7, #15]
 8008da4:	6879      	ldr	r1, [r7, #4]
 8008da6:	4613      	mov	r3, r2
 8008da8:	00db      	lsls	r3, r3, #3
 8008daa:	1a9b      	subs	r3, r3, r2
 8008dac:	009b      	lsls	r3, r3, #2
 8008dae:	440b      	add	r3, r1
 8008db0:	f203 13ff 	addw	r3, r3, #511	; 0x1ff
 8008db4:	2200      	movs	r2, #0
 8008db6:	701a      	strb	r2, [r3, #0]
 8008db8:	7bfa      	ldrb	r2, [r7, #15]
 8008dba:	6879      	ldr	r1, [r7, #4]
 8008dbc:	4613      	mov	r3, r2
 8008dbe:	00db      	lsls	r3, r3, #3
 8008dc0:	1a9b      	subs	r3, r3, r2
 8008dc2:	009b      	lsls	r3, r3, #2
 8008dc4:	440b      	add	r3, r1
 8008dc6:	f503 7301 	add.w	r3, r3, #516	; 0x204
 8008dca:	2200      	movs	r2, #0
 8008dcc:	601a      	str	r2, [r3, #0]
 8008dce:	7bfa      	ldrb	r2, [r7, #15]
 8008dd0:	6879      	ldr	r1, [r7, #4]
 8008dd2:	4613      	mov	r3, r2
 8008dd4:	00db      	lsls	r3, r3, #3
 8008dd6:	1a9b      	subs	r3, r3, r2
 8008dd8:	009b      	lsls	r3, r3, #2
 8008dda:	440b      	add	r3, r1
 8008ddc:	f503 7302 	add.w	r3, r3, #520	; 0x208
 8008de0:	2200      	movs	r2, #0
 8008de2:	601a      	str	r2, [r3, #0]
 8008de4:	7bfa      	ldrb	r2, [r7, #15]
 8008de6:	6879      	ldr	r1, [r7, #4]
 8008de8:	4613      	mov	r3, r2
 8008dea:	00db      	lsls	r3, r3, #3
 8008dec:	1a9b      	subs	r3, r3, r2
 8008dee:	009b      	lsls	r3, r3, #2
 8008df0:	440b      	add	r3, r1
 8008df2:	f503 7304 	add.w	r3, r3, #528	; 0x210
 8008df6:	2200      	movs	r2, #0
 8008df8:	601a      	str	r2, [r3, #0]
 8008dfa:	7bfb      	ldrb	r3, [r7, #15]
 8008dfc:	3301      	adds	r3, #1
 8008dfe:	73fb      	strb	r3, [r7, #15]
 8008e00:	7bfa      	ldrb	r2, [r7, #15]
 8008e02:	687b      	ldr	r3, [r7, #4]
 8008e04:	685b      	ldr	r3, [r3, #4]
 8008e06:	429a      	cmp	r2, r3
 8008e08:	d3b5      	bcc.n	8008d76 <HAL_PCD_Init+0x148>
 8008e0a:	687b      	ldr	r3, [r7, #4]
 8008e0c:	681b      	ldr	r3, [r3, #0]
 8008e0e:	603b      	str	r3, [r7, #0]
 8008e10:	687e      	ldr	r6, [r7, #4]
 8008e12:	466d      	mov	r5, sp
 8008e14:	f106 0410 	add.w	r4, r6, #16
 8008e18:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008e1a:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8008e1c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008e1e:	c50f      	stmia	r5!, {r0, r1, r2, r3}
 8008e20:	e894 0003 	ldmia.w	r4, {r0, r1}
 8008e24:	e885 0003 	stmia.w	r5, {r0, r1}
 8008e28:	1d33      	adds	r3, r6, #4
 8008e2a:	cb0e      	ldmia	r3, {r1, r2, r3}
 8008e2c:	6838      	ldr	r0, [r7, #0]
 8008e2e:	f004 fc8b 	bl	800d748 <USB_DevInit>
 8008e32:	4603      	mov	r3, r0
 8008e34:	2b00      	cmp	r3, #0
 8008e36:	d005      	beq.n	8008e44 <HAL_PCD_Init+0x216>
 8008e38:	687b      	ldr	r3, [r7, #4]
 8008e3a:	2202      	movs	r2, #2
 8008e3c:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd
 8008e40:	2301      	movs	r3, #1
 8008e42:	e014      	b.n	8008e6e <HAL_PCD_Init+0x240>
 8008e44:	687b      	ldr	r3, [r7, #4]
 8008e46:	2200      	movs	r2, #0
 8008e48:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38
 8008e4c:	687b      	ldr	r3, [r7, #4]
 8008e4e:	2201      	movs	r2, #1
 8008e50:	f883 23bd 	strb.w	r2, [r3, #957]	; 0x3bd
 8008e54:	687b      	ldr	r3, [r7, #4]
 8008e56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8008e58:	2b01      	cmp	r3, #1
 8008e5a:	d102      	bne.n	8008e62 <HAL_PCD_Init+0x234>
 8008e5c:	6878      	ldr	r0, [r7, #4]
 8008e5e:	f000 f80a 	bl	8008e76 <HAL_PCDEx_ActivateLPM>
 8008e62:	687b      	ldr	r3, [r7, #4]
 8008e64:	681b      	ldr	r3, [r3, #0]
 8008e66:	4618      	mov	r0, r3
 8008e68:	f004 fe1b 	bl	800daa2 <USB_DevDisconnect>
 8008e6c:	2300      	movs	r3, #0
 8008e6e:	4618      	mov	r0, r3
 8008e70:	3714      	adds	r7, #20
 8008e72:	46bd      	mov	sp, r7
 8008e74:	bdf0      	pop	{r4, r5, r6, r7, pc}

08008e76 <HAL_PCDEx_ActivateLPM>:
 8008e76:	b480      	push	{r7}
 8008e78:	b085      	sub	sp, #20
 8008e7a:	af00      	add	r7, sp, #0
 8008e7c:	6078      	str	r0, [r7, #4]
 8008e7e:	687b      	ldr	r3, [r7, #4]
 8008e80:	681b      	ldr	r3, [r3, #0]
 8008e82:	60fb      	str	r3, [r7, #12]
 8008e84:	687b      	ldr	r3, [r7, #4]
 8008e86:	2201      	movs	r2, #1
 8008e88:	f8c3 23fc 	str.w	r2, [r3, #1020]	; 0x3fc
 8008e8c:	687b      	ldr	r3, [r7, #4]
 8008e8e:	2200      	movs	r2, #0
 8008e90:	f883 23f4 	strb.w	r2, [r3, #1012]	; 0x3f4
 8008e94:	68fb      	ldr	r3, [r7, #12]
 8008e96:	699b      	ldr	r3, [r3, #24]
 8008e98:	f043 6200 	orr.w	r2, r3, #134217728	; 0x8000000
 8008e9c:	68fb      	ldr	r3, [r7, #12]
 8008e9e:	619a      	str	r2, [r3, #24]
 8008ea0:	68fb      	ldr	r3, [r7, #12]
 8008ea2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 8008ea4:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8008ea8:	f043 0303 	orr.w	r3, r3, #3
 8008eac:	68fa      	ldr	r2, [r7, #12]
 8008eae:	6553      	str	r3, [r2, #84]	; 0x54
 8008eb0:	2300      	movs	r3, #0
 8008eb2:	4618      	mov	r0, r3
 8008eb4:	3714      	adds	r7, #20
 8008eb6:	46bd      	mov	sp, r7
 8008eb8:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ebc:	4770      	bx	lr
	...

08008ec0 <HAL_PWR_EnableBkUpAccess>:
 8008ec0:	b480      	push	{r7}
 8008ec2:	af00      	add	r7, sp, #0
 8008ec4:	4b05      	ldr	r3, [pc, #20]	; (8008edc <HAL_PWR_EnableBkUpAccess+0x1c>)
 8008ec6:	681b      	ldr	r3, [r3, #0]
 8008ec8:	4a04      	ldr	r2, [pc, #16]	; (8008edc <HAL_PWR_EnableBkUpAccess+0x1c>)
 8008eca:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008ece:	6013      	str	r3, [r2, #0]
 8008ed0:	bf00      	nop
 8008ed2:	46bd      	mov	sp, r7
 8008ed4:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008ed8:	4770      	bx	lr
 8008eda:	bf00      	nop
 8008edc:	40007000 	.word	0x40007000

08008ee0 <HAL_PWREx_GetVoltageRange>:
 8008ee0:	b480      	push	{r7}
 8008ee2:	af00      	add	r7, sp, #0
 8008ee4:	4b0d      	ldr	r3, [pc, #52]	; (8008f1c <HAL_PWREx_GetVoltageRange+0x3c>)
 8008ee6:	681b      	ldr	r3, [r3, #0]
 8008ee8:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8008eec:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008ef0:	d102      	bne.n	8008ef8 <HAL_PWREx_GetVoltageRange+0x18>
 8008ef2:	f44f 6380 	mov.w	r3, #1024	; 0x400
 8008ef6:	e00b      	b.n	8008f10 <HAL_PWREx_GetVoltageRange+0x30>
 8008ef8:	4b08      	ldr	r3, [pc, #32]	; (8008f1c <HAL_PWREx_GetVoltageRange+0x3c>)
 8008efa:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8008efe:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8008f02:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8008f06:	d102      	bne.n	8008f0e <HAL_PWREx_GetVoltageRange+0x2e>
 8008f08:	f44f 7300 	mov.w	r3, #512	; 0x200
 8008f0c:	e000      	b.n	8008f10 <HAL_PWREx_GetVoltageRange+0x30>
 8008f0e:	2300      	movs	r3, #0
 8008f10:	4618      	mov	r0, r3
 8008f12:	46bd      	mov	sp, r7
 8008f14:	f85d 7b04 	ldr.w	r7, [sp], #4
 8008f18:	4770      	bx	lr
 8008f1a:	bf00      	nop
 8008f1c:	40007000 	.word	0x40007000

08008f20 <HAL_PWREx_ControlVoltageScaling>:
 8008f20:	b480      	push	{r7}
 8008f22:	b085      	sub	sp, #20
 8008f24:	af00      	add	r7, sp, #0
 8008f26:	6078      	str	r0, [r7, #4]
 8008f28:	687b      	ldr	r3, [r7, #4]
 8008f2a:	2b00      	cmp	r3, #0
 8008f2c:	d141      	bne.n	8008fb2 <HAL_PWREx_ControlVoltageScaling+0x92>
 8008f2e:	4b4b      	ldr	r3, [pc, #300]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008f30:	681b      	ldr	r3, [r3, #0]
 8008f32:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8008f36:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008f3a:	d131      	bne.n	8008fa0 <HAL_PWREx_ControlVoltageScaling+0x80>
 8008f3c:	4b47      	ldr	r3, [pc, #284]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008f3e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8008f42:	4a46      	ldr	r2, [pc, #280]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008f44:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008f48:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8008f4c:	4b43      	ldr	r3, [pc, #268]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008f4e:	681b      	ldr	r3, [r3, #0]
 8008f50:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8008f54:	4a41      	ldr	r2, [pc, #260]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008f56:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008f5a:	6013      	str	r3, [r2, #0]
 8008f5c:	4b40      	ldr	r3, [pc, #256]	; (8009060 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8008f5e:	681b      	ldr	r3, [r3, #0]
 8008f60:	2232      	movs	r2, #50	; 0x32
 8008f62:	fb02 f303 	mul.w	r3, r2, r3
 8008f66:	4a3f      	ldr	r2, [pc, #252]	; (8009064 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8008f68:	fba2 2303 	umull	r2, r3, r2, r3
 8008f6c:	0c9b      	lsrs	r3, r3, #18
 8008f6e:	3301      	adds	r3, #1
 8008f70:	60fb      	str	r3, [r7, #12]
 8008f72:	e002      	b.n	8008f7a <HAL_PWREx_ControlVoltageScaling+0x5a>
 8008f74:	68fb      	ldr	r3, [r7, #12]
 8008f76:	3b01      	subs	r3, #1
 8008f78:	60fb      	str	r3, [r7, #12]
 8008f7a:	4b38      	ldr	r3, [pc, #224]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008f7c:	695b      	ldr	r3, [r3, #20]
 8008f7e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8008f82:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008f86:	d102      	bne.n	8008f8e <HAL_PWREx_ControlVoltageScaling+0x6e>
 8008f88:	68fb      	ldr	r3, [r7, #12]
 8008f8a:	2b00      	cmp	r3, #0
 8008f8c:	d1f2      	bne.n	8008f74 <HAL_PWREx_ControlVoltageScaling+0x54>
 8008f8e:	4b33      	ldr	r3, [pc, #204]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008f90:	695b      	ldr	r3, [r3, #20]
 8008f92:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8008f96:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008f9a:	d158      	bne.n	800904e <HAL_PWREx_ControlVoltageScaling+0x12e>
 8008f9c:	2303      	movs	r3, #3
 8008f9e:	e057      	b.n	8009050 <HAL_PWREx_ControlVoltageScaling+0x130>
 8008fa0:	4b2e      	ldr	r3, [pc, #184]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008fa2:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8008fa6:	4a2d      	ldr	r2, [pc, #180]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008fa8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8008fac:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8008fb0:	e04d      	b.n	800904e <HAL_PWREx_ControlVoltageScaling+0x12e>
 8008fb2:	687b      	ldr	r3, [r7, #4]
 8008fb4:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8008fb8:	d141      	bne.n	800903e <HAL_PWREx_ControlVoltageScaling+0x11e>
 8008fba:	4b28      	ldr	r3, [pc, #160]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008fbc:	681b      	ldr	r3, [r3, #0]
 8008fbe:	f403 63c0 	and.w	r3, r3, #1536	; 0x600
 8008fc2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8008fc6:	d131      	bne.n	800902c <HAL_PWREx_ControlVoltageScaling+0x10c>
 8008fc8:	4b24      	ldr	r3, [pc, #144]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008fca:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8008fce:	4a23      	ldr	r2, [pc, #140]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008fd0:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8008fd4:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 8008fd8:	4b20      	ldr	r3, [pc, #128]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008fda:	681b      	ldr	r3, [r3, #0]
 8008fdc:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8008fe0:	4a1e      	ldr	r2, [pc, #120]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8008fe2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8008fe6:	6013      	str	r3, [r2, #0]
 8008fe8:	4b1d      	ldr	r3, [pc, #116]	; (8009060 <HAL_PWREx_ControlVoltageScaling+0x140>)
 8008fea:	681b      	ldr	r3, [r3, #0]
 8008fec:	2232      	movs	r2, #50	; 0x32
 8008fee:	fb02 f303 	mul.w	r3, r2, r3
 8008ff2:	4a1c      	ldr	r2, [pc, #112]	; (8009064 <HAL_PWREx_ControlVoltageScaling+0x144>)
 8008ff4:	fba2 2303 	umull	r2, r3, r2, r3
 8008ff8:	0c9b      	lsrs	r3, r3, #18
 8008ffa:	3301      	adds	r3, #1
 8008ffc:	60fb      	str	r3, [r7, #12]
 8008ffe:	e002      	b.n	8009006 <HAL_PWREx_ControlVoltageScaling+0xe6>
 8009000:	68fb      	ldr	r3, [r7, #12]
 8009002:	3b01      	subs	r3, #1
 8009004:	60fb      	str	r3, [r7, #12]
 8009006:	4b15      	ldr	r3, [pc, #84]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8009008:	695b      	ldr	r3, [r3, #20]
 800900a:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800900e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009012:	d102      	bne.n	800901a <HAL_PWREx_ControlVoltageScaling+0xfa>
 8009014:	68fb      	ldr	r3, [r7, #12]
 8009016:	2b00      	cmp	r3, #0
 8009018:	d1f2      	bne.n	8009000 <HAL_PWREx_ControlVoltageScaling+0xe0>
 800901a:	4b10      	ldr	r3, [pc, #64]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800901c:	695b      	ldr	r3, [r3, #20]
 800901e:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8009022:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009026:	d112      	bne.n	800904e <HAL_PWREx_ControlVoltageScaling+0x12e>
 8009028:	2303      	movs	r3, #3
 800902a:	e011      	b.n	8009050 <HAL_PWREx_ControlVoltageScaling+0x130>
 800902c:	4b0b      	ldr	r3, [pc, #44]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 800902e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 8009032:	4a0a      	ldr	r2, [pc, #40]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8009034:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 8009038:	f8c2 3080 	str.w	r3, [r2, #128]	; 0x80
 800903c:	e007      	b.n	800904e <HAL_PWREx_ControlVoltageScaling+0x12e>
 800903e:	4b07      	ldr	r3, [pc, #28]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8009040:	681b      	ldr	r3, [r3, #0]
 8009042:	f423 63c0 	bic.w	r3, r3, #1536	; 0x600
 8009046:	4a05      	ldr	r2, [pc, #20]	; (800905c <HAL_PWREx_ControlVoltageScaling+0x13c>)
 8009048:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 800904c:	6013      	str	r3, [r2, #0]
 800904e:	2300      	movs	r3, #0
 8009050:	4618      	mov	r0, r3
 8009052:	3714      	adds	r7, #20
 8009054:	46bd      	mov	sp, r7
 8009056:	f85d 7b04 	ldr.w	r7, [sp], #4
 800905a:	4770      	bx	lr
 800905c:	40007000 	.word	0x40007000
 8009060:	2000000c 	.word	0x2000000c
 8009064:	431bde83 	.word	0x431bde83

08009068 <HAL_PWREx_EnableVddUSB>:
 8009068:	b480      	push	{r7}
 800906a:	af00      	add	r7, sp, #0
 800906c:	4b05      	ldr	r3, [pc, #20]	; (8009084 <HAL_PWREx_EnableVddUSB+0x1c>)
 800906e:	685b      	ldr	r3, [r3, #4]
 8009070:	4a04      	ldr	r2, [pc, #16]	; (8009084 <HAL_PWREx_EnableVddUSB+0x1c>)
 8009072:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 8009076:	6053      	str	r3, [r2, #4]
 8009078:	bf00      	nop
 800907a:	46bd      	mov	sp, r7
 800907c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009080:	4770      	bx	lr
 8009082:	bf00      	nop
 8009084:	40007000 	.word	0x40007000

08009088 <HAL_PWREx_EnableVddIO2>:
 8009088:	b480      	push	{r7}
 800908a:	af00      	add	r7, sp, #0
 800908c:	4b05      	ldr	r3, [pc, #20]	; (80090a4 <HAL_PWREx_EnableVddIO2+0x1c>)
 800908e:	685b      	ldr	r3, [r3, #4]
 8009090:	4a04      	ldr	r2, [pc, #16]	; (80090a4 <HAL_PWREx_EnableVddIO2+0x1c>)
 8009092:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 8009096:	6053      	str	r3, [r2, #4]
 8009098:	bf00      	nop
 800909a:	46bd      	mov	sp, r7
 800909c:	f85d 7b04 	ldr.w	r7, [sp], #4
 80090a0:	4770      	bx	lr
 80090a2:	bf00      	nop
 80090a4:	40007000 	.word	0x40007000

080090a8 <HAL_RCC_OscConfig>:
 80090a8:	b580      	push	{r7, lr}
 80090aa:	b088      	sub	sp, #32
 80090ac:	af00      	add	r7, sp, #0
 80090ae:	6078      	str	r0, [r7, #4]
 80090b0:	687b      	ldr	r3, [r7, #4]
 80090b2:	2b00      	cmp	r3, #0
 80090b4:	d102      	bne.n	80090bc <HAL_RCC_OscConfig+0x14>
 80090b6:	2301      	movs	r3, #1
 80090b8:	f000 bc16 	b.w	80098e8 <HAL_RCC_OscConfig+0x840>
 80090bc:	4ba0      	ldr	r3, [pc, #640]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 80090be:	689b      	ldr	r3, [r3, #8]
 80090c0:	f003 030c 	and.w	r3, r3, #12
 80090c4:	61bb      	str	r3, [r7, #24]
 80090c6:	4b9e      	ldr	r3, [pc, #632]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 80090c8:	68db      	ldr	r3, [r3, #12]
 80090ca:	f003 0303 	and.w	r3, r3, #3
 80090ce:	617b      	str	r3, [r7, #20]
 80090d0:	687b      	ldr	r3, [r7, #4]
 80090d2:	681b      	ldr	r3, [r3, #0]
 80090d4:	f003 0310 	and.w	r3, r3, #16
 80090d8:	2b00      	cmp	r3, #0
 80090da:	f000 80e4 	beq.w	80092a6 <HAL_RCC_OscConfig+0x1fe>
 80090de:	69bb      	ldr	r3, [r7, #24]
 80090e0:	2b00      	cmp	r3, #0
 80090e2:	d007      	beq.n	80090f4 <HAL_RCC_OscConfig+0x4c>
 80090e4:	69bb      	ldr	r3, [r7, #24]
 80090e6:	2b0c      	cmp	r3, #12
 80090e8:	f040 808b 	bne.w	8009202 <HAL_RCC_OscConfig+0x15a>
 80090ec:	697b      	ldr	r3, [r7, #20]
 80090ee:	2b01      	cmp	r3, #1
 80090f0:	f040 8087 	bne.w	8009202 <HAL_RCC_OscConfig+0x15a>
 80090f4:	4b92      	ldr	r3, [pc, #584]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 80090f6:	681b      	ldr	r3, [r3, #0]
 80090f8:	f003 0302 	and.w	r3, r3, #2
 80090fc:	2b00      	cmp	r3, #0
 80090fe:	d005      	beq.n	800910c <HAL_RCC_OscConfig+0x64>
 8009100:	687b      	ldr	r3, [r7, #4]
 8009102:	699b      	ldr	r3, [r3, #24]
 8009104:	2b00      	cmp	r3, #0
 8009106:	d101      	bne.n	800910c <HAL_RCC_OscConfig+0x64>
 8009108:	2301      	movs	r3, #1
 800910a:	e3ed      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 800910c:	687b      	ldr	r3, [r7, #4]
 800910e:	6a1a      	ldr	r2, [r3, #32]
 8009110:	4b8b      	ldr	r3, [pc, #556]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009112:	681b      	ldr	r3, [r3, #0]
 8009114:	f003 0308 	and.w	r3, r3, #8
 8009118:	2b00      	cmp	r3, #0
 800911a:	d004      	beq.n	8009126 <HAL_RCC_OscConfig+0x7e>
 800911c:	4b88      	ldr	r3, [pc, #544]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800911e:	681b      	ldr	r3, [r3, #0]
 8009120:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8009124:	e005      	b.n	8009132 <HAL_RCC_OscConfig+0x8a>
 8009126:	4b86      	ldr	r3, [pc, #536]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009128:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 800912c:	091b      	lsrs	r3, r3, #4
 800912e:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8009132:	4293      	cmp	r3, r2
 8009134:	d223      	bcs.n	800917e <HAL_RCC_OscConfig+0xd6>
 8009136:	687b      	ldr	r3, [r7, #4]
 8009138:	6a1b      	ldr	r3, [r3, #32]
 800913a:	4618      	mov	r0, r3
 800913c:	f000 fdfa 	bl	8009d34 <RCC_SetFlashLatencyFromMSIRange>
 8009140:	4603      	mov	r3, r0
 8009142:	2b00      	cmp	r3, #0
 8009144:	d001      	beq.n	800914a <HAL_RCC_OscConfig+0xa2>
 8009146:	2301      	movs	r3, #1
 8009148:	e3ce      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 800914a:	4b7d      	ldr	r3, [pc, #500]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800914c:	681b      	ldr	r3, [r3, #0]
 800914e:	4a7c      	ldr	r2, [pc, #496]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009150:	f043 0308 	orr.w	r3, r3, #8
 8009154:	6013      	str	r3, [r2, #0]
 8009156:	4b7a      	ldr	r3, [pc, #488]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009158:	681b      	ldr	r3, [r3, #0]
 800915a:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 800915e:	687b      	ldr	r3, [r7, #4]
 8009160:	6a1b      	ldr	r3, [r3, #32]
 8009162:	4977      	ldr	r1, [pc, #476]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009164:	4313      	orrs	r3, r2
 8009166:	600b      	str	r3, [r1, #0]
 8009168:	4b75      	ldr	r3, [pc, #468]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800916a:	685b      	ldr	r3, [r3, #4]
 800916c:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8009170:	687b      	ldr	r3, [r7, #4]
 8009172:	69db      	ldr	r3, [r3, #28]
 8009174:	021b      	lsls	r3, r3, #8
 8009176:	4972      	ldr	r1, [pc, #456]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009178:	4313      	orrs	r3, r2
 800917a:	604b      	str	r3, [r1, #4]
 800917c:	e025      	b.n	80091ca <HAL_RCC_OscConfig+0x122>
 800917e:	4b70      	ldr	r3, [pc, #448]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009180:	681b      	ldr	r3, [r3, #0]
 8009182:	4a6f      	ldr	r2, [pc, #444]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009184:	f043 0308 	orr.w	r3, r3, #8
 8009188:	6013      	str	r3, [r2, #0]
 800918a:	4b6d      	ldr	r3, [pc, #436]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800918c:	681b      	ldr	r3, [r3, #0]
 800918e:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8009192:	687b      	ldr	r3, [r7, #4]
 8009194:	6a1b      	ldr	r3, [r3, #32]
 8009196:	496a      	ldr	r1, [pc, #424]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009198:	4313      	orrs	r3, r2
 800919a:	600b      	str	r3, [r1, #0]
 800919c:	4b68      	ldr	r3, [pc, #416]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800919e:	685b      	ldr	r3, [r3, #4]
 80091a0:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 80091a4:	687b      	ldr	r3, [r7, #4]
 80091a6:	69db      	ldr	r3, [r3, #28]
 80091a8:	021b      	lsls	r3, r3, #8
 80091aa:	4965      	ldr	r1, [pc, #404]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 80091ac:	4313      	orrs	r3, r2
 80091ae:	604b      	str	r3, [r1, #4]
 80091b0:	69bb      	ldr	r3, [r7, #24]
 80091b2:	2b00      	cmp	r3, #0
 80091b4:	d109      	bne.n	80091ca <HAL_RCC_OscConfig+0x122>
 80091b6:	687b      	ldr	r3, [r7, #4]
 80091b8:	6a1b      	ldr	r3, [r3, #32]
 80091ba:	4618      	mov	r0, r3
 80091bc:	f000 fdba 	bl	8009d34 <RCC_SetFlashLatencyFromMSIRange>
 80091c0:	4603      	mov	r3, r0
 80091c2:	2b00      	cmp	r3, #0
 80091c4:	d001      	beq.n	80091ca <HAL_RCC_OscConfig+0x122>
 80091c6:	2301      	movs	r3, #1
 80091c8:	e38e      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 80091ca:	f000 fcbf 	bl	8009b4c <HAL_RCC_GetSysClockFreq>
 80091ce:	4601      	mov	r1, r0
 80091d0:	4b5b      	ldr	r3, [pc, #364]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 80091d2:	689b      	ldr	r3, [r3, #8]
 80091d4:	091b      	lsrs	r3, r3, #4
 80091d6:	f003 030f 	and.w	r3, r3, #15
 80091da:	4a5a      	ldr	r2, [pc, #360]	; (8009344 <HAL_RCC_OscConfig+0x29c>)
 80091dc:	5cd3      	ldrb	r3, [r2, r3]
 80091de:	f003 031f 	and.w	r3, r3, #31
 80091e2:	fa21 f303 	lsr.w	r3, r1, r3
 80091e6:	4a58      	ldr	r2, [pc, #352]	; (8009348 <HAL_RCC_OscConfig+0x2a0>)
 80091e8:	6013      	str	r3, [r2, #0]
 80091ea:	4b58      	ldr	r3, [pc, #352]	; (800934c <HAL_RCC_OscConfig+0x2a4>)
 80091ec:	681b      	ldr	r3, [r3, #0]
 80091ee:	4618      	mov	r0, r3
 80091f0:	f7fe fcf8 	bl	8007be4 <HAL_InitTick>
 80091f4:	4603      	mov	r3, r0
 80091f6:	73fb      	strb	r3, [r7, #15]
 80091f8:	7bfb      	ldrb	r3, [r7, #15]
 80091fa:	2b00      	cmp	r3, #0
 80091fc:	d052      	beq.n	80092a4 <HAL_RCC_OscConfig+0x1fc>
 80091fe:	7bfb      	ldrb	r3, [r7, #15]
 8009200:	e372      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 8009202:	687b      	ldr	r3, [r7, #4]
 8009204:	699b      	ldr	r3, [r3, #24]
 8009206:	2b00      	cmp	r3, #0
 8009208:	d032      	beq.n	8009270 <HAL_RCC_OscConfig+0x1c8>
 800920a:	4b4d      	ldr	r3, [pc, #308]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800920c:	681b      	ldr	r3, [r3, #0]
 800920e:	4a4c      	ldr	r2, [pc, #304]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009210:	f043 0301 	orr.w	r3, r3, #1
 8009214:	6013      	str	r3, [r2, #0]
 8009216:	f7ff f8ef 	bl	80083f8 <HAL_GetTick>
 800921a:	6138      	str	r0, [r7, #16]
 800921c:	e008      	b.n	8009230 <HAL_RCC_OscConfig+0x188>
 800921e:	f7ff f8eb 	bl	80083f8 <HAL_GetTick>
 8009222:	4602      	mov	r2, r0
 8009224:	693b      	ldr	r3, [r7, #16]
 8009226:	1ad3      	subs	r3, r2, r3
 8009228:	2b02      	cmp	r3, #2
 800922a:	d901      	bls.n	8009230 <HAL_RCC_OscConfig+0x188>
 800922c:	2303      	movs	r3, #3
 800922e:	e35b      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 8009230:	4b43      	ldr	r3, [pc, #268]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009232:	681b      	ldr	r3, [r3, #0]
 8009234:	f003 0302 	and.w	r3, r3, #2
 8009238:	2b00      	cmp	r3, #0
 800923a:	d0f0      	beq.n	800921e <HAL_RCC_OscConfig+0x176>
 800923c:	4b40      	ldr	r3, [pc, #256]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800923e:	681b      	ldr	r3, [r3, #0]
 8009240:	4a3f      	ldr	r2, [pc, #252]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009242:	f043 0308 	orr.w	r3, r3, #8
 8009246:	6013      	str	r3, [r2, #0]
 8009248:	4b3d      	ldr	r3, [pc, #244]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800924a:	681b      	ldr	r3, [r3, #0]
 800924c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8009250:	687b      	ldr	r3, [r7, #4]
 8009252:	6a1b      	ldr	r3, [r3, #32]
 8009254:	493a      	ldr	r1, [pc, #232]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009256:	4313      	orrs	r3, r2
 8009258:	600b      	str	r3, [r1, #0]
 800925a:	4b39      	ldr	r3, [pc, #228]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800925c:	685b      	ldr	r3, [r3, #4]
 800925e:	f423 427f 	bic.w	r2, r3, #65280	; 0xff00
 8009262:	687b      	ldr	r3, [r7, #4]
 8009264:	69db      	ldr	r3, [r3, #28]
 8009266:	021b      	lsls	r3, r3, #8
 8009268:	4935      	ldr	r1, [pc, #212]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800926a:	4313      	orrs	r3, r2
 800926c:	604b      	str	r3, [r1, #4]
 800926e:	e01a      	b.n	80092a6 <HAL_RCC_OscConfig+0x1fe>
 8009270:	4b33      	ldr	r3, [pc, #204]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009272:	681b      	ldr	r3, [r3, #0]
 8009274:	4a32      	ldr	r2, [pc, #200]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009276:	f023 0301 	bic.w	r3, r3, #1
 800927a:	6013      	str	r3, [r2, #0]
 800927c:	f7ff f8bc 	bl	80083f8 <HAL_GetTick>
 8009280:	6138      	str	r0, [r7, #16]
 8009282:	e008      	b.n	8009296 <HAL_RCC_OscConfig+0x1ee>
 8009284:	f7ff f8b8 	bl	80083f8 <HAL_GetTick>
 8009288:	4602      	mov	r2, r0
 800928a:	693b      	ldr	r3, [r7, #16]
 800928c:	1ad3      	subs	r3, r2, r3
 800928e:	2b02      	cmp	r3, #2
 8009290:	d901      	bls.n	8009296 <HAL_RCC_OscConfig+0x1ee>
 8009292:	2303      	movs	r3, #3
 8009294:	e328      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 8009296:	4b2a      	ldr	r3, [pc, #168]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009298:	681b      	ldr	r3, [r3, #0]
 800929a:	f003 0302 	and.w	r3, r3, #2
 800929e:	2b00      	cmp	r3, #0
 80092a0:	d1f0      	bne.n	8009284 <HAL_RCC_OscConfig+0x1dc>
 80092a2:	e000      	b.n	80092a6 <HAL_RCC_OscConfig+0x1fe>
 80092a4:	bf00      	nop
 80092a6:	687b      	ldr	r3, [r7, #4]
 80092a8:	681b      	ldr	r3, [r3, #0]
 80092aa:	f003 0301 	and.w	r3, r3, #1
 80092ae:	2b00      	cmp	r3, #0
 80092b0:	d073      	beq.n	800939a <HAL_RCC_OscConfig+0x2f2>
 80092b2:	69bb      	ldr	r3, [r7, #24]
 80092b4:	2b08      	cmp	r3, #8
 80092b6:	d005      	beq.n	80092c4 <HAL_RCC_OscConfig+0x21c>
 80092b8:	69bb      	ldr	r3, [r7, #24]
 80092ba:	2b0c      	cmp	r3, #12
 80092bc:	d10e      	bne.n	80092dc <HAL_RCC_OscConfig+0x234>
 80092be:	697b      	ldr	r3, [r7, #20]
 80092c0:	2b03      	cmp	r3, #3
 80092c2:	d10b      	bne.n	80092dc <HAL_RCC_OscConfig+0x234>
 80092c4:	4b1e      	ldr	r3, [pc, #120]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 80092c6:	681b      	ldr	r3, [r3, #0]
 80092c8:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80092cc:	2b00      	cmp	r3, #0
 80092ce:	d063      	beq.n	8009398 <HAL_RCC_OscConfig+0x2f0>
 80092d0:	687b      	ldr	r3, [r7, #4]
 80092d2:	685b      	ldr	r3, [r3, #4]
 80092d4:	2b00      	cmp	r3, #0
 80092d6:	d15f      	bne.n	8009398 <HAL_RCC_OscConfig+0x2f0>
 80092d8:	2301      	movs	r3, #1
 80092da:	e305      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 80092dc:	687b      	ldr	r3, [r7, #4]
 80092de:	685b      	ldr	r3, [r3, #4]
 80092e0:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 80092e4:	d106      	bne.n	80092f4 <HAL_RCC_OscConfig+0x24c>
 80092e6:	4b16      	ldr	r3, [pc, #88]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 80092e8:	681b      	ldr	r3, [r3, #0]
 80092ea:	4a15      	ldr	r2, [pc, #84]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 80092ec:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 80092f0:	6013      	str	r3, [r2, #0]
 80092f2:	e01d      	b.n	8009330 <HAL_RCC_OscConfig+0x288>
 80092f4:	687b      	ldr	r3, [r7, #4]
 80092f6:	685b      	ldr	r3, [r3, #4]
 80092f8:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 80092fc:	d10c      	bne.n	8009318 <HAL_RCC_OscConfig+0x270>
 80092fe:	4b10      	ldr	r3, [pc, #64]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009300:	681b      	ldr	r3, [r3, #0]
 8009302:	4a0f      	ldr	r2, [pc, #60]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009304:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 8009308:	6013      	str	r3, [r2, #0]
 800930a:	4b0d      	ldr	r3, [pc, #52]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800930c:	681b      	ldr	r3, [r3, #0]
 800930e:	4a0c      	ldr	r2, [pc, #48]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009310:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009314:	6013      	str	r3, [r2, #0]
 8009316:	e00b      	b.n	8009330 <HAL_RCC_OscConfig+0x288>
 8009318:	4b09      	ldr	r3, [pc, #36]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800931a:	681b      	ldr	r3, [r3, #0]
 800931c:	4a08      	ldr	r2, [pc, #32]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800931e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 8009322:	6013      	str	r3, [r2, #0]
 8009324:	4b06      	ldr	r3, [pc, #24]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 8009326:	681b      	ldr	r3, [r3, #0]
 8009328:	4a05      	ldr	r2, [pc, #20]	; (8009340 <HAL_RCC_OscConfig+0x298>)
 800932a:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800932e:	6013      	str	r3, [r2, #0]
 8009330:	687b      	ldr	r3, [r7, #4]
 8009332:	685b      	ldr	r3, [r3, #4]
 8009334:	2b00      	cmp	r3, #0
 8009336:	d01b      	beq.n	8009370 <HAL_RCC_OscConfig+0x2c8>
 8009338:	f7ff f85e 	bl	80083f8 <HAL_GetTick>
 800933c:	6138      	str	r0, [r7, #16]
 800933e:	e010      	b.n	8009362 <HAL_RCC_OscConfig+0x2ba>
 8009340:	40021000 	.word	0x40021000
 8009344:	08016358 	.word	0x08016358
 8009348:	2000000c 	.word	0x2000000c
 800934c:	20000010 	.word	0x20000010
 8009350:	f7ff f852 	bl	80083f8 <HAL_GetTick>
 8009354:	4602      	mov	r2, r0
 8009356:	693b      	ldr	r3, [r7, #16]
 8009358:	1ad3      	subs	r3, r2, r3
 800935a:	2b64      	cmp	r3, #100	; 0x64
 800935c:	d901      	bls.n	8009362 <HAL_RCC_OscConfig+0x2ba>
 800935e:	2303      	movs	r3, #3
 8009360:	e2c2      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 8009362:	4baf      	ldr	r3, [pc, #700]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 8009364:	681b      	ldr	r3, [r3, #0]
 8009366:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800936a:	2b00      	cmp	r3, #0
 800936c:	d0f0      	beq.n	8009350 <HAL_RCC_OscConfig+0x2a8>
 800936e:	e014      	b.n	800939a <HAL_RCC_OscConfig+0x2f2>
 8009370:	f7ff f842 	bl	80083f8 <HAL_GetTick>
 8009374:	6138      	str	r0, [r7, #16]
 8009376:	e008      	b.n	800938a <HAL_RCC_OscConfig+0x2e2>
 8009378:	f7ff f83e 	bl	80083f8 <HAL_GetTick>
 800937c:	4602      	mov	r2, r0
 800937e:	693b      	ldr	r3, [r7, #16]
 8009380:	1ad3      	subs	r3, r2, r3
 8009382:	2b64      	cmp	r3, #100	; 0x64
 8009384:	d901      	bls.n	800938a <HAL_RCC_OscConfig+0x2e2>
 8009386:	2303      	movs	r3, #3
 8009388:	e2ae      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 800938a:	4ba5      	ldr	r3, [pc, #660]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 800938c:	681b      	ldr	r3, [r3, #0]
 800938e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009392:	2b00      	cmp	r3, #0
 8009394:	d1f0      	bne.n	8009378 <HAL_RCC_OscConfig+0x2d0>
 8009396:	e000      	b.n	800939a <HAL_RCC_OscConfig+0x2f2>
 8009398:	bf00      	nop
 800939a:	687b      	ldr	r3, [r7, #4]
 800939c:	681b      	ldr	r3, [r3, #0]
 800939e:	f003 0302 	and.w	r3, r3, #2
 80093a2:	2b00      	cmp	r3, #0
 80093a4:	d060      	beq.n	8009468 <HAL_RCC_OscConfig+0x3c0>
 80093a6:	69bb      	ldr	r3, [r7, #24]
 80093a8:	2b04      	cmp	r3, #4
 80093aa:	d005      	beq.n	80093b8 <HAL_RCC_OscConfig+0x310>
 80093ac:	69bb      	ldr	r3, [r7, #24]
 80093ae:	2b0c      	cmp	r3, #12
 80093b0:	d119      	bne.n	80093e6 <HAL_RCC_OscConfig+0x33e>
 80093b2:	697b      	ldr	r3, [r7, #20]
 80093b4:	2b02      	cmp	r3, #2
 80093b6:	d116      	bne.n	80093e6 <HAL_RCC_OscConfig+0x33e>
 80093b8:	4b99      	ldr	r3, [pc, #612]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80093ba:	681b      	ldr	r3, [r3, #0]
 80093bc:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80093c0:	2b00      	cmp	r3, #0
 80093c2:	d005      	beq.n	80093d0 <HAL_RCC_OscConfig+0x328>
 80093c4:	687b      	ldr	r3, [r7, #4]
 80093c6:	68db      	ldr	r3, [r3, #12]
 80093c8:	2b00      	cmp	r3, #0
 80093ca:	d101      	bne.n	80093d0 <HAL_RCC_OscConfig+0x328>
 80093cc:	2301      	movs	r3, #1
 80093ce:	e28b      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 80093d0:	4b93      	ldr	r3, [pc, #588]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80093d2:	685b      	ldr	r3, [r3, #4]
 80093d4:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 80093d8:	687b      	ldr	r3, [r7, #4]
 80093da:	691b      	ldr	r3, [r3, #16]
 80093dc:	061b      	lsls	r3, r3, #24
 80093de:	4990      	ldr	r1, [pc, #576]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80093e0:	4313      	orrs	r3, r2
 80093e2:	604b      	str	r3, [r1, #4]
 80093e4:	e040      	b.n	8009468 <HAL_RCC_OscConfig+0x3c0>
 80093e6:	687b      	ldr	r3, [r7, #4]
 80093e8:	68db      	ldr	r3, [r3, #12]
 80093ea:	2b00      	cmp	r3, #0
 80093ec:	d023      	beq.n	8009436 <HAL_RCC_OscConfig+0x38e>
 80093ee:	4b8c      	ldr	r3, [pc, #560]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80093f0:	681b      	ldr	r3, [r3, #0]
 80093f2:	4a8b      	ldr	r2, [pc, #556]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80093f4:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 80093f8:	6013      	str	r3, [r2, #0]
 80093fa:	f7fe fffd 	bl	80083f8 <HAL_GetTick>
 80093fe:	6138      	str	r0, [r7, #16]
 8009400:	e008      	b.n	8009414 <HAL_RCC_OscConfig+0x36c>
 8009402:	f7fe fff9 	bl	80083f8 <HAL_GetTick>
 8009406:	4602      	mov	r2, r0
 8009408:	693b      	ldr	r3, [r7, #16]
 800940a:	1ad3      	subs	r3, r2, r3
 800940c:	2b02      	cmp	r3, #2
 800940e:	d901      	bls.n	8009414 <HAL_RCC_OscConfig+0x36c>
 8009410:	2303      	movs	r3, #3
 8009412:	e269      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 8009414:	4b82      	ldr	r3, [pc, #520]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 8009416:	681b      	ldr	r3, [r3, #0]
 8009418:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800941c:	2b00      	cmp	r3, #0
 800941e:	d0f0      	beq.n	8009402 <HAL_RCC_OscConfig+0x35a>
 8009420:	4b7f      	ldr	r3, [pc, #508]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 8009422:	685b      	ldr	r3, [r3, #4]
 8009424:	f023 42fe 	bic.w	r2, r3, #2130706432	; 0x7f000000
 8009428:	687b      	ldr	r3, [r7, #4]
 800942a:	691b      	ldr	r3, [r3, #16]
 800942c:	061b      	lsls	r3, r3, #24
 800942e:	497c      	ldr	r1, [pc, #496]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 8009430:	4313      	orrs	r3, r2
 8009432:	604b      	str	r3, [r1, #4]
 8009434:	e018      	b.n	8009468 <HAL_RCC_OscConfig+0x3c0>
 8009436:	4b7a      	ldr	r3, [pc, #488]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 8009438:	681b      	ldr	r3, [r3, #0]
 800943a:	4a79      	ldr	r2, [pc, #484]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 800943c:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 8009440:	6013      	str	r3, [r2, #0]
 8009442:	f7fe ffd9 	bl	80083f8 <HAL_GetTick>
 8009446:	6138      	str	r0, [r7, #16]
 8009448:	e008      	b.n	800945c <HAL_RCC_OscConfig+0x3b4>
 800944a:	f7fe ffd5 	bl	80083f8 <HAL_GetTick>
 800944e:	4602      	mov	r2, r0
 8009450:	693b      	ldr	r3, [r7, #16]
 8009452:	1ad3      	subs	r3, r2, r3
 8009454:	2b02      	cmp	r3, #2
 8009456:	d901      	bls.n	800945c <HAL_RCC_OscConfig+0x3b4>
 8009458:	2303      	movs	r3, #3
 800945a:	e245      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 800945c:	4b70      	ldr	r3, [pc, #448]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 800945e:	681b      	ldr	r3, [r3, #0]
 8009460:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 8009464:	2b00      	cmp	r3, #0
 8009466:	d1f0      	bne.n	800944a <HAL_RCC_OscConfig+0x3a2>
 8009468:	687b      	ldr	r3, [r7, #4]
 800946a:	681b      	ldr	r3, [r3, #0]
 800946c:	f003 0308 	and.w	r3, r3, #8
 8009470:	2b00      	cmp	r3, #0
 8009472:	d03c      	beq.n	80094ee <HAL_RCC_OscConfig+0x446>
 8009474:	687b      	ldr	r3, [r7, #4]
 8009476:	695b      	ldr	r3, [r3, #20]
 8009478:	2b00      	cmp	r3, #0
 800947a:	d01c      	beq.n	80094b6 <HAL_RCC_OscConfig+0x40e>
 800947c:	4b68      	ldr	r3, [pc, #416]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 800947e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8009482:	4a67      	ldr	r2, [pc, #412]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 8009484:	f043 0301 	orr.w	r3, r3, #1
 8009488:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 800948c:	f7fe ffb4 	bl	80083f8 <HAL_GetTick>
 8009490:	6138      	str	r0, [r7, #16]
 8009492:	e008      	b.n	80094a6 <HAL_RCC_OscConfig+0x3fe>
 8009494:	f7fe ffb0 	bl	80083f8 <HAL_GetTick>
 8009498:	4602      	mov	r2, r0
 800949a:	693b      	ldr	r3, [r7, #16]
 800949c:	1ad3      	subs	r3, r2, r3
 800949e:	2b02      	cmp	r3, #2
 80094a0:	d901      	bls.n	80094a6 <HAL_RCC_OscConfig+0x3fe>
 80094a2:	2303      	movs	r3, #3
 80094a4:	e220      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 80094a6:	4b5e      	ldr	r3, [pc, #376]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80094a8:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80094ac:	f003 0302 	and.w	r3, r3, #2
 80094b0:	2b00      	cmp	r3, #0
 80094b2:	d0ef      	beq.n	8009494 <HAL_RCC_OscConfig+0x3ec>
 80094b4:	e01b      	b.n	80094ee <HAL_RCC_OscConfig+0x446>
 80094b6:	4b5a      	ldr	r3, [pc, #360]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80094b8:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80094bc:	4a58      	ldr	r2, [pc, #352]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80094be:	f023 0301 	bic.w	r3, r3, #1
 80094c2:	f8c2 3094 	str.w	r3, [r2, #148]	; 0x94
 80094c6:	f7fe ff97 	bl	80083f8 <HAL_GetTick>
 80094ca:	6138      	str	r0, [r7, #16]
 80094cc:	e008      	b.n	80094e0 <HAL_RCC_OscConfig+0x438>
 80094ce:	f7fe ff93 	bl	80083f8 <HAL_GetTick>
 80094d2:	4602      	mov	r2, r0
 80094d4:	693b      	ldr	r3, [r7, #16]
 80094d6:	1ad3      	subs	r3, r2, r3
 80094d8:	2b02      	cmp	r3, #2
 80094da:	d901      	bls.n	80094e0 <HAL_RCC_OscConfig+0x438>
 80094dc:	2303      	movs	r3, #3
 80094de:	e203      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 80094e0:	4b4f      	ldr	r3, [pc, #316]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80094e2:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 80094e6:	f003 0302 	and.w	r3, r3, #2
 80094ea:	2b00      	cmp	r3, #0
 80094ec:	d1ef      	bne.n	80094ce <HAL_RCC_OscConfig+0x426>
 80094ee:	687b      	ldr	r3, [r7, #4]
 80094f0:	681b      	ldr	r3, [r3, #0]
 80094f2:	f003 0304 	and.w	r3, r3, #4
 80094f6:	2b00      	cmp	r3, #0
 80094f8:	f000 80a6 	beq.w	8009648 <HAL_RCC_OscConfig+0x5a0>
 80094fc:	2300      	movs	r3, #0
 80094fe:	77fb      	strb	r3, [r7, #31]
 8009500:	4b47      	ldr	r3, [pc, #284]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 8009502:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009504:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009508:	2b00      	cmp	r3, #0
 800950a:	d10d      	bne.n	8009528 <HAL_RCC_OscConfig+0x480>
 800950c:	4b44      	ldr	r3, [pc, #272]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 800950e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009510:	4a43      	ldr	r2, [pc, #268]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 8009512:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009516:	6593      	str	r3, [r2, #88]	; 0x58
 8009518:	4b41      	ldr	r3, [pc, #260]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 800951a:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800951c:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009520:	60bb      	str	r3, [r7, #8]
 8009522:	68bb      	ldr	r3, [r7, #8]
 8009524:	2301      	movs	r3, #1
 8009526:	77fb      	strb	r3, [r7, #31]
 8009528:	4b3e      	ldr	r3, [pc, #248]	; (8009624 <HAL_RCC_OscConfig+0x57c>)
 800952a:	681b      	ldr	r3, [r3, #0]
 800952c:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009530:	2b00      	cmp	r3, #0
 8009532:	d118      	bne.n	8009566 <HAL_RCC_OscConfig+0x4be>
 8009534:	4b3b      	ldr	r3, [pc, #236]	; (8009624 <HAL_RCC_OscConfig+0x57c>)
 8009536:	681b      	ldr	r3, [r3, #0]
 8009538:	4a3a      	ldr	r2, [pc, #232]	; (8009624 <HAL_RCC_OscConfig+0x57c>)
 800953a:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800953e:	6013      	str	r3, [r2, #0]
 8009540:	f7fe ff5a 	bl	80083f8 <HAL_GetTick>
 8009544:	6138      	str	r0, [r7, #16]
 8009546:	e008      	b.n	800955a <HAL_RCC_OscConfig+0x4b2>
 8009548:	f7fe ff56 	bl	80083f8 <HAL_GetTick>
 800954c:	4602      	mov	r2, r0
 800954e:	693b      	ldr	r3, [r7, #16]
 8009550:	1ad3      	subs	r3, r2, r3
 8009552:	2b02      	cmp	r3, #2
 8009554:	d901      	bls.n	800955a <HAL_RCC_OscConfig+0x4b2>
 8009556:	2303      	movs	r3, #3
 8009558:	e1c6      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 800955a:	4b32      	ldr	r3, [pc, #200]	; (8009624 <HAL_RCC_OscConfig+0x57c>)
 800955c:	681b      	ldr	r3, [r3, #0]
 800955e:	f403 7380 	and.w	r3, r3, #256	; 0x100
 8009562:	2b00      	cmp	r3, #0
 8009564:	d0f0      	beq.n	8009548 <HAL_RCC_OscConfig+0x4a0>
 8009566:	687b      	ldr	r3, [r7, #4]
 8009568:	689b      	ldr	r3, [r3, #8]
 800956a:	2b01      	cmp	r3, #1
 800956c:	d108      	bne.n	8009580 <HAL_RCC_OscConfig+0x4d8>
 800956e:	4b2c      	ldr	r3, [pc, #176]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 8009570:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 8009574:	4a2a      	ldr	r2, [pc, #168]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 8009576:	f043 0301 	orr.w	r3, r3, #1
 800957a:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800957e:	e024      	b.n	80095ca <HAL_RCC_OscConfig+0x522>
 8009580:	687b      	ldr	r3, [r7, #4]
 8009582:	689b      	ldr	r3, [r3, #8]
 8009584:	2b05      	cmp	r3, #5
 8009586:	d110      	bne.n	80095aa <HAL_RCC_OscConfig+0x502>
 8009588:	4b25      	ldr	r3, [pc, #148]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 800958a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800958e:	4a24      	ldr	r2, [pc, #144]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 8009590:	f043 0304 	orr.w	r3, r3, #4
 8009594:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 8009598:	4b21      	ldr	r3, [pc, #132]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 800959a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800959e:	4a20      	ldr	r2, [pc, #128]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80095a0:	f043 0301 	orr.w	r3, r3, #1
 80095a4:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80095a8:	e00f      	b.n	80095ca <HAL_RCC_OscConfig+0x522>
 80095aa:	4b1d      	ldr	r3, [pc, #116]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80095ac:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80095b0:	4a1b      	ldr	r2, [pc, #108]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80095b2:	f023 0301 	bic.w	r3, r3, #1
 80095b6:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80095ba:	4b19      	ldr	r3, [pc, #100]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80095bc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80095c0:	4a17      	ldr	r2, [pc, #92]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80095c2:	f023 0304 	bic.w	r3, r3, #4
 80095c6:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 80095ca:	687b      	ldr	r3, [r7, #4]
 80095cc:	689b      	ldr	r3, [r3, #8]
 80095ce:	2b00      	cmp	r3, #0
 80095d0:	d016      	beq.n	8009600 <HAL_RCC_OscConfig+0x558>
 80095d2:	f7fe ff11 	bl	80083f8 <HAL_GetTick>
 80095d6:	6138      	str	r0, [r7, #16]
 80095d8:	e00a      	b.n	80095f0 <HAL_RCC_OscConfig+0x548>
 80095da:	f7fe ff0d 	bl	80083f8 <HAL_GetTick>
 80095de:	4602      	mov	r2, r0
 80095e0:	693b      	ldr	r3, [r7, #16]
 80095e2:	1ad3      	subs	r3, r2, r3
 80095e4:	f241 3288 	movw	r2, #5000	; 0x1388
 80095e8:	4293      	cmp	r3, r2
 80095ea:	d901      	bls.n	80095f0 <HAL_RCC_OscConfig+0x548>
 80095ec:	2303      	movs	r3, #3
 80095ee:	e17b      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 80095f0:	4b0b      	ldr	r3, [pc, #44]	; (8009620 <HAL_RCC_OscConfig+0x578>)
 80095f2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 80095f6:	f003 0302 	and.w	r3, r3, #2
 80095fa:	2b00      	cmp	r3, #0
 80095fc:	d0ed      	beq.n	80095da <HAL_RCC_OscConfig+0x532>
 80095fe:	e01a      	b.n	8009636 <HAL_RCC_OscConfig+0x58e>
 8009600:	f7fe fefa 	bl	80083f8 <HAL_GetTick>
 8009604:	6138      	str	r0, [r7, #16]
 8009606:	e00f      	b.n	8009628 <HAL_RCC_OscConfig+0x580>
 8009608:	f7fe fef6 	bl	80083f8 <HAL_GetTick>
 800960c:	4602      	mov	r2, r0
 800960e:	693b      	ldr	r3, [r7, #16]
 8009610:	1ad3      	subs	r3, r2, r3
 8009612:	f241 3288 	movw	r2, #5000	; 0x1388
 8009616:	4293      	cmp	r3, r2
 8009618:	d906      	bls.n	8009628 <HAL_RCC_OscConfig+0x580>
 800961a:	2303      	movs	r3, #3
 800961c:	e164      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 800961e:	bf00      	nop
 8009620:	40021000 	.word	0x40021000
 8009624:	40007000 	.word	0x40007000
 8009628:	4ba8      	ldr	r3, [pc, #672]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800962a:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800962e:	f003 0302 	and.w	r3, r3, #2
 8009632:	2b00      	cmp	r3, #0
 8009634:	d1e8      	bne.n	8009608 <HAL_RCC_OscConfig+0x560>
 8009636:	7ffb      	ldrb	r3, [r7, #31]
 8009638:	2b01      	cmp	r3, #1
 800963a:	d105      	bne.n	8009648 <HAL_RCC_OscConfig+0x5a0>
 800963c:	4ba3      	ldr	r3, [pc, #652]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800963e:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009640:	4aa2      	ldr	r2, [pc, #648]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009642:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009646:	6593      	str	r3, [r2, #88]	; 0x58
 8009648:	687b      	ldr	r3, [r7, #4]
 800964a:	681b      	ldr	r3, [r3, #0]
 800964c:	f003 0320 	and.w	r3, r3, #32
 8009650:	2b00      	cmp	r3, #0
 8009652:	d03c      	beq.n	80096ce <HAL_RCC_OscConfig+0x626>
 8009654:	687b      	ldr	r3, [r7, #4]
 8009656:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 8009658:	2b00      	cmp	r3, #0
 800965a:	d01c      	beq.n	8009696 <HAL_RCC_OscConfig+0x5ee>
 800965c:	4b9b      	ldr	r3, [pc, #620]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800965e:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 8009662:	4a9a      	ldr	r2, [pc, #616]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009664:	f043 0301 	orr.w	r3, r3, #1
 8009668:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 800966c:	f7fe fec4 	bl	80083f8 <HAL_GetTick>
 8009670:	6138      	str	r0, [r7, #16]
 8009672:	e008      	b.n	8009686 <HAL_RCC_OscConfig+0x5de>
 8009674:	f7fe fec0 	bl	80083f8 <HAL_GetTick>
 8009678:	4602      	mov	r2, r0
 800967a:	693b      	ldr	r3, [r7, #16]
 800967c:	1ad3      	subs	r3, r2, r3
 800967e:	2b02      	cmp	r3, #2
 8009680:	d901      	bls.n	8009686 <HAL_RCC_OscConfig+0x5de>
 8009682:	2303      	movs	r3, #3
 8009684:	e130      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 8009686:	4b91      	ldr	r3, [pc, #580]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009688:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800968c:	f003 0302 	and.w	r3, r3, #2
 8009690:	2b00      	cmp	r3, #0
 8009692:	d0ef      	beq.n	8009674 <HAL_RCC_OscConfig+0x5cc>
 8009694:	e01b      	b.n	80096ce <HAL_RCC_OscConfig+0x626>
 8009696:	4b8d      	ldr	r3, [pc, #564]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009698:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 800969c:	4a8b      	ldr	r2, [pc, #556]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800969e:	f023 0301 	bic.w	r3, r3, #1
 80096a2:	f8c2 3098 	str.w	r3, [r2, #152]	; 0x98
 80096a6:	f7fe fea7 	bl	80083f8 <HAL_GetTick>
 80096aa:	6138      	str	r0, [r7, #16]
 80096ac:	e008      	b.n	80096c0 <HAL_RCC_OscConfig+0x618>
 80096ae:	f7fe fea3 	bl	80083f8 <HAL_GetTick>
 80096b2:	4602      	mov	r2, r0
 80096b4:	693b      	ldr	r3, [r7, #16]
 80096b6:	1ad3      	subs	r3, r2, r3
 80096b8:	2b02      	cmp	r3, #2
 80096ba:	d901      	bls.n	80096c0 <HAL_RCC_OscConfig+0x618>
 80096bc:	2303      	movs	r3, #3
 80096be:	e113      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 80096c0:	4b82      	ldr	r3, [pc, #520]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 80096c2:	f8d3 3098 	ldr.w	r3, [r3, #152]	; 0x98
 80096c6:	f003 0302 	and.w	r3, r3, #2
 80096ca:	2b00      	cmp	r3, #0
 80096cc:	d1ef      	bne.n	80096ae <HAL_RCC_OscConfig+0x606>
 80096ce:	687b      	ldr	r3, [r7, #4]
 80096d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80096d2:	2b00      	cmp	r3, #0
 80096d4:	f000 8107 	beq.w	80098e6 <HAL_RCC_OscConfig+0x83e>
 80096d8:	687b      	ldr	r3, [r7, #4]
 80096da:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 80096dc:	2b02      	cmp	r3, #2
 80096de:	f040 80cb 	bne.w	8009878 <HAL_RCC_OscConfig+0x7d0>
 80096e2:	4b7a      	ldr	r3, [pc, #488]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 80096e4:	68db      	ldr	r3, [r3, #12]
 80096e6:	617b      	str	r3, [r7, #20]
 80096e8:	697b      	ldr	r3, [r7, #20]
 80096ea:	f003 0203 	and.w	r2, r3, #3
 80096ee:	687b      	ldr	r3, [r7, #4]
 80096f0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 80096f2:	429a      	cmp	r2, r3
 80096f4:	d12c      	bne.n	8009750 <HAL_RCC_OscConfig+0x6a8>
 80096f6:	697b      	ldr	r3, [r7, #20]
 80096f8:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 80096fc:	687b      	ldr	r3, [r7, #4]
 80096fe:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 8009700:	3b01      	subs	r3, #1
 8009702:	011b      	lsls	r3, r3, #4
 8009704:	429a      	cmp	r2, r3
 8009706:	d123      	bne.n	8009750 <HAL_RCC_OscConfig+0x6a8>
 8009708:	697b      	ldr	r3, [r7, #20]
 800970a:	f403 42fe 	and.w	r2, r3, #32512	; 0x7f00
 800970e:	687b      	ldr	r3, [r7, #4]
 8009710:	6b5b      	ldr	r3, [r3, #52]	; 0x34
 8009712:	021b      	lsls	r3, r3, #8
 8009714:	429a      	cmp	r2, r3
 8009716:	d11b      	bne.n	8009750 <HAL_RCC_OscConfig+0x6a8>
 8009718:	697b      	ldr	r3, [r7, #20]
 800971a:	f003 4278 	and.w	r2, r3, #4160749568	; 0xf8000000
 800971e:	687b      	ldr	r3, [r7, #4]
 8009720:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 8009722:	06db      	lsls	r3, r3, #27
 8009724:	429a      	cmp	r2, r3
 8009726:	d113      	bne.n	8009750 <HAL_RCC_OscConfig+0x6a8>
 8009728:	697b      	ldr	r3, [r7, #20]
 800972a:	f403 02c0 	and.w	r2, r3, #6291456	; 0x600000
 800972e:	687b      	ldr	r3, [r7, #4]
 8009730:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 8009732:	085b      	lsrs	r3, r3, #1
 8009734:	3b01      	subs	r3, #1
 8009736:	055b      	lsls	r3, r3, #21
 8009738:	429a      	cmp	r2, r3
 800973a:	d109      	bne.n	8009750 <HAL_RCC_OscConfig+0x6a8>
 800973c:	697b      	ldr	r3, [r7, #20]
 800973e:	f003 62c0 	and.w	r2, r3, #100663296	; 0x6000000
 8009742:	687b      	ldr	r3, [r7, #4]
 8009744:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 8009746:	085b      	lsrs	r3, r3, #1
 8009748:	3b01      	subs	r3, #1
 800974a:	065b      	lsls	r3, r3, #25
 800974c:	429a      	cmp	r2, r3
 800974e:	d06d      	beq.n	800982c <HAL_RCC_OscConfig+0x784>
 8009750:	69bb      	ldr	r3, [r7, #24]
 8009752:	2b0c      	cmp	r3, #12
 8009754:	d068      	beq.n	8009828 <HAL_RCC_OscConfig+0x780>
 8009756:	4b5d      	ldr	r3, [pc, #372]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009758:	681b      	ldr	r3, [r3, #0]
 800975a:	f003 6380 	and.w	r3, r3, #67108864	; 0x4000000
 800975e:	2b00      	cmp	r3, #0
 8009760:	d105      	bne.n	800976e <HAL_RCC_OscConfig+0x6c6>
 8009762:	4b5a      	ldr	r3, [pc, #360]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009764:	681b      	ldr	r3, [r3, #0]
 8009766:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800976a:	2b00      	cmp	r3, #0
 800976c:	d001      	beq.n	8009772 <HAL_RCC_OscConfig+0x6ca>
 800976e:	2301      	movs	r3, #1
 8009770:	e0ba      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 8009772:	4b56      	ldr	r3, [pc, #344]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009774:	681b      	ldr	r3, [r3, #0]
 8009776:	4a55      	ldr	r2, [pc, #340]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009778:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800977c:	6013      	str	r3, [r2, #0]
 800977e:	f7fe fe3b 	bl	80083f8 <HAL_GetTick>
 8009782:	6138      	str	r0, [r7, #16]
 8009784:	e008      	b.n	8009798 <HAL_RCC_OscConfig+0x6f0>
 8009786:	f7fe fe37 	bl	80083f8 <HAL_GetTick>
 800978a:	4602      	mov	r2, r0
 800978c:	693b      	ldr	r3, [r7, #16]
 800978e:	1ad3      	subs	r3, r2, r3
 8009790:	2b02      	cmp	r3, #2
 8009792:	d901      	bls.n	8009798 <HAL_RCC_OscConfig+0x6f0>
 8009794:	2303      	movs	r3, #3
 8009796:	e0a7      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 8009798:	4b4c      	ldr	r3, [pc, #304]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800979a:	681b      	ldr	r3, [r3, #0]
 800979c:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80097a0:	2b00      	cmp	r3, #0
 80097a2:	d1f0      	bne.n	8009786 <HAL_RCC_OscConfig+0x6de>
 80097a4:	4b49      	ldr	r3, [pc, #292]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 80097a6:	68da      	ldr	r2, [r3, #12]
 80097a8:	4b49      	ldr	r3, [pc, #292]	; (80098d0 <HAL_RCC_OscConfig+0x828>)
 80097aa:	4013      	ands	r3, r2
 80097ac:	687a      	ldr	r2, [r7, #4]
 80097ae:	6ad1      	ldr	r1, [r2, #44]	; 0x2c
 80097b0:	687a      	ldr	r2, [r7, #4]
 80097b2:	6b12      	ldr	r2, [r2, #48]	; 0x30
 80097b4:	3a01      	subs	r2, #1
 80097b6:	0112      	lsls	r2, r2, #4
 80097b8:	4311      	orrs	r1, r2
 80097ba:	687a      	ldr	r2, [r7, #4]
 80097bc:	6b52      	ldr	r2, [r2, #52]	; 0x34
 80097be:	0212      	lsls	r2, r2, #8
 80097c0:	4311      	orrs	r1, r2
 80097c2:	687a      	ldr	r2, [r7, #4]
 80097c4:	6bd2      	ldr	r2, [r2, #60]	; 0x3c
 80097c6:	0852      	lsrs	r2, r2, #1
 80097c8:	3a01      	subs	r2, #1
 80097ca:	0552      	lsls	r2, r2, #21
 80097cc:	4311      	orrs	r1, r2
 80097ce:	687a      	ldr	r2, [r7, #4]
 80097d0:	6c12      	ldr	r2, [r2, #64]	; 0x40
 80097d2:	0852      	lsrs	r2, r2, #1
 80097d4:	3a01      	subs	r2, #1
 80097d6:	0652      	lsls	r2, r2, #25
 80097d8:	4311      	orrs	r1, r2
 80097da:	687a      	ldr	r2, [r7, #4]
 80097dc:	6b92      	ldr	r2, [r2, #56]	; 0x38
 80097de:	06d2      	lsls	r2, r2, #27
 80097e0:	430a      	orrs	r2, r1
 80097e2:	493a      	ldr	r1, [pc, #232]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 80097e4:	4313      	orrs	r3, r2
 80097e6:	60cb      	str	r3, [r1, #12]
 80097e8:	4b38      	ldr	r3, [pc, #224]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 80097ea:	681b      	ldr	r3, [r3, #0]
 80097ec:	4a37      	ldr	r2, [pc, #220]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 80097ee:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80097f2:	6013      	str	r3, [r2, #0]
 80097f4:	4b35      	ldr	r3, [pc, #212]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 80097f6:	68db      	ldr	r3, [r3, #12]
 80097f8:	4a34      	ldr	r2, [pc, #208]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 80097fa:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 80097fe:	60d3      	str	r3, [r2, #12]
 8009800:	f7fe fdfa 	bl	80083f8 <HAL_GetTick>
 8009804:	6138      	str	r0, [r7, #16]
 8009806:	e008      	b.n	800981a <HAL_RCC_OscConfig+0x772>
 8009808:	f7fe fdf6 	bl	80083f8 <HAL_GetTick>
 800980c:	4602      	mov	r2, r0
 800980e:	693b      	ldr	r3, [r7, #16]
 8009810:	1ad3      	subs	r3, r2, r3
 8009812:	2b02      	cmp	r3, #2
 8009814:	d901      	bls.n	800981a <HAL_RCC_OscConfig+0x772>
 8009816:	2303      	movs	r3, #3
 8009818:	e066      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 800981a:	4b2c      	ldr	r3, [pc, #176]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800981c:	681b      	ldr	r3, [r3, #0]
 800981e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009822:	2b00      	cmp	r3, #0
 8009824:	d0f0      	beq.n	8009808 <HAL_RCC_OscConfig+0x760>
 8009826:	e05e      	b.n	80098e6 <HAL_RCC_OscConfig+0x83e>
 8009828:	2301      	movs	r3, #1
 800982a:	e05d      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 800982c:	4b27      	ldr	r3, [pc, #156]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800982e:	681b      	ldr	r3, [r3, #0]
 8009830:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009834:	2b00      	cmp	r3, #0
 8009836:	d156      	bne.n	80098e6 <HAL_RCC_OscConfig+0x83e>
 8009838:	4b24      	ldr	r3, [pc, #144]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800983a:	681b      	ldr	r3, [r3, #0]
 800983c:	4a23      	ldr	r2, [pc, #140]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800983e:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 8009842:	6013      	str	r3, [r2, #0]
 8009844:	4b21      	ldr	r3, [pc, #132]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009846:	68db      	ldr	r3, [r3, #12]
 8009848:	4a20      	ldr	r2, [pc, #128]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800984a:	f043 7380 	orr.w	r3, r3, #16777216	; 0x1000000
 800984e:	60d3      	str	r3, [r2, #12]
 8009850:	f7fe fdd2 	bl	80083f8 <HAL_GetTick>
 8009854:	6138      	str	r0, [r7, #16]
 8009856:	e008      	b.n	800986a <HAL_RCC_OscConfig+0x7c2>
 8009858:	f7fe fdce 	bl	80083f8 <HAL_GetTick>
 800985c:	4602      	mov	r2, r0
 800985e:	693b      	ldr	r3, [r7, #16]
 8009860:	1ad3      	subs	r3, r2, r3
 8009862:	2b02      	cmp	r3, #2
 8009864:	d901      	bls.n	800986a <HAL_RCC_OscConfig+0x7c2>
 8009866:	2303      	movs	r3, #3
 8009868:	e03e      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 800986a:	4b18      	ldr	r3, [pc, #96]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800986c:	681b      	ldr	r3, [r3, #0]
 800986e:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 8009872:	2b00      	cmp	r3, #0
 8009874:	d0f0      	beq.n	8009858 <HAL_RCC_OscConfig+0x7b0>
 8009876:	e036      	b.n	80098e6 <HAL_RCC_OscConfig+0x83e>
 8009878:	69bb      	ldr	r3, [r7, #24]
 800987a:	2b0c      	cmp	r3, #12
 800987c:	d031      	beq.n	80098e2 <HAL_RCC_OscConfig+0x83a>
 800987e:	4b13      	ldr	r3, [pc, #76]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009880:	681b      	ldr	r3, [r3, #0]
 8009882:	4a12      	ldr	r2, [pc, #72]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009884:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 8009888:	6013      	str	r3, [r2, #0]
 800988a:	4b10      	ldr	r3, [pc, #64]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800988c:	681b      	ldr	r3, [r3, #0]
 800988e:	f003 5320 	and.w	r3, r3, #671088640	; 0x28000000
 8009892:	2b00      	cmp	r3, #0
 8009894:	d105      	bne.n	80098a2 <HAL_RCC_OscConfig+0x7fa>
 8009896:	4b0d      	ldr	r3, [pc, #52]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 8009898:	68db      	ldr	r3, [r3, #12]
 800989a:	4a0c      	ldr	r2, [pc, #48]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 800989c:	f023 0303 	bic.w	r3, r3, #3
 80098a0:	60d3      	str	r3, [r2, #12]
 80098a2:	4b0a      	ldr	r3, [pc, #40]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 80098a4:	68db      	ldr	r3, [r3, #12]
 80098a6:	4a09      	ldr	r2, [pc, #36]	; (80098cc <HAL_RCC_OscConfig+0x824>)
 80098a8:	f023 7388 	bic.w	r3, r3, #17825792	; 0x1100000
 80098ac:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 80098b0:	60d3      	str	r3, [r2, #12]
 80098b2:	f7fe fda1 	bl	80083f8 <HAL_GetTick>
 80098b6:	6138      	str	r0, [r7, #16]
 80098b8:	e00c      	b.n	80098d4 <HAL_RCC_OscConfig+0x82c>
 80098ba:	f7fe fd9d 	bl	80083f8 <HAL_GetTick>
 80098be:	4602      	mov	r2, r0
 80098c0:	693b      	ldr	r3, [r7, #16]
 80098c2:	1ad3      	subs	r3, r2, r3
 80098c4:	2b02      	cmp	r3, #2
 80098c6:	d905      	bls.n	80098d4 <HAL_RCC_OscConfig+0x82c>
 80098c8:	2303      	movs	r3, #3
 80098ca:	e00d      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 80098cc:	40021000 	.word	0x40021000
 80098d0:	019d800c 	.word	0x019d800c
 80098d4:	4b06      	ldr	r3, [pc, #24]	; (80098f0 <HAL_RCC_OscConfig+0x848>)
 80098d6:	681b      	ldr	r3, [r3, #0]
 80098d8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 80098dc:	2b00      	cmp	r3, #0
 80098de:	d1ec      	bne.n	80098ba <HAL_RCC_OscConfig+0x812>
 80098e0:	e001      	b.n	80098e6 <HAL_RCC_OscConfig+0x83e>
 80098e2:	2301      	movs	r3, #1
 80098e4:	e000      	b.n	80098e8 <HAL_RCC_OscConfig+0x840>
 80098e6:	2300      	movs	r3, #0
 80098e8:	4618      	mov	r0, r3
 80098ea:	3720      	adds	r7, #32
 80098ec:	46bd      	mov	sp, r7
 80098ee:	bd80      	pop	{r7, pc}
 80098f0:	40021000 	.word	0x40021000

080098f4 <HAL_RCC_ClockConfig>:
 80098f4:	b580      	push	{r7, lr}
 80098f6:	b086      	sub	sp, #24
 80098f8:	af00      	add	r7, sp, #0
 80098fa:	6078      	str	r0, [r7, #4]
 80098fc:	6039      	str	r1, [r7, #0]
 80098fe:	2300      	movs	r3, #0
 8009900:	617b      	str	r3, [r7, #20]
 8009902:	687b      	ldr	r3, [r7, #4]
 8009904:	2b00      	cmp	r3, #0
 8009906:	d101      	bne.n	800990c <HAL_RCC_ClockConfig+0x18>
 8009908:	2301      	movs	r3, #1
 800990a:	e10f      	b.n	8009b2c <HAL_RCC_ClockConfig+0x238>
 800990c:	4b89      	ldr	r3, [pc, #548]	; (8009b34 <HAL_RCC_ClockConfig+0x240>)
 800990e:	681b      	ldr	r3, [r3, #0]
 8009910:	f003 030f 	and.w	r3, r3, #15
 8009914:	683a      	ldr	r2, [r7, #0]
 8009916:	429a      	cmp	r2, r3
 8009918:	d910      	bls.n	800993c <HAL_RCC_ClockConfig+0x48>
 800991a:	4b86      	ldr	r3, [pc, #536]	; (8009b34 <HAL_RCC_ClockConfig+0x240>)
 800991c:	681b      	ldr	r3, [r3, #0]
 800991e:	f023 020f 	bic.w	r2, r3, #15
 8009922:	4984      	ldr	r1, [pc, #528]	; (8009b34 <HAL_RCC_ClockConfig+0x240>)
 8009924:	683b      	ldr	r3, [r7, #0]
 8009926:	4313      	orrs	r3, r2
 8009928:	600b      	str	r3, [r1, #0]
 800992a:	4b82      	ldr	r3, [pc, #520]	; (8009b34 <HAL_RCC_ClockConfig+0x240>)
 800992c:	681b      	ldr	r3, [r3, #0]
 800992e:	f003 030f 	and.w	r3, r3, #15
 8009932:	683a      	ldr	r2, [r7, #0]
 8009934:	429a      	cmp	r2, r3
 8009936:	d001      	beq.n	800993c <HAL_RCC_ClockConfig+0x48>
 8009938:	2301      	movs	r3, #1
 800993a:	e0f7      	b.n	8009b2c <HAL_RCC_ClockConfig+0x238>
 800993c:	687b      	ldr	r3, [r7, #4]
 800993e:	681b      	ldr	r3, [r3, #0]
 8009940:	f003 0301 	and.w	r3, r3, #1
 8009944:	2b00      	cmp	r3, #0
 8009946:	f000 8089 	beq.w	8009a5c <HAL_RCC_ClockConfig+0x168>
 800994a:	687b      	ldr	r3, [r7, #4]
 800994c:	685b      	ldr	r3, [r3, #4]
 800994e:	2b03      	cmp	r3, #3
 8009950:	d133      	bne.n	80099ba <HAL_RCC_ClockConfig+0xc6>
 8009952:	4b79      	ldr	r3, [pc, #484]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009954:	681b      	ldr	r3, [r3, #0]
 8009956:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 800995a:	2b00      	cmp	r3, #0
 800995c:	d101      	bne.n	8009962 <HAL_RCC_ClockConfig+0x6e>
 800995e:	2301      	movs	r3, #1
 8009960:	e0e4      	b.n	8009b2c <HAL_RCC_ClockConfig+0x238>
 8009962:	f000 fa41 	bl	8009de8 <RCC_GetSysClockFreqFromPLLSource>
 8009966:	4602      	mov	r2, r0
 8009968:	4b74      	ldr	r3, [pc, #464]	; (8009b3c <HAL_RCC_ClockConfig+0x248>)
 800996a:	429a      	cmp	r2, r3
 800996c:	d955      	bls.n	8009a1a <HAL_RCC_ClockConfig+0x126>
 800996e:	4b72      	ldr	r3, [pc, #456]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009970:	689b      	ldr	r3, [r3, #8]
 8009972:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 8009976:	2b00      	cmp	r3, #0
 8009978:	d10a      	bne.n	8009990 <HAL_RCC_ClockConfig+0x9c>
 800997a:	4b6f      	ldr	r3, [pc, #444]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 800997c:	689b      	ldr	r3, [r3, #8]
 800997e:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8009982:	4a6d      	ldr	r2, [pc, #436]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009984:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009988:	6093      	str	r3, [r2, #8]
 800998a:	2380      	movs	r3, #128	; 0x80
 800998c:	617b      	str	r3, [r7, #20]
 800998e:	e044      	b.n	8009a1a <HAL_RCC_ClockConfig+0x126>
 8009990:	687b      	ldr	r3, [r7, #4]
 8009992:	681b      	ldr	r3, [r3, #0]
 8009994:	f003 0302 	and.w	r3, r3, #2
 8009998:	2b00      	cmp	r3, #0
 800999a:	d03e      	beq.n	8009a1a <HAL_RCC_ClockConfig+0x126>
 800999c:	687b      	ldr	r3, [r7, #4]
 800999e:	689b      	ldr	r3, [r3, #8]
 80099a0:	2b00      	cmp	r3, #0
 80099a2:	d13a      	bne.n	8009a1a <HAL_RCC_ClockConfig+0x126>
 80099a4:	4b64      	ldr	r3, [pc, #400]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 80099a6:	689b      	ldr	r3, [r3, #8]
 80099a8:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 80099ac:	4a62      	ldr	r2, [pc, #392]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 80099ae:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 80099b2:	6093      	str	r3, [r2, #8]
 80099b4:	2380      	movs	r3, #128	; 0x80
 80099b6:	617b      	str	r3, [r7, #20]
 80099b8:	e02f      	b.n	8009a1a <HAL_RCC_ClockConfig+0x126>
 80099ba:	687b      	ldr	r3, [r7, #4]
 80099bc:	685b      	ldr	r3, [r3, #4]
 80099be:	2b02      	cmp	r3, #2
 80099c0:	d107      	bne.n	80099d2 <HAL_RCC_ClockConfig+0xde>
 80099c2:	4b5d      	ldr	r3, [pc, #372]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 80099c4:	681b      	ldr	r3, [r3, #0]
 80099c6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 80099ca:	2b00      	cmp	r3, #0
 80099cc:	d115      	bne.n	80099fa <HAL_RCC_ClockConfig+0x106>
 80099ce:	2301      	movs	r3, #1
 80099d0:	e0ac      	b.n	8009b2c <HAL_RCC_ClockConfig+0x238>
 80099d2:	687b      	ldr	r3, [r7, #4]
 80099d4:	685b      	ldr	r3, [r3, #4]
 80099d6:	2b00      	cmp	r3, #0
 80099d8:	d107      	bne.n	80099ea <HAL_RCC_ClockConfig+0xf6>
 80099da:	4b57      	ldr	r3, [pc, #348]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 80099dc:	681b      	ldr	r3, [r3, #0]
 80099de:	f003 0302 	and.w	r3, r3, #2
 80099e2:	2b00      	cmp	r3, #0
 80099e4:	d109      	bne.n	80099fa <HAL_RCC_ClockConfig+0x106>
 80099e6:	2301      	movs	r3, #1
 80099e8:	e0a0      	b.n	8009b2c <HAL_RCC_ClockConfig+0x238>
 80099ea:	4b53      	ldr	r3, [pc, #332]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 80099ec:	681b      	ldr	r3, [r3, #0]
 80099ee:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 80099f2:	2b00      	cmp	r3, #0
 80099f4:	d101      	bne.n	80099fa <HAL_RCC_ClockConfig+0x106>
 80099f6:	2301      	movs	r3, #1
 80099f8:	e098      	b.n	8009b2c <HAL_RCC_ClockConfig+0x238>
 80099fa:	f000 f8a7 	bl	8009b4c <HAL_RCC_GetSysClockFreq>
 80099fe:	4602      	mov	r2, r0
 8009a00:	4b4e      	ldr	r3, [pc, #312]	; (8009b3c <HAL_RCC_ClockConfig+0x248>)
 8009a02:	429a      	cmp	r2, r3
 8009a04:	d909      	bls.n	8009a1a <HAL_RCC_ClockConfig+0x126>
 8009a06:	4b4c      	ldr	r3, [pc, #304]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009a08:	689b      	ldr	r3, [r3, #8]
 8009a0a:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8009a0e:	4a4a      	ldr	r2, [pc, #296]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009a10:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 8009a14:	6093      	str	r3, [r2, #8]
 8009a16:	2380      	movs	r3, #128	; 0x80
 8009a18:	617b      	str	r3, [r7, #20]
 8009a1a:	4b47      	ldr	r3, [pc, #284]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009a1c:	689b      	ldr	r3, [r3, #8]
 8009a1e:	f023 0203 	bic.w	r2, r3, #3
 8009a22:	687b      	ldr	r3, [r7, #4]
 8009a24:	685b      	ldr	r3, [r3, #4]
 8009a26:	4944      	ldr	r1, [pc, #272]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009a28:	4313      	orrs	r3, r2
 8009a2a:	608b      	str	r3, [r1, #8]
 8009a2c:	f7fe fce4 	bl	80083f8 <HAL_GetTick>
 8009a30:	6138      	str	r0, [r7, #16]
 8009a32:	e00a      	b.n	8009a4a <HAL_RCC_ClockConfig+0x156>
 8009a34:	f7fe fce0 	bl	80083f8 <HAL_GetTick>
 8009a38:	4602      	mov	r2, r0
 8009a3a:	693b      	ldr	r3, [r7, #16]
 8009a3c:	1ad3      	subs	r3, r2, r3
 8009a3e:	f241 3288 	movw	r2, #5000	; 0x1388
 8009a42:	4293      	cmp	r3, r2
 8009a44:	d901      	bls.n	8009a4a <HAL_RCC_ClockConfig+0x156>
 8009a46:	2303      	movs	r3, #3
 8009a48:	e070      	b.n	8009b2c <HAL_RCC_ClockConfig+0x238>
 8009a4a:	4b3b      	ldr	r3, [pc, #236]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009a4c:	689b      	ldr	r3, [r3, #8]
 8009a4e:	f003 020c 	and.w	r2, r3, #12
 8009a52:	687b      	ldr	r3, [r7, #4]
 8009a54:	685b      	ldr	r3, [r3, #4]
 8009a56:	009b      	lsls	r3, r3, #2
 8009a58:	429a      	cmp	r2, r3
 8009a5a:	d1eb      	bne.n	8009a34 <HAL_RCC_ClockConfig+0x140>
 8009a5c:	687b      	ldr	r3, [r7, #4]
 8009a5e:	681b      	ldr	r3, [r3, #0]
 8009a60:	f003 0302 	and.w	r3, r3, #2
 8009a64:	2b00      	cmp	r3, #0
 8009a66:	d009      	beq.n	8009a7c <HAL_RCC_ClockConfig+0x188>
 8009a68:	4b33      	ldr	r3, [pc, #204]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009a6a:	689b      	ldr	r3, [r3, #8]
 8009a6c:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 8009a70:	687b      	ldr	r3, [r7, #4]
 8009a72:	689b      	ldr	r3, [r3, #8]
 8009a74:	4930      	ldr	r1, [pc, #192]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009a76:	4313      	orrs	r3, r2
 8009a78:	608b      	str	r3, [r1, #8]
 8009a7a:	e008      	b.n	8009a8e <HAL_RCC_ClockConfig+0x19a>
 8009a7c:	697b      	ldr	r3, [r7, #20]
 8009a7e:	2b80      	cmp	r3, #128	; 0x80
 8009a80:	d105      	bne.n	8009a8e <HAL_RCC_ClockConfig+0x19a>
 8009a82:	4b2d      	ldr	r3, [pc, #180]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009a84:	689b      	ldr	r3, [r3, #8]
 8009a86:	4a2c      	ldr	r2, [pc, #176]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009a88:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 8009a8c:	6093      	str	r3, [r2, #8]
 8009a8e:	4b29      	ldr	r3, [pc, #164]	; (8009b34 <HAL_RCC_ClockConfig+0x240>)
 8009a90:	681b      	ldr	r3, [r3, #0]
 8009a92:	f003 030f 	and.w	r3, r3, #15
 8009a96:	683a      	ldr	r2, [r7, #0]
 8009a98:	429a      	cmp	r2, r3
 8009a9a:	d210      	bcs.n	8009abe <HAL_RCC_ClockConfig+0x1ca>
 8009a9c:	4b25      	ldr	r3, [pc, #148]	; (8009b34 <HAL_RCC_ClockConfig+0x240>)
 8009a9e:	681b      	ldr	r3, [r3, #0]
 8009aa0:	f023 020f 	bic.w	r2, r3, #15
 8009aa4:	4923      	ldr	r1, [pc, #140]	; (8009b34 <HAL_RCC_ClockConfig+0x240>)
 8009aa6:	683b      	ldr	r3, [r7, #0]
 8009aa8:	4313      	orrs	r3, r2
 8009aaa:	600b      	str	r3, [r1, #0]
 8009aac:	4b21      	ldr	r3, [pc, #132]	; (8009b34 <HAL_RCC_ClockConfig+0x240>)
 8009aae:	681b      	ldr	r3, [r3, #0]
 8009ab0:	f003 030f 	and.w	r3, r3, #15
 8009ab4:	683a      	ldr	r2, [r7, #0]
 8009ab6:	429a      	cmp	r2, r3
 8009ab8:	d001      	beq.n	8009abe <HAL_RCC_ClockConfig+0x1ca>
 8009aba:	2301      	movs	r3, #1
 8009abc:	e036      	b.n	8009b2c <HAL_RCC_ClockConfig+0x238>
 8009abe:	687b      	ldr	r3, [r7, #4]
 8009ac0:	681b      	ldr	r3, [r3, #0]
 8009ac2:	f003 0304 	and.w	r3, r3, #4
 8009ac6:	2b00      	cmp	r3, #0
 8009ac8:	d008      	beq.n	8009adc <HAL_RCC_ClockConfig+0x1e8>
 8009aca:	4b1b      	ldr	r3, [pc, #108]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009acc:	689b      	ldr	r3, [r3, #8]
 8009ace:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8009ad2:	687b      	ldr	r3, [r7, #4]
 8009ad4:	68db      	ldr	r3, [r3, #12]
 8009ad6:	4918      	ldr	r1, [pc, #96]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009ad8:	4313      	orrs	r3, r2
 8009ada:	608b      	str	r3, [r1, #8]
 8009adc:	687b      	ldr	r3, [r7, #4]
 8009ade:	681b      	ldr	r3, [r3, #0]
 8009ae0:	f003 0308 	and.w	r3, r3, #8
 8009ae4:	2b00      	cmp	r3, #0
 8009ae6:	d009      	beq.n	8009afc <HAL_RCC_ClockConfig+0x208>
 8009ae8:	4b13      	ldr	r3, [pc, #76]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009aea:	689b      	ldr	r3, [r3, #8]
 8009aec:	f423 5260 	bic.w	r2, r3, #14336	; 0x3800
 8009af0:	687b      	ldr	r3, [r7, #4]
 8009af2:	691b      	ldr	r3, [r3, #16]
 8009af4:	00db      	lsls	r3, r3, #3
 8009af6:	4910      	ldr	r1, [pc, #64]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009af8:	4313      	orrs	r3, r2
 8009afa:	608b      	str	r3, [r1, #8]
 8009afc:	f000 f826 	bl	8009b4c <HAL_RCC_GetSysClockFreq>
 8009b00:	4601      	mov	r1, r0
 8009b02:	4b0d      	ldr	r3, [pc, #52]	; (8009b38 <HAL_RCC_ClockConfig+0x244>)
 8009b04:	689b      	ldr	r3, [r3, #8]
 8009b06:	091b      	lsrs	r3, r3, #4
 8009b08:	f003 030f 	and.w	r3, r3, #15
 8009b0c:	4a0c      	ldr	r2, [pc, #48]	; (8009b40 <HAL_RCC_ClockConfig+0x24c>)
 8009b0e:	5cd3      	ldrb	r3, [r2, r3]
 8009b10:	f003 031f 	and.w	r3, r3, #31
 8009b14:	fa21 f303 	lsr.w	r3, r1, r3
 8009b18:	4a0a      	ldr	r2, [pc, #40]	; (8009b44 <HAL_RCC_ClockConfig+0x250>)
 8009b1a:	6013      	str	r3, [r2, #0]
 8009b1c:	4b0a      	ldr	r3, [pc, #40]	; (8009b48 <HAL_RCC_ClockConfig+0x254>)
 8009b1e:	681b      	ldr	r3, [r3, #0]
 8009b20:	4618      	mov	r0, r3
 8009b22:	f7fe f85f 	bl	8007be4 <HAL_InitTick>
 8009b26:	4603      	mov	r3, r0
 8009b28:	73fb      	strb	r3, [r7, #15]
 8009b2a:	7bfb      	ldrb	r3, [r7, #15]
 8009b2c:	4618      	mov	r0, r3
 8009b2e:	3718      	adds	r7, #24
 8009b30:	46bd      	mov	sp, r7
 8009b32:	bd80      	pop	{r7, pc}
 8009b34:	40022000 	.word	0x40022000
 8009b38:	40021000 	.word	0x40021000
 8009b3c:	04c4b400 	.word	0x04c4b400
 8009b40:	08016358 	.word	0x08016358
 8009b44:	2000000c 	.word	0x2000000c
 8009b48:	20000010 	.word	0x20000010

08009b4c <HAL_RCC_GetSysClockFreq>:
 8009b4c:	b480      	push	{r7}
 8009b4e:	b089      	sub	sp, #36	; 0x24
 8009b50:	af00      	add	r7, sp, #0
 8009b52:	2300      	movs	r3, #0
 8009b54:	61fb      	str	r3, [r7, #28]
 8009b56:	2300      	movs	r3, #0
 8009b58:	61bb      	str	r3, [r7, #24]
 8009b5a:	4b3d      	ldr	r3, [pc, #244]	; (8009c50 <HAL_RCC_GetSysClockFreq+0x104>)
 8009b5c:	689b      	ldr	r3, [r3, #8]
 8009b5e:	f003 030c 	and.w	r3, r3, #12
 8009b62:	613b      	str	r3, [r7, #16]
 8009b64:	4b3a      	ldr	r3, [pc, #232]	; (8009c50 <HAL_RCC_GetSysClockFreq+0x104>)
 8009b66:	68db      	ldr	r3, [r3, #12]
 8009b68:	f003 0303 	and.w	r3, r3, #3
 8009b6c:	60fb      	str	r3, [r7, #12]
 8009b6e:	693b      	ldr	r3, [r7, #16]
 8009b70:	2b00      	cmp	r3, #0
 8009b72:	d005      	beq.n	8009b80 <HAL_RCC_GetSysClockFreq+0x34>
 8009b74:	693b      	ldr	r3, [r7, #16]
 8009b76:	2b0c      	cmp	r3, #12
 8009b78:	d121      	bne.n	8009bbe <HAL_RCC_GetSysClockFreq+0x72>
 8009b7a:	68fb      	ldr	r3, [r7, #12]
 8009b7c:	2b01      	cmp	r3, #1
 8009b7e:	d11e      	bne.n	8009bbe <HAL_RCC_GetSysClockFreq+0x72>
 8009b80:	4b33      	ldr	r3, [pc, #204]	; (8009c50 <HAL_RCC_GetSysClockFreq+0x104>)
 8009b82:	681b      	ldr	r3, [r3, #0]
 8009b84:	f003 0308 	and.w	r3, r3, #8
 8009b88:	2b00      	cmp	r3, #0
 8009b8a:	d107      	bne.n	8009b9c <HAL_RCC_GetSysClockFreq+0x50>
 8009b8c:	4b30      	ldr	r3, [pc, #192]	; (8009c50 <HAL_RCC_GetSysClockFreq+0x104>)
 8009b8e:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8009b92:	0a1b      	lsrs	r3, r3, #8
 8009b94:	f003 030f 	and.w	r3, r3, #15
 8009b98:	61fb      	str	r3, [r7, #28]
 8009b9a:	e005      	b.n	8009ba8 <HAL_RCC_GetSysClockFreq+0x5c>
 8009b9c:	4b2c      	ldr	r3, [pc, #176]	; (8009c50 <HAL_RCC_GetSysClockFreq+0x104>)
 8009b9e:	681b      	ldr	r3, [r3, #0]
 8009ba0:	091b      	lsrs	r3, r3, #4
 8009ba2:	f003 030f 	and.w	r3, r3, #15
 8009ba6:	61fb      	str	r3, [r7, #28]
 8009ba8:	4a2a      	ldr	r2, [pc, #168]	; (8009c54 <HAL_RCC_GetSysClockFreq+0x108>)
 8009baa:	69fb      	ldr	r3, [r7, #28]
 8009bac:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009bb0:	61fb      	str	r3, [r7, #28]
 8009bb2:	693b      	ldr	r3, [r7, #16]
 8009bb4:	2b00      	cmp	r3, #0
 8009bb6:	d10d      	bne.n	8009bd4 <HAL_RCC_GetSysClockFreq+0x88>
 8009bb8:	69fb      	ldr	r3, [r7, #28]
 8009bba:	61bb      	str	r3, [r7, #24]
 8009bbc:	e00a      	b.n	8009bd4 <HAL_RCC_GetSysClockFreq+0x88>
 8009bbe:	693b      	ldr	r3, [r7, #16]
 8009bc0:	2b04      	cmp	r3, #4
 8009bc2:	d102      	bne.n	8009bca <HAL_RCC_GetSysClockFreq+0x7e>
 8009bc4:	4b24      	ldr	r3, [pc, #144]	; (8009c58 <HAL_RCC_GetSysClockFreq+0x10c>)
 8009bc6:	61bb      	str	r3, [r7, #24]
 8009bc8:	e004      	b.n	8009bd4 <HAL_RCC_GetSysClockFreq+0x88>
 8009bca:	693b      	ldr	r3, [r7, #16]
 8009bcc:	2b08      	cmp	r3, #8
 8009bce:	d101      	bne.n	8009bd4 <HAL_RCC_GetSysClockFreq+0x88>
 8009bd0:	4b22      	ldr	r3, [pc, #136]	; (8009c5c <HAL_RCC_GetSysClockFreq+0x110>)
 8009bd2:	61bb      	str	r3, [r7, #24]
 8009bd4:	693b      	ldr	r3, [r7, #16]
 8009bd6:	2b0c      	cmp	r3, #12
 8009bd8:	d133      	bne.n	8009c42 <HAL_RCC_GetSysClockFreq+0xf6>
 8009bda:	4b1d      	ldr	r3, [pc, #116]	; (8009c50 <HAL_RCC_GetSysClockFreq+0x104>)
 8009bdc:	68db      	ldr	r3, [r3, #12]
 8009bde:	f003 0303 	and.w	r3, r3, #3
 8009be2:	60bb      	str	r3, [r7, #8]
 8009be4:	68bb      	ldr	r3, [r7, #8]
 8009be6:	2b02      	cmp	r3, #2
 8009be8:	d002      	beq.n	8009bf0 <HAL_RCC_GetSysClockFreq+0xa4>
 8009bea:	2b03      	cmp	r3, #3
 8009bec:	d003      	beq.n	8009bf6 <HAL_RCC_GetSysClockFreq+0xaa>
 8009bee:	e005      	b.n	8009bfc <HAL_RCC_GetSysClockFreq+0xb0>
 8009bf0:	4b19      	ldr	r3, [pc, #100]	; (8009c58 <HAL_RCC_GetSysClockFreq+0x10c>)
 8009bf2:	617b      	str	r3, [r7, #20]
 8009bf4:	e005      	b.n	8009c02 <HAL_RCC_GetSysClockFreq+0xb6>
 8009bf6:	4b19      	ldr	r3, [pc, #100]	; (8009c5c <HAL_RCC_GetSysClockFreq+0x110>)
 8009bf8:	617b      	str	r3, [r7, #20]
 8009bfa:	e002      	b.n	8009c02 <HAL_RCC_GetSysClockFreq+0xb6>
 8009bfc:	69fb      	ldr	r3, [r7, #28]
 8009bfe:	617b      	str	r3, [r7, #20]
 8009c00:	bf00      	nop
 8009c02:	4b13      	ldr	r3, [pc, #76]	; (8009c50 <HAL_RCC_GetSysClockFreq+0x104>)
 8009c04:	68db      	ldr	r3, [r3, #12]
 8009c06:	091b      	lsrs	r3, r3, #4
 8009c08:	f003 030f 	and.w	r3, r3, #15
 8009c0c:	3301      	adds	r3, #1
 8009c0e:	607b      	str	r3, [r7, #4]
 8009c10:	4b0f      	ldr	r3, [pc, #60]	; (8009c50 <HAL_RCC_GetSysClockFreq+0x104>)
 8009c12:	68db      	ldr	r3, [r3, #12]
 8009c14:	0a1b      	lsrs	r3, r3, #8
 8009c16:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009c1a:	697a      	ldr	r2, [r7, #20]
 8009c1c:	fb02 f203 	mul.w	r2, r2, r3
 8009c20:	687b      	ldr	r3, [r7, #4]
 8009c22:	fbb2 f3f3 	udiv	r3, r2, r3
 8009c26:	617b      	str	r3, [r7, #20]
 8009c28:	4b09      	ldr	r3, [pc, #36]	; (8009c50 <HAL_RCC_GetSysClockFreq+0x104>)
 8009c2a:	68db      	ldr	r3, [r3, #12]
 8009c2c:	0e5b      	lsrs	r3, r3, #25
 8009c2e:	f003 0303 	and.w	r3, r3, #3
 8009c32:	3301      	adds	r3, #1
 8009c34:	005b      	lsls	r3, r3, #1
 8009c36:	603b      	str	r3, [r7, #0]
 8009c38:	697a      	ldr	r2, [r7, #20]
 8009c3a:	683b      	ldr	r3, [r7, #0]
 8009c3c:	fbb2 f3f3 	udiv	r3, r2, r3
 8009c40:	61bb      	str	r3, [r7, #24]
 8009c42:	69bb      	ldr	r3, [r7, #24]
 8009c44:	4618      	mov	r0, r3
 8009c46:	3724      	adds	r7, #36	; 0x24
 8009c48:	46bd      	mov	sp, r7
 8009c4a:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c4e:	4770      	bx	lr
 8009c50:	40021000 	.word	0x40021000
 8009c54:	08016370 	.word	0x08016370
 8009c58:	00f42400 	.word	0x00f42400
 8009c5c:	007a1200 	.word	0x007a1200

08009c60 <HAL_RCC_GetHCLKFreq>:
 8009c60:	b480      	push	{r7}
 8009c62:	af00      	add	r7, sp, #0
 8009c64:	4b03      	ldr	r3, [pc, #12]	; (8009c74 <HAL_RCC_GetHCLKFreq+0x14>)
 8009c66:	681b      	ldr	r3, [r3, #0]
 8009c68:	4618      	mov	r0, r3
 8009c6a:	46bd      	mov	sp, r7
 8009c6c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009c70:	4770      	bx	lr
 8009c72:	bf00      	nop
 8009c74:	2000000c 	.word	0x2000000c

08009c78 <HAL_RCC_GetPCLK1Freq>:
 8009c78:	b580      	push	{r7, lr}
 8009c7a:	af00      	add	r7, sp, #0
 8009c7c:	f7ff fff0 	bl	8009c60 <HAL_RCC_GetHCLKFreq>
 8009c80:	4601      	mov	r1, r0
 8009c82:	4b06      	ldr	r3, [pc, #24]	; (8009c9c <HAL_RCC_GetPCLK1Freq+0x24>)
 8009c84:	689b      	ldr	r3, [r3, #8]
 8009c86:	0a1b      	lsrs	r3, r3, #8
 8009c88:	f003 0307 	and.w	r3, r3, #7
 8009c8c:	4a04      	ldr	r2, [pc, #16]	; (8009ca0 <HAL_RCC_GetPCLK1Freq+0x28>)
 8009c8e:	5cd3      	ldrb	r3, [r2, r3]
 8009c90:	f003 031f 	and.w	r3, r3, #31
 8009c94:	fa21 f303 	lsr.w	r3, r1, r3
 8009c98:	4618      	mov	r0, r3
 8009c9a:	bd80      	pop	{r7, pc}
 8009c9c:	40021000 	.word	0x40021000
 8009ca0:	08016368 	.word	0x08016368

08009ca4 <HAL_RCC_GetPCLK2Freq>:
 8009ca4:	b580      	push	{r7, lr}
 8009ca6:	af00      	add	r7, sp, #0
 8009ca8:	f7ff ffda 	bl	8009c60 <HAL_RCC_GetHCLKFreq>
 8009cac:	4601      	mov	r1, r0
 8009cae:	4b06      	ldr	r3, [pc, #24]	; (8009cc8 <HAL_RCC_GetPCLK2Freq+0x24>)
 8009cb0:	689b      	ldr	r3, [r3, #8]
 8009cb2:	0adb      	lsrs	r3, r3, #11
 8009cb4:	f003 0307 	and.w	r3, r3, #7
 8009cb8:	4a04      	ldr	r2, [pc, #16]	; (8009ccc <HAL_RCC_GetPCLK2Freq+0x28>)
 8009cba:	5cd3      	ldrb	r3, [r2, r3]
 8009cbc:	f003 031f 	and.w	r3, r3, #31
 8009cc0:	fa21 f303 	lsr.w	r3, r1, r3
 8009cc4:	4618      	mov	r0, r3
 8009cc6:	bd80      	pop	{r7, pc}
 8009cc8:	40021000 	.word	0x40021000
 8009ccc:	08016368 	.word	0x08016368

08009cd0 <HAL_RCC_GetClockConfig>:
 8009cd0:	b480      	push	{r7}
 8009cd2:	b083      	sub	sp, #12
 8009cd4:	af00      	add	r7, sp, #0
 8009cd6:	6078      	str	r0, [r7, #4]
 8009cd8:	6039      	str	r1, [r7, #0]
 8009cda:	687b      	ldr	r3, [r7, #4]
 8009cdc:	220f      	movs	r2, #15
 8009cde:	601a      	str	r2, [r3, #0]
 8009ce0:	4b12      	ldr	r3, [pc, #72]	; (8009d2c <HAL_RCC_GetClockConfig+0x5c>)
 8009ce2:	689b      	ldr	r3, [r3, #8]
 8009ce4:	f003 0203 	and.w	r2, r3, #3
 8009ce8:	687b      	ldr	r3, [r7, #4]
 8009cea:	605a      	str	r2, [r3, #4]
 8009cec:	4b0f      	ldr	r3, [pc, #60]	; (8009d2c <HAL_RCC_GetClockConfig+0x5c>)
 8009cee:	689b      	ldr	r3, [r3, #8]
 8009cf0:	f003 02f0 	and.w	r2, r3, #240	; 0xf0
 8009cf4:	687b      	ldr	r3, [r7, #4]
 8009cf6:	609a      	str	r2, [r3, #8]
 8009cf8:	4b0c      	ldr	r3, [pc, #48]	; (8009d2c <HAL_RCC_GetClockConfig+0x5c>)
 8009cfa:	689b      	ldr	r3, [r3, #8]
 8009cfc:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8009d00:	687b      	ldr	r3, [r7, #4]
 8009d02:	60da      	str	r2, [r3, #12]
 8009d04:	4b09      	ldr	r3, [pc, #36]	; (8009d2c <HAL_RCC_GetClockConfig+0x5c>)
 8009d06:	689b      	ldr	r3, [r3, #8]
 8009d08:	08db      	lsrs	r3, r3, #3
 8009d0a:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 8009d0e:	687b      	ldr	r3, [r7, #4]
 8009d10:	611a      	str	r2, [r3, #16]
 8009d12:	4b07      	ldr	r3, [pc, #28]	; (8009d30 <HAL_RCC_GetClockConfig+0x60>)
 8009d14:	681b      	ldr	r3, [r3, #0]
 8009d16:	f003 020f 	and.w	r2, r3, #15
 8009d1a:	683b      	ldr	r3, [r7, #0]
 8009d1c:	601a      	str	r2, [r3, #0]
 8009d1e:	bf00      	nop
 8009d20:	370c      	adds	r7, #12
 8009d22:	46bd      	mov	sp, r7
 8009d24:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009d28:	4770      	bx	lr
 8009d2a:	bf00      	nop
 8009d2c:	40021000 	.word	0x40021000
 8009d30:	40022000 	.word	0x40022000

08009d34 <RCC_SetFlashLatencyFromMSIRange>:
 8009d34:	b580      	push	{r7, lr}
 8009d36:	b086      	sub	sp, #24
 8009d38:	af00      	add	r7, sp, #0
 8009d3a:	6078      	str	r0, [r7, #4]
 8009d3c:	2300      	movs	r3, #0
 8009d3e:	613b      	str	r3, [r7, #16]
 8009d40:	4b27      	ldr	r3, [pc, #156]	; (8009de0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8009d42:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009d44:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009d48:	2b00      	cmp	r3, #0
 8009d4a:	d003      	beq.n	8009d54 <RCC_SetFlashLatencyFromMSIRange+0x20>
 8009d4c:	f7ff f8c8 	bl	8008ee0 <HAL_PWREx_GetVoltageRange>
 8009d50:	6178      	str	r0, [r7, #20]
 8009d52:	e014      	b.n	8009d7e <RCC_SetFlashLatencyFromMSIRange+0x4a>
 8009d54:	4b22      	ldr	r3, [pc, #136]	; (8009de0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8009d56:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009d58:	4a21      	ldr	r2, [pc, #132]	; (8009de0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8009d5a:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 8009d5e:	6593      	str	r3, [r2, #88]	; 0x58
 8009d60:	4b1f      	ldr	r3, [pc, #124]	; (8009de0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8009d62:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009d64:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009d68:	60fb      	str	r3, [r7, #12]
 8009d6a:	68fb      	ldr	r3, [r7, #12]
 8009d6c:	f7ff f8b8 	bl	8008ee0 <HAL_PWREx_GetVoltageRange>
 8009d70:	6178      	str	r0, [r7, #20]
 8009d72:	4b1b      	ldr	r3, [pc, #108]	; (8009de0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8009d74:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009d76:	4a1a      	ldr	r2, [pc, #104]	; (8009de0 <RCC_SetFlashLatencyFromMSIRange+0xac>)
 8009d78:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 8009d7c:	6593      	str	r3, [r2, #88]	; 0x58
 8009d7e:	697b      	ldr	r3, [r7, #20]
 8009d80:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009d84:	d10b      	bne.n	8009d9e <RCC_SetFlashLatencyFromMSIRange+0x6a>
 8009d86:	687b      	ldr	r3, [r7, #4]
 8009d88:	2b80      	cmp	r3, #128	; 0x80
 8009d8a:	d913      	bls.n	8009db4 <RCC_SetFlashLatencyFromMSIRange+0x80>
 8009d8c:	687b      	ldr	r3, [r7, #4]
 8009d8e:	2ba0      	cmp	r3, #160	; 0xa0
 8009d90:	d902      	bls.n	8009d98 <RCC_SetFlashLatencyFromMSIRange+0x64>
 8009d92:	2302      	movs	r3, #2
 8009d94:	613b      	str	r3, [r7, #16]
 8009d96:	e00d      	b.n	8009db4 <RCC_SetFlashLatencyFromMSIRange+0x80>
 8009d98:	2301      	movs	r3, #1
 8009d9a:	613b      	str	r3, [r7, #16]
 8009d9c:	e00a      	b.n	8009db4 <RCC_SetFlashLatencyFromMSIRange+0x80>
 8009d9e:	687b      	ldr	r3, [r7, #4]
 8009da0:	2b7f      	cmp	r3, #127	; 0x7f
 8009da2:	d902      	bls.n	8009daa <RCC_SetFlashLatencyFromMSIRange+0x76>
 8009da4:	2302      	movs	r3, #2
 8009da6:	613b      	str	r3, [r7, #16]
 8009da8:	e004      	b.n	8009db4 <RCC_SetFlashLatencyFromMSIRange+0x80>
 8009daa:	687b      	ldr	r3, [r7, #4]
 8009dac:	2b70      	cmp	r3, #112	; 0x70
 8009dae:	d101      	bne.n	8009db4 <RCC_SetFlashLatencyFromMSIRange+0x80>
 8009db0:	2301      	movs	r3, #1
 8009db2:	613b      	str	r3, [r7, #16]
 8009db4:	4b0b      	ldr	r3, [pc, #44]	; (8009de4 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 8009db6:	681b      	ldr	r3, [r3, #0]
 8009db8:	f023 020f 	bic.w	r2, r3, #15
 8009dbc:	4909      	ldr	r1, [pc, #36]	; (8009de4 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 8009dbe:	693b      	ldr	r3, [r7, #16]
 8009dc0:	4313      	orrs	r3, r2
 8009dc2:	600b      	str	r3, [r1, #0]
 8009dc4:	4b07      	ldr	r3, [pc, #28]	; (8009de4 <RCC_SetFlashLatencyFromMSIRange+0xb0>)
 8009dc6:	681b      	ldr	r3, [r3, #0]
 8009dc8:	f003 030f 	and.w	r3, r3, #15
 8009dcc:	693a      	ldr	r2, [r7, #16]
 8009dce:	429a      	cmp	r2, r3
 8009dd0:	d001      	beq.n	8009dd6 <RCC_SetFlashLatencyFromMSIRange+0xa2>
 8009dd2:	2301      	movs	r3, #1
 8009dd4:	e000      	b.n	8009dd8 <RCC_SetFlashLatencyFromMSIRange+0xa4>
 8009dd6:	2300      	movs	r3, #0
 8009dd8:	4618      	mov	r0, r3
 8009dda:	3718      	adds	r7, #24
 8009ddc:	46bd      	mov	sp, r7
 8009dde:	bd80      	pop	{r7, pc}
 8009de0:	40021000 	.word	0x40021000
 8009de4:	40022000 	.word	0x40022000

08009de8 <RCC_GetSysClockFreqFromPLLSource>:
 8009de8:	b480      	push	{r7}
 8009dea:	b087      	sub	sp, #28
 8009dec:	af00      	add	r7, sp, #0
 8009dee:	2300      	movs	r3, #0
 8009df0:	617b      	str	r3, [r7, #20]
 8009df2:	4b2d      	ldr	r3, [pc, #180]	; (8009ea8 <RCC_GetSysClockFreqFromPLLSource+0xc0>)
 8009df4:	68db      	ldr	r3, [r3, #12]
 8009df6:	f003 0303 	and.w	r3, r3, #3
 8009dfa:	2b01      	cmp	r3, #1
 8009dfc:	d118      	bne.n	8009e30 <RCC_GetSysClockFreqFromPLLSource+0x48>
 8009dfe:	4b2a      	ldr	r3, [pc, #168]	; (8009ea8 <RCC_GetSysClockFreqFromPLLSource+0xc0>)
 8009e00:	681b      	ldr	r3, [r3, #0]
 8009e02:	f003 0308 	and.w	r3, r3, #8
 8009e06:	2b00      	cmp	r3, #0
 8009e08:	d107      	bne.n	8009e1a <RCC_GetSysClockFreqFromPLLSource+0x32>
 8009e0a:	4b27      	ldr	r3, [pc, #156]	; (8009ea8 <RCC_GetSysClockFreqFromPLLSource+0xc0>)
 8009e0c:	f8d3 3094 	ldr.w	r3, [r3, #148]	; 0x94
 8009e10:	0a1b      	lsrs	r3, r3, #8
 8009e12:	f003 030f 	and.w	r3, r3, #15
 8009e16:	617b      	str	r3, [r7, #20]
 8009e18:	e005      	b.n	8009e26 <RCC_GetSysClockFreqFromPLLSource+0x3e>
 8009e1a:	4b23      	ldr	r3, [pc, #140]	; (8009ea8 <RCC_GetSysClockFreqFromPLLSource+0xc0>)
 8009e1c:	681b      	ldr	r3, [r3, #0]
 8009e1e:	091b      	lsrs	r3, r3, #4
 8009e20:	f003 030f 	and.w	r3, r3, #15
 8009e24:	617b      	str	r3, [r7, #20]
 8009e26:	4a21      	ldr	r2, [pc, #132]	; (8009eac <RCC_GetSysClockFreqFromPLLSource+0xc4>)
 8009e28:	697b      	ldr	r3, [r7, #20]
 8009e2a:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 8009e2e:	617b      	str	r3, [r7, #20]
 8009e30:	4b1d      	ldr	r3, [pc, #116]	; (8009ea8 <RCC_GetSysClockFreqFromPLLSource+0xc0>)
 8009e32:	68db      	ldr	r3, [r3, #12]
 8009e34:	f003 0303 	and.w	r3, r3, #3
 8009e38:	60fb      	str	r3, [r7, #12]
 8009e3a:	68fb      	ldr	r3, [r7, #12]
 8009e3c:	2b02      	cmp	r3, #2
 8009e3e:	d002      	beq.n	8009e46 <RCC_GetSysClockFreqFromPLLSource+0x5e>
 8009e40:	2b03      	cmp	r3, #3
 8009e42:	d003      	beq.n	8009e4c <RCC_GetSysClockFreqFromPLLSource+0x64>
 8009e44:	e005      	b.n	8009e52 <RCC_GetSysClockFreqFromPLLSource+0x6a>
 8009e46:	4b1a      	ldr	r3, [pc, #104]	; (8009eb0 <RCC_GetSysClockFreqFromPLLSource+0xc8>)
 8009e48:	613b      	str	r3, [r7, #16]
 8009e4a:	e005      	b.n	8009e58 <RCC_GetSysClockFreqFromPLLSource+0x70>
 8009e4c:	4b19      	ldr	r3, [pc, #100]	; (8009eb4 <RCC_GetSysClockFreqFromPLLSource+0xcc>)
 8009e4e:	613b      	str	r3, [r7, #16]
 8009e50:	e002      	b.n	8009e58 <RCC_GetSysClockFreqFromPLLSource+0x70>
 8009e52:	697b      	ldr	r3, [r7, #20]
 8009e54:	613b      	str	r3, [r7, #16]
 8009e56:	bf00      	nop
 8009e58:	4b13      	ldr	r3, [pc, #76]	; (8009ea8 <RCC_GetSysClockFreqFromPLLSource+0xc0>)
 8009e5a:	68db      	ldr	r3, [r3, #12]
 8009e5c:	091b      	lsrs	r3, r3, #4
 8009e5e:	f003 030f 	and.w	r3, r3, #15
 8009e62:	3301      	adds	r3, #1
 8009e64:	60bb      	str	r3, [r7, #8]
 8009e66:	4b10      	ldr	r3, [pc, #64]	; (8009ea8 <RCC_GetSysClockFreqFromPLLSource+0xc0>)
 8009e68:	68db      	ldr	r3, [r3, #12]
 8009e6a:	0a1b      	lsrs	r3, r3, #8
 8009e6c:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8009e70:	693a      	ldr	r2, [r7, #16]
 8009e72:	fb02 f203 	mul.w	r2, r2, r3
 8009e76:	68bb      	ldr	r3, [r7, #8]
 8009e78:	fbb2 f3f3 	udiv	r3, r2, r3
 8009e7c:	613b      	str	r3, [r7, #16]
 8009e7e:	4b0a      	ldr	r3, [pc, #40]	; (8009ea8 <RCC_GetSysClockFreqFromPLLSource+0xc0>)
 8009e80:	68db      	ldr	r3, [r3, #12]
 8009e82:	0e5b      	lsrs	r3, r3, #25
 8009e84:	f003 0303 	and.w	r3, r3, #3
 8009e88:	3301      	adds	r3, #1
 8009e8a:	005b      	lsls	r3, r3, #1
 8009e8c:	607b      	str	r3, [r7, #4]
 8009e8e:	693a      	ldr	r2, [r7, #16]
 8009e90:	687b      	ldr	r3, [r7, #4]
 8009e92:	fbb2 f3f3 	udiv	r3, r2, r3
 8009e96:	603b      	str	r3, [r7, #0]
 8009e98:	683b      	ldr	r3, [r7, #0]
 8009e9a:	4618      	mov	r0, r3
 8009e9c:	371c      	adds	r7, #28
 8009e9e:	46bd      	mov	sp, r7
 8009ea0:	f85d 7b04 	ldr.w	r7, [sp], #4
 8009ea4:	4770      	bx	lr
 8009ea6:	bf00      	nop
 8009ea8:	40021000 	.word	0x40021000
 8009eac:	08016370 	.word	0x08016370
 8009eb0:	00f42400 	.word	0x00f42400
 8009eb4:	007a1200 	.word	0x007a1200

08009eb8 <HAL_RCCEx_PeriphCLKConfig>:
 8009eb8:	b580      	push	{r7, lr}
 8009eba:	b086      	sub	sp, #24
 8009ebc:	af00      	add	r7, sp, #0
 8009ebe:	6078      	str	r0, [r7, #4]
 8009ec0:	2300      	movs	r3, #0
 8009ec2:	74fb      	strb	r3, [r7, #19]
 8009ec4:	2300      	movs	r3, #0
 8009ec6:	74bb      	strb	r3, [r7, #18]
 8009ec8:	687b      	ldr	r3, [r7, #4]
 8009eca:	681b      	ldr	r3, [r3, #0]
 8009ecc:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 8009ed0:	2b00      	cmp	r3, #0
 8009ed2:	d03d      	beq.n	8009f50 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8009ed4:	687b      	ldr	r3, [r7, #4]
 8009ed6:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009ed8:	2b40      	cmp	r3, #64	; 0x40
 8009eda:	d00b      	beq.n	8009ef4 <HAL_RCCEx_PeriphCLKConfig+0x3c>
 8009edc:	2b40      	cmp	r3, #64	; 0x40
 8009ede:	d804      	bhi.n	8009eea <HAL_RCCEx_PeriphCLKConfig+0x32>
 8009ee0:	2b00      	cmp	r3, #0
 8009ee2:	d00e      	beq.n	8009f02 <HAL_RCCEx_PeriphCLKConfig+0x4a>
 8009ee4:	2b20      	cmp	r3, #32
 8009ee6:	d015      	beq.n	8009f14 <HAL_RCCEx_PeriphCLKConfig+0x5c>
 8009ee8:	e01d      	b.n	8009f26 <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8009eea:	2b60      	cmp	r3, #96	; 0x60
 8009eec:	d01e      	beq.n	8009f2c <HAL_RCCEx_PeriphCLKConfig+0x74>
 8009eee:	2b80      	cmp	r3, #128	; 0x80
 8009ef0:	d01c      	beq.n	8009f2c <HAL_RCCEx_PeriphCLKConfig+0x74>
 8009ef2:	e018      	b.n	8009f26 <HAL_RCCEx_PeriphCLKConfig+0x6e>
 8009ef4:	4b86      	ldr	r3, [pc, #536]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8009ef6:	68db      	ldr	r3, [r3, #12]
 8009ef8:	4a85      	ldr	r2, [pc, #532]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8009efa:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009efe:	60d3      	str	r3, [r2, #12]
 8009f00:	e015      	b.n	8009f2e <HAL_RCCEx_PeriphCLKConfig+0x76>
 8009f02:	687b      	ldr	r3, [r7, #4]
 8009f04:	3304      	adds	r3, #4
 8009f06:	2100      	movs	r1, #0
 8009f08:	4618      	mov	r0, r3
 8009f0a:	f000 fb0d 	bl	800a528 <RCCEx_PLLSAI1_Config>
 8009f0e:	4603      	mov	r3, r0
 8009f10:	74fb      	strb	r3, [r7, #19]
 8009f12:	e00c      	b.n	8009f2e <HAL_RCCEx_PeriphCLKConfig+0x76>
 8009f14:	687b      	ldr	r3, [r7, #4]
 8009f16:	3320      	adds	r3, #32
 8009f18:	2100      	movs	r1, #0
 8009f1a:	4618      	mov	r0, r3
 8009f1c:	f000 fbf4 	bl	800a708 <RCCEx_PLLSAI2_Config>
 8009f20:	4603      	mov	r3, r0
 8009f22:	74fb      	strb	r3, [r7, #19]
 8009f24:	e003      	b.n	8009f2e <HAL_RCCEx_PeriphCLKConfig+0x76>
 8009f26:	2301      	movs	r3, #1
 8009f28:	74fb      	strb	r3, [r7, #19]
 8009f2a:	e000      	b.n	8009f2e <HAL_RCCEx_PeriphCLKConfig+0x76>
 8009f2c:	bf00      	nop
 8009f2e:	7cfb      	ldrb	r3, [r7, #19]
 8009f30:	2b00      	cmp	r3, #0
 8009f32:	d10b      	bne.n	8009f4c <HAL_RCCEx_PeriphCLKConfig+0x94>
 8009f34:	4b76      	ldr	r3, [pc, #472]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8009f36:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8009f3a:	f023 02e0 	bic.w	r2, r3, #224	; 0xe0
 8009f3e:	687b      	ldr	r3, [r7, #4]
 8009f40:	6edb      	ldr	r3, [r3, #108]	; 0x6c
 8009f42:	4973      	ldr	r1, [pc, #460]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8009f44:	4313      	orrs	r3, r2
 8009f46:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 8009f4a:	e001      	b.n	8009f50 <HAL_RCCEx_PeriphCLKConfig+0x98>
 8009f4c:	7cfb      	ldrb	r3, [r7, #19]
 8009f4e:	74bb      	strb	r3, [r7, #18]
 8009f50:	687b      	ldr	r3, [r7, #4]
 8009f52:	681b      	ldr	r3, [r3, #0]
 8009f54:	f403 5380 	and.w	r3, r3, #4096	; 0x1000
 8009f58:	2b00      	cmp	r3, #0
 8009f5a:	d042      	beq.n	8009fe2 <HAL_RCCEx_PeriphCLKConfig+0x12a>
 8009f5c:	687b      	ldr	r3, [r7, #4]
 8009f5e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009f60:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009f64:	d00f      	beq.n	8009f86 <HAL_RCCEx_PeriphCLKConfig+0xce>
 8009f66:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 8009f6a:	d805      	bhi.n	8009f78 <HAL_RCCEx_PeriphCLKConfig+0xc0>
 8009f6c:	2b00      	cmp	r3, #0
 8009f6e:	d011      	beq.n	8009f94 <HAL_RCCEx_PeriphCLKConfig+0xdc>
 8009f70:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 8009f74:	d017      	beq.n	8009fa6 <HAL_RCCEx_PeriphCLKConfig+0xee>
 8009f76:	e01f      	b.n	8009fb8 <HAL_RCCEx_PeriphCLKConfig+0x100>
 8009f78:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 8009f7c:	d01f      	beq.n	8009fbe <HAL_RCCEx_PeriphCLKConfig+0x106>
 8009f7e:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 8009f82:	d01c      	beq.n	8009fbe <HAL_RCCEx_PeriphCLKConfig+0x106>
 8009f84:	e018      	b.n	8009fb8 <HAL_RCCEx_PeriphCLKConfig+0x100>
 8009f86:	4b62      	ldr	r3, [pc, #392]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8009f88:	68db      	ldr	r3, [r3, #12]
 8009f8a:	4a61      	ldr	r2, [pc, #388]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8009f8c:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 8009f90:	60d3      	str	r3, [r2, #12]
 8009f92:	e015      	b.n	8009fc0 <HAL_RCCEx_PeriphCLKConfig+0x108>
 8009f94:	687b      	ldr	r3, [r7, #4]
 8009f96:	3304      	adds	r3, #4
 8009f98:	2100      	movs	r1, #0
 8009f9a:	4618      	mov	r0, r3
 8009f9c:	f000 fac4 	bl	800a528 <RCCEx_PLLSAI1_Config>
 8009fa0:	4603      	mov	r3, r0
 8009fa2:	74fb      	strb	r3, [r7, #19]
 8009fa4:	e00c      	b.n	8009fc0 <HAL_RCCEx_PeriphCLKConfig+0x108>
 8009fa6:	687b      	ldr	r3, [r7, #4]
 8009fa8:	3320      	adds	r3, #32
 8009faa:	2100      	movs	r1, #0
 8009fac:	4618      	mov	r0, r3
 8009fae:	f000 fbab 	bl	800a708 <RCCEx_PLLSAI2_Config>
 8009fb2:	4603      	mov	r3, r0
 8009fb4:	74fb      	strb	r3, [r7, #19]
 8009fb6:	e003      	b.n	8009fc0 <HAL_RCCEx_PeriphCLKConfig+0x108>
 8009fb8:	2301      	movs	r3, #1
 8009fba:	74fb      	strb	r3, [r7, #19]
 8009fbc:	e000      	b.n	8009fc0 <HAL_RCCEx_PeriphCLKConfig+0x108>
 8009fbe:	bf00      	nop
 8009fc0:	7cfb      	ldrb	r3, [r7, #19]
 8009fc2:	2b00      	cmp	r3, #0
 8009fc4:	d10b      	bne.n	8009fde <HAL_RCCEx_PeriphCLKConfig+0x126>
 8009fc6:	4b52      	ldr	r3, [pc, #328]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8009fc8:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 8009fcc:	f423 62e0 	bic.w	r2, r3, #1792	; 0x700
 8009fd0:	687b      	ldr	r3, [r7, #4]
 8009fd2:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 8009fd4:	494e      	ldr	r1, [pc, #312]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8009fd6:	4313      	orrs	r3, r2
 8009fd8:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 8009fdc:	e001      	b.n	8009fe2 <HAL_RCCEx_PeriphCLKConfig+0x12a>
 8009fde:	7cfb      	ldrb	r3, [r7, #19]
 8009fe0:	74bb      	strb	r3, [r7, #18]
 8009fe2:	687b      	ldr	r3, [r7, #4]
 8009fe4:	681b      	ldr	r3, [r3, #0]
 8009fe6:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 8009fea:	2b00      	cmp	r3, #0
 8009fec:	f000 809f 	beq.w	800a12e <HAL_RCCEx_PeriphCLKConfig+0x276>
 8009ff0:	2300      	movs	r3, #0
 8009ff2:	747b      	strb	r3, [r7, #17]
 8009ff4:	4b46      	ldr	r3, [pc, #280]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 8009ff6:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 8009ff8:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 8009ffc:	2b00      	cmp	r3, #0
 8009ffe:	d101      	bne.n	800a004 <HAL_RCCEx_PeriphCLKConfig+0x14c>
 800a000:	2301      	movs	r3, #1
 800a002:	e000      	b.n	800a006 <HAL_RCCEx_PeriphCLKConfig+0x14e>
 800a004:	2300      	movs	r3, #0
 800a006:	2b00      	cmp	r3, #0
 800a008:	d00d      	beq.n	800a026 <HAL_RCCEx_PeriphCLKConfig+0x16e>
 800a00a:	4b41      	ldr	r3, [pc, #260]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a00c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a00e:	4a40      	ldr	r2, [pc, #256]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a010:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a014:	6593      	str	r3, [r2, #88]	; 0x58
 800a016:	4b3e      	ldr	r3, [pc, #248]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a018:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a01a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 800a01e:	60bb      	str	r3, [r7, #8]
 800a020:	68bb      	ldr	r3, [r7, #8]
 800a022:	2301      	movs	r3, #1
 800a024:	747b      	strb	r3, [r7, #17]
 800a026:	4b3b      	ldr	r3, [pc, #236]	; (800a114 <HAL_RCCEx_PeriphCLKConfig+0x25c>)
 800a028:	681b      	ldr	r3, [r3, #0]
 800a02a:	4a3a      	ldr	r2, [pc, #232]	; (800a114 <HAL_RCCEx_PeriphCLKConfig+0x25c>)
 800a02c:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 800a030:	6013      	str	r3, [r2, #0]
 800a032:	f7fe f9e1 	bl	80083f8 <HAL_GetTick>
 800a036:	60f8      	str	r0, [r7, #12]
 800a038:	e009      	b.n	800a04e <HAL_RCCEx_PeriphCLKConfig+0x196>
 800a03a:	f7fe f9dd 	bl	80083f8 <HAL_GetTick>
 800a03e:	4602      	mov	r2, r0
 800a040:	68fb      	ldr	r3, [r7, #12]
 800a042:	1ad3      	subs	r3, r2, r3
 800a044:	2b02      	cmp	r3, #2
 800a046:	d902      	bls.n	800a04e <HAL_RCCEx_PeriphCLKConfig+0x196>
 800a048:	2303      	movs	r3, #3
 800a04a:	74fb      	strb	r3, [r7, #19]
 800a04c:	e005      	b.n	800a05a <HAL_RCCEx_PeriphCLKConfig+0x1a2>
 800a04e:	4b31      	ldr	r3, [pc, #196]	; (800a114 <HAL_RCCEx_PeriphCLKConfig+0x25c>)
 800a050:	681b      	ldr	r3, [r3, #0]
 800a052:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a056:	2b00      	cmp	r3, #0
 800a058:	d0ef      	beq.n	800a03a <HAL_RCCEx_PeriphCLKConfig+0x182>
 800a05a:	7cfb      	ldrb	r3, [r7, #19]
 800a05c:	2b00      	cmp	r3, #0
 800a05e:	d15b      	bne.n	800a118 <HAL_RCCEx_PeriphCLKConfig+0x260>
 800a060:	4b2b      	ldr	r3, [pc, #172]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a062:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a066:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800a06a:	617b      	str	r3, [r7, #20]
 800a06c:	697b      	ldr	r3, [r7, #20]
 800a06e:	2b00      	cmp	r3, #0
 800a070:	d01f      	beq.n	800a0b2 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800a072:	687b      	ldr	r3, [r7, #4]
 800a074:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a078:	697a      	ldr	r2, [r7, #20]
 800a07a:	429a      	cmp	r2, r3
 800a07c:	d019      	beq.n	800a0b2 <HAL_RCCEx_PeriphCLKConfig+0x1fa>
 800a07e:	4b24      	ldr	r3, [pc, #144]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a080:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a084:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800a088:	617b      	str	r3, [r7, #20]
 800a08a:	4b21      	ldr	r3, [pc, #132]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a08c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a090:	4a1f      	ldr	r2, [pc, #124]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a092:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800a096:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800a09a:	4b1d      	ldr	r3, [pc, #116]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a09c:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a0a0:	4a1b      	ldr	r2, [pc, #108]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a0a2:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800a0a6:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800a0aa:	4a19      	ldr	r2, [pc, #100]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a0ac:	697b      	ldr	r3, [r7, #20]
 800a0ae:	f8c2 3090 	str.w	r3, [r2, #144]	; 0x90
 800a0b2:	697b      	ldr	r3, [r7, #20]
 800a0b4:	f003 0301 	and.w	r3, r3, #1
 800a0b8:	2b00      	cmp	r3, #0
 800a0ba:	d016      	beq.n	800a0ea <HAL_RCCEx_PeriphCLKConfig+0x232>
 800a0bc:	f7fe f99c 	bl	80083f8 <HAL_GetTick>
 800a0c0:	60f8      	str	r0, [r7, #12]
 800a0c2:	e00b      	b.n	800a0dc <HAL_RCCEx_PeriphCLKConfig+0x224>
 800a0c4:	f7fe f998 	bl	80083f8 <HAL_GetTick>
 800a0c8:	4602      	mov	r2, r0
 800a0ca:	68fb      	ldr	r3, [r7, #12]
 800a0cc:	1ad3      	subs	r3, r2, r3
 800a0ce:	f241 3288 	movw	r2, #5000	; 0x1388
 800a0d2:	4293      	cmp	r3, r2
 800a0d4:	d902      	bls.n	800a0dc <HAL_RCCEx_PeriphCLKConfig+0x224>
 800a0d6:	2303      	movs	r3, #3
 800a0d8:	74fb      	strb	r3, [r7, #19]
 800a0da:	e006      	b.n	800a0ea <HAL_RCCEx_PeriphCLKConfig+0x232>
 800a0dc:	4b0c      	ldr	r3, [pc, #48]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a0de:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a0e2:	f003 0302 	and.w	r3, r3, #2
 800a0e6:	2b00      	cmp	r3, #0
 800a0e8:	d0ec      	beq.n	800a0c4 <HAL_RCCEx_PeriphCLKConfig+0x20c>
 800a0ea:	7cfb      	ldrb	r3, [r7, #19]
 800a0ec:	2b00      	cmp	r3, #0
 800a0ee:	d10c      	bne.n	800a10a <HAL_RCCEx_PeriphCLKConfig+0x252>
 800a0f0:	4b07      	ldr	r3, [pc, #28]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a0f2:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a0f6:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800a0fa:	687b      	ldr	r3, [r7, #4]
 800a0fc:	f8d3 3090 	ldr.w	r3, [r3, #144]	; 0x90
 800a100:	4903      	ldr	r1, [pc, #12]	; (800a110 <HAL_RCCEx_PeriphCLKConfig+0x258>)
 800a102:	4313      	orrs	r3, r2
 800a104:	f8c1 3090 	str.w	r3, [r1, #144]	; 0x90
 800a108:	e008      	b.n	800a11c <HAL_RCCEx_PeriphCLKConfig+0x264>
 800a10a:	7cfb      	ldrb	r3, [r7, #19]
 800a10c:	74bb      	strb	r3, [r7, #18]
 800a10e:	e005      	b.n	800a11c <HAL_RCCEx_PeriphCLKConfig+0x264>
 800a110:	40021000 	.word	0x40021000
 800a114:	40007000 	.word	0x40007000
 800a118:	7cfb      	ldrb	r3, [r7, #19]
 800a11a:	74bb      	strb	r3, [r7, #18]
 800a11c:	7c7b      	ldrb	r3, [r7, #17]
 800a11e:	2b01      	cmp	r3, #1
 800a120:	d105      	bne.n	800a12e <HAL_RCCEx_PeriphCLKConfig+0x276>
 800a122:	4ba0      	ldr	r3, [pc, #640]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a124:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a126:	4a9f      	ldr	r2, [pc, #636]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a128:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a12c:	6593      	str	r3, [r2, #88]	; 0x58
 800a12e:	687b      	ldr	r3, [r7, #4]
 800a130:	681b      	ldr	r3, [r3, #0]
 800a132:	f003 0301 	and.w	r3, r3, #1
 800a136:	2b00      	cmp	r3, #0
 800a138:	d00a      	beq.n	800a150 <HAL_RCCEx_PeriphCLKConfig+0x298>
 800a13a:	4b9a      	ldr	r3, [pc, #616]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a13c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a140:	f023 0203 	bic.w	r2, r3, #3
 800a144:	687b      	ldr	r3, [r7, #4]
 800a146:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800a148:	4996      	ldr	r1, [pc, #600]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a14a:	4313      	orrs	r3, r2
 800a14c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a150:	687b      	ldr	r3, [r7, #4]
 800a152:	681b      	ldr	r3, [r3, #0]
 800a154:	f003 0302 	and.w	r3, r3, #2
 800a158:	2b00      	cmp	r3, #0
 800a15a:	d00a      	beq.n	800a172 <HAL_RCCEx_PeriphCLKConfig+0x2ba>
 800a15c:	4b91      	ldr	r3, [pc, #580]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a15e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a162:	f023 020c 	bic.w	r2, r3, #12
 800a166:	687b      	ldr	r3, [r7, #4]
 800a168:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800a16a:	498e      	ldr	r1, [pc, #568]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a16c:	4313      	orrs	r3, r2
 800a16e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a172:	687b      	ldr	r3, [r7, #4]
 800a174:	681b      	ldr	r3, [r3, #0]
 800a176:	f003 0304 	and.w	r3, r3, #4
 800a17a:	2b00      	cmp	r3, #0
 800a17c:	d00a      	beq.n	800a194 <HAL_RCCEx_PeriphCLKConfig+0x2dc>
 800a17e:	4b89      	ldr	r3, [pc, #548]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a180:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a184:	f023 0230 	bic.w	r2, r3, #48	; 0x30
 800a188:	687b      	ldr	r3, [r7, #4]
 800a18a:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800a18c:	4985      	ldr	r1, [pc, #532]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a18e:	4313      	orrs	r3, r2
 800a190:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a194:	687b      	ldr	r3, [r7, #4]
 800a196:	681b      	ldr	r3, [r3, #0]
 800a198:	f003 0308 	and.w	r3, r3, #8
 800a19c:	2b00      	cmp	r3, #0
 800a19e:	d00a      	beq.n	800a1b6 <HAL_RCCEx_PeriphCLKConfig+0x2fe>
 800a1a0:	4b80      	ldr	r3, [pc, #512]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a1a2:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a1a6:	f023 02c0 	bic.w	r2, r3, #192	; 0xc0
 800a1aa:	687b      	ldr	r3, [r7, #4]
 800a1ac:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 800a1ae:	497d      	ldr	r1, [pc, #500]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a1b0:	4313      	orrs	r3, r2
 800a1b2:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a1b6:	687b      	ldr	r3, [r7, #4]
 800a1b8:	681b      	ldr	r3, [r3, #0]
 800a1ba:	f003 0310 	and.w	r3, r3, #16
 800a1be:	2b00      	cmp	r3, #0
 800a1c0:	d00a      	beq.n	800a1d8 <HAL_RCCEx_PeriphCLKConfig+0x320>
 800a1c2:	4b78      	ldr	r3, [pc, #480]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a1c4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a1c8:	f423 7240 	bic.w	r2, r3, #768	; 0x300
 800a1cc:	687b      	ldr	r3, [r7, #4]
 800a1ce:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800a1d0:	4974      	ldr	r1, [pc, #464]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a1d2:	4313      	orrs	r3, r2
 800a1d4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a1d8:	687b      	ldr	r3, [r7, #4]
 800a1da:	681b      	ldr	r3, [r3, #0]
 800a1dc:	f003 0320 	and.w	r3, r3, #32
 800a1e0:	2b00      	cmp	r3, #0
 800a1e2:	d00a      	beq.n	800a1fa <HAL_RCCEx_PeriphCLKConfig+0x342>
 800a1e4:	4b6f      	ldr	r3, [pc, #444]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a1e6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a1ea:	f423 6240 	bic.w	r2, r3, #3072	; 0xc00
 800a1ee:	687b      	ldr	r3, [r7, #4]
 800a1f0:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800a1f2:	496c      	ldr	r1, [pc, #432]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a1f4:	4313      	orrs	r3, r2
 800a1f6:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a1fa:	687b      	ldr	r3, [r7, #4]
 800a1fc:	681b      	ldr	r3, [r3, #0]
 800a1fe:	f403 7300 	and.w	r3, r3, #512	; 0x200
 800a202:	2b00      	cmp	r3, #0
 800a204:	d00a      	beq.n	800a21c <HAL_RCCEx_PeriphCLKConfig+0x364>
 800a206:	4b67      	ldr	r3, [pc, #412]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a208:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a20c:	f423 2240 	bic.w	r2, r3, #786432	; 0xc0000
 800a210:	687b      	ldr	r3, [r7, #4]
 800a212:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800a214:	4963      	ldr	r1, [pc, #396]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a216:	4313      	orrs	r3, r2
 800a218:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a21c:	687b      	ldr	r3, [r7, #4]
 800a21e:	681b      	ldr	r3, [r3, #0]
 800a220:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800a224:	2b00      	cmp	r3, #0
 800a226:	d00a      	beq.n	800a23e <HAL_RCCEx_PeriphCLKConfig+0x386>
 800a228:	4b5e      	ldr	r3, [pc, #376]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a22a:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a22e:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 800a232:	687b      	ldr	r3, [r7, #4]
 800a234:	6e9b      	ldr	r3, [r3, #104]	; 0x68
 800a236:	495b      	ldr	r1, [pc, #364]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a238:	4313      	orrs	r3, r2
 800a23a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a23e:	687b      	ldr	r3, [r7, #4]
 800a240:	681b      	ldr	r3, [r3, #0]
 800a242:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800a246:	2b00      	cmp	r3, #0
 800a248:	d00a      	beq.n	800a260 <HAL_RCCEx_PeriphCLKConfig+0x3a8>
 800a24a:	4b56      	ldr	r3, [pc, #344]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a24c:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a250:	f423 5240 	bic.w	r2, r3, #12288	; 0x3000
 800a254:	687b      	ldr	r3, [r7, #4]
 800a256:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800a258:	4952      	ldr	r1, [pc, #328]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a25a:	4313      	orrs	r3, r2
 800a25c:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a260:	687b      	ldr	r3, [r7, #4]
 800a262:	681b      	ldr	r3, [r3, #0]
 800a264:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800a268:	2b00      	cmp	r3, #0
 800a26a:	d00a      	beq.n	800a282 <HAL_RCCEx_PeriphCLKConfig+0x3ca>
 800a26c:	4b4d      	ldr	r3, [pc, #308]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a26e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a272:	f423 4240 	bic.w	r2, r3, #49152	; 0xc000
 800a276:	687b      	ldr	r3, [r7, #4]
 800a278:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 800a27a:	494a      	ldr	r1, [pc, #296]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a27c:	4313      	orrs	r3, r2
 800a27e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a282:	687b      	ldr	r3, [r7, #4]
 800a284:	681b      	ldr	r3, [r3, #0]
 800a286:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800a28a:	2b00      	cmp	r3, #0
 800a28c:	d00a      	beq.n	800a2a4 <HAL_RCCEx_PeriphCLKConfig+0x3ec>
 800a28e:	4b45      	ldr	r3, [pc, #276]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a290:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a294:	f423 3240 	bic.w	r2, r3, #196608	; 0x30000
 800a298:	687b      	ldr	r3, [r7, #4]
 800a29a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 800a29c:	4941      	ldr	r1, [pc, #260]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a29e:	4313      	orrs	r3, r2
 800a2a0:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a2a4:	687b      	ldr	r3, [r7, #4]
 800a2a6:	681b      	ldr	r3, [r3, #0]
 800a2a8:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 800a2ac:	2b00      	cmp	r3, #0
 800a2ae:	d00a      	beq.n	800a2c6 <HAL_RCCEx_PeriphCLKConfig+0x40e>
 800a2b0:	4b3c      	ldr	r3, [pc, #240]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a2b2:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800a2b6:	f023 0203 	bic.w	r2, r3, #3
 800a2ba:	687b      	ldr	r3, [r7, #4]
 800a2bc:	6e1b      	ldr	r3, [r3, #96]	; 0x60
 800a2be:	4939      	ldr	r1, [pc, #228]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a2c0:	4313      	orrs	r3, r2
 800a2c2:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 800a2c6:	687b      	ldr	r3, [r7, #4]
 800a2c8:	681b      	ldr	r3, [r3, #0]
 800a2ca:	f403 5300 	and.w	r3, r3, #8192	; 0x2000
 800a2ce:	2b00      	cmp	r3, #0
 800a2d0:	d028      	beq.n	800a324 <HAL_RCCEx_PeriphCLKConfig+0x46c>
 800a2d2:	4b34      	ldr	r3, [pc, #208]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a2d4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a2d8:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 800a2dc:	687b      	ldr	r3, [r7, #4]
 800a2de:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a2e0:	4930      	ldr	r1, [pc, #192]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a2e2:	4313      	orrs	r3, r2
 800a2e4:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a2e8:	687b      	ldr	r3, [r7, #4]
 800a2ea:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a2ec:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800a2f0:	d106      	bne.n	800a300 <HAL_RCCEx_PeriphCLKConfig+0x448>
 800a2f2:	4b2c      	ldr	r3, [pc, #176]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a2f4:	68db      	ldr	r3, [r3, #12]
 800a2f6:	4a2b      	ldr	r2, [pc, #172]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a2f8:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800a2fc:	60d3      	str	r3, [r2, #12]
 800a2fe:	e011      	b.n	800a324 <HAL_RCCEx_PeriphCLKConfig+0x46c>
 800a300:	687b      	ldr	r3, [r7, #4]
 800a302:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 800a304:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a308:	d10c      	bne.n	800a324 <HAL_RCCEx_PeriphCLKConfig+0x46c>
 800a30a:	687b      	ldr	r3, [r7, #4]
 800a30c:	3304      	adds	r3, #4
 800a30e:	2101      	movs	r1, #1
 800a310:	4618      	mov	r0, r3
 800a312:	f000 f909 	bl	800a528 <RCCEx_PLLSAI1_Config>
 800a316:	4603      	mov	r3, r0
 800a318:	74fb      	strb	r3, [r7, #19]
 800a31a:	7cfb      	ldrb	r3, [r7, #19]
 800a31c:	2b00      	cmp	r3, #0
 800a31e:	d001      	beq.n	800a324 <HAL_RCCEx_PeriphCLKConfig+0x46c>
 800a320:	7cfb      	ldrb	r3, [r7, #19]
 800a322:	74bb      	strb	r3, [r7, #18]
 800a324:	687b      	ldr	r3, [r7, #4]
 800a326:	681b      	ldr	r3, [r3, #0]
 800a328:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 800a32c:	2b00      	cmp	r3, #0
 800a32e:	d04d      	beq.n	800a3cc <HAL_RCCEx_PeriphCLKConfig+0x514>
 800a330:	687b      	ldr	r3, [r7, #4]
 800a332:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a334:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800a338:	d108      	bne.n	800a34c <HAL_RCCEx_PeriphCLKConfig+0x494>
 800a33a:	4b1a      	ldr	r3, [pc, #104]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a33c:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800a340:	4a18      	ldr	r2, [pc, #96]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a342:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 800a346:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
 800a34a:	e012      	b.n	800a372 <HAL_RCCEx_PeriphCLKConfig+0x4ba>
 800a34c:	4b15      	ldr	r3, [pc, #84]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a34e:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800a352:	4a14      	ldr	r2, [pc, #80]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a354:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800a358:	f8c2 309c 	str.w	r3, [r2, #156]	; 0x9c
 800a35c:	4b11      	ldr	r3, [pc, #68]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a35e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a362:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 800a366:	687b      	ldr	r3, [r7, #4]
 800a368:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a36a:	490e      	ldr	r1, [pc, #56]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a36c:	4313      	orrs	r3, r2
 800a36e:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a372:	687b      	ldr	r3, [r7, #4]
 800a374:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a376:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800a37a:	d106      	bne.n	800a38a <HAL_RCCEx_PeriphCLKConfig+0x4d2>
 800a37c:	4b09      	ldr	r3, [pc, #36]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a37e:	68db      	ldr	r3, [r3, #12]
 800a380:	4a08      	ldr	r2, [pc, #32]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a382:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800a386:	60d3      	str	r3, [r2, #12]
 800a388:	e020      	b.n	800a3cc <HAL_RCCEx_PeriphCLKConfig+0x514>
 800a38a:	687b      	ldr	r3, [r7, #4]
 800a38c:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a38e:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 800a392:	d109      	bne.n	800a3a8 <HAL_RCCEx_PeriphCLKConfig+0x4f0>
 800a394:	4b03      	ldr	r3, [pc, #12]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a396:	68db      	ldr	r3, [r3, #12]
 800a398:	4a02      	ldr	r2, [pc, #8]	; (800a3a4 <HAL_RCCEx_PeriphCLKConfig+0x4ec>)
 800a39a:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 800a39e:	60d3      	str	r3, [r2, #12]
 800a3a0:	e014      	b.n	800a3cc <HAL_RCCEx_PeriphCLKConfig+0x514>
 800a3a2:	bf00      	nop
 800a3a4:	40021000 	.word	0x40021000
 800a3a8:	687b      	ldr	r3, [r7, #4]
 800a3aa:	6f9b      	ldr	r3, [r3, #120]	; 0x78
 800a3ac:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a3b0:	d10c      	bne.n	800a3cc <HAL_RCCEx_PeriphCLKConfig+0x514>
 800a3b2:	687b      	ldr	r3, [r7, #4]
 800a3b4:	3304      	adds	r3, #4
 800a3b6:	2101      	movs	r1, #1
 800a3b8:	4618      	mov	r0, r3
 800a3ba:	f000 f8b5 	bl	800a528 <RCCEx_PLLSAI1_Config>
 800a3be:	4603      	mov	r3, r0
 800a3c0:	74fb      	strb	r3, [r7, #19]
 800a3c2:	7cfb      	ldrb	r3, [r7, #19]
 800a3c4:	2b00      	cmp	r3, #0
 800a3c6:	d001      	beq.n	800a3cc <HAL_RCCEx_PeriphCLKConfig+0x514>
 800a3c8:	7cfb      	ldrb	r3, [r7, #19]
 800a3ca:	74bb      	strb	r3, [r7, #18]
 800a3cc:	687b      	ldr	r3, [r7, #4]
 800a3ce:	681b      	ldr	r3, [r3, #0]
 800a3d0:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800a3d4:	2b00      	cmp	r3, #0
 800a3d6:	d028      	beq.n	800a42a <HAL_RCCEx_PeriphCLKConfig+0x572>
 800a3d8:	4b4a      	ldr	r3, [pc, #296]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a3da:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a3de:	f023 6240 	bic.w	r2, r3, #201326592	; 0xc000000
 800a3e2:	687b      	ldr	r3, [r7, #4]
 800a3e4:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a3e6:	4947      	ldr	r1, [pc, #284]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a3e8:	4313      	orrs	r3, r2
 800a3ea:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a3ee:	687b      	ldr	r3, [r7, #4]
 800a3f0:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a3f2:	f1b3 6f00 	cmp.w	r3, #134217728	; 0x8000000
 800a3f6:	d106      	bne.n	800a406 <HAL_RCCEx_PeriphCLKConfig+0x54e>
 800a3f8:	4b42      	ldr	r3, [pc, #264]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a3fa:	68db      	ldr	r3, [r3, #12]
 800a3fc:	4a41      	ldr	r2, [pc, #260]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a3fe:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800a402:	60d3      	str	r3, [r2, #12]
 800a404:	e011      	b.n	800a42a <HAL_RCCEx_PeriphCLKConfig+0x572>
 800a406:	687b      	ldr	r3, [r7, #4]
 800a408:	6fdb      	ldr	r3, [r3, #124]	; 0x7c
 800a40a:	f1b3 6f80 	cmp.w	r3, #67108864	; 0x4000000
 800a40e:	d10c      	bne.n	800a42a <HAL_RCCEx_PeriphCLKConfig+0x572>
 800a410:	687b      	ldr	r3, [r7, #4]
 800a412:	3304      	adds	r3, #4
 800a414:	2101      	movs	r1, #1
 800a416:	4618      	mov	r0, r3
 800a418:	f000 f886 	bl	800a528 <RCCEx_PLLSAI1_Config>
 800a41c:	4603      	mov	r3, r0
 800a41e:	74fb      	strb	r3, [r7, #19]
 800a420:	7cfb      	ldrb	r3, [r7, #19]
 800a422:	2b00      	cmp	r3, #0
 800a424:	d001      	beq.n	800a42a <HAL_RCCEx_PeriphCLKConfig+0x572>
 800a426:	7cfb      	ldrb	r3, [r7, #19]
 800a428:	74bb      	strb	r3, [r7, #18]
 800a42a:	687b      	ldr	r3, [r7, #4]
 800a42c:	681b      	ldr	r3, [r3, #0]
 800a42e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 800a432:	2b00      	cmp	r3, #0
 800a434:	d01e      	beq.n	800a474 <HAL_RCCEx_PeriphCLKConfig+0x5bc>
 800a436:	4b33      	ldr	r3, [pc, #204]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a438:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a43c:	f023 5240 	bic.w	r2, r3, #805306368	; 0x30000000
 800a440:	687b      	ldr	r3, [r7, #4]
 800a442:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a446:	492f      	ldr	r1, [pc, #188]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a448:	4313      	orrs	r3, r2
 800a44a:	f8c1 3088 	str.w	r3, [r1, #136]	; 0x88
 800a44e:	687b      	ldr	r3, [r7, #4]
 800a450:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800a454:	f1b3 5f80 	cmp.w	r3, #268435456	; 0x10000000
 800a458:	d10c      	bne.n	800a474 <HAL_RCCEx_PeriphCLKConfig+0x5bc>
 800a45a:	687b      	ldr	r3, [r7, #4]
 800a45c:	3304      	adds	r3, #4
 800a45e:	2102      	movs	r1, #2
 800a460:	4618      	mov	r0, r3
 800a462:	f000 f861 	bl	800a528 <RCCEx_PLLSAI1_Config>
 800a466:	4603      	mov	r3, r0
 800a468:	74fb      	strb	r3, [r7, #19]
 800a46a:	7cfb      	ldrb	r3, [r7, #19]
 800a46c:	2b00      	cmp	r3, #0
 800a46e:	d001      	beq.n	800a474 <HAL_RCCEx_PeriphCLKConfig+0x5bc>
 800a470:	7cfb      	ldrb	r3, [r7, #19]
 800a472:	74bb      	strb	r3, [r7, #18]
 800a474:	687b      	ldr	r3, [r7, #4]
 800a476:	681b      	ldr	r3, [r3, #0]
 800a478:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 800a47c:	2b00      	cmp	r3, #0
 800a47e:	d00b      	beq.n	800a498 <HAL_RCCEx_PeriphCLKConfig+0x5e0>
 800a480:	4b20      	ldr	r3, [pc, #128]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a482:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800a486:	f023 0204 	bic.w	r2, r3, #4
 800a48a:	687b      	ldr	r3, [r7, #4]
 800a48c:	f8d3 3084 	ldr.w	r3, [r3, #132]	; 0x84
 800a490:	491c      	ldr	r1, [pc, #112]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a492:	4313      	orrs	r3, r2
 800a494:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 800a498:	687b      	ldr	r3, [r7, #4]
 800a49a:	681b      	ldr	r3, [r3, #0]
 800a49c:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 800a4a0:	2b00      	cmp	r3, #0
 800a4a2:	d00b      	beq.n	800a4bc <HAL_RCCEx_PeriphCLKConfig+0x604>
 800a4a4:	4b17      	ldr	r3, [pc, #92]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a4a6:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800a4aa:	f023 0218 	bic.w	r2, r3, #24
 800a4ae:	687b      	ldr	r3, [r7, #4]
 800a4b0:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800a4b4:	4913      	ldr	r1, [pc, #76]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a4b6:	4313      	orrs	r3, r2
 800a4b8:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 800a4bc:	687b      	ldr	r3, [r7, #4]
 800a4be:	681b      	ldr	r3, [r3, #0]
 800a4c0:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 800a4c4:	2b00      	cmp	r3, #0
 800a4c6:	d017      	beq.n	800a4f8 <HAL_RCCEx_PeriphCLKConfig+0x640>
 800a4c8:	4b0e      	ldr	r3, [pc, #56]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a4ca:	f8d3 309c 	ldr.w	r3, [r3, #156]	; 0x9c
 800a4ce:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 800a4d2:	687b      	ldr	r3, [r7, #4]
 800a4d4:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800a4d8:	490a      	ldr	r1, [pc, #40]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a4da:	4313      	orrs	r3, r2
 800a4dc:	f8c1 309c 	str.w	r3, [r1, #156]	; 0x9c
 800a4e0:	687b      	ldr	r3, [r7, #4]
 800a4e2:	f8d3 308c 	ldr.w	r3, [r3, #140]	; 0x8c
 800a4e6:	f5b3 1f00 	cmp.w	r3, #2097152	; 0x200000
 800a4ea:	d105      	bne.n	800a4f8 <HAL_RCCEx_PeriphCLKConfig+0x640>
 800a4ec:	4b05      	ldr	r3, [pc, #20]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a4ee:	68db      	ldr	r3, [r3, #12]
 800a4f0:	4a04      	ldr	r2, [pc, #16]	; (800a504 <HAL_RCCEx_PeriphCLKConfig+0x64c>)
 800a4f2:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 800a4f6:	60d3      	str	r3, [r2, #12]
 800a4f8:	7cbb      	ldrb	r3, [r7, #18]
 800a4fa:	4618      	mov	r0, r3
 800a4fc:	3718      	adds	r7, #24
 800a4fe:	46bd      	mov	sp, r7
 800a500:	bd80      	pop	{r7, pc}
 800a502:	bf00      	nop
 800a504:	40021000 	.word	0x40021000

0800a508 <HAL_RCCEx_EnableMSIPLLMode>:
 800a508:	b480      	push	{r7}
 800a50a:	af00      	add	r7, sp, #0
 800a50c:	4b05      	ldr	r3, [pc, #20]	; (800a524 <HAL_RCCEx_EnableMSIPLLMode+0x1c>)
 800a50e:	681b      	ldr	r3, [r3, #0]
 800a510:	4a04      	ldr	r2, [pc, #16]	; (800a524 <HAL_RCCEx_EnableMSIPLLMode+0x1c>)
 800a512:	f043 0304 	orr.w	r3, r3, #4
 800a516:	6013      	str	r3, [r2, #0]
 800a518:	bf00      	nop
 800a51a:	46bd      	mov	sp, r7
 800a51c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a520:	4770      	bx	lr
 800a522:	bf00      	nop
 800a524:	40021000 	.word	0x40021000

0800a528 <RCCEx_PLLSAI1_Config>:
 800a528:	b580      	push	{r7, lr}
 800a52a:	b084      	sub	sp, #16
 800a52c:	af00      	add	r7, sp, #0
 800a52e:	6078      	str	r0, [r7, #4]
 800a530:	6039      	str	r1, [r7, #0]
 800a532:	2300      	movs	r3, #0
 800a534:	73fb      	strb	r3, [r7, #15]
 800a536:	4b70      	ldr	r3, [pc, #448]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a538:	68db      	ldr	r3, [r3, #12]
 800a53a:	f003 0303 	and.w	r3, r3, #3
 800a53e:	2b00      	cmp	r3, #0
 800a540:	d00e      	beq.n	800a560 <RCCEx_PLLSAI1_Config+0x38>
 800a542:	4b6d      	ldr	r3, [pc, #436]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a544:	68db      	ldr	r3, [r3, #12]
 800a546:	f003 0203 	and.w	r2, r3, #3
 800a54a:	687b      	ldr	r3, [r7, #4]
 800a54c:	681b      	ldr	r3, [r3, #0]
 800a54e:	429a      	cmp	r2, r3
 800a550:	d103      	bne.n	800a55a <RCCEx_PLLSAI1_Config+0x32>
 800a552:	687b      	ldr	r3, [r7, #4]
 800a554:	681b      	ldr	r3, [r3, #0]
 800a556:	2b00      	cmp	r3, #0
 800a558:	d13f      	bne.n	800a5da <RCCEx_PLLSAI1_Config+0xb2>
 800a55a:	2301      	movs	r3, #1
 800a55c:	73fb      	strb	r3, [r7, #15]
 800a55e:	e03c      	b.n	800a5da <RCCEx_PLLSAI1_Config+0xb2>
 800a560:	687b      	ldr	r3, [r7, #4]
 800a562:	681b      	ldr	r3, [r3, #0]
 800a564:	2b02      	cmp	r3, #2
 800a566:	d00c      	beq.n	800a582 <RCCEx_PLLSAI1_Config+0x5a>
 800a568:	2b03      	cmp	r3, #3
 800a56a:	d013      	beq.n	800a594 <RCCEx_PLLSAI1_Config+0x6c>
 800a56c:	2b01      	cmp	r3, #1
 800a56e:	d120      	bne.n	800a5b2 <RCCEx_PLLSAI1_Config+0x8a>
 800a570:	4b61      	ldr	r3, [pc, #388]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a572:	681b      	ldr	r3, [r3, #0]
 800a574:	f003 0302 	and.w	r3, r3, #2
 800a578:	2b00      	cmp	r3, #0
 800a57a:	d11d      	bne.n	800a5b8 <RCCEx_PLLSAI1_Config+0x90>
 800a57c:	2301      	movs	r3, #1
 800a57e:	73fb      	strb	r3, [r7, #15]
 800a580:	e01a      	b.n	800a5b8 <RCCEx_PLLSAI1_Config+0x90>
 800a582:	4b5d      	ldr	r3, [pc, #372]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a584:	681b      	ldr	r3, [r3, #0]
 800a586:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800a58a:	2b00      	cmp	r3, #0
 800a58c:	d116      	bne.n	800a5bc <RCCEx_PLLSAI1_Config+0x94>
 800a58e:	2301      	movs	r3, #1
 800a590:	73fb      	strb	r3, [r7, #15]
 800a592:	e013      	b.n	800a5bc <RCCEx_PLLSAI1_Config+0x94>
 800a594:	4b58      	ldr	r3, [pc, #352]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a596:	681b      	ldr	r3, [r3, #0]
 800a598:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800a59c:	2b00      	cmp	r3, #0
 800a59e:	d10f      	bne.n	800a5c0 <RCCEx_PLLSAI1_Config+0x98>
 800a5a0:	4b55      	ldr	r3, [pc, #340]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a5a2:	681b      	ldr	r3, [r3, #0]
 800a5a4:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800a5a8:	2b00      	cmp	r3, #0
 800a5aa:	d109      	bne.n	800a5c0 <RCCEx_PLLSAI1_Config+0x98>
 800a5ac:	2301      	movs	r3, #1
 800a5ae:	73fb      	strb	r3, [r7, #15]
 800a5b0:	e006      	b.n	800a5c0 <RCCEx_PLLSAI1_Config+0x98>
 800a5b2:	2301      	movs	r3, #1
 800a5b4:	73fb      	strb	r3, [r7, #15]
 800a5b6:	e004      	b.n	800a5c2 <RCCEx_PLLSAI1_Config+0x9a>
 800a5b8:	bf00      	nop
 800a5ba:	e002      	b.n	800a5c2 <RCCEx_PLLSAI1_Config+0x9a>
 800a5bc:	bf00      	nop
 800a5be:	e000      	b.n	800a5c2 <RCCEx_PLLSAI1_Config+0x9a>
 800a5c0:	bf00      	nop
 800a5c2:	7bfb      	ldrb	r3, [r7, #15]
 800a5c4:	2b00      	cmp	r3, #0
 800a5c6:	d108      	bne.n	800a5da <RCCEx_PLLSAI1_Config+0xb2>
 800a5c8:	4b4b      	ldr	r3, [pc, #300]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a5ca:	68db      	ldr	r3, [r3, #12]
 800a5cc:	f023 0203 	bic.w	r2, r3, #3
 800a5d0:	687b      	ldr	r3, [r7, #4]
 800a5d2:	681b      	ldr	r3, [r3, #0]
 800a5d4:	4948      	ldr	r1, [pc, #288]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a5d6:	4313      	orrs	r3, r2
 800a5d8:	60cb      	str	r3, [r1, #12]
 800a5da:	7bfb      	ldrb	r3, [r7, #15]
 800a5dc:	2b00      	cmp	r3, #0
 800a5de:	f040 8086 	bne.w	800a6ee <RCCEx_PLLSAI1_Config+0x1c6>
 800a5e2:	4b45      	ldr	r3, [pc, #276]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a5e4:	681b      	ldr	r3, [r3, #0]
 800a5e6:	4a44      	ldr	r2, [pc, #272]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a5e8:	f023 6380 	bic.w	r3, r3, #67108864	; 0x4000000
 800a5ec:	6013      	str	r3, [r2, #0]
 800a5ee:	f7fd ff03 	bl	80083f8 <HAL_GetTick>
 800a5f2:	60b8      	str	r0, [r7, #8]
 800a5f4:	e009      	b.n	800a60a <RCCEx_PLLSAI1_Config+0xe2>
 800a5f6:	f7fd feff 	bl	80083f8 <HAL_GetTick>
 800a5fa:	4602      	mov	r2, r0
 800a5fc:	68bb      	ldr	r3, [r7, #8]
 800a5fe:	1ad3      	subs	r3, r2, r3
 800a600:	2b02      	cmp	r3, #2
 800a602:	d902      	bls.n	800a60a <RCCEx_PLLSAI1_Config+0xe2>
 800a604:	2303      	movs	r3, #3
 800a606:	73fb      	strb	r3, [r7, #15]
 800a608:	e005      	b.n	800a616 <RCCEx_PLLSAI1_Config+0xee>
 800a60a:	4b3b      	ldr	r3, [pc, #236]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a60c:	681b      	ldr	r3, [r3, #0]
 800a60e:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a612:	2b00      	cmp	r3, #0
 800a614:	d1ef      	bne.n	800a5f6 <RCCEx_PLLSAI1_Config+0xce>
 800a616:	7bfb      	ldrb	r3, [r7, #15]
 800a618:	2b00      	cmp	r3, #0
 800a61a:	d168      	bne.n	800a6ee <RCCEx_PLLSAI1_Config+0x1c6>
 800a61c:	683b      	ldr	r3, [r7, #0]
 800a61e:	2b00      	cmp	r3, #0
 800a620:	d113      	bne.n	800a64a <RCCEx_PLLSAI1_Config+0x122>
 800a622:	4b35      	ldr	r3, [pc, #212]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a624:	691a      	ldr	r2, [r3, #16]
 800a626:	4b35      	ldr	r3, [pc, #212]	; (800a6fc <RCCEx_PLLSAI1_Config+0x1d4>)
 800a628:	4013      	ands	r3, r2
 800a62a:	687a      	ldr	r2, [r7, #4]
 800a62c:	6892      	ldr	r2, [r2, #8]
 800a62e:	0211      	lsls	r1, r2, #8
 800a630:	687a      	ldr	r2, [r7, #4]
 800a632:	68d2      	ldr	r2, [r2, #12]
 800a634:	06d2      	lsls	r2, r2, #27
 800a636:	4311      	orrs	r1, r2
 800a638:	687a      	ldr	r2, [r7, #4]
 800a63a:	6852      	ldr	r2, [r2, #4]
 800a63c:	3a01      	subs	r2, #1
 800a63e:	0112      	lsls	r2, r2, #4
 800a640:	430a      	orrs	r2, r1
 800a642:	492d      	ldr	r1, [pc, #180]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a644:	4313      	orrs	r3, r2
 800a646:	610b      	str	r3, [r1, #16]
 800a648:	e02d      	b.n	800a6a6 <RCCEx_PLLSAI1_Config+0x17e>
 800a64a:	683b      	ldr	r3, [r7, #0]
 800a64c:	2b01      	cmp	r3, #1
 800a64e:	d115      	bne.n	800a67c <RCCEx_PLLSAI1_Config+0x154>
 800a650:	4b29      	ldr	r3, [pc, #164]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a652:	691a      	ldr	r2, [r3, #16]
 800a654:	4b2a      	ldr	r3, [pc, #168]	; (800a700 <RCCEx_PLLSAI1_Config+0x1d8>)
 800a656:	4013      	ands	r3, r2
 800a658:	687a      	ldr	r2, [r7, #4]
 800a65a:	6892      	ldr	r2, [r2, #8]
 800a65c:	0211      	lsls	r1, r2, #8
 800a65e:	687a      	ldr	r2, [r7, #4]
 800a660:	6912      	ldr	r2, [r2, #16]
 800a662:	0852      	lsrs	r2, r2, #1
 800a664:	3a01      	subs	r2, #1
 800a666:	0552      	lsls	r2, r2, #21
 800a668:	4311      	orrs	r1, r2
 800a66a:	687a      	ldr	r2, [r7, #4]
 800a66c:	6852      	ldr	r2, [r2, #4]
 800a66e:	3a01      	subs	r2, #1
 800a670:	0112      	lsls	r2, r2, #4
 800a672:	430a      	orrs	r2, r1
 800a674:	4920      	ldr	r1, [pc, #128]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a676:	4313      	orrs	r3, r2
 800a678:	610b      	str	r3, [r1, #16]
 800a67a:	e014      	b.n	800a6a6 <RCCEx_PLLSAI1_Config+0x17e>
 800a67c:	4b1e      	ldr	r3, [pc, #120]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a67e:	691a      	ldr	r2, [r3, #16]
 800a680:	4b20      	ldr	r3, [pc, #128]	; (800a704 <RCCEx_PLLSAI1_Config+0x1dc>)
 800a682:	4013      	ands	r3, r2
 800a684:	687a      	ldr	r2, [r7, #4]
 800a686:	6892      	ldr	r2, [r2, #8]
 800a688:	0211      	lsls	r1, r2, #8
 800a68a:	687a      	ldr	r2, [r7, #4]
 800a68c:	6952      	ldr	r2, [r2, #20]
 800a68e:	0852      	lsrs	r2, r2, #1
 800a690:	3a01      	subs	r2, #1
 800a692:	0652      	lsls	r2, r2, #25
 800a694:	4311      	orrs	r1, r2
 800a696:	687a      	ldr	r2, [r7, #4]
 800a698:	6852      	ldr	r2, [r2, #4]
 800a69a:	3a01      	subs	r2, #1
 800a69c:	0112      	lsls	r2, r2, #4
 800a69e:	430a      	orrs	r2, r1
 800a6a0:	4915      	ldr	r1, [pc, #84]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a6a2:	4313      	orrs	r3, r2
 800a6a4:	610b      	str	r3, [r1, #16]
 800a6a6:	4b14      	ldr	r3, [pc, #80]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a6a8:	681b      	ldr	r3, [r3, #0]
 800a6aa:	4a13      	ldr	r2, [pc, #76]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a6ac:	f043 6380 	orr.w	r3, r3, #67108864	; 0x4000000
 800a6b0:	6013      	str	r3, [r2, #0]
 800a6b2:	f7fd fea1 	bl	80083f8 <HAL_GetTick>
 800a6b6:	60b8      	str	r0, [r7, #8]
 800a6b8:	e009      	b.n	800a6ce <RCCEx_PLLSAI1_Config+0x1a6>
 800a6ba:	f7fd fe9d 	bl	80083f8 <HAL_GetTick>
 800a6be:	4602      	mov	r2, r0
 800a6c0:	68bb      	ldr	r3, [r7, #8]
 800a6c2:	1ad3      	subs	r3, r2, r3
 800a6c4:	2b02      	cmp	r3, #2
 800a6c6:	d902      	bls.n	800a6ce <RCCEx_PLLSAI1_Config+0x1a6>
 800a6c8:	2303      	movs	r3, #3
 800a6ca:	73fb      	strb	r3, [r7, #15]
 800a6cc:	e005      	b.n	800a6da <RCCEx_PLLSAI1_Config+0x1b2>
 800a6ce:	4b0a      	ldr	r3, [pc, #40]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a6d0:	681b      	ldr	r3, [r3, #0]
 800a6d2:	f003 6300 	and.w	r3, r3, #134217728	; 0x8000000
 800a6d6:	2b00      	cmp	r3, #0
 800a6d8:	d0ef      	beq.n	800a6ba <RCCEx_PLLSAI1_Config+0x192>
 800a6da:	7bfb      	ldrb	r3, [r7, #15]
 800a6dc:	2b00      	cmp	r3, #0
 800a6de:	d106      	bne.n	800a6ee <RCCEx_PLLSAI1_Config+0x1c6>
 800a6e0:	4b05      	ldr	r3, [pc, #20]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a6e2:	691a      	ldr	r2, [r3, #16]
 800a6e4:	687b      	ldr	r3, [r7, #4]
 800a6e6:	699b      	ldr	r3, [r3, #24]
 800a6e8:	4903      	ldr	r1, [pc, #12]	; (800a6f8 <RCCEx_PLLSAI1_Config+0x1d0>)
 800a6ea:	4313      	orrs	r3, r2
 800a6ec:	610b      	str	r3, [r1, #16]
 800a6ee:	7bfb      	ldrb	r3, [r7, #15]
 800a6f0:	4618      	mov	r0, r3
 800a6f2:	3710      	adds	r7, #16
 800a6f4:	46bd      	mov	sp, r7
 800a6f6:	bd80      	pop	{r7, pc}
 800a6f8:	40021000 	.word	0x40021000
 800a6fc:	07ff800f 	.word	0x07ff800f
 800a700:	ff9f800f 	.word	0xff9f800f
 800a704:	f9ff800f 	.word	0xf9ff800f

0800a708 <RCCEx_PLLSAI2_Config>:
 800a708:	b580      	push	{r7, lr}
 800a70a:	b084      	sub	sp, #16
 800a70c:	af00      	add	r7, sp, #0
 800a70e:	6078      	str	r0, [r7, #4]
 800a710:	6039      	str	r1, [r7, #0]
 800a712:	2300      	movs	r3, #0
 800a714:	73fb      	strb	r3, [r7, #15]
 800a716:	4b70      	ldr	r3, [pc, #448]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a718:	68db      	ldr	r3, [r3, #12]
 800a71a:	f003 0303 	and.w	r3, r3, #3
 800a71e:	2b00      	cmp	r3, #0
 800a720:	d00e      	beq.n	800a740 <RCCEx_PLLSAI2_Config+0x38>
 800a722:	4b6d      	ldr	r3, [pc, #436]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a724:	68db      	ldr	r3, [r3, #12]
 800a726:	f003 0203 	and.w	r2, r3, #3
 800a72a:	687b      	ldr	r3, [r7, #4]
 800a72c:	681b      	ldr	r3, [r3, #0]
 800a72e:	429a      	cmp	r2, r3
 800a730:	d103      	bne.n	800a73a <RCCEx_PLLSAI2_Config+0x32>
 800a732:	687b      	ldr	r3, [r7, #4]
 800a734:	681b      	ldr	r3, [r3, #0]
 800a736:	2b00      	cmp	r3, #0
 800a738:	d13f      	bne.n	800a7ba <RCCEx_PLLSAI2_Config+0xb2>
 800a73a:	2301      	movs	r3, #1
 800a73c:	73fb      	strb	r3, [r7, #15]
 800a73e:	e03c      	b.n	800a7ba <RCCEx_PLLSAI2_Config+0xb2>
 800a740:	687b      	ldr	r3, [r7, #4]
 800a742:	681b      	ldr	r3, [r3, #0]
 800a744:	2b02      	cmp	r3, #2
 800a746:	d00c      	beq.n	800a762 <RCCEx_PLLSAI2_Config+0x5a>
 800a748:	2b03      	cmp	r3, #3
 800a74a:	d013      	beq.n	800a774 <RCCEx_PLLSAI2_Config+0x6c>
 800a74c:	2b01      	cmp	r3, #1
 800a74e:	d120      	bne.n	800a792 <RCCEx_PLLSAI2_Config+0x8a>
 800a750:	4b61      	ldr	r3, [pc, #388]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a752:	681b      	ldr	r3, [r3, #0]
 800a754:	f003 0302 	and.w	r3, r3, #2
 800a758:	2b00      	cmp	r3, #0
 800a75a:	d11d      	bne.n	800a798 <RCCEx_PLLSAI2_Config+0x90>
 800a75c:	2301      	movs	r3, #1
 800a75e:	73fb      	strb	r3, [r7, #15]
 800a760:	e01a      	b.n	800a798 <RCCEx_PLLSAI2_Config+0x90>
 800a762:	4b5d      	ldr	r3, [pc, #372]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a764:	681b      	ldr	r3, [r3, #0]
 800a766:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 800a76a:	2b00      	cmp	r3, #0
 800a76c:	d116      	bne.n	800a79c <RCCEx_PLLSAI2_Config+0x94>
 800a76e:	2301      	movs	r3, #1
 800a770:	73fb      	strb	r3, [r7, #15]
 800a772:	e013      	b.n	800a79c <RCCEx_PLLSAI2_Config+0x94>
 800a774:	4b58      	ldr	r3, [pc, #352]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a776:	681b      	ldr	r3, [r3, #0]
 800a778:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 800a77c:	2b00      	cmp	r3, #0
 800a77e:	d10f      	bne.n	800a7a0 <RCCEx_PLLSAI2_Config+0x98>
 800a780:	4b55      	ldr	r3, [pc, #340]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a782:	681b      	ldr	r3, [r3, #0]
 800a784:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 800a788:	2b00      	cmp	r3, #0
 800a78a:	d109      	bne.n	800a7a0 <RCCEx_PLLSAI2_Config+0x98>
 800a78c:	2301      	movs	r3, #1
 800a78e:	73fb      	strb	r3, [r7, #15]
 800a790:	e006      	b.n	800a7a0 <RCCEx_PLLSAI2_Config+0x98>
 800a792:	2301      	movs	r3, #1
 800a794:	73fb      	strb	r3, [r7, #15]
 800a796:	e004      	b.n	800a7a2 <RCCEx_PLLSAI2_Config+0x9a>
 800a798:	bf00      	nop
 800a79a:	e002      	b.n	800a7a2 <RCCEx_PLLSAI2_Config+0x9a>
 800a79c:	bf00      	nop
 800a79e:	e000      	b.n	800a7a2 <RCCEx_PLLSAI2_Config+0x9a>
 800a7a0:	bf00      	nop
 800a7a2:	7bfb      	ldrb	r3, [r7, #15]
 800a7a4:	2b00      	cmp	r3, #0
 800a7a6:	d108      	bne.n	800a7ba <RCCEx_PLLSAI2_Config+0xb2>
 800a7a8:	4b4b      	ldr	r3, [pc, #300]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a7aa:	68db      	ldr	r3, [r3, #12]
 800a7ac:	f023 0203 	bic.w	r2, r3, #3
 800a7b0:	687b      	ldr	r3, [r7, #4]
 800a7b2:	681b      	ldr	r3, [r3, #0]
 800a7b4:	4948      	ldr	r1, [pc, #288]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a7b6:	4313      	orrs	r3, r2
 800a7b8:	60cb      	str	r3, [r1, #12]
 800a7ba:	7bfb      	ldrb	r3, [r7, #15]
 800a7bc:	2b00      	cmp	r3, #0
 800a7be:	f040 8086 	bne.w	800a8ce <RCCEx_PLLSAI2_Config+0x1c6>
 800a7c2:	4b45      	ldr	r3, [pc, #276]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a7c4:	681b      	ldr	r3, [r3, #0]
 800a7c6:	4a44      	ldr	r2, [pc, #272]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a7c8:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 800a7cc:	6013      	str	r3, [r2, #0]
 800a7ce:	f7fd fe13 	bl	80083f8 <HAL_GetTick>
 800a7d2:	60b8      	str	r0, [r7, #8]
 800a7d4:	e009      	b.n	800a7ea <RCCEx_PLLSAI2_Config+0xe2>
 800a7d6:	f7fd fe0f 	bl	80083f8 <HAL_GetTick>
 800a7da:	4602      	mov	r2, r0
 800a7dc:	68bb      	ldr	r3, [r7, #8]
 800a7de:	1ad3      	subs	r3, r2, r3
 800a7e0:	2b02      	cmp	r3, #2
 800a7e2:	d902      	bls.n	800a7ea <RCCEx_PLLSAI2_Config+0xe2>
 800a7e4:	2303      	movs	r3, #3
 800a7e6:	73fb      	strb	r3, [r7, #15]
 800a7e8:	e005      	b.n	800a7f6 <RCCEx_PLLSAI2_Config+0xee>
 800a7ea:	4b3b      	ldr	r3, [pc, #236]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a7ec:	681b      	ldr	r3, [r3, #0]
 800a7ee:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a7f2:	2b00      	cmp	r3, #0
 800a7f4:	d1ef      	bne.n	800a7d6 <RCCEx_PLLSAI2_Config+0xce>
 800a7f6:	7bfb      	ldrb	r3, [r7, #15]
 800a7f8:	2b00      	cmp	r3, #0
 800a7fa:	d168      	bne.n	800a8ce <RCCEx_PLLSAI2_Config+0x1c6>
 800a7fc:	683b      	ldr	r3, [r7, #0]
 800a7fe:	2b00      	cmp	r3, #0
 800a800:	d113      	bne.n	800a82a <RCCEx_PLLSAI2_Config+0x122>
 800a802:	4b35      	ldr	r3, [pc, #212]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a804:	695a      	ldr	r2, [r3, #20]
 800a806:	4b35      	ldr	r3, [pc, #212]	; (800a8dc <RCCEx_PLLSAI2_Config+0x1d4>)
 800a808:	4013      	ands	r3, r2
 800a80a:	687a      	ldr	r2, [r7, #4]
 800a80c:	6892      	ldr	r2, [r2, #8]
 800a80e:	0211      	lsls	r1, r2, #8
 800a810:	687a      	ldr	r2, [r7, #4]
 800a812:	68d2      	ldr	r2, [r2, #12]
 800a814:	06d2      	lsls	r2, r2, #27
 800a816:	4311      	orrs	r1, r2
 800a818:	687a      	ldr	r2, [r7, #4]
 800a81a:	6852      	ldr	r2, [r2, #4]
 800a81c:	3a01      	subs	r2, #1
 800a81e:	0112      	lsls	r2, r2, #4
 800a820:	430a      	orrs	r2, r1
 800a822:	492d      	ldr	r1, [pc, #180]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a824:	4313      	orrs	r3, r2
 800a826:	614b      	str	r3, [r1, #20]
 800a828:	e02d      	b.n	800a886 <RCCEx_PLLSAI2_Config+0x17e>
 800a82a:	683b      	ldr	r3, [r7, #0]
 800a82c:	2b01      	cmp	r3, #1
 800a82e:	d115      	bne.n	800a85c <RCCEx_PLLSAI2_Config+0x154>
 800a830:	4b29      	ldr	r3, [pc, #164]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a832:	695a      	ldr	r2, [r3, #20]
 800a834:	4b2a      	ldr	r3, [pc, #168]	; (800a8e0 <RCCEx_PLLSAI2_Config+0x1d8>)
 800a836:	4013      	ands	r3, r2
 800a838:	687a      	ldr	r2, [r7, #4]
 800a83a:	6892      	ldr	r2, [r2, #8]
 800a83c:	0211      	lsls	r1, r2, #8
 800a83e:	687a      	ldr	r2, [r7, #4]
 800a840:	6912      	ldr	r2, [r2, #16]
 800a842:	0852      	lsrs	r2, r2, #1
 800a844:	3a01      	subs	r2, #1
 800a846:	0552      	lsls	r2, r2, #21
 800a848:	4311      	orrs	r1, r2
 800a84a:	687a      	ldr	r2, [r7, #4]
 800a84c:	6852      	ldr	r2, [r2, #4]
 800a84e:	3a01      	subs	r2, #1
 800a850:	0112      	lsls	r2, r2, #4
 800a852:	430a      	orrs	r2, r1
 800a854:	4920      	ldr	r1, [pc, #128]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a856:	4313      	orrs	r3, r2
 800a858:	614b      	str	r3, [r1, #20]
 800a85a:	e014      	b.n	800a886 <RCCEx_PLLSAI2_Config+0x17e>
 800a85c:	4b1e      	ldr	r3, [pc, #120]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a85e:	695a      	ldr	r2, [r3, #20]
 800a860:	4b20      	ldr	r3, [pc, #128]	; (800a8e4 <RCCEx_PLLSAI2_Config+0x1dc>)
 800a862:	4013      	ands	r3, r2
 800a864:	687a      	ldr	r2, [r7, #4]
 800a866:	6892      	ldr	r2, [r2, #8]
 800a868:	0211      	lsls	r1, r2, #8
 800a86a:	687a      	ldr	r2, [r7, #4]
 800a86c:	6952      	ldr	r2, [r2, #20]
 800a86e:	0852      	lsrs	r2, r2, #1
 800a870:	3a01      	subs	r2, #1
 800a872:	0652      	lsls	r2, r2, #25
 800a874:	4311      	orrs	r1, r2
 800a876:	687a      	ldr	r2, [r7, #4]
 800a878:	6852      	ldr	r2, [r2, #4]
 800a87a:	3a01      	subs	r2, #1
 800a87c:	0112      	lsls	r2, r2, #4
 800a87e:	430a      	orrs	r2, r1
 800a880:	4915      	ldr	r1, [pc, #84]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a882:	4313      	orrs	r3, r2
 800a884:	614b      	str	r3, [r1, #20]
 800a886:	4b14      	ldr	r3, [pc, #80]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a888:	681b      	ldr	r3, [r3, #0]
 800a88a:	4a13      	ldr	r2, [pc, #76]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a88c:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 800a890:	6013      	str	r3, [r2, #0]
 800a892:	f7fd fdb1 	bl	80083f8 <HAL_GetTick>
 800a896:	60b8      	str	r0, [r7, #8]
 800a898:	e009      	b.n	800a8ae <RCCEx_PLLSAI2_Config+0x1a6>
 800a89a:	f7fd fdad 	bl	80083f8 <HAL_GetTick>
 800a89e:	4602      	mov	r2, r0
 800a8a0:	68bb      	ldr	r3, [r7, #8]
 800a8a2:	1ad3      	subs	r3, r2, r3
 800a8a4:	2b02      	cmp	r3, #2
 800a8a6:	d902      	bls.n	800a8ae <RCCEx_PLLSAI2_Config+0x1a6>
 800a8a8:	2303      	movs	r3, #3
 800a8aa:	73fb      	strb	r3, [r7, #15]
 800a8ac:	e005      	b.n	800a8ba <RCCEx_PLLSAI2_Config+0x1b2>
 800a8ae:	4b0a      	ldr	r3, [pc, #40]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a8b0:	681b      	ldr	r3, [r3, #0]
 800a8b2:	f003 5300 	and.w	r3, r3, #536870912	; 0x20000000
 800a8b6:	2b00      	cmp	r3, #0
 800a8b8:	d0ef      	beq.n	800a89a <RCCEx_PLLSAI2_Config+0x192>
 800a8ba:	7bfb      	ldrb	r3, [r7, #15]
 800a8bc:	2b00      	cmp	r3, #0
 800a8be:	d106      	bne.n	800a8ce <RCCEx_PLLSAI2_Config+0x1c6>
 800a8c0:	4b05      	ldr	r3, [pc, #20]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a8c2:	695a      	ldr	r2, [r3, #20]
 800a8c4:	687b      	ldr	r3, [r7, #4]
 800a8c6:	699b      	ldr	r3, [r3, #24]
 800a8c8:	4903      	ldr	r1, [pc, #12]	; (800a8d8 <RCCEx_PLLSAI2_Config+0x1d0>)
 800a8ca:	4313      	orrs	r3, r2
 800a8cc:	614b      	str	r3, [r1, #20]
 800a8ce:	7bfb      	ldrb	r3, [r7, #15]
 800a8d0:	4618      	mov	r0, r3
 800a8d2:	3710      	adds	r7, #16
 800a8d4:	46bd      	mov	sp, r7
 800a8d6:	bd80      	pop	{r7, pc}
 800a8d8:	40021000 	.word	0x40021000
 800a8dc:	07ff800f 	.word	0x07ff800f
 800a8e0:	ff9f800f 	.word	0xff9f800f
 800a8e4:	f9ff800f 	.word	0xf9ff800f

0800a8e8 <HAL_TIM_Base_Init>:
 800a8e8:	b580      	push	{r7, lr}
 800a8ea:	b082      	sub	sp, #8
 800a8ec:	af00      	add	r7, sp, #0
 800a8ee:	6078      	str	r0, [r7, #4]
 800a8f0:	687b      	ldr	r3, [r7, #4]
 800a8f2:	2b00      	cmp	r3, #0
 800a8f4:	d101      	bne.n	800a8fa <HAL_TIM_Base_Init+0x12>
 800a8f6:	2301      	movs	r3, #1
 800a8f8:	e01d      	b.n	800a936 <HAL_TIM_Base_Init+0x4e>
 800a8fa:	687b      	ldr	r3, [r7, #4]
 800a8fc:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a900:	b2db      	uxtb	r3, r3
 800a902:	2b00      	cmp	r3, #0
 800a904:	d106      	bne.n	800a914 <HAL_TIM_Base_Init+0x2c>
 800a906:	687b      	ldr	r3, [r7, #4]
 800a908:	2200      	movs	r2, #0
 800a90a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a90e:	6878      	ldr	r0, [r7, #4]
 800a910:	f7fd f85a 	bl	80079c8 <HAL_TIM_Base_MspInit>
 800a914:	687b      	ldr	r3, [r7, #4]
 800a916:	2202      	movs	r2, #2
 800a918:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a91c:	687b      	ldr	r3, [r7, #4]
 800a91e:	681a      	ldr	r2, [r3, #0]
 800a920:	687b      	ldr	r3, [r7, #4]
 800a922:	3304      	adds	r3, #4
 800a924:	4619      	mov	r1, r3
 800a926:	4610      	mov	r0, r2
 800a928:	f000 fc4a 	bl	800b1c0 <TIM_Base_SetConfig>
 800a92c:	687b      	ldr	r3, [r7, #4]
 800a92e:	2201      	movs	r2, #1
 800a930:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a934:	2300      	movs	r3, #0
 800a936:	4618      	mov	r0, r3
 800a938:	3708      	adds	r7, #8
 800a93a:	46bd      	mov	sp, r7
 800a93c:	bd80      	pop	{r7, pc}
	...

0800a940 <HAL_TIM_Base_Start_IT>:
 800a940:	b480      	push	{r7}
 800a942:	b085      	sub	sp, #20
 800a944:	af00      	add	r7, sp, #0
 800a946:	6078      	str	r0, [r7, #4]
 800a948:	687b      	ldr	r3, [r7, #4]
 800a94a:	681b      	ldr	r3, [r3, #0]
 800a94c:	68da      	ldr	r2, [r3, #12]
 800a94e:	687b      	ldr	r3, [r7, #4]
 800a950:	681b      	ldr	r3, [r3, #0]
 800a952:	f042 0201 	orr.w	r2, r2, #1
 800a956:	60da      	str	r2, [r3, #12]
 800a958:	687b      	ldr	r3, [r7, #4]
 800a95a:	681b      	ldr	r3, [r3, #0]
 800a95c:	689a      	ldr	r2, [r3, #8]
 800a95e:	4b0c      	ldr	r3, [pc, #48]	; (800a990 <HAL_TIM_Base_Start_IT+0x50>)
 800a960:	4013      	ands	r3, r2
 800a962:	60fb      	str	r3, [r7, #12]
 800a964:	68fb      	ldr	r3, [r7, #12]
 800a966:	2b06      	cmp	r3, #6
 800a968:	d00b      	beq.n	800a982 <HAL_TIM_Base_Start_IT+0x42>
 800a96a:	68fb      	ldr	r3, [r7, #12]
 800a96c:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800a970:	d007      	beq.n	800a982 <HAL_TIM_Base_Start_IT+0x42>
 800a972:	687b      	ldr	r3, [r7, #4]
 800a974:	681b      	ldr	r3, [r3, #0]
 800a976:	681a      	ldr	r2, [r3, #0]
 800a978:	687b      	ldr	r3, [r7, #4]
 800a97a:	681b      	ldr	r3, [r3, #0]
 800a97c:	f042 0201 	orr.w	r2, r2, #1
 800a980:	601a      	str	r2, [r3, #0]
 800a982:	2300      	movs	r3, #0
 800a984:	4618      	mov	r0, r3
 800a986:	3714      	adds	r7, #20
 800a988:	46bd      	mov	sp, r7
 800a98a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a98e:	4770      	bx	lr
 800a990:	00010007 	.word	0x00010007

0800a994 <HAL_TIM_PWM_Init>:
 800a994:	b580      	push	{r7, lr}
 800a996:	b082      	sub	sp, #8
 800a998:	af00      	add	r7, sp, #0
 800a99a:	6078      	str	r0, [r7, #4]
 800a99c:	687b      	ldr	r3, [r7, #4]
 800a99e:	2b00      	cmp	r3, #0
 800a9a0:	d101      	bne.n	800a9a6 <HAL_TIM_PWM_Init+0x12>
 800a9a2:	2301      	movs	r3, #1
 800a9a4:	e01d      	b.n	800a9e2 <HAL_TIM_PWM_Init+0x4e>
 800a9a6:	687b      	ldr	r3, [r7, #4]
 800a9a8:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 800a9ac:	b2db      	uxtb	r3, r3
 800a9ae:	2b00      	cmp	r3, #0
 800a9b0:	d106      	bne.n	800a9c0 <HAL_TIM_PWM_Init+0x2c>
 800a9b2:	687b      	ldr	r3, [r7, #4]
 800a9b4:	2200      	movs	r2, #0
 800a9b6:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800a9ba:	6878      	ldr	r0, [r7, #4]
 800a9bc:	f000 f815 	bl	800a9ea <HAL_TIM_PWM_MspInit>
 800a9c0:	687b      	ldr	r3, [r7, #4]
 800a9c2:	2202      	movs	r2, #2
 800a9c4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a9c8:	687b      	ldr	r3, [r7, #4]
 800a9ca:	681a      	ldr	r2, [r3, #0]
 800a9cc:	687b      	ldr	r3, [r7, #4]
 800a9ce:	3304      	adds	r3, #4
 800a9d0:	4619      	mov	r1, r3
 800a9d2:	4610      	mov	r0, r2
 800a9d4:	f000 fbf4 	bl	800b1c0 <TIM_Base_SetConfig>
 800a9d8:	687b      	ldr	r3, [r7, #4]
 800a9da:	2201      	movs	r2, #1
 800a9dc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800a9e0:	2300      	movs	r3, #0
 800a9e2:	4618      	mov	r0, r3
 800a9e4:	3708      	adds	r7, #8
 800a9e6:	46bd      	mov	sp, r7
 800a9e8:	bd80      	pop	{r7, pc}

0800a9ea <HAL_TIM_PWM_MspInit>:
 800a9ea:	b480      	push	{r7}
 800a9ec:	b083      	sub	sp, #12
 800a9ee:	af00      	add	r7, sp, #0
 800a9f0:	6078      	str	r0, [r7, #4]
 800a9f2:	bf00      	nop
 800a9f4:	370c      	adds	r7, #12
 800a9f6:	46bd      	mov	sp, r7
 800a9f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800a9fc:	4770      	bx	lr
	...

0800aa00 <HAL_TIM_PWM_Start>:
 800aa00:	b580      	push	{r7, lr}
 800aa02:	b084      	sub	sp, #16
 800aa04:	af00      	add	r7, sp, #0
 800aa06:	6078      	str	r0, [r7, #4]
 800aa08:	6039      	str	r1, [r7, #0]
 800aa0a:	687b      	ldr	r3, [r7, #4]
 800aa0c:	681b      	ldr	r3, [r3, #0]
 800aa0e:	2201      	movs	r2, #1
 800aa10:	6839      	ldr	r1, [r7, #0]
 800aa12:	4618      	mov	r0, r3
 800aa14:	f000 ffde 	bl	800b9d4 <TIM_CCxChannelCmd>
 800aa18:	687b      	ldr	r3, [r7, #4]
 800aa1a:	681b      	ldr	r3, [r3, #0]
 800aa1c:	4a1e      	ldr	r2, [pc, #120]	; (800aa98 <HAL_TIM_PWM_Start+0x98>)
 800aa1e:	4293      	cmp	r3, r2
 800aa20:	d013      	beq.n	800aa4a <HAL_TIM_PWM_Start+0x4a>
 800aa22:	687b      	ldr	r3, [r7, #4]
 800aa24:	681b      	ldr	r3, [r3, #0]
 800aa26:	4a1d      	ldr	r2, [pc, #116]	; (800aa9c <HAL_TIM_PWM_Start+0x9c>)
 800aa28:	4293      	cmp	r3, r2
 800aa2a:	d00e      	beq.n	800aa4a <HAL_TIM_PWM_Start+0x4a>
 800aa2c:	687b      	ldr	r3, [r7, #4]
 800aa2e:	681b      	ldr	r3, [r3, #0]
 800aa30:	4a1b      	ldr	r2, [pc, #108]	; (800aaa0 <HAL_TIM_PWM_Start+0xa0>)
 800aa32:	4293      	cmp	r3, r2
 800aa34:	d009      	beq.n	800aa4a <HAL_TIM_PWM_Start+0x4a>
 800aa36:	687b      	ldr	r3, [r7, #4]
 800aa38:	681b      	ldr	r3, [r3, #0]
 800aa3a:	4a1a      	ldr	r2, [pc, #104]	; (800aaa4 <HAL_TIM_PWM_Start+0xa4>)
 800aa3c:	4293      	cmp	r3, r2
 800aa3e:	d004      	beq.n	800aa4a <HAL_TIM_PWM_Start+0x4a>
 800aa40:	687b      	ldr	r3, [r7, #4]
 800aa42:	681b      	ldr	r3, [r3, #0]
 800aa44:	4a18      	ldr	r2, [pc, #96]	; (800aaa8 <HAL_TIM_PWM_Start+0xa8>)
 800aa46:	4293      	cmp	r3, r2
 800aa48:	d101      	bne.n	800aa4e <HAL_TIM_PWM_Start+0x4e>
 800aa4a:	2301      	movs	r3, #1
 800aa4c:	e000      	b.n	800aa50 <HAL_TIM_PWM_Start+0x50>
 800aa4e:	2300      	movs	r3, #0
 800aa50:	2b00      	cmp	r3, #0
 800aa52:	d007      	beq.n	800aa64 <HAL_TIM_PWM_Start+0x64>
 800aa54:	687b      	ldr	r3, [r7, #4]
 800aa56:	681b      	ldr	r3, [r3, #0]
 800aa58:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800aa5a:	687b      	ldr	r3, [r7, #4]
 800aa5c:	681b      	ldr	r3, [r3, #0]
 800aa5e:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 800aa62:	645a      	str	r2, [r3, #68]	; 0x44
 800aa64:	687b      	ldr	r3, [r7, #4]
 800aa66:	681b      	ldr	r3, [r3, #0]
 800aa68:	689a      	ldr	r2, [r3, #8]
 800aa6a:	4b10      	ldr	r3, [pc, #64]	; (800aaac <HAL_TIM_PWM_Start+0xac>)
 800aa6c:	4013      	ands	r3, r2
 800aa6e:	60fb      	str	r3, [r7, #12]
 800aa70:	68fb      	ldr	r3, [r7, #12]
 800aa72:	2b06      	cmp	r3, #6
 800aa74:	d00b      	beq.n	800aa8e <HAL_TIM_PWM_Start+0x8e>
 800aa76:	68fb      	ldr	r3, [r7, #12]
 800aa78:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800aa7c:	d007      	beq.n	800aa8e <HAL_TIM_PWM_Start+0x8e>
 800aa7e:	687b      	ldr	r3, [r7, #4]
 800aa80:	681b      	ldr	r3, [r3, #0]
 800aa82:	681a      	ldr	r2, [r3, #0]
 800aa84:	687b      	ldr	r3, [r7, #4]
 800aa86:	681b      	ldr	r3, [r3, #0]
 800aa88:	f042 0201 	orr.w	r2, r2, #1
 800aa8c:	601a      	str	r2, [r3, #0]
 800aa8e:	2300      	movs	r3, #0
 800aa90:	4618      	mov	r0, r3
 800aa92:	3710      	adds	r7, #16
 800aa94:	46bd      	mov	sp, r7
 800aa96:	bd80      	pop	{r7, pc}
 800aa98:	40012c00 	.word	0x40012c00
 800aa9c:	40013400 	.word	0x40013400
 800aaa0:	40014000 	.word	0x40014000
 800aaa4:	40014400 	.word	0x40014400
 800aaa8:	40014800 	.word	0x40014800
 800aaac:	00010007 	.word	0x00010007

0800aab0 <HAL_TIM_PWM_Stop>:
 800aab0:	b580      	push	{r7, lr}
 800aab2:	b082      	sub	sp, #8
 800aab4:	af00      	add	r7, sp, #0
 800aab6:	6078      	str	r0, [r7, #4]
 800aab8:	6039      	str	r1, [r7, #0]
 800aaba:	687b      	ldr	r3, [r7, #4]
 800aabc:	681b      	ldr	r3, [r3, #0]
 800aabe:	2200      	movs	r2, #0
 800aac0:	6839      	ldr	r1, [r7, #0]
 800aac2:	4618      	mov	r0, r3
 800aac4:	f000 ff86 	bl	800b9d4 <TIM_CCxChannelCmd>
 800aac8:	687b      	ldr	r3, [r7, #4]
 800aaca:	681b      	ldr	r3, [r3, #0]
 800aacc:	4a2a      	ldr	r2, [pc, #168]	; (800ab78 <HAL_TIM_PWM_Stop+0xc8>)
 800aace:	4293      	cmp	r3, r2
 800aad0:	d013      	beq.n	800aafa <HAL_TIM_PWM_Stop+0x4a>
 800aad2:	687b      	ldr	r3, [r7, #4]
 800aad4:	681b      	ldr	r3, [r3, #0]
 800aad6:	4a29      	ldr	r2, [pc, #164]	; (800ab7c <HAL_TIM_PWM_Stop+0xcc>)
 800aad8:	4293      	cmp	r3, r2
 800aada:	d00e      	beq.n	800aafa <HAL_TIM_PWM_Stop+0x4a>
 800aadc:	687b      	ldr	r3, [r7, #4]
 800aade:	681b      	ldr	r3, [r3, #0]
 800aae0:	4a27      	ldr	r2, [pc, #156]	; (800ab80 <HAL_TIM_PWM_Stop+0xd0>)
 800aae2:	4293      	cmp	r3, r2
 800aae4:	d009      	beq.n	800aafa <HAL_TIM_PWM_Stop+0x4a>
 800aae6:	687b      	ldr	r3, [r7, #4]
 800aae8:	681b      	ldr	r3, [r3, #0]
 800aaea:	4a26      	ldr	r2, [pc, #152]	; (800ab84 <HAL_TIM_PWM_Stop+0xd4>)
 800aaec:	4293      	cmp	r3, r2
 800aaee:	d004      	beq.n	800aafa <HAL_TIM_PWM_Stop+0x4a>
 800aaf0:	687b      	ldr	r3, [r7, #4]
 800aaf2:	681b      	ldr	r3, [r3, #0]
 800aaf4:	4a24      	ldr	r2, [pc, #144]	; (800ab88 <HAL_TIM_PWM_Stop+0xd8>)
 800aaf6:	4293      	cmp	r3, r2
 800aaf8:	d101      	bne.n	800aafe <HAL_TIM_PWM_Stop+0x4e>
 800aafa:	2301      	movs	r3, #1
 800aafc:	e000      	b.n	800ab00 <HAL_TIM_PWM_Stop+0x50>
 800aafe:	2300      	movs	r3, #0
 800ab00:	2b00      	cmp	r3, #0
 800ab02:	d017      	beq.n	800ab34 <HAL_TIM_PWM_Stop+0x84>
 800ab04:	687b      	ldr	r3, [r7, #4]
 800ab06:	681b      	ldr	r3, [r3, #0]
 800ab08:	6a1a      	ldr	r2, [r3, #32]
 800ab0a:	f241 1311 	movw	r3, #4369	; 0x1111
 800ab0e:	4013      	ands	r3, r2
 800ab10:	2b00      	cmp	r3, #0
 800ab12:	d10f      	bne.n	800ab34 <HAL_TIM_PWM_Stop+0x84>
 800ab14:	687b      	ldr	r3, [r7, #4]
 800ab16:	681b      	ldr	r3, [r3, #0]
 800ab18:	6a1a      	ldr	r2, [r3, #32]
 800ab1a:	f240 4344 	movw	r3, #1092	; 0x444
 800ab1e:	4013      	ands	r3, r2
 800ab20:	2b00      	cmp	r3, #0
 800ab22:	d107      	bne.n	800ab34 <HAL_TIM_PWM_Stop+0x84>
 800ab24:	687b      	ldr	r3, [r7, #4]
 800ab26:	681b      	ldr	r3, [r3, #0]
 800ab28:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800ab2a:	687b      	ldr	r3, [r7, #4]
 800ab2c:	681b      	ldr	r3, [r3, #0]
 800ab2e:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 800ab32:	645a      	str	r2, [r3, #68]	; 0x44
 800ab34:	687b      	ldr	r3, [r7, #4]
 800ab36:	681b      	ldr	r3, [r3, #0]
 800ab38:	6a1a      	ldr	r2, [r3, #32]
 800ab3a:	f241 1311 	movw	r3, #4369	; 0x1111
 800ab3e:	4013      	ands	r3, r2
 800ab40:	2b00      	cmp	r3, #0
 800ab42:	d10f      	bne.n	800ab64 <HAL_TIM_PWM_Stop+0xb4>
 800ab44:	687b      	ldr	r3, [r7, #4]
 800ab46:	681b      	ldr	r3, [r3, #0]
 800ab48:	6a1a      	ldr	r2, [r3, #32]
 800ab4a:	f240 4344 	movw	r3, #1092	; 0x444
 800ab4e:	4013      	ands	r3, r2
 800ab50:	2b00      	cmp	r3, #0
 800ab52:	d107      	bne.n	800ab64 <HAL_TIM_PWM_Stop+0xb4>
 800ab54:	687b      	ldr	r3, [r7, #4]
 800ab56:	681b      	ldr	r3, [r3, #0]
 800ab58:	681a      	ldr	r2, [r3, #0]
 800ab5a:	687b      	ldr	r3, [r7, #4]
 800ab5c:	681b      	ldr	r3, [r3, #0]
 800ab5e:	f022 0201 	bic.w	r2, r2, #1
 800ab62:	601a      	str	r2, [r3, #0]
 800ab64:	687b      	ldr	r3, [r7, #4]
 800ab66:	2201      	movs	r2, #1
 800ab68:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ab6c:	2300      	movs	r3, #0
 800ab6e:	4618      	mov	r0, r3
 800ab70:	3708      	adds	r7, #8
 800ab72:	46bd      	mov	sp, r7
 800ab74:	bd80      	pop	{r7, pc}
 800ab76:	bf00      	nop
 800ab78:	40012c00 	.word	0x40012c00
 800ab7c:	40013400 	.word	0x40013400
 800ab80:	40014000 	.word	0x40014000
 800ab84:	40014400 	.word	0x40014400
 800ab88:	40014800 	.word	0x40014800

0800ab8c <HAL_TIM_IRQHandler>:
 800ab8c:	b580      	push	{r7, lr}
 800ab8e:	b082      	sub	sp, #8
 800ab90:	af00      	add	r7, sp, #0
 800ab92:	6078      	str	r0, [r7, #4]
 800ab94:	687b      	ldr	r3, [r7, #4]
 800ab96:	681b      	ldr	r3, [r3, #0]
 800ab98:	691b      	ldr	r3, [r3, #16]
 800ab9a:	f003 0302 	and.w	r3, r3, #2
 800ab9e:	2b02      	cmp	r3, #2
 800aba0:	d122      	bne.n	800abe8 <HAL_TIM_IRQHandler+0x5c>
 800aba2:	687b      	ldr	r3, [r7, #4]
 800aba4:	681b      	ldr	r3, [r3, #0]
 800aba6:	68db      	ldr	r3, [r3, #12]
 800aba8:	f003 0302 	and.w	r3, r3, #2
 800abac:	2b02      	cmp	r3, #2
 800abae:	d11b      	bne.n	800abe8 <HAL_TIM_IRQHandler+0x5c>
 800abb0:	687b      	ldr	r3, [r7, #4]
 800abb2:	681b      	ldr	r3, [r3, #0]
 800abb4:	f06f 0202 	mvn.w	r2, #2
 800abb8:	611a      	str	r2, [r3, #16]
 800abba:	687b      	ldr	r3, [r7, #4]
 800abbc:	2201      	movs	r2, #1
 800abbe:	771a      	strb	r2, [r3, #28]
 800abc0:	687b      	ldr	r3, [r7, #4]
 800abc2:	681b      	ldr	r3, [r3, #0]
 800abc4:	699b      	ldr	r3, [r3, #24]
 800abc6:	f003 0303 	and.w	r3, r3, #3
 800abca:	2b00      	cmp	r3, #0
 800abcc:	d003      	beq.n	800abd6 <HAL_TIM_IRQHandler+0x4a>
 800abce:	6878      	ldr	r0, [r7, #4]
 800abd0:	f000 fad7 	bl	800b182 <HAL_TIM_IC_CaptureCallback>
 800abd4:	e005      	b.n	800abe2 <HAL_TIM_IRQHandler+0x56>
 800abd6:	6878      	ldr	r0, [r7, #4]
 800abd8:	f000 fac9 	bl	800b16e <HAL_TIM_OC_DelayElapsedCallback>
 800abdc:	6878      	ldr	r0, [r7, #4]
 800abde:	f000 fada 	bl	800b196 <HAL_TIM_PWM_PulseFinishedCallback>
 800abe2:	687b      	ldr	r3, [r7, #4]
 800abe4:	2200      	movs	r2, #0
 800abe6:	771a      	strb	r2, [r3, #28]
 800abe8:	687b      	ldr	r3, [r7, #4]
 800abea:	681b      	ldr	r3, [r3, #0]
 800abec:	691b      	ldr	r3, [r3, #16]
 800abee:	f003 0304 	and.w	r3, r3, #4
 800abf2:	2b04      	cmp	r3, #4
 800abf4:	d122      	bne.n	800ac3c <HAL_TIM_IRQHandler+0xb0>
 800abf6:	687b      	ldr	r3, [r7, #4]
 800abf8:	681b      	ldr	r3, [r3, #0]
 800abfa:	68db      	ldr	r3, [r3, #12]
 800abfc:	f003 0304 	and.w	r3, r3, #4
 800ac00:	2b04      	cmp	r3, #4
 800ac02:	d11b      	bne.n	800ac3c <HAL_TIM_IRQHandler+0xb0>
 800ac04:	687b      	ldr	r3, [r7, #4]
 800ac06:	681b      	ldr	r3, [r3, #0]
 800ac08:	f06f 0204 	mvn.w	r2, #4
 800ac0c:	611a      	str	r2, [r3, #16]
 800ac0e:	687b      	ldr	r3, [r7, #4]
 800ac10:	2202      	movs	r2, #2
 800ac12:	771a      	strb	r2, [r3, #28]
 800ac14:	687b      	ldr	r3, [r7, #4]
 800ac16:	681b      	ldr	r3, [r3, #0]
 800ac18:	699b      	ldr	r3, [r3, #24]
 800ac1a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800ac1e:	2b00      	cmp	r3, #0
 800ac20:	d003      	beq.n	800ac2a <HAL_TIM_IRQHandler+0x9e>
 800ac22:	6878      	ldr	r0, [r7, #4]
 800ac24:	f000 faad 	bl	800b182 <HAL_TIM_IC_CaptureCallback>
 800ac28:	e005      	b.n	800ac36 <HAL_TIM_IRQHandler+0xaa>
 800ac2a:	6878      	ldr	r0, [r7, #4]
 800ac2c:	f000 fa9f 	bl	800b16e <HAL_TIM_OC_DelayElapsedCallback>
 800ac30:	6878      	ldr	r0, [r7, #4]
 800ac32:	f000 fab0 	bl	800b196 <HAL_TIM_PWM_PulseFinishedCallback>
 800ac36:	687b      	ldr	r3, [r7, #4]
 800ac38:	2200      	movs	r2, #0
 800ac3a:	771a      	strb	r2, [r3, #28]
 800ac3c:	687b      	ldr	r3, [r7, #4]
 800ac3e:	681b      	ldr	r3, [r3, #0]
 800ac40:	691b      	ldr	r3, [r3, #16]
 800ac42:	f003 0308 	and.w	r3, r3, #8
 800ac46:	2b08      	cmp	r3, #8
 800ac48:	d122      	bne.n	800ac90 <HAL_TIM_IRQHandler+0x104>
 800ac4a:	687b      	ldr	r3, [r7, #4]
 800ac4c:	681b      	ldr	r3, [r3, #0]
 800ac4e:	68db      	ldr	r3, [r3, #12]
 800ac50:	f003 0308 	and.w	r3, r3, #8
 800ac54:	2b08      	cmp	r3, #8
 800ac56:	d11b      	bne.n	800ac90 <HAL_TIM_IRQHandler+0x104>
 800ac58:	687b      	ldr	r3, [r7, #4]
 800ac5a:	681b      	ldr	r3, [r3, #0]
 800ac5c:	f06f 0208 	mvn.w	r2, #8
 800ac60:	611a      	str	r2, [r3, #16]
 800ac62:	687b      	ldr	r3, [r7, #4]
 800ac64:	2204      	movs	r2, #4
 800ac66:	771a      	strb	r2, [r3, #28]
 800ac68:	687b      	ldr	r3, [r7, #4]
 800ac6a:	681b      	ldr	r3, [r3, #0]
 800ac6c:	69db      	ldr	r3, [r3, #28]
 800ac6e:	f003 0303 	and.w	r3, r3, #3
 800ac72:	2b00      	cmp	r3, #0
 800ac74:	d003      	beq.n	800ac7e <HAL_TIM_IRQHandler+0xf2>
 800ac76:	6878      	ldr	r0, [r7, #4]
 800ac78:	f000 fa83 	bl	800b182 <HAL_TIM_IC_CaptureCallback>
 800ac7c:	e005      	b.n	800ac8a <HAL_TIM_IRQHandler+0xfe>
 800ac7e:	6878      	ldr	r0, [r7, #4]
 800ac80:	f000 fa75 	bl	800b16e <HAL_TIM_OC_DelayElapsedCallback>
 800ac84:	6878      	ldr	r0, [r7, #4]
 800ac86:	f000 fa86 	bl	800b196 <HAL_TIM_PWM_PulseFinishedCallback>
 800ac8a:	687b      	ldr	r3, [r7, #4]
 800ac8c:	2200      	movs	r2, #0
 800ac8e:	771a      	strb	r2, [r3, #28]
 800ac90:	687b      	ldr	r3, [r7, #4]
 800ac92:	681b      	ldr	r3, [r3, #0]
 800ac94:	691b      	ldr	r3, [r3, #16]
 800ac96:	f003 0310 	and.w	r3, r3, #16
 800ac9a:	2b10      	cmp	r3, #16
 800ac9c:	d122      	bne.n	800ace4 <HAL_TIM_IRQHandler+0x158>
 800ac9e:	687b      	ldr	r3, [r7, #4]
 800aca0:	681b      	ldr	r3, [r3, #0]
 800aca2:	68db      	ldr	r3, [r3, #12]
 800aca4:	f003 0310 	and.w	r3, r3, #16
 800aca8:	2b10      	cmp	r3, #16
 800acaa:	d11b      	bne.n	800ace4 <HAL_TIM_IRQHandler+0x158>
 800acac:	687b      	ldr	r3, [r7, #4]
 800acae:	681b      	ldr	r3, [r3, #0]
 800acb0:	f06f 0210 	mvn.w	r2, #16
 800acb4:	611a      	str	r2, [r3, #16]
 800acb6:	687b      	ldr	r3, [r7, #4]
 800acb8:	2208      	movs	r2, #8
 800acba:	771a      	strb	r2, [r3, #28]
 800acbc:	687b      	ldr	r3, [r7, #4]
 800acbe:	681b      	ldr	r3, [r3, #0]
 800acc0:	69db      	ldr	r3, [r3, #28]
 800acc2:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800acc6:	2b00      	cmp	r3, #0
 800acc8:	d003      	beq.n	800acd2 <HAL_TIM_IRQHandler+0x146>
 800acca:	6878      	ldr	r0, [r7, #4]
 800accc:	f000 fa59 	bl	800b182 <HAL_TIM_IC_CaptureCallback>
 800acd0:	e005      	b.n	800acde <HAL_TIM_IRQHandler+0x152>
 800acd2:	6878      	ldr	r0, [r7, #4]
 800acd4:	f000 fa4b 	bl	800b16e <HAL_TIM_OC_DelayElapsedCallback>
 800acd8:	6878      	ldr	r0, [r7, #4]
 800acda:	f000 fa5c 	bl	800b196 <HAL_TIM_PWM_PulseFinishedCallback>
 800acde:	687b      	ldr	r3, [r7, #4]
 800ace0:	2200      	movs	r2, #0
 800ace2:	771a      	strb	r2, [r3, #28]
 800ace4:	687b      	ldr	r3, [r7, #4]
 800ace6:	681b      	ldr	r3, [r3, #0]
 800ace8:	691b      	ldr	r3, [r3, #16]
 800acea:	f003 0301 	and.w	r3, r3, #1
 800acee:	2b01      	cmp	r3, #1
 800acf0:	d10e      	bne.n	800ad10 <HAL_TIM_IRQHandler+0x184>
 800acf2:	687b      	ldr	r3, [r7, #4]
 800acf4:	681b      	ldr	r3, [r3, #0]
 800acf6:	68db      	ldr	r3, [r3, #12]
 800acf8:	f003 0301 	and.w	r3, r3, #1
 800acfc:	2b01      	cmp	r3, #1
 800acfe:	d107      	bne.n	800ad10 <HAL_TIM_IRQHandler+0x184>
 800ad00:	687b      	ldr	r3, [r7, #4]
 800ad02:	681b      	ldr	r3, [r3, #0]
 800ad04:	f06f 0201 	mvn.w	r2, #1
 800ad08:	611a      	str	r2, [r3, #16]
 800ad0a:	6878      	ldr	r0, [r7, #4]
 800ad0c:	f7fc fcc8 	bl	80076a0 <HAL_TIM_PeriodElapsedCallback>
 800ad10:	687b      	ldr	r3, [r7, #4]
 800ad12:	681b      	ldr	r3, [r3, #0]
 800ad14:	691b      	ldr	r3, [r3, #16]
 800ad16:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ad1a:	2b80      	cmp	r3, #128	; 0x80
 800ad1c:	d10e      	bne.n	800ad3c <HAL_TIM_IRQHandler+0x1b0>
 800ad1e:	687b      	ldr	r3, [r7, #4]
 800ad20:	681b      	ldr	r3, [r3, #0]
 800ad22:	68db      	ldr	r3, [r3, #12]
 800ad24:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ad28:	2b80      	cmp	r3, #128	; 0x80
 800ad2a:	d107      	bne.n	800ad3c <HAL_TIM_IRQHandler+0x1b0>
 800ad2c:	687b      	ldr	r3, [r7, #4]
 800ad2e:	681b      	ldr	r3, [r3, #0]
 800ad30:	f06f 0280 	mvn.w	r2, #128	; 0x80
 800ad34:	611a      	str	r2, [r3, #16]
 800ad36:	6878      	ldr	r0, [r7, #4]
 800ad38:	f000 ff04 	bl	800bb44 <HAL_TIMEx_BreakCallback>
 800ad3c:	687b      	ldr	r3, [r7, #4]
 800ad3e:	681b      	ldr	r3, [r3, #0]
 800ad40:	691b      	ldr	r3, [r3, #16]
 800ad42:	f403 7380 	and.w	r3, r3, #256	; 0x100
 800ad46:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800ad4a:	d10e      	bne.n	800ad6a <HAL_TIM_IRQHandler+0x1de>
 800ad4c:	687b      	ldr	r3, [r7, #4]
 800ad4e:	681b      	ldr	r3, [r3, #0]
 800ad50:	68db      	ldr	r3, [r3, #12]
 800ad52:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ad56:	2b80      	cmp	r3, #128	; 0x80
 800ad58:	d107      	bne.n	800ad6a <HAL_TIM_IRQHandler+0x1de>
 800ad5a:	687b      	ldr	r3, [r7, #4]
 800ad5c:	681b      	ldr	r3, [r3, #0]
 800ad5e:	f46f 7280 	mvn.w	r2, #256	; 0x100
 800ad62:	611a      	str	r2, [r3, #16]
 800ad64:	6878      	ldr	r0, [r7, #4]
 800ad66:	f000 fef7 	bl	800bb58 <HAL_TIMEx_Break2Callback>
 800ad6a:	687b      	ldr	r3, [r7, #4]
 800ad6c:	681b      	ldr	r3, [r3, #0]
 800ad6e:	691b      	ldr	r3, [r3, #16]
 800ad70:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad74:	2b40      	cmp	r3, #64	; 0x40
 800ad76:	d10e      	bne.n	800ad96 <HAL_TIM_IRQHandler+0x20a>
 800ad78:	687b      	ldr	r3, [r7, #4]
 800ad7a:	681b      	ldr	r3, [r3, #0]
 800ad7c:	68db      	ldr	r3, [r3, #12]
 800ad7e:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800ad82:	2b40      	cmp	r3, #64	; 0x40
 800ad84:	d107      	bne.n	800ad96 <HAL_TIM_IRQHandler+0x20a>
 800ad86:	687b      	ldr	r3, [r7, #4]
 800ad88:	681b      	ldr	r3, [r3, #0]
 800ad8a:	f06f 0240 	mvn.w	r2, #64	; 0x40
 800ad8e:	611a      	str	r2, [r3, #16]
 800ad90:	6878      	ldr	r0, [r7, #4]
 800ad92:	f000 fa0a 	bl	800b1aa <HAL_TIM_TriggerCallback>
 800ad96:	687b      	ldr	r3, [r7, #4]
 800ad98:	681b      	ldr	r3, [r3, #0]
 800ad9a:	691b      	ldr	r3, [r3, #16]
 800ad9c:	f003 0320 	and.w	r3, r3, #32
 800ada0:	2b20      	cmp	r3, #32
 800ada2:	d10e      	bne.n	800adc2 <HAL_TIM_IRQHandler+0x236>
 800ada4:	687b      	ldr	r3, [r7, #4]
 800ada6:	681b      	ldr	r3, [r3, #0]
 800ada8:	68db      	ldr	r3, [r3, #12]
 800adaa:	f003 0320 	and.w	r3, r3, #32
 800adae:	2b20      	cmp	r3, #32
 800adb0:	d107      	bne.n	800adc2 <HAL_TIM_IRQHandler+0x236>
 800adb2:	687b      	ldr	r3, [r7, #4]
 800adb4:	681b      	ldr	r3, [r3, #0]
 800adb6:	f06f 0220 	mvn.w	r2, #32
 800adba:	611a      	str	r2, [r3, #16]
 800adbc:	6878      	ldr	r0, [r7, #4]
 800adbe:	f000 feb7 	bl	800bb30 <HAL_TIMEx_CommutCallback>
 800adc2:	bf00      	nop
 800adc4:	3708      	adds	r7, #8
 800adc6:	46bd      	mov	sp, r7
 800adc8:	bd80      	pop	{r7, pc}
	...

0800adcc <HAL_TIM_PWM_ConfigChannel>:
 800adcc:	b580      	push	{r7, lr}
 800adce:	b084      	sub	sp, #16
 800add0:	af00      	add	r7, sp, #0
 800add2:	60f8      	str	r0, [r7, #12]
 800add4:	60b9      	str	r1, [r7, #8]
 800add6:	607a      	str	r2, [r7, #4]
 800add8:	68fb      	ldr	r3, [r7, #12]
 800adda:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800adde:	2b01      	cmp	r3, #1
 800ade0:	d101      	bne.n	800ade6 <HAL_TIM_PWM_ConfigChannel+0x1a>
 800ade2:	2302      	movs	r3, #2
 800ade4:	e105      	b.n	800aff2 <HAL_TIM_PWM_ConfigChannel+0x226>
 800ade6:	68fb      	ldr	r3, [r7, #12]
 800ade8:	2201      	movs	r2, #1
 800adea:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800adee:	68fb      	ldr	r3, [r7, #12]
 800adf0:	2202      	movs	r2, #2
 800adf2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800adf6:	687b      	ldr	r3, [r7, #4]
 800adf8:	2b14      	cmp	r3, #20
 800adfa:	f200 80f0 	bhi.w	800afde <HAL_TIM_PWM_ConfigChannel+0x212>
 800adfe:	a201      	add	r2, pc, #4	; (adr r2, 800ae04 <HAL_TIM_PWM_ConfigChannel+0x38>)
 800ae00:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ae04:	0800ae59 	.word	0x0800ae59
 800ae08:	0800afdf 	.word	0x0800afdf
 800ae0c:	0800afdf 	.word	0x0800afdf
 800ae10:	0800afdf 	.word	0x0800afdf
 800ae14:	0800ae99 	.word	0x0800ae99
 800ae18:	0800afdf 	.word	0x0800afdf
 800ae1c:	0800afdf 	.word	0x0800afdf
 800ae20:	0800afdf 	.word	0x0800afdf
 800ae24:	0800aedb 	.word	0x0800aedb
 800ae28:	0800afdf 	.word	0x0800afdf
 800ae2c:	0800afdf 	.word	0x0800afdf
 800ae30:	0800afdf 	.word	0x0800afdf
 800ae34:	0800af1b 	.word	0x0800af1b
 800ae38:	0800afdf 	.word	0x0800afdf
 800ae3c:	0800afdf 	.word	0x0800afdf
 800ae40:	0800afdf 	.word	0x0800afdf
 800ae44:	0800af5d 	.word	0x0800af5d
 800ae48:	0800afdf 	.word	0x0800afdf
 800ae4c:	0800afdf 	.word	0x0800afdf
 800ae50:	0800afdf 	.word	0x0800afdf
 800ae54:	0800af9d 	.word	0x0800af9d
 800ae58:	68fb      	ldr	r3, [r7, #12]
 800ae5a:	681b      	ldr	r3, [r3, #0]
 800ae5c:	68b9      	ldr	r1, [r7, #8]
 800ae5e:	4618      	mov	r0, r3
 800ae60:	f000 fa48 	bl	800b2f4 <TIM_OC1_SetConfig>
 800ae64:	68fb      	ldr	r3, [r7, #12]
 800ae66:	681b      	ldr	r3, [r3, #0]
 800ae68:	699a      	ldr	r2, [r3, #24]
 800ae6a:	68fb      	ldr	r3, [r7, #12]
 800ae6c:	681b      	ldr	r3, [r3, #0]
 800ae6e:	f042 0208 	orr.w	r2, r2, #8
 800ae72:	619a      	str	r2, [r3, #24]
 800ae74:	68fb      	ldr	r3, [r7, #12]
 800ae76:	681b      	ldr	r3, [r3, #0]
 800ae78:	699a      	ldr	r2, [r3, #24]
 800ae7a:	68fb      	ldr	r3, [r7, #12]
 800ae7c:	681b      	ldr	r3, [r3, #0]
 800ae7e:	f022 0204 	bic.w	r2, r2, #4
 800ae82:	619a      	str	r2, [r3, #24]
 800ae84:	68fb      	ldr	r3, [r7, #12]
 800ae86:	681b      	ldr	r3, [r3, #0]
 800ae88:	6999      	ldr	r1, [r3, #24]
 800ae8a:	68bb      	ldr	r3, [r7, #8]
 800ae8c:	691a      	ldr	r2, [r3, #16]
 800ae8e:	68fb      	ldr	r3, [r7, #12]
 800ae90:	681b      	ldr	r3, [r3, #0]
 800ae92:	430a      	orrs	r2, r1
 800ae94:	619a      	str	r2, [r3, #24]
 800ae96:	e0a3      	b.n	800afe0 <HAL_TIM_PWM_ConfigChannel+0x214>
 800ae98:	68fb      	ldr	r3, [r7, #12]
 800ae9a:	681b      	ldr	r3, [r3, #0]
 800ae9c:	68b9      	ldr	r1, [r7, #8]
 800ae9e:	4618      	mov	r0, r3
 800aea0:	f000 fab8 	bl	800b414 <TIM_OC2_SetConfig>
 800aea4:	68fb      	ldr	r3, [r7, #12]
 800aea6:	681b      	ldr	r3, [r3, #0]
 800aea8:	699a      	ldr	r2, [r3, #24]
 800aeaa:	68fb      	ldr	r3, [r7, #12]
 800aeac:	681b      	ldr	r3, [r3, #0]
 800aeae:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800aeb2:	619a      	str	r2, [r3, #24]
 800aeb4:	68fb      	ldr	r3, [r7, #12]
 800aeb6:	681b      	ldr	r3, [r3, #0]
 800aeb8:	699a      	ldr	r2, [r3, #24]
 800aeba:	68fb      	ldr	r3, [r7, #12]
 800aebc:	681b      	ldr	r3, [r3, #0]
 800aebe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800aec2:	619a      	str	r2, [r3, #24]
 800aec4:	68fb      	ldr	r3, [r7, #12]
 800aec6:	681b      	ldr	r3, [r3, #0]
 800aec8:	6999      	ldr	r1, [r3, #24]
 800aeca:	68bb      	ldr	r3, [r7, #8]
 800aecc:	691b      	ldr	r3, [r3, #16]
 800aece:	021a      	lsls	r2, r3, #8
 800aed0:	68fb      	ldr	r3, [r7, #12]
 800aed2:	681b      	ldr	r3, [r3, #0]
 800aed4:	430a      	orrs	r2, r1
 800aed6:	619a      	str	r2, [r3, #24]
 800aed8:	e082      	b.n	800afe0 <HAL_TIM_PWM_ConfigChannel+0x214>
 800aeda:	68fb      	ldr	r3, [r7, #12]
 800aedc:	681b      	ldr	r3, [r3, #0]
 800aede:	68b9      	ldr	r1, [r7, #8]
 800aee0:	4618      	mov	r0, r3
 800aee2:	f000 fb21 	bl	800b528 <TIM_OC3_SetConfig>
 800aee6:	68fb      	ldr	r3, [r7, #12]
 800aee8:	681b      	ldr	r3, [r3, #0]
 800aeea:	69da      	ldr	r2, [r3, #28]
 800aeec:	68fb      	ldr	r3, [r7, #12]
 800aeee:	681b      	ldr	r3, [r3, #0]
 800aef0:	f042 0208 	orr.w	r2, r2, #8
 800aef4:	61da      	str	r2, [r3, #28]
 800aef6:	68fb      	ldr	r3, [r7, #12]
 800aef8:	681b      	ldr	r3, [r3, #0]
 800aefa:	69da      	ldr	r2, [r3, #28]
 800aefc:	68fb      	ldr	r3, [r7, #12]
 800aefe:	681b      	ldr	r3, [r3, #0]
 800af00:	f022 0204 	bic.w	r2, r2, #4
 800af04:	61da      	str	r2, [r3, #28]
 800af06:	68fb      	ldr	r3, [r7, #12]
 800af08:	681b      	ldr	r3, [r3, #0]
 800af0a:	69d9      	ldr	r1, [r3, #28]
 800af0c:	68bb      	ldr	r3, [r7, #8]
 800af0e:	691a      	ldr	r2, [r3, #16]
 800af10:	68fb      	ldr	r3, [r7, #12]
 800af12:	681b      	ldr	r3, [r3, #0]
 800af14:	430a      	orrs	r2, r1
 800af16:	61da      	str	r2, [r3, #28]
 800af18:	e062      	b.n	800afe0 <HAL_TIM_PWM_ConfigChannel+0x214>
 800af1a:	68fb      	ldr	r3, [r7, #12]
 800af1c:	681b      	ldr	r3, [r3, #0]
 800af1e:	68b9      	ldr	r1, [r7, #8]
 800af20:	4618      	mov	r0, r3
 800af22:	f000 fb89 	bl	800b638 <TIM_OC4_SetConfig>
 800af26:	68fb      	ldr	r3, [r7, #12]
 800af28:	681b      	ldr	r3, [r3, #0]
 800af2a:	69da      	ldr	r2, [r3, #28]
 800af2c:	68fb      	ldr	r3, [r7, #12]
 800af2e:	681b      	ldr	r3, [r3, #0]
 800af30:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800af34:	61da      	str	r2, [r3, #28]
 800af36:	68fb      	ldr	r3, [r7, #12]
 800af38:	681b      	ldr	r3, [r3, #0]
 800af3a:	69da      	ldr	r2, [r3, #28]
 800af3c:	68fb      	ldr	r3, [r7, #12]
 800af3e:	681b      	ldr	r3, [r3, #0]
 800af40:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800af44:	61da      	str	r2, [r3, #28]
 800af46:	68fb      	ldr	r3, [r7, #12]
 800af48:	681b      	ldr	r3, [r3, #0]
 800af4a:	69d9      	ldr	r1, [r3, #28]
 800af4c:	68bb      	ldr	r3, [r7, #8]
 800af4e:	691b      	ldr	r3, [r3, #16]
 800af50:	021a      	lsls	r2, r3, #8
 800af52:	68fb      	ldr	r3, [r7, #12]
 800af54:	681b      	ldr	r3, [r3, #0]
 800af56:	430a      	orrs	r2, r1
 800af58:	61da      	str	r2, [r3, #28]
 800af5a:	e041      	b.n	800afe0 <HAL_TIM_PWM_ConfigChannel+0x214>
 800af5c:	68fb      	ldr	r3, [r7, #12]
 800af5e:	681b      	ldr	r3, [r3, #0]
 800af60:	68b9      	ldr	r1, [r7, #8]
 800af62:	4618      	mov	r0, r3
 800af64:	f000 fbd2 	bl	800b70c <TIM_OC5_SetConfig>
 800af68:	68fb      	ldr	r3, [r7, #12]
 800af6a:	681b      	ldr	r3, [r3, #0]
 800af6c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800af6e:	68fb      	ldr	r3, [r7, #12]
 800af70:	681b      	ldr	r3, [r3, #0]
 800af72:	f042 0208 	orr.w	r2, r2, #8
 800af76:	655a      	str	r2, [r3, #84]	; 0x54
 800af78:	68fb      	ldr	r3, [r7, #12]
 800af7a:	681b      	ldr	r3, [r3, #0]
 800af7c:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800af7e:	68fb      	ldr	r3, [r7, #12]
 800af80:	681b      	ldr	r3, [r3, #0]
 800af82:	f022 0204 	bic.w	r2, r2, #4
 800af86:	655a      	str	r2, [r3, #84]	; 0x54
 800af88:	68fb      	ldr	r3, [r7, #12]
 800af8a:	681b      	ldr	r3, [r3, #0]
 800af8c:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800af8e:	68bb      	ldr	r3, [r7, #8]
 800af90:	691a      	ldr	r2, [r3, #16]
 800af92:	68fb      	ldr	r3, [r7, #12]
 800af94:	681b      	ldr	r3, [r3, #0]
 800af96:	430a      	orrs	r2, r1
 800af98:	655a      	str	r2, [r3, #84]	; 0x54
 800af9a:	e021      	b.n	800afe0 <HAL_TIM_PWM_ConfigChannel+0x214>
 800af9c:	68fb      	ldr	r3, [r7, #12]
 800af9e:	681b      	ldr	r3, [r3, #0]
 800afa0:	68b9      	ldr	r1, [r7, #8]
 800afa2:	4618      	mov	r0, r3
 800afa4:	f000 fc16 	bl	800b7d4 <TIM_OC6_SetConfig>
 800afa8:	68fb      	ldr	r3, [r7, #12]
 800afaa:	681b      	ldr	r3, [r3, #0]
 800afac:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800afae:	68fb      	ldr	r3, [r7, #12]
 800afb0:	681b      	ldr	r3, [r3, #0]
 800afb2:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 800afb6:	655a      	str	r2, [r3, #84]	; 0x54
 800afb8:	68fb      	ldr	r3, [r7, #12]
 800afba:	681b      	ldr	r3, [r3, #0]
 800afbc:	6d5a      	ldr	r2, [r3, #84]	; 0x54
 800afbe:	68fb      	ldr	r3, [r7, #12]
 800afc0:	681b      	ldr	r3, [r3, #0]
 800afc2:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 800afc6:	655a      	str	r2, [r3, #84]	; 0x54
 800afc8:	68fb      	ldr	r3, [r7, #12]
 800afca:	681b      	ldr	r3, [r3, #0]
 800afcc:	6d59      	ldr	r1, [r3, #84]	; 0x54
 800afce:	68bb      	ldr	r3, [r7, #8]
 800afd0:	691b      	ldr	r3, [r3, #16]
 800afd2:	021a      	lsls	r2, r3, #8
 800afd4:	68fb      	ldr	r3, [r7, #12]
 800afd6:	681b      	ldr	r3, [r3, #0]
 800afd8:	430a      	orrs	r2, r1
 800afda:	655a      	str	r2, [r3, #84]	; 0x54
 800afdc:	e000      	b.n	800afe0 <HAL_TIM_PWM_ConfigChannel+0x214>
 800afde:	bf00      	nop
 800afe0:	68fb      	ldr	r3, [r7, #12]
 800afe2:	2201      	movs	r2, #1
 800afe4:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800afe8:	68fb      	ldr	r3, [r7, #12]
 800afea:	2200      	movs	r2, #0
 800afec:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800aff0:	2300      	movs	r3, #0
 800aff2:	4618      	mov	r0, r3
 800aff4:	3710      	adds	r7, #16
 800aff6:	46bd      	mov	sp, r7
 800aff8:	bd80      	pop	{r7, pc}
 800affa:	bf00      	nop

0800affc <HAL_TIM_ConfigClockSource>:
 800affc:	b580      	push	{r7, lr}
 800affe:	b084      	sub	sp, #16
 800b000:	af00      	add	r7, sp, #0
 800b002:	6078      	str	r0, [r7, #4]
 800b004:	6039      	str	r1, [r7, #0]
 800b006:	687b      	ldr	r3, [r7, #4]
 800b008:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800b00c:	2b01      	cmp	r3, #1
 800b00e:	d101      	bne.n	800b014 <HAL_TIM_ConfigClockSource+0x18>
 800b010:	2302      	movs	r3, #2
 800b012:	e0a8      	b.n	800b166 <HAL_TIM_ConfigClockSource+0x16a>
 800b014:	687b      	ldr	r3, [r7, #4]
 800b016:	2201      	movs	r2, #1
 800b018:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b01c:	687b      	ldr	r3, [r7, #4]
 800b01e:	2202      	movs	r2, #2
 800b020:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b024:	687b      	ldr	r3, [r7, #4]
 800b026:	681b      	ldr	r3, [r3, #0]
 800b028:	689b      	ldr	r3, [r3, #8]
 800b02a:	60fb      	str	r3, [r7, #12]
 800b02c:	68fb      	ldr	r3, [r7, #12]
 800b02e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b032:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 800b036:	60fb      	str	r3, [r7, #12]
 800b038:	68fb      	ldr	r3, [r7, #12]
 800b03a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b03e:	60fb      	str	r3, [r7, #12]
 800b040:	687b      	ldr	r3, [r7, #4]
 800b042:	681b      	ldr	r3, [r3, #0]
 800b044:	68fa      	ldr	r2, [r7, #12]
 800b046:	609a      	str	r2, [r3, #8]
 800b048:	683b      	ldr	r3, [r7, #0]
 800b04a:	681b      	ldr	r3, [r3, #0]
 800b04c:	2b40      	cmp	r3, #64	; 0x40
 800b04e:	d067      	beq.n	800b120 <HAL_TIM_ConfigClockSource+0x124>
 800b050:	2b40      	cmp	r3, #64	; 0x40
 800b052:	d80b      	bhi.n	800b06c <HAL_TIM_ConfigClockSource+0x70>
 800b054:	2b10      	cmp	r3, #16
 800b056:	d073      	beq.n	800b140 <HAL_TIM_ConfigClockSource+0x144>
 800b058:	2b10      	cmp	r3, #16
 800b05a:	d802      	bhi.n	800b062 <HAL_TIM_ConfigClockSource+0x66>
 800b05c:	2b00      	cmp	r3, #0
 800b05e:	d06f      	beq.n	800b140 <HAL_TIM_ConfigClockSource+0x144>
 800b060:	e078      	b.n	800b154 <HAL_TIM_ConfigClockSource+0x158>
 800b062:	2b20      	cmp	r3, #32
 800b064:	d06c      	beq.n	800b140 <HAL_TIM_ConfigClockSource+0x144>
 800b066:	2b30      	cmp	r3, #48	; 0x30
 800b068:	d06a      	beq.n	800b140 <HAL_TIM_ConfigClockSource+0x144>
 800b06a:	e073      	b.n	800b154 <HAL_TIM_ConfigClockSource+0x158>
 800b06c:	2b70      	cmp	r3, #112	; 0x70
 800b06e:	d00d      	beq.n	800b08c <HAL_TIM_ConfigClockSource+0x90>
 800b070:	2b70      	cmp	r3, #112	; 0x70
 800b072:	d804      	bhi.n	800b07e <HAL_TIM_ConfigClockSource+0x82>
 800b074:	2b50      	cmp	r3, #80	; 0x50
 800b076:	d033      	beq.n	800b0e0 <HAL_TIM_ConfigClockSource+0xe4>
 800b078:	2b60      	cmp	r3, #96	; 0x60
 800b07a:	d041      	beq.n	800b100 <HAL_TIM_ConfigClockSource+0x104>
 800b07c:	e06a      	b.n	800b154 <HAL_TIM_ConfigClockSource+0x158>
 800b07e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800b082:	d066      	beq.n	800b152 <HAL_TIM_ConfigClockSource+0x156>
 800b084:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 800b088:	d017      	beq.n	800b0ba <HAL_TIM_ConfigClockSource+0xbe>
 800b08a:	e063      	b.n	800b154 <HAL_TIM_ConfigClockSource+0x158>
 800b08c:	687b      	ldr	r3, [r7, #4]
 800b08e:	6818      	ldr	r0, [r3, #0]
 800b090:	683b      	ldr	r3, [r7, #0]
 800b092:	6899      	ldr	r1, [r3, #8]
 800b094:	683b      	ldr	r3, [r7, #0]
 800b096:	685a      	ldr	r2, [r3, #4]
 800b098:	683b      	ldr	r3, [r7, #0]
 800b09a:	68db      	ldr	r3, [r3, #12]
 800b09c:	f000 fc7a 	bl	800b994 <TIM_ETR_SetConfig>
 800b0a0:	687b      	ldr	r3, [r7, #4]
 800b0a2:	681b      	ldr	r3, [r3, #0]
 800b0a4:	689b      	ldr	r3, [r3, #8]
 800b0a6:	60fb      	str	r3, [r7, #12]
 800b0a8:	68fb      	ldr	r3, [r7, #12]
 800b0aa:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 800b0ae:	60fb      	str	r3, [r7, #12]
 800b0b0:	687b      	ldr	r3, [r7, #4]
 800b0b2:	681b      	ldr	r3, [r3, #0]
 800b0b4:	68fa      	ldr	r2, [r7, #12]
 800b0b6:	609a      	str	r2, [r3, #8]
 800b0b8:	e04c      	b.n	800b154 <HAL_TIM_ConfigClockSource+0x158>
 800b0ba:	687b      	ldr	r3, [r7, #4]
 800b0bc:	6818      	ldr	r0, [r3, #0]
 800b0be:	683b      	ldr	r3, [r7, #0]
 800b0c0:	6899      	ldr	r1, [r3, #8]
 800b0c2:	683b      	ldr	r3, [r7, #0]
 800b0c4:	685a      	ldr	r2, [r3, #4]
 800b0c6:	683b      	ldr	r3, [r7, #0]
 800b0c8:	68db      	ldr	r3, [r3, #12]
 800b0ca:	f000 fc63 	bl	800b994 <TIM_ETR_SetConfig>
 800b0ce:	687b      	ldr	r3, [r7, #4]
 800b0d0:	681b      	ldr	r3, [r3, #0]
 800b0d2:	689a      	ldr	r2, [r3, #8]
 800b0d4:	687b      	ldr	r3, [r7, #4]
 800b0d6:	681b      	ldr	r3, [r3, #0]
 800b0d8:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 800b0dc:	609a      	str	r2, [r3, #8]
 800b0de:	e039      	b.n	800b154 <HAL_TIM_ConfigClockSource+0x158>
 800b0e0:	687b      	ldr	r3, [r7, #4]
 800b0e2:	6818      	ldr	r0, [r3, #0]
 800b0e4:	683b      	ldr	r3, [r7, #0]
 800b0e6:	6859      	ldr	r1, [r3, #4]
 800b0e8:	683b      	ldr	r3, [r7, #0]
 800b0ea:	68db      	ldr	r3, [r3, #12]
 800b0ec:	461a      	mov	r2, r3
 800b0ee:	f000 fbd7 	bl	800b8a0 <TIM_TI1_ConfigInputStage>
 800b0f2:	687b      	ldr	r3, [r7, #4]
 800b0f4:	681b      	ldr	r3, [r3, #0]
 800b0f6:	2150      	movs	r1, #80	; 0x50
 800b0f8:	4618      	mov	r0, r3
 800b0fa:	f000 fc30 	bl	800b95e <TIM_ITRx_SetConfig>
 800b0fe:	e029      	b.n	800b154 <HAL_TIM_ConfigClockSource+0x158>
 800b100:	687b      	ldr	r3, [r7, #4]
 800b102:	6818      	ldr	r0, [r3, #0]
 800b104:	683b      	ldr	r3, [r7, #0]
 800b106:	6859      	ldr	r1, [r3, #4]
 800b108:	683b      	ldr	r3, [r7, #0]
 800b10a:	68db      	ldr	r3, [r3, #12]
 800b10c:	461a      	mov	r2, r3
 800b10e:	f000 fbf6 	bl	800b8fe <TIM_TI2_ConfigInputStage>
 800b112:	687b      	ldr	r3, [r7, #4]
 800b114:	681b      	ldr	r3, [r3, #0]
 800b116:	2160      	movs	r1, #96	; 0x60
 800b118:	4618      	mov	r0, r3
 800b11a:	f000 fc20 	bl	800b95e <TIM_ITRx_SetConfig>
 800b11e:	e019      	b.n	800b154 <HAL_TIM_ConfigClockSource+0x158>
 800b120:	687b      	ldr	r3, [r7, #4]
 800b122:	6818      	ldr	r0, [r3, #0]
 800b124:	683b      	ldr	r3, [r7, #0]
 800b126:	6859      	ldr	r1, [r3, #4]
 800b128:	683b      	ldr	r3, [r7, #0]
 800b12a:	68db      	ldr	r3, [r3, #12]
 800b12c:	461a      	mov	r2, r3
 800b12e:	f000 fbb7 	bl	800b8a0 <TIM_TI1_ConfigInputStage>
 800b132:	687b      	ldr	r3, [r7, #4]
 800b134:	681b      	ldr	r3, [r3, #0]
 800b136:	2140      	movs	r1, #64	; 0x40
 800b138:	4618      	mov	r0, r3
 800b13a:	f000 fc10 	bl	800b95e <TIM_ITRx_SetConfig>
 800b13e:	e009      	b.n	800b154 <HAL_TIM_ConfigClockSource+0x158>
 800b140:	687b      	ldr	r3, [r7, #4]
 800b142:	681a      	ldr	r2, [r3, #0]
 800b144:	683b      	ldr	r3, [r7, #0]
 800b146:	681b      	ldr	r3, [r3, #0]
 800b148:	4619      	mov	r1, r3
 800b14a:	4610      	mov	r0, r2
 800b14c:	f000 fc07 	bl	800b95e <TIM_ITRx_SetConfig>
 800b150:	e000      	b.n	800b154 <HAL_TIM_ConfigClockSource+0x158>
 800b152:	bf00      	nop
 800b154:	687b      	ldr	r3, [r7, #4]
 800b156:	2201      	movs	r2, #1
 800b158:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800b15c:	687b      	ldr	r3, [r7, #4]
 800b15e:	2200      	movs	r2, #0
 800b160:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800b164:	2300      	movs	r3, #0
 800b166:	4618      	mov	r0, r3
 800b168:	3710      	adds	r7, #16
 800b16a:	46bd      	mov	sp, r7
 800b16c:	bd80      	pop	{r7, pc}

0800b16e <HAL_TIM_OC_DelayElapsedCallback>:
 800b16e:	b480      	push	{r7}
 800b170:	b083      	sub	sp, #12
 800b172:	af00      	add	r7, sp, #0
 800b174:	6078      	str	r0, [r7, #4]
 800b176:	bf00      	nop
 800b178:	370c      	adds	r7, #12
 800b17a:	46bd      	mov	sp, r7
 800b17c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b180:	4770      	bx	lr

0800b182 <HAL_TIM_IC_CaptureCallback>:
 800b182:	b480      	push	{r7}
 800b184:	b083      	sub	sp, #12
 800b186:	af00      	add	r7, sp, #0
 800b188:	6078      	str	r0, [r7, #4]
 800b18a:	bf00      	nop
 800b18c:	370c      	adds	r7, #12
 800b18e:	46bd      	mov	sp, r7
 800b190:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b194:	4770      	bx	lr

0800b196 <HAL_TIM_PWM_PulseFinishedCallback>:
 800b196:	b480      	push	{r7}
 800b198:	b083      	sub	sp, #12
 800b19a:	af00      	add	r7, sp, #0
 800b19c:	6078      	str	r0, [r7, #4]
 800b19e:	bf00      	nop
 800b1a0:	370c      	adds	r7, #12
 800b1a2:	46bd      	mov	sp, r7
 800b1a4:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1a8:	4770      	bx	lr

0800b1aa <HAL_TIM_TriggerCallback>:
 800b1aa:	b480      	push	{r7}
 800b1ac:	b083      	sub	sp, #12
 800b1ae:	af00      	add	r7, sp, #0
 800b1b0:	6078      	str	r0, [r7, #4]
 800b1b2:	bf00      	nop
 800b1b4:	370c      	adds	r7, #12
 800b1b6:	46bd      	mov	sp, r7
 800b1b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b1bc:	4770      	bx	lr
	...

0800b1c0 <TIM_Base_SetConfig>:
 800b1c0:	b480      	push	{r7}
 800b1c2:	b085      	sub	sp, #20
 800b1c4:	af00      	add	r7, sp, #0
 800b1c6:	6078      	str	r0, [r7, #4]
 800b1c8:	6039      	str	r1, [r7, #0]
 800b1ca:	687b      	ldr	r3, [r7, #4]
 800b1cc:	681b      	ldr	r3, [r3, #0]
 800b1ce:	60fb      	str	r3, [r7, #12]
 800b1d0:	687b      	ldr	r3, [r7, #4]
 800b1d2:	4a40      	ldr	r2, [pc, #256]	; (800b2d4 <TIM_Base_SetConfig+0x114>)
 800b1d4:	4293      	cmp	r3, r2
 800b1d6:	d013      	beq.n	800b200 <TIM_Base_SetConfig+0x40>
 800b1d8:	687b      	ldr	r3, [r7, #4]
 800b1da:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b1de:	d00f      	beq.n	800b200 <TIM_Base_SetConfig+0x40>
 800b1e0:	687b      	ldr	r3, [r7, #4]
 800b1e2:	4a3d      	ldr	r2, [pc, #244]	; (800b2d8 <TIM_Base_SetConfig+0x118>)
 800b1e4:	4293      	cmp	r3, r2
 800b1e6:	d00b      	beq.n	800b200 <TIM_Base_SetConfig+0x40>
 800b1e8:	687b      	ldr	r3, [r7, #4]
 800b1ea:	4a3c      	ldr	r2, [pc, #240]	; (800b2dc <TIM_Base_SetConfig+0x11c>)
 800b1ec:	4293      	cmp	r3, r2
 800b1ee:	d007      	beq.n	800b200 <TIM_Base_SetConfig+0x40>
 800b1f0:	687b      	ldr	r3, [r7, #4]
 800b1f2:	4a3b      	ldr	r2, [pc, #236]	; (800b2e0 <TIM_Base_SetConfig+0x120>)
 800b1f4:	4293      	cmp	r3, r2
 800b1f6:	d003      	beq.n	800b200 <TIM_Base_SetConfig+0x40>
 800b1f8:	687b      	ldr	r3, [r7, #4]
 800b1fa:	4a3a      	ldr	r2, [pc, #232]	; (800b2e4 <TIM_Base_SetConfig+0x124>)
 800b1fc:	4293      	cmp	r3, r2
 800b1fe:	d108      	bne.n	800b212 <TIM_Base_SetConfig+0x52>
 800b200:	68fb      	ldr	r3, [r7, #12]
 800b202:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b206:	60fb      	str	r3, [r7, #12]
 800b208:	683b      	ldr	r3, [r7, #0]
 800b20a:	685b      	ldr	r3, [r3, #4]
 800b20c:	68fa      	ldr	r2, [r7, #12]
 800b20e:	4313      	orrs	r3, r2
 800b210:	60fb      	str	r3, [r7, #12]
 800b212:	687b      	ldr	r3, [r7, #4]
 800b214:	4a2f      	ldr	r2, [pc, #188]	; (800b2d4 <TIM_Base_SetConfig+0x114>)
 800b216:	4293      	cmp	r3, r2
 800b218:	d01f      	beq.n	800b25a <TIM_Base_SetConfig+0x9a>
 800b21a:	687b      	ldr	r3, [r7, #4]
 800b21c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800b220:	d01b      	beq.n	800b25a <TIM_Base_SetConfig+0x9a>
 800b222:	687b      	ldr	r3, [r7, #4]
 800b224:	4a2c      	ldr	r2, [pc, #176]	; (800b2d8 <TIM_Base_SetConfig+0x118>)
 800b226:	4293      	cmp	r3, r2
 800b228:	d017      	beq.n	800b25a <TIM_Base_SetConfig+0x9a>
 800b22a:	687b      	ldr	r3, [r7, #4]
 800b22c:	4a2b      	ldr	r2, [pc, #172]	; (800b2dc <TIM_Base_SetConfig+0x11c>)
 800b22e:	4293      	cmp	r3, r2
 800b230:	d013      	beq.n	800b25a <TIM_Base_SetConfig+0x9a>
 800b232:	687b      	ldr	r3, [r7, #4]
 800b234:	4a2a      	ldr	r2, [pc, #168]	; (800b2e0 <TIM_Base_SetConfig+0x120>)
 800b236:	4293      	cmp	r3, r2
 800b238:	d00f      	beq.n	800b25a <TIM_Base_SetConfig+0x9a>
 800b23a:	687b      	ldr	r3, [r7, #4]
 800b23c:	4a29      	ldr	r2, [pc, #164]	; (800b2e4 <TIM_Base_SetConfig+0x124>)
 800b23e:	4293      	cmp	r3, r2
 800b240:	d00b      	beq.n	800b25a <TIM_Base_SetConfig+0x9a>
 800b242:	687b      	ldr	r3, [r7, #4]
 800b244:	4a28      	ldr	r2, [pc, #160]	; (800b2e8 <TIM_Base_SetConfig+0x128>)
 800b246:	4293      	cmp	r3, r2
 800b248:	d007      	beq.n	800b25a <TIM_Base_SetConfig+0x9a>
 800b24a:	687b      	ldr	r3, [r7, #4]
 800b24c:	4a27      	ldr	r2, [pc, #156]	; (800b2ec <TIM_Base_SetConfig+0x12c>)
 800b24e:	4293      	cmp	r3, r2
 800b250:	d003      	beq.n	800b25a <TIM_Base_SetConfig+0x9a>
 800b252:	687b      	ldr	r3, [r7, #4]
 800b254:	4a26      	ldr	r2, [pc, #152]	; (800b2f0 <TIM_Base_SetConfig+0x130>)
 800b256:	4293      	cmp	r3, r2
 800b258:	d108      	bne.n	800b26c <TIM_Base_SetConfig+0xac>
 800b25a:	68fb      	ldr	r3, [r7, #12]
 800b25c:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b260:	60fb      	str	r3, [r7, #12]
 800b262:	683b      	ldr	r3, [r7, #0]
 800b264:	68db      	ldr	r3, [r3, #12]
 800b266:	68fa      	ldr	r2, [r7, #12]
 800b268:	4313      	orrs	r3, r2
 800b26a:	60fb      	str	r3, [r7, #12]
 800b26c:	68fb      	ldr	r3, [r7, #12]
 800b26e:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 800b272:	683b      	ldr	r3, [r7, #0]
 800b274:	695b      	ldr	r3, [r3, #20]
 800b276:	4313      	orrs	r3, r2
 800b278:	60fb      	str	r3, [r7, #12]
 800b27a:	687b      	ldr	r3, [r7, #4]
 800b27c:	68fa      	ldr	r2, [r7, #12]
 800b27e:	601a      	str	r2, [r3, #0]
 800b280:	683b      	ldr	r3, [r7, #0]
 800b282:	689a      	ldr	r2, [r3, #8]
 800b284:	687b      	ldr	r3, [r7, #4]
 800b286:	62da      	str	r2, [r3, #44]	; 0x2c
 800b288:	683b      	ldr	r3, [r7, #0]
 800b28a:	681a      	ldr	r2, [r3, #0]
 800b28c:	687b      	ldr	r3, [r7, #4]
 800b28e:	629a      	str	r2, [r3, #40]	; 0x28
 800b290:	687b      	ldr	r3, [r7, #4]
 800b292:	4a10      	ldr	r2, [pc, #64]	; (800b2d4 <TIM_Base_SetConfig+0x114>)
 800b294:	4293      	cmp	r3, r2
 800b296:	d00f      	beq.n	800b2b8 <TIM_Base_SetConfig+0xf8>
 800b298:	687b      	ldr	r3, [r7, #4]
 800b29a:	4a12      	ldr	r2, [pc, #72]	; (800b2e4 <TIM_Base_SetConfig+0x124>)
 800b29c:	4293      	cmp	r3, r2
 800b29e:	d00b      	beq.n	800b2b8 <TIM_Base_SetConfig+0xf8>
 800b2a0:	687b      	ldr	r3, [r7, #4]
 800b2a2:	4a11      	ldr	r2, [pc, #68]	; (800b2e8 <TIM_Base_SetConfig+0x128>)
 800b2a4:	4293      	cmp	r3, r2
 800b2a6:	d007      	beq.n	800b2b8 <TIM_Base_SetConfig+0xf8>
 800b2a8:	687b      	ldr	r3, [r7, #4]
 800b2aa:	4a10      	ldr	r2, [pc, #64]	; (800b2ec <TIM_Base_SetConfig+0x12c>)
 800b2ac:	4293      	cmp	r3, r2
 800b2ae:	d003      	beq.n	800b2b8 <TIM_Base_SetConfig+0xf8>
 800b2b0:	687b      	ldr	r3, [r7, #4]
 800b2b2:	4a0f      	ldr	r2, [pc, #60]	; (800b2f0 <TIM_Base_SetConfig+0x130>)
 800b2b4:	4293      	cmp	r3, r2
 800b2b6:	d103      	bne.n	800b2c0 <TIM_Base_SetConfig+0x100>
 800b2b8:	683b      	ldr	r3, [r7, #0]
 800b2ba:	691a      	ldr	r2, [r3, #16]
 800b2bc:	687b      	ldr	r3, [r7, #4]
 800b2be:	631a      	str	r2, [r3, #48]	; 0x30
 800b2c0:	687b      	ldr	r3, [r7, #4]
 800b2c2:	2201      	movs	r2, #1
 800b2c4:	615a      	str	r2, [r3, #20]
 800b2c6:	bf00      	nop
 800b2c8:	3714      	adds	r7, #20
 800b2ca:	46bd      	mov	sp, r7
 800b2cc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b2d0:	4770      	bx	lr
 800b2d2:	bf00      	nop
 800b2d4:	40012c00 	.word	0x40012c00
 800b2d8:	40000400 	.word	0x40000400
 800b2dc:	40000800 	.word	0x40000800
 800b2e0:	40000c00 	.word	0x40000c00
 800b2e4:	40013400 	.word	0x40013400
 800b2e8:	40014000 	.word	0x40014000
 800b2ec:	40014400 	.word	0x40014400
 800b2f0:	40014800 	.word	0x40014800

0800b2f4 <TIM_OC1_SetConfig>:
 800b2f4:	b480      	push	{r7}
 800b2f6:	b087      	sub	sp, #28
 800b2f8:	af00      	add	r7, sp, #0
 800b2fa:	6078      	str	r0, [r7, #4]
 800b2fc:	6039      	str	r1, [r7, #0]
 800b2fe:	687b      	ldr	r3, [r7, #4]
 800b300:	6a1b      	ldr	r3, [r3, #32]
 800b302:	f023 0201 	bic.w	r2, r3, #1
 800b306:	687b      	ldr	r3, [r7, #4]
 800b308:	621a      	str	r2, [r3, #32]
 800b30a:	687b      	ldr	r3, [r7, #4]
 800b30c:	6a1b      	ldr	r3, [r3, #32]
 800b30e:	617b      	str	r3, [r7, #20]
 800b310:	687b      	ldr	r3, [r7, #4]
 800b312:	685b      	ldr	r3, [r3, #4]
 800b314:	613b      	str	r3, [r7, #16]
 800b316:	687b      	ldr	r3, [r7, #4]
 800b318:	699b      	ldr	r3, [r3, #24]
 800b31a:	60fb      	str	r3, [r7, #12]
 800b31c:	68fb      	ldr	r3, [r7, #12]
 800b31e:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b322:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b326:	60fb      	str	r3, [r7, #12]
 800b328:	68fb      	ldr	r3, [r7, #12]
 800b32a:	f023 0303 	bic.w	r3, r3, #3
 800b32e:	60fb      	str	r3, [r7, #12]
 800b330:	683b      	ldr	r3, [r7, #0]
 800b332:	681b      	ldr	r3, [r3, #0]
 800b334:	68fa      	ldr	r2, [r7, #12]
 800b336:	4313      	orrs	r3, r2
 800b338:	60fb      	str	r3, [r7, #12]
 800b33a:	697b      	ldr	r3, [r7, #20]
 800b33c:	f023 0302 	bic.w	r3, r3, #2
 800b340:	617b      	str	r3, [r7, #20]
 800b342:	683b      	ldr	r3, [r7, #0]
 800b344:	689b      	ldr	r3, [r3, #8]
 800b346:	697a      	ldr	r2, [r7, #20]
 800b348:	4313      	orrs	r3, r2
 800b34a:	617b      	str	r3, [r7, #20]
 800b34c:	687b      	ldr	r3, [r7, #4]
 800b34e:	4a2c      	ldr	r2, [pc, #176]	; (800b400 <TIM_OC1_SetConfig+0x10c>)
 800b350:	4293      	cmp	r3, r2
 800b352:	d00f      	beq.n	800b374 <TIM_OC1_SetConfig+0x80>
 800b354:	687b      	ldr	r3, [r7, #4]
 800b356:	4a2b      	ldr	r2, [pc, #172]	; (800b404 <TIM_OC1_SetConfig+0x110>)
 800b358:	4293      	cmp	r3, r2
 800b35a:	d00b      	beq.n	800b374 <TIM_OC1_SetConfig+0x80>
 800b35c:	687b      	ldr	r3, [r7, #4]
 800b35e:	4a2a      	ldr	r2, [pc, #168]	; (800b408 <TIM_OC1_SetConfig+0x114>)
 800b360:	4293      	cmp	r3, r2
 800b362:	d007      	beq.n	800b374 <TIM_OC1_SetConfig+0x80>
 800b364:	687b      	ldr	r3, [r7, #4]
 800b366:	4a29      	ldr	r2, [pc, #164]	; (800b40c <TIM_OC1_SetConfig+0x118>)
 800b368:	4293      	cmp	r3, r2
 800b36a:	d003      	beq.n	800b374 <TIM_OC1_SetConfig+0x80>
 800b36c:	687b      	ldr	r3, [r7, #4]
 800b36e:	4a28      	ldr	r2, [pc, #160]	; (800b410 <TIM_OC1_SetConfig+0x11c>)
 800b370:	4293      	cmp	r3, r2
 800b372:	d10c      	bne.n	800b38e <TIM_OC1_SetConfig+0x9a>
 800b374:	697b      	ldr	r3, [r7, #20]
 800b376:	f023 0308 	bic.w	r3, r3, #8
 800b37a:	617b      	str	r3, [r7, #20]
 800b37c:	683b      	ldr	r3, [r7, #0]
 800b37e:	68db      	ldr	r3, [r3, #12]
 800b380:	697a      	ldr	r2, [r7, #20]
 800b382:	4313      	orrs	r3, r2
 800b384:	617b      	str	r3, [r7, #20]
 800b386:	697b      	ldr	r3, [r7, #20]
 800b388:	f023 0304 	bic.w	r3, r3, #4
 800b38c:	617b      	str	r3, [r7, #20]
 800b38e:	687b      	ldr	r3, [r7, #4]
 800b390:	4a1b      	ldr	r2, [pc, #108]	; (800b400 <TIM_OC1_SetConfig+0x10c>)
 800b392:	4293      	cmp	r3, r2
 800b394:	d00f      	beq.n	800b3b6 <TIM_OC1_SetConfig+0xc2>
 800b396:	687b      	ldr	r3, [r7, #4]
 800b398:	4a1a      	ldr	r2, [pc, #104]	; (800b404 <TIM_OC1_SetConfig+0x110>)
 800b39a:	4293      	cmp	r3, r2
 800b39c:	d00b      	beq.n	800b3b6 <TIM_OC1_SetConfig+0xc2>
 800b39e:	687b      	ldr	r3, [r7, #4]
 800b3a0:	4a19      	ldr	r2, [pc, #100]	; (800b408 <TIM_OC1_SetConfig+0x114>)
 800b3a2:	4293      	cmp	r3, r2
 800b3a4:	d007      	beq.n	800b3b6 <TIM_OC1_SetConfig+0xc2>
 800b3a6:	687b      	ldr	r3, [r7, #4]
 800b3a8:	4a18      	ldr	r2, [pc, #96]	; (800b40c <TIM_OC1_SetConfig+0x118>)
 800b3aa:	4293      	cmp	r3, r2
 800b3ac:	d003      	beq.n	800b3b6 <TIM_OC1_SetConfig+0xc2>
 800b3ae:	687b      	ldr	r3, [r7, #4]
 800b3b0:	4a17      	ldr	r2, [pc, #92]	; (800b410 <TIM_OC1_SetConfig+0x11c>)
 800b3b2:	4293      	cmp	r3, r2
 800b3b4:	d111      	bne.n	800b3da <TIM_OC1_SetConfig+0xe6>
 800b3b6:	693b      	ldr	r3, [r7, #16]
 800b3b8:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800b3bc:	613b      	str	r3, [r7, #16]
 800b3be:	693b      	ldr	r3, [r7, #16]
 800b3c0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b3c4:	613b      	str	r3, [r7, #16]
 800b3c6:	683b      	ldr	r3, [r7, #0]
 800b3c8:	695b      	ldr	r3, [r3, #20]
 800b3ca:	693a      	ldr	r2, [r7, #16]
 800b3cc:	4313      	orrs	r3, r2
 800b3ce:	613b      	str	r3, [r7, #16]
 800b3d0:	683b      	ldr	r3, [r7, #0]
 800b3d2:	699b      	ldr	r3, [r3, #24]
 800b3d4:	693a      	ldr	r2, [r7, #16]
 800b3d6:	4313      	orrs	r3, r2
 800b3d8:	613b      	str	r3, [r7, #16]
 800b3da:	687b      	ldr	r3, [r7, #4]
 800b3dc:	693a      	ldr	r2, [r7, #16]
 800b3de:	605a      	str	r2, [r3, #4]
 800b3e0:	687b      	ldr	r3, [r7, #4]
 800b3e2:	68fa      	ldr	r2, [r7, #12]
 800b3e4:	619a      	str	r2, [r3, #24]
 800b3e6:	683b      	ldr	r3, [r7, #0]
 800b3e8:	685a      	ldr	r2, [r3, #4]
 800b3ea:	687b      	ldr	r3, [r7, #4]
 800b3ec:	635a      	str	r2, [r3, #52]	; 0x34
 800b3ee:	687b      	ldr	r3, [r7, #4]
 800b3f0:	697a      	ldr	r2, [r7, #20]
 800b3f2:	621a      	str	r2, [r3, #32]
 800b3f4:	bf00      	nop
 800b3f6:	371c      	adds	r7, #28
 800b3f8:	46bd      	mov	sp, r7
 800b3fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b3fe:	4770      	bx	lr
 800b400:	40012c00 	.word	0x40012c00
 800b404:	40013400 	.word	0x40013400
 800b408:	40014000 	.word	0x40014000
 800b40c:	40014400 	.word	0x40014400
 800b410:	40014800 	.word	0x40014800

0800b414 <TIM_OC2_SetConfig>:
 800b414:	b480      	push	{r7}
 800b416:	b087      	sub	sp, #28
 800b418:	af00      	add	r7, sp, #0
 800b41a:	6078      	str	r0, [r7, #4]
 800b41c:	6039      	str	r1, [r7, #0]
 800b41e:	687b      	ldr	r3, [r7, #4]
 800b420:	6a1b      	ldr	r3, [r3, #32]
 800b422:	f023 0210 	bic.w	r2, r3, #16
 800b426:	687b      	ldr	r3, [r7, #4]
 800b428:	621a      	str	r2, [r3, #32]
 800b42a:	687b      	ldr	r3, [r7, #4]
 800b42c:	6a1b      	ldr	r3, [r3, #32]
 800b42e:	617b      	str	r3, [r7, #20]
 800b430:	687b      	ldr	r3, [r7, #4]
 800b432:	685b      	ldr	r3, [r3, #4]
 800b434:	613b      	str	r3, [r7, #16]
 800b436:	687b      	ldr	r3, [r7, #4]
 800b438:	699b      	ldr	r3, [r3, #24]
 800b43a:	60fb      	str	r3, [r7, #12]
 800b43c:	68fb      	ldr	r3, [r7, #12]
 800b43e:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800b442:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b446:	60fb      	str	r3, [r7, #12]
 800b448:	68fb      	ldr	r3, [r7, #12]
 800b44a:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b44e:	60fb      	str	r3, [r7, #12]
 800b450:	683b      	ldr	r3, [r7, #0]
 800b452:	681b      	ldr	r3, [r3, #0]
 800b454:	021b      	lsls	r3, r3, #8
 800b456:	68fa      	ldr	r2, [r7, #12]
 800b458:	4313      	orrs	r3, r2
 800b45a:	60fb      	str	r3, [r7, #12]
 800b45c:	697b      	ldr	r3, [r7, #20]
 800b45e:	f023 0320 	bic.w	r3, r3, #32
 800b462:	617b      	str	r3, [r7, #20]
 800b464:	683b      	ldr	r3, [r7, #0]
 800b466:	689b      	ldr	r3, [r3, #8]
 800b468:	011b      	lsls	r3, r3, #4
 800b46a:	697a      	ldr	r2, [r7, #20]
 800b46c:	4313      	orrs	r3, r2
 800b46e:	617b      	str	r3, [r7, #20]
 800b470:	687b      	ldr	r3, [r7, #4]
 800b472:	4a28      	ldr	r2, [pc, #160]	; (800b514 <TIM_OC2_SetConfig+0x100>)
 800b474:	4293      	cmp	r3, r2
 800b476:	d003      	beq.n	800b480 <TIM_OC2_SetConfig+0x6c>
 800b478:	687b      	ldr	r3, [r7, #4]
 800b47a:	4a27      	ldr	r2, [pc, #156]	; (800b518 <TIM_OC2_SetConfig+0x104>)
 800b47c:	4293      	cmp	r3, r2
 800b47e:	d10d      	bne.n	800b49c <TIM_OC2_SetConfig+0x88>
 800b480:	697b      	ldr	r3, [r7, #20]
 800b482:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800b486:	617b      	str	r3, [r7, #20]
 800b488:	683b      	ldr	r3, [r7, #0]
 800b48a:	68db      	ldr	r3, [r3, #12]
 800b48c:	011b      	lsls	r3, r3, #4
 800b48e:	697a      	ldr	r2, [r7, #20]
 800b490:	4313      	orrs	r3, r2
 800b492:	617b      	str	r3, [r7, #20]
 800b494:	697b      	ldr	r3, [r7, #20]
 800b496:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800b49a:	617b      	str	r3, [r7, #20]
 800b49c:	687b      	ldr	r3, [r7, #4]
 800b49e:	4a1d      	ldr	r2, [pc, #116]	; (800b514 <TIM_OC2_SetConfig+0x100>)
 800b4a0:	4293      	cmp	r3, r2
 800b4a2:	d00f      	beq.n	800b4c4 <TIM_OC2_SetConfig+0xb0>
 800b4a4:	687b      	ldr	r3, [r7, #4]
 800b4a6:	4a1c      	ldr	r2, [pc, #112]	; (800b518 <TIM_OC2_SetConfig+0x104>)
 800b4a8:	4293      	cmp	r3, r2
 800b4aa:	d00b      	beq.n	800b4c4 <TIM_OC2_SetConfig+0xb0>
 800b4ac:	687b      	ldr	r3, [r7, #4]
 800b4ae:	4a1b      	ldr	r2, [pc, #108]	; (800b51c <TIM_OC2_SetConfig+0x108>)
 800b4b0:	4293      	cmp	r3, r2
 800b4b2:	d007      	beq.n	800b4c4 <TIM_OC2_SetConfig+0xb0>
 800b4b4:	687b      	ldr	r3, [r7, #4]
 800b4b6:	4a1a      	ldr	r2, [pc, #104]	; (800b520 <TIM_OC2_SetConfig+0x10c>)
 800b4b8:	4293      	cmp	r3, r2
 800b4ba:	d003      	beq.n	800b4c4 <TIM_OC2_SetConfig+0xb0>
 800b4bc:	687b      	ldr	r3, [r7, #4]
 800b4be:	4a19      	ldr	r2, [pc, #100]	; (800b524 <TIM_OC2_SetConfig+0x110>)
 800b4c0:	4293      	cmp	r3, r2
 800b4c2:	d113      	bne.n	800b4ec <TIM_OC2_SetConfig+0xd8>
 800b4c4:	693b      	ldr	r3, [r7, #16]
 800b4c6:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b4ca:	613b      	str	r3, [r7, #16]
 800b4cc:	693b      	ldr	r3, [r7, #16]
 800b4ce:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b4d2:	613b      	str	r3, [r7, #16]
 800b4d4:	683b      	ldr	r3, [r7, #0]
 800b4d6:	695b      	ldr	r3, [r3, #20]
 800b4d8:	009b      	lsls	r3, r3, #2
 800b4da:	693a      	ldr	r2, [r7, #16]
 800b4dc:	4313      	orrs	r3, r2
 800b4de:	613b      	str	r3, [r7, #16]
 800b4e0:	683b      	ldr	r3, [r7, #0]
 800b4e2:	699b      	ldr	r3, [r3, #24]
 800b4e4:	009b      	lsls	r3, r3, #2
 800b4e6:	693a      	ldr	r2, [r7, #16]
 800b4e8:	4313      	orrs	r3, r2
 800b4ea:	613b      	str	r3, [r7, #16]
 800b4ec:	687b      	ldr	r3, [r7, #4]
 800b4ee:	693a      	ldr	r2, [r7, #16]
 800b4f0:	605a      	str	r2, [r3, #4]
 800b4f2:	687b      	ldr	r3, [r7, #4]
 800b4f4:	68fa      	ldr	r2, [r7, #12]
 800b4f6:	619a      	str	r2, [r3, #24]
 800b4f8:	683b      	ldr	r3, [r7, #0]
 800b4fa:	685a      	ldr	r2, [r3, #4]
 800b4fc:	687b      	ldr	r3, [r7, #4]
 800b4fe:	639a      	str	r2, [r3, #56]	; 0x38
 800b500:	687b      	ldr	r3, [r7, #4]
 800b502:	697a      	ldr	r2, [r7, #20]
 800b504:	621a      	str	r2, [r3, #32]
 800b506:	bf00      	nop
 800b508:	371c      	adds	r7, #28
 800b50a:	46bd      	mov	sp, r7
 800b50c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b510:	4770      	bx	lr
 800b512:	bf00      	nop
 800b514:	40012c00 	.word	0x40012c00
 800b518:	40013400 	.word	0x40013400
 800b51c:	40014000 	.word	0x40014000
 800b520:	40014400 	.word	0x40014400
 800b524:	40014800 	.word	0x40014800

0800b528 <TIM_OC3_SetConfig>:
 800b528:	b480      	push	{r7}
 800b52a:	b087      	sub	sp, #28
 800b52c:	af00      	add	r7, sp, #0
 800b52e:	6078      	str	r0, [r7, #4]
 800b530:	6039      	str	r1, [r7, #0]
 800b532:	687b      	ldr	r3, [r7, #4]
 800b534:	6a1b      	ldr	r3, [r3, #32]
 800b536:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 800b53a:	687b      	ldr	r3, [r7, #4]
 800b53c:	621a      	str	r2, [r3, #32]
 800b53e:	687b      	ldr	r3, [r7, #4]
 800b540:	6a1b      	ldr	r3, [r3, #32]
 800b542:	617b      	str	r3, [r7, #20]
 800b544:	687b      	ldr	r3, [r7, #4]
 800b546:	685b      	ldr	r3, [r3, #4]
 800b548:	613b      	str	r3, [r7, #16]
 800b54a:	687b      	ldr	r3, [r7, #4]
 800b54c:	69db      	ldr	r3, [r3, #28]
 800b54e:	60fb      	str	r3, [r7, #12]
 800b550:	68fb      	ldr	r3, [r7, #12]
 800b552:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b556:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b55a:	60fb      	str	r3, [r7, #12]
 800b55c:	68fb      	ldr	r3, [r7, #12]
 800b55e:	f023 0303 	bic.w	r3, r3, #3
 800b562:	60fb      	str	r3, [r7, #12]
 800b564:	683b      	ldr	r3, [r7, #0]
 800b566:	681b      	ldr	r3, [r3, #0]
 800b568:	68fa      	ldr	r2, [r7, #12]
 800b56a:	4313      	orrs	r3, r2
 800b56c:	60fb      	str	r3, [r7, #12]
 800b56e:	697b      	ldr	r3, [r7, #20]
 800b570:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 800b574:	617b      	str	r3, [r7, #20]
 800b576:	683b      	ldr	r3, [r7, #0]
 800b578:	689b      	ldr	r3, [r3, #8]
 800b57a:	021b      	lsls	r3, r3, #8
 800b57c:	697a      	ldr	r2, [r7, #20]
 800b57e:	4313      	orrs	r3, r2
 800b580:	617b      	str	r3, [r7, #20]
 800b582:	687b      	ldr	r3, [r7, #4]
 800b584:	4a27      	ldr	r2, [pc, #156]	; (800b624 <TIM_OC3_SetConfig+0xfc>)
 800b586:	4293      	cmp	r3, r2
 800b588:	d003      	beq.n	800b592 <TIM_OC3_SetConfig+0x6a>
 800b58a:	687b      	ldr	r3, [r7, #4]
 800b58c:	4a26      	ldr	r2, [pc, #152]	; (800b628 <TIM_OC3_SetConfig+0x100>)
 800b58e:	4293      	cmp	r3, r2
 800b590:	d10d      	bne.n	800b5ae <TIM_OC3_SetConfig+0x86>
 800b592:	697b      	ldr	r3, [r7, #20]
 800b594:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 800b598:	617b      	str	r3, [r7, #20]
 800b59a:	683b      	ldr	r3, [r7, #0]
 800b59c:	68db      	ldr	r3, [r3, #12]
 800b59e:	021b      	lsls	r3, r3, #8
 800b5a0:	697a      	ldr	r2, [r7, #20]
 800b5a2:	4313      	orrs	r3, r2
 800b5a4:	617b      	str	r3, [r7, #20]
 800b5a6:	697b      	ldr	r3, [r7, #20]
 800b5a8:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 800b5ac:	617b      	str	r3, [r7, #20]
 800b5ae:	687b      	ldr	r3, [r7, #4]
 800b5b0:	4a1c      	ldr	r2, [pc, #112]	; (800b624 <TIM_OC3_SetConfig+0xfc>)
 800b5b2:	4293      	cmp	r3, r2
 800b5b4:	d00f      	beq.n	800b5d6 <TIM_OC3_SetConfig+0xae>
 800b5b6:	687b      	ldr	r3, [r7, #4]
 800b5b8:	4a1b      	ldr	r2, [pc, #108]	; (800b628 <TIM_OC3_SetConfig+0x100>)
 800b5ba:	4293      	cmp	r3, r2
 800b5bc:	d00b      	beq.n	800b5d6 <TIM_OC3_SetConfig+0xae>
 800b5be:	687b      	ldr	r3, [r7, #4]
 800b5c0:	4a1a      	ldr	r2, [pc, #104]	; (800b62c <TIM_OC3_SetConfig+0x104>)
 800b5c2:	4293      	cmp	r3, r2
 800b5c4:	d007      	beq.n	800b5d6 <TIM_OC3_SetConfig+0xae>
 800b5c6:	687b      	ldr	r3, [r7, #4]
 800b5c8:	4a19      	ldr	r2, [pc, #100]	; (800b630 <TIM_OC3_SetConfig+0x108>)
 800b5ca:	4293      	cmp	r3, r2
 800b5cc:	d003      	beq.n	800b5d6 <TIM_OC3_SetConfig+0xae>
 800b5ce:	687b      	ldr	r3, [r7, #4]
 800b5d0:	4a18      	ldr	r2, [pc, #96]	; (800b634 <TIM_OC3_SetConfig+0x10c>)
 800b5d2:	4293      	cmp	r3, r2
 800b5d4:	d113      	bne.n	800b5fe <TIM_OC3_SetConfig+0xd6>
 800b5d6:	693b      	ldr	r3, [r7, #16]
 800b5d8:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 800b5dc:	613b      	str	r3, [r7, #16]
 800b5de:	693b      	ldr	r3, [r7, #16]
 800b5e0:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b5e4:	613b      	str	r3, [r7, #16]
 800b5e6:	683b      	ldr	r3, [r7, #0]
 800b5e8:	695b      	ldr	r3, [r3, #20]
 800b5ea:	011b      	lsls	r3, r3, #4
 800b5ec:	693a      	ldr	r2, [r7, #16]
 800b5ee:	4313      	orrs	r3, r2
 800b5f0:	613b      	str	r3, [r7, #16]
 800b5f2:	683b      	ldr	r3, [r7, #0]
 800b5f4:	699b      	ldr	r3, [r3, #24]
 800b5f6:	011b      	lsls	r3, r3, #4
 800b5f8:	693a      	ldr	r2, [r7, #16]
 800b5fa:	4313      	orrs	r3, r2
 800b5fc:	613b      	str	r3, [r7, #16]
 800b5fe:	687b      	ldr	r3, [r7, #4]
 800b600:	693a      	ldr	r2, [r7, #16]
 800b602:	605a      	str	r2, [r3, #4]
 800b604:	687b      	ldr	r3, [r7, #4]
 800b606:	68fa      	ldr	r2, [r7, #12]
 800b608:	61da      	str	r2, [r3, #28]
 800b60a:	683b      	ldr	r3, [r7, #0]
 800b60c:	685a      	ldr	r2, [r3, #4]
 800b60e:	687b      	ldr	r3, [r7, #4]
 800b610:	63da      	str	r2, [r3, #60]	; 0x3c
 800b612:	687b      	ldr	r3, [r7, #4]
 800b614:	697a      	ldr	r2, [r7, #20]
 800b616:	621a      	str	r2, [r3, #32]
 800b618:	bf00      	nop
 800b61a:	371c      	adds	r7, #28
 800b61c:	46bd      	mov	sp, r7
 800b61e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b622:	4770      	bx	lr
 800b624:	40012c00 	.word	0x40012c00
 800b628:	40013400 	.word	0x40013400
 800b62c:	40014000 	.word	0x40014000
 800b630:	40014400 	.word	0x40014400
 800b634:	40014800 	.word	0x40014800

0800b638 <TIM_OC4_SetConfig>:
 800b638:	b480      	push	{r7}
 800b63a:	b087      	sub	sp, #28
 800b63c:	af00      	add	r7, sp, #0
 800b63e:	6078      	str	r0, [r7, #4]
 800b640:	6039      	str	r1, [r7, #0]
 800b642:	687b      	ldr	r3, [r7, #4]
 800b644:	6a1b      	ldr	r3, [r3, #32]
 800b646:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 800b64a:	687b      	ldr	r3, [r7, #4]
 800b64c:	621a      	str	r2, [r3, #32]
 800b64e:	687b      	ldr	r3, [r7, #4]
 800b650:	6a1b      	ldr	r3, [r3, #32]
 800b652:	613b      	str	r3, [r7, #16]
 800b654:	687b      	ldr	r3, [r7, #4]
 800b656:	685b      	ldr	r3, [r3, #4]
 800b658:	617b      	str	r3, [r7, #20]
 800b65a:	687b      	ldr	r3, [r7, #4]
 800b65c:	69db      	ldr	r3, [r3, #28]
 800b65e:	60fb      	str	r3, [r7, #12]
 800b660:	68fb      	ldr	r3, [r7, #12]
 800b662:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800b666:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b66a:	60fb      	str	r3, [r7, #12]
 800b66c:	68fb      	ldr	r3, [r7, #12]
 800b66e:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 800b672:	60fb      	str	r3, [r7, #12]
 800b674:	683b      	ldr	r3, [r7, #0]
 800b676:	681b      	ldr	r3, [r3, #0]
 800b678:	021b      	lsls	r3, r3, #8
 800b67a:	68fa      	ldr	r2, [r7, #12]
 800b67c:	4313      	orrs	r3, r2
 800b67e:	60fb      	str	r3, [r7, #12]
 800b680:	693b      	ldr	r3, [r7, #16]
 800b682:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 800b686:	613b      	str	r3, [r7, #16]
 800b688:	683b      	ldr	r3, [r7, #0]
 800b68a:	689b      	ldr	r3, [r3, #8]
 800b68c:	031b      	lsls	r3, r3, #12
 800b68e:	693a      	ldr	r2, [r7, #16]
 800b690:	4313      	orrs	r3, r2
 800b692:	613b      	str	r3, [r7, #16]
 800b694:	687b      	ldr	r3, [r7, #4]
 800b696:	4a18      	ldr	r2, [pc, #96]	; (800b6f8 <TIM_OC4_SetConfig+0xc0>)
 800b698:	4293      	cmp	r3, r2
 800b69a:	d00f      	beq.n	800b6bc <TIM_OC4_SetConfig+0x84>
 800b69c:	687b      	ldr	r3, [r7, #4]
 800b69e:	4a17      	ldr	r2, [pc, #92]	; (800b6fc <TIM_OC4_SetConfig+0xc4>)
 800b6a0:	4293      	cmp	r3, r2
 800b6a2:	d00b      	beq.n	800b6bc <TIM_OC4_SetConfig+0x84>
 800b6a4:	687b      	ldr	r3, [r7, #4]
 800b6a6:	4a16      	ldr	r2, [pc, #88]	; (800b700 <TIM_OC4_SetConfig+0xc8>)
 800b6a8:	4293      	cmp	r3, r2
 800b6aa:	d007      	beq.n	800b6bc <TIM_OC4_SetConfig+0x84>
 800b6ac:	687b      	ldr	r3, [r7, #4]
 800b6ae:	4a15      	ldr	r2, [pc, #84]	; (800b704 <TIM_OC4_SetConfig+0xcc>)
 800b6b0:	4293      	cmp	r3, r2
 800b6b2:	d003      	beq.n	800b6bc <TIM_OC4_SetConfig+0x84>
 800b6b4:	687b      	ldr	r3, [r7, #4]
 800b6b6:	4a14      	ldr	r2, [pc, #80]	; (800b708 <TIM_OC4_SetConfig+0xd0>)
 800b6b8:	4293      	cmp	r3, r2
 800b6ba:	d109      	bne.n	800b6d0 <TIM_OC4_SetConfig+0x98>
 800b6bc:	697b      	ldr	r3, [r7, #20]
 800b6be:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 800b6c2:	617b      	str	r3, [r7, #20]
 800b6c4:	683b      	ldr	r3, [r7, #0]
 800b6c6:	695b      	ldr	r3, [r3, #20]
 800b6c8:	019b      	lsls	r3, r3, #6
 800b6ca:	697a      	ldr	r2, [r7, #20]
 800b6cc:	4313      	orrs	r3, r2
 800b6ce:	617b      	str	r3, [r7, #20]
 800b6d0:	687b      	ldr	r3, [r7, #4]
 800b6d2:	697a      	ldr	r2, [r7, #20]
 800b6d4:	605a      	str	r2, [r3, #4]
 800b6d6:	687b      	ldr	r3, [r7, #4]
 800b6d8:	68fa      	ldr	r2, [r7, #12]
 800b6da:	61da      	str	r2, [r3, #28]
 800b6dc:	683b      	ldr	r3, [r7, #0]
 800b6de:	685a      	ldr	r2, [r3, #4]
 800b6e0:	687b      	ldr	r3, [r7, #4]
 800b6e2:	641a      	str	r2, [r3, #64]	; 0x40
 800b6e4:	687b      	ldr	r3, [r7, #4]
 800b6e6:	693a      	ldr	r2, [r7, #16]
 800b6e8:	621a      	str	r2, [r3, #32]
 800b6ea:	bf00      	nop
 800b6ec:	371c      	adds	r7, #28
 800b6ee:	46bd      	mov	sp, r7
 800b6f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b6f4:	4770      	bx	lr
 800b6f6:	bf00      	nop
 800b6f8:	40012c00 	.word	0x40012c00
 800b6fc:	40013400 	.word	0x40013400
 800b700:	40014000 	.word	0x40014000
 800b704:	40014400 	.word	0x40014400
 800b708:	40014800 	.word	0x40014800

0800b70c <TIM_OC5_SetConfig>:
 800b70c:	b480      	push	{r7}
 800b70e:	b087      	sub	sp, #28
 800b710:	af00      	add	r7, sp, #0
 800b712:	6078      	str	r0, [r7, #4]
 800b714:	6039      	str	r1, [r7, #0]
 800b716:	687b      	ldr	r3, [r7, #4]
 800b718:	6a1b      	ldr	r3, [r3, #32]
 800b71a:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800b71e:	687b      	ldr	r3, [r7, #4]
 800b720:	621a      	str	r2, [r3, #32]
 800b722:	687b      	ldr	r3, [r7, #4]
 800b724:	6a1b      	ldr	r3, [r3, #32]
 800b726:	613b      	str	r3, [r7, #16]
 800b728:	687b      	ldr	r3, [r7, #4]
 800b72a:	685b      	ldr	r3, [r3, #4]
 800b72c:	617b      	str	r3, [r7, #20]
 800b72e:	687b      	ldr	r3, [r7, #4]
 800b730:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b732:	60fb      	str	r3, [r7, #12]
 800b734:	68fb      	ldr	r3, [r7, #12]
 800b736:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b73a:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b73e:	60fb      	str	r3, [r7, #12]
 800b740:	683b      	ldr	r3, [r7, #0]
 800b742:	681b      	ldr	r3, [r3, #0]
 800b744:	68fa      	ldr	r2, [r7, #12]
 800b746:	4313      	orrs	r3, r2
 800b748:	60fb      	str	r3, [r7, #12]
 800b74a:	693b      	ldr	r3, [r7, #16]
 800b74c:	f423 3300 	bic.w	r3, r3, #131072	; 0x20000
 800b750:	613b      	str	r3, [r7, #16]
 800b752:	683b      	ldr	r3, [r7, #0]
 800b754:	689b      	ldr	r3, [r3, #8]
 800b756:	041b      	lsls	r3, r3, #16
 800b758:	693a      	ldr	r2, [r7, #16]
 800b75a:	4313      	orrs	r3, r2
 800b75c:	613b      	str	r3, [r7, #16]
 800b75e:	687b      	ldr	r3, [r7, #4]
 800b760:	4a17      	ldr	r2, [pc, #92]	; (800b7c0 <TIM_OC5_SetConfig+0xb4>)
 800b762:	4293      	cmp	r3, r2
 800b764:	d00f      	beq.n	800b786 <TIM_OC5_SetConfig+0x7a>
 800b766:	687b      	ldr	r3, [r7, #4]
 800b768:	4a16      	ldr	r2, [pc, #88]	; (800b7c4 <TIM_OC5_SetConfig+0xb8>)
 800b76a:	4293      	cmp	r3, r2
 800b76c:	d00b      	beq.n	800b786 <TIM_OC5_SetConfig+0x7a>
 800b76e:	687b      	ldr	r3, [r7, #4]
 800b770:	4a15      	ldr	r2, [pc, #84]	; (800b7c8 <TIM_OC5_SetConfig+0xbc>)
 800b772:	4293      	cmp	r3, r2
 800b774:	d007      	beq.n	800b786 <TIM_OC5_SetConfig+0x7a>
 800b776:	687b      	ldr	r3, [r7, #4]
 800b778:	4a14      	ldr	r2, [pc, #80]	; (800b7cc <TIM_OC5_SetConfig+0xc0>)
 800b77a:	4293      	cmp	r3, r2
 800b77c:	d003      	beq.n	800b786 <TIM_OC5_SetConfig+0x7a>
 800b77e:	687b      	ldr	r3, [r7, #4]
 800b780:	4a13      	ldr	r2, [pc, #76]	; (800b7d0 <TIM_OC5_SetConfig+0xc4>)
 800b782:	4293      	cmp	r3, r2
 800b784:	d109      	bne.n	800b79a <TIM_OC5_SetConfig+0x8e>
 800b786:	697b      	ldr	r3, [r7, #20]
 800b788:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 800b78c:	617b      	str	r3, [r7, #20]
 800b78e:	683b      	ldr	r3, [r7, #0]
 800b790:	695b      	ldr	r3, [r3, #20]
 800b792:	021b      	lsls	r3, r3, #8
 800b794:	697a      	ldr	r2, [r7, #20]
 800b796:	4313      	orrs	r3, r2
 800b798:	617b      	str	r3, [r7, #20]
 800b79a:	687b      	ldr	r3, [r7, #4]
 800b79c:	697a      	ldr	r2, [r7, #20]
 800b79e:	605a      	str	r2, [r3, #4]
 800b7a0:	687b      	ldr	r3, [r7, #4]
 800b7a2:	68fa      	ldr	r2, [r7, #12]
 800b7a4:	655a      	str	r2, [r3, #84]	; 0x54
 800b7a6:	683b      	ldr	r3, [r7, #0]
 800b7a8:	685a      	ldr	r2, [r3, #4]
 800b7aa:	687b      	ldr	r3, [r7, #4]
 800b7ac:	659a      	str	r2, [r3, #88]	; 0x58
 800b7ae:	687b      	ldr	r3, [r7, #4]
 800b7b0:	693a      	ldr	r2, [r7, #16]
 800b7b2:	621a      	str	r2, [r3, #32]
 800b7b4:	bf00      	nop
 800b7b6:	371c      	adds	r7, #28
 800b7b8:	46bd      	mov	sp, r7
 800b7ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b7be:	4770      	bx	lr
 800b7c0:	40012c00 	.word	0x40012c00
 800b7c4:	40013400 	.word	0x40013400
 800b7c8:	40014000 	.word	0x40014000
 800b7cc:	40014400 	.word	0x40014400
 800b7d0:	40014800 	.word	0x40014800

0800b7d4 <TIM_OC6_SetConfig>:
 800b7d4:	b480      	push	{r7}
 800b7d6:	b087      	sub	sp, #28
 800b7d8:	af00      	add	r7, sp, #0
 800b7da:	6078      	str	r0, [r7, #4]
 800b7dc:	6039      	str	r1, [r7, #0]
 800b7de:	687b      	ldr	r3, [r7, #4]
 800b7e0:	6a1b      	ldr	r3, [r3, #32]
 800b7e2:	f423 1280 	bic.w	r2, r3, #1048576	; 0x100000
 800b7e6:	687b      	ldr	r3, [r7, #4]
 800b7e8:	621a      	str	r2, [r3, #32]
 800b7ea:	687b      	ldr	r3, [r7, #4]
 800b7ec:	6a1b      	ldr	r3, [r3, #32]
 800b7ee:	613b      	str	r3, [r7, #16]
 800b7f0:	687b      	ldr	r3, [r7, #4]
 800b7f2:	685b      	ldr	r3, [r3, #4]
 800b7f4:	617b      	str	r3, [r7, #20]
 800b7f6:	687b      	ldr	r3, [r7, #4]
 800b7f8:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 800b7fa:	60fb      	str	r3, [r7, #12]
 800b7fc:	68fb      	ldr	r3, [r7, #12]
 800b7fe:	f023 7380 	bic.w	r3, r3, #16777216	; 0x1000000
 800b802:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 800b806:	60fb      	str	r3, [r7, #12]
 800b808:	683b      	ldr	r3, [r7, #0]
 800b80a:	681b      	ldr	r3, [r3, #0]
 800b80c:	021b      	lsls	r3, r3, #8
 800b80e:	68fa      	ldr	r2, [r7, #12]
 800b810:	4313      	orrs	r3, r2
 800b812:	60fb      	str	r3, [r7, #12]
 800b814:	693b      	ldr	r3, [r7, #16]
 800b816:	f423 1300 	bic.w	r3, r3, #2097152	; 0x200000
 800b81a:	613b      	str	r3, [r7, #16]
 800b81c:	683b      	ldr	r3, [r7, #0]
 800b81e:	689b      	ldr	r3, [r3, #8]
 800b820:	051b      	lsls	r3, r3, #20
 800b822:	693a      	ldr	r2, [r7, #16]
 800b824:	4313      	orrs	r3, r2
 800b826:	613b      	str	r3, [r7, #16]
 800b828:	687b      	ldr	r3, [r7, #4]
 800b82a:	4a18      	ldr	r2, [pc, #96]	; (800b88c <TIM_OC6_SetConfig+0xb8>)
 800b82c:	4293      	cmp	r3, r2
 800b82e:	d00f      	beq.n	800b850 <TIM_OC6_SetConfig+0x7c>
 800b830:	687b      	ldr	r3, [r7, #4]
 800b832:	4a17      	ldr	r2, [pc, #92]	; (800b890 <TIM_OC6_SetConfig+0xbc>)
 800b834:	4293      	cmp	r3, r2
 800b836:	d00b      	beq.n	800b850 <TIM_OC6_SetConfig+0x7c>
 800b838:	687b      	ldr	r3, [r7, #4]
 800b83a:	4a16      	ldr	r2, [pc, #88]	; (800b894 <TIM_OC6_SetConfig+0xc0>)
 800b83c:	4293      	cmp	r3, r2
 800b83e:	d007      	beq.n	800b850 <TIM_OC6_SetConfig+0x7c>
 800b840:	687b      	ldr	r3, [r7, #4]
 800b842:	4a15      	ldr	r2, [pc, #84]	; (800b898 <TIM_OC6_SetConfig+0xc4>)
 800b844:	4293      	cmp	r3, r2
 800b846:	d003      	beq.n	800b850 <TIM_OC6_SetConfig+0x7c>
 800b848:	687b      	ldr	r3, [r7, #4]
 800b84a:	4a14      	ldr	r2, [pc, #80]	; (800b89c <TIM_OC6_SetConfig+0xc8>)
 800b84c:	4293      	cmp	r3, r2
 800b84e:	d109      	bne.n	800b864 <TIM_OC6_SetConfig+0x90>
 800b850:	697b      	ldr	r3, [r7, #20]
 800b852:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 800b856:	617b      	str	r3, [r7, #20]
 800b858:	683b      	ldr	r3, [r7, #0]
 800b85a:	695b      	ldr	r3, [r3, #20]
 800b85c:	029b      	lsls	r3, r3, #10
 800b85e:	697a      	ldr	r2, [r7, #20]
 800b860:	4313      	orrs	r3, r2
 800b862:	617b      	str	r3, [r7, #20]
 800b864:	687b      	ldr	r3, [r7, #4]
 800b866:	697a      	ldr	r2, [r7, #20]
 800b868:	605a      	str	r2, [r3, #4]
 800b86a:	687b      	ldr	r3, [r7, #4]
 800b86c:	68fa      	ldr	r2, [r7, #12]
 800b86e:	655a      	str	r2, [r3, #84]	; 0x54
 800b870:	683b      	ldr	r3, [r7, #0]
 800b872:	685a      	ldr	r2, [r3, #4]
 800b874:	687b      	ldr	r3, [r7, #4]
 800b876:	65da      	str	r2, [r3, #92]	; 0x5c
 800b878:	687b      	ldr	r3, [r7, #4]
 800b87a:	693a      	ldr	r2, [r7, #16]
 800b87c:	621a      	str	r2, [r3, #32]
 800b87e:	bf00      	nop
 800b880:	371c      	adds	r7, #28
 800b882:	46bd      	mov	sp, r7
 800b884:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b888:	4770      	bx	lr
 800b88a:	bf00      	nop
 800b88c:	40012c00 	.word	0x40012c00
 800b890:	40013400 	.word	0x40013400
 800b894:	40014000 	.word	0x40014000
 800b898:	40014400 	.word	0x40014400
 800b89c:	40014800 	.word	0x40014800

0800b8a0 <TIM_TI1_ConfigInputStage>:
 800b8a0:	b480      	push	{r7}
 800b8a2:	b087      	sub	sp, #28
 800b8a4:	af00      	add	r7, sp, #0
 800b8a6:	60f8      	str	r0, [r7, #12]
 800b8a8:	60b9      	str	r1, [r7, #8]
 800b8aa:	607a      	str	r2, [r7, #4]
 800b8ac:	68fb      	ldr	r3, [r7, #12]
 800b8ae:	6a1b      	ldr	r3, [r3, #32]
 800b8b0:	617b      	str	r3, [r7, #20]
 800b8b2:	68fb      	ldr	r3, [r7, #12]
 800b8b4:	6a1b      	ldr	r3, [r3, #32]
 800b8b6:	f023 0201 	bic.w	r2, r3, #1
 800b8ba:	68fb      	ldr	r3, [r7, #12]
 800b8bc:	621a      	str	r2, [r3, #32]
 800b8be:	68fb      	ldr	r3, [r7, #12]
 800b8c0:	699b      	ldr	r3, [r3, #24]
 800b8c2:	613b      	str	r3, [r7, #16]
 800b8c4:	693b      	ldr	r3, [r7, #16]
 800b8c6:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 800b8ca:	613b      	str	r3, [r7, #16]
 800b8cc:	687b      	ldr	r3, [r7, #4]
 800b8ce:	011b      	lsls	r3, r3, #4
 800b8d0:	693a      	ldr	r2, [r7, #16]
 800b8d2:	4313      	orrs	r3, r2
 800b8d4:	613b      	str	r3, [r7, #16]
 800b8d6:	697b      	ldr	r3, [r7, #20]
 800b8d8:	f023 030a 	bic.w	r3, r3, #10
 800b8dc:	617b      	str	r3, [r7, #20]
 800b8de:	697a      	ldr	r2, [r7, #20]
 800b8e0:	68bb      	ldr	r3, [r7, #8]
 800b8e2:	4313      	orrs	r3, r2
 800b8e4:	617b      	str	r3, [r7, #20]
 800b8e6:	68fb      	ldr	r3, [r7, #12]
 800b8e8:	693a      	ldr	r2, [r7, #16]
 800b8ea:	619a      	str	r2, [r3, #24]
 800b8ec:	68fb      	ldr	r3, [r7, #12]
 800b8ee:	697a      	ldr	r2, [r7, #20]
 800b8f0:	621a      	str	r2, [r3, #32]
 800b8f2:	bf00      	nop
 800b8f4:	371c      	adds	r7, #28
 800b8f6:	46bd      	mov	sp, r7
 800b8f8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b8fc:	4770      	bx	lr

0800b8fe <TIM_TI2_ConfigInputStage>:
 800b8fe:	b480      	push	{r7}
 800b900:	b087      	sub	sp, #28
 800b902:	af00      	add	r7, sp, #0
 800b904:	60f8      	str	r0, [r7, #12]
 800b906:	60b9      	str	r1, [r7, #8]
 800b908:	607a      	str	r2, [r7, #4]
 800b90a:	68fb      	ldr	r3, [r7, #12]
 800b90c:	6a1b      	ldr	r3, [r3, #32]
 800b90e:	f023 0210 	bic.w	r2, r3, #16
 800b912:	68fb      	ldr	r3, [r7, #12]
 800b914:	621a      	str	r2, [r3, #32]
 800b916:	68fb      	ldr	r3, [r7, #12]
 800b918:	699b      	ldr	r3, [r3, #24]
 800b91a:	617b      	str	r3, [r7, #20]
 800b91c:	68fb      	ldr	r3, [r7, #12]
 800b91e:	6a1b      	ldr	r3, [r3, #32]
 800b920:	613b      	str	r3, [r7, #16]
 800b922:	697b      	ldr	r3, [r7, #20]
 800b924:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 800b928:	617b      	str	r3, [r7, #20]
 800b92a:	687b      	ldr	r3, [r7, #4]
 800b92c:	031b      	lsls	r3, r3, #12
 800b92e:	697a      	ldr	r2, [r7, #20]
 800b930:	4313      	orrs	r3, r2
 800b932:	617b      	str	r3, [r7, #20]
 800b934:	693b      	ldr	r3, [r7, #16]
 800b936:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 800b93a:	613b      	str	r3, [r7, #16]
 800b93c:	68bb      	ldr	r3, [r7, #8]
 800b93e:	011b      	lsls	r3, r3, #4
 800b940:	693a      	ldr	r2, [r7, #16]
 800b942:	4313      	orrs	r3, r2
 800b944:	613b      	str	r3, [r7, #16]
 800b946:	68fb      	ldr	r3, [r7, #12]
 800b948:	697a      	ldr	r2, [r7, #20]
 800b94a:	619a      	str	r2, [r3, #24]
 800b94c:	68fb      	ldr	r3, [r7, #12]
 800b94e:	693a      	ldr	r2, [r7, #16]
 800b950:	621a      	str	r2, [r3, #32]
 800b952:	bf00      	nop
 800b954:	371c      	adds	r7, #28
 800b956:	46bd      	mov	sp, r7
 800b958:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b95c:	4770      	bx	lr

0800b95e <TIM_ITRx_SetConfig>:
 800b95e:	b480      	push	{r7}
 800b960:	b085      	sub	sp, #20
 800b962:	af00      	add	r7, sp, #0
 800b964:	6078      	str	r0, [r7, #4]
 800b966:	6039      	str	r1, [r7, #0]
 800b968:	687b      	ldr	r3, [r7, #4]
 800b96a:	689b      	ldr	r3, [r3, #8]
 800b96c:	60fb      	str	r3, [r7, #12]
 800b96e:	68fb      	ldr	r3, [r7, #12]
 800b970:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800b974:	60fb      	str	r3, [r7, #12]
 800b976:	683a      	ldr	r2, [r7, #0]
 800b978:	68fb      	ldr	r3, [r7, #12]
 800b97a:	4313      	orrs	r3, r2
 800b97c:	f043 0307 	orr.w	r3, r3, #7
 800b980:	60fb      	str	r3, [r7, #12]
 800b982:	687b      	ldr	r3, [r7, #4]
 800b984:	68fa      	ldr	r2, [r7, #12]
 800b986:	609a      	str	r2, [r3, #8]
 800b988:	bf00      	nop
 800b98a:	3714      	adds	r7, #20
 800b98c:	46bd      	mov	sp, r7
 800b98e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b992:	4770      	bx	lr

0800b994 <TIM_ETR_SetConfig>:
 800b994:	b480      	push	{r7}
 800b996:	b087      	sub	sp, #28
 800b998:	af00      	add	r7, sp, #0
 800b99a:	60f8      	str	r0, [r7, #12]
 800b99c:	60b9      	str	r1, [r7, #8]
 800b99e:	607a      	str	r2, [r7, #4]
 800b9a0:	603b      	str	r3, [r7, #0]
 800b9a2:	68fb      	ldr	r3, [r7, #12]
 800b9a4:	689b      	ldr	r3, [r3, #8]
 800b9a6:	617b      	str	r3, [r7, #20]
 800b9a8:	697b      	ldr	r3, [r7, #20]
 800b9aa:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 800b9ae:	617b      	str	r3, [r7, #20]
 800b9b0:	683b      	ldr	r3, [r7, #0]
 800b9b2:	021a      	lsls	r2, r3, #8
 800b9b4:	687b      	ldr	r3, [r7, #4]
 800b9b6:	431a      	orrs	r2, r3
 800b9b8:	68bb      	ldr	r3, [r7, #8]
 800b9ba:	4313      	orrs	r3, r2
 800b9bc:	697a      	ldr	r2, [r7, #20]
 800b9be:	4313      	orrs	r3, r2
 800b9c0:	617b      	str	r3, [r7, #20]
 800b9c2:	68fb      	ldr	r3, [r7, #12]
 800b9c4:	697a      	ldr	r2, [r7, #20]
 800b9c6:	609a      	str	r2, [r3, #8]
 800b9c8:	bf00      	nop
 800b9ca:	371c      	adds	r7, #28
 800b9cc:	46bd      	mov	sp, r7
 800b9ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800b9d2:	4770      	bx	lr

0800b9d4 <TIM_CCxChannelCmd>:
 800b9d4:	b480      	push	{r7}
 800b9d6:	b087      	sub	sp, #28
 800b9d8:	af00      	add	r7, sp, #0
 800b9da:	60f8      	str	r0, [r7, #12]
 800b9dc:	60b9      	str	r1, [r7, #8]
 800b9de:	607a      	str	r2, [r7, #4]
 800b9e0:	68bb      	ldr	r3, [r7, #8]
 800b9e2:	f003 031f 	and.w	r3, r3, #31
 800b9e6:	2201      	movs	r2, #1
 800b9e8:	fa02 f303 	lsl.w	r3, r2, r3
 800b9ec:	617b      	str	r3, [r7, #20]
 800b9ee:	68fb      	ldr	r3, [r7, #12]
 800b9f0:	6a1a      	ldr	r2, [r3, #32]
 800b9f2:	697b      	ldr	r3, [r7, #20]
 800b9f4:	43db      	mvns	r3, r3
 800b9f6:	401a      	ands	r2, r3
 800b9f8:	68fb      	ldr	r3, [r7, #12]
 800b9fa:	621a      	str	r2, [r3, #32]
 800b9fc:	68fb      	ldr	r3, [r7, #12]
 800b9fe:	6a1a      	ldr	r2, [r3, #32]
 800ba00:	68bb      	ldr	r3, [r7, #8]
 800ba02:	f003 031f 	and.w	r3, r3, #31
 800ba06:	6879      	ldr	r1, [r7, #4]
 800ba08:	fa01 f303 	lsl.w	r3, r1, r3
 800ba0c:	431a      	orrs	r2, r3
 800ba0e:	68fb      	ldr	r3, [r7, #12]
 800ba10:	621a      	str	r2, [r3, #32]
 800ba12:	bf00      	nop
 800ba14:	371c      	adds	r7, #28
 800ba16:	46bd      	mov	sp, r7
 800ba18:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ba1c:	4770      	bx	lr
	...

0800ba20 <HAL_TIMEx_MasterConfigSynchronization>:
 800ba20:	b480      	push	{r7}
 800ba22:	b085      	sub	sp, #20
 800ba24:	af00      	add	r7, sp, #0
 800ba26:	6078      	str	r0, [r7, #4]
 800ba28:	6039      	str	r1, [r7, #0]
 800ba2a:	687b      	ldr	r3, [r7, #4]
 800ba2c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 800ba30:	2b01      	cmp	r3, #1
 800ba32:	d101      	bne.n	800ba38 <HAL_TIMEx_MasterConfigSynchronization+0x18>
 800ba34:	2302      	movs	r3, #2
 800ba36:	e068      	b.n	800bb0a <HAL_TIMEx_MasterConfigSynchronization+0xea>
 800ba38:	687b      	ldr	r3, [r7, #4]
 800ba3a:	2201      	movs	r2, #1
 800ba3c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800ba40:	687b      	ldr	r3, [r7, #4]
 800ba42:	2202      	movs	r2, #2
 800ba44:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800ba48:	687b      	ldr	r3, [r7, #4]
 800ba4a:	681b      	ldr	r3, [r3, #0]
 800ba4c:	685b      	ldr	r3, [r3, #4]
 800ba4e:	60fb      	str	r3, [r7, #12]
 800ba50:	687b      	ldr	r3, [r7, #4]
 800ba52:	681b      	ldr	r3, [r3, #0]
 800ba54:	689b      	ldr	r3, [r3, #8]
 800ba56:	60bb      	str	r3, [r7, #8]
 800ba58:	687b      	ldr	r3, [r7, #4]
 800ba5a:	681b      	ldr	r3, [r3, #0]
 800ba5c:	4a2e      	ldr	r2, [pc, #184]	; (800bb18 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 800ba5e:	4293      	cmp	r3, r2
 800ba60:	d004      	beq.n	800ba6c <HAL_TIMEx_MasterConfigSynchronization+0x4c>
 800ba62:	687b      	ldr	r3, [r7, #4]
 800ba64:	681b      	ldr	r3, [r3, #0]
 800ba66:	4a2d      	ldr	r2, [pc, #180]	; (800bb1c <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 800ba68:	4293      	cmp	r3, r2
 800ba6a:	d108      	bne.n	800ba7e <HAL_TIMEx_MasterConfigSynchronization+0x5e>
 800ba6c:	68fb      	ldr	r3, [r7, #12]
 800ba6e:	f423 0370 	bic.w	r3, r3, #15728640	; 0xf00000
 800ba72:	60fb      	str	r3, [r7, #12]
 800ba74:	683b      	ldr	r3, [r7, #0]
 800ba76:	685b      	ldr	r3, [r3, #4]
 800ba78:	68fa      	ldr	r2, [r7, #12]
 800ba7a:	4313      	orrs	r3, r2
 800ba7c:	60fb      	str	r3, [r7, #12]
 800ba7e:	68fb      	ldr	r3, [r7, #12]
 800ba80:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 800ba84:	60fb      	str	r3, [r7, #12]
 800ba86:	683b      	ldr	r3, [r7, #0]
 800ba88:	681b      	ldr	r3, [r3, #0]
 800ba8a:	68fa      	ldr	r2, [r7, #12]
 800ba8c:	4313      	orrs	r3, r2
 800ba8e:	60fb      	str	r3, [r7, #12]
 800ba90:	687b      	ldr	r3, [r7, #4]
 800ba92:	681b      	ldr	r3, [r3, #0]
 800ba94:	68fa      	ldr	r2, [r7, #12]
 800ba96:	605a      	str	r2, [r3, #4]
 800ba98:	687b      	ldr	r3, [r7, #4]
 800ba9a:	681b      	ldr	r3, [r3, #0]
 800ba9c:	4a1e      	ldr	r2, [pc, #120]	; (800bb18 <HAL_TIMEx_MasterConfigSynchronization+0xf8>)
 800ba9e:	4293      	cmp	r3, r2
 800baa0:	d01d      	beq.n	800bade <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800baa2:	687b      	ldr	r3, [r7, #4]
 800baa4:	681b      	ldr	r3, [r3, #0]
 800baa6:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 800baaa:	d018      	beq.n	800bade <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800baac:	687b      	ldr	r3, [r7, #4]
 800baae:	681b      	ldr	r3, [r3, #0]
 800bab0:	4a1b      	ldr	r2, [pc, #108]	; (800bb20 <HAL_TIMEx_MasterConfigSynchronization+0x100>)
 800bab2:	4293      	cmp	r3, r2
 800bab4:	d013      	beq.n	800bade <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800bab6:	687b      	ldr	r3, [r7, #4]
 800bab8:	681b      	ldr	r3, [r3, #0]
 800baba:	4a1a      	ldr	r2, [pc, #104]	; (800bb24 <HAL_TIMEx_MasterConfigSynchronization+0x104>)
 800babc:	4293      	cmp	r3, r2
 800babe:	d00e      	beq.n	800bade <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800bac0:	687b      	ldr	r3, [r7, #4]
 800bac2:	681b      	ldr	r3, [r3, #0]
 800bac4:	4a18      	ldr	r2, [pc, #96]	; (800bb28 <HAL_TIMEx_MasterConfigSynchronization+0x108>)
 800bac6:	4293      	cmp	r3, r2
 800bac8:	d009      	beq.n	800bade <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800baca:	687b      	ldr	r3, [r7, #4]
 800bacc:	681b      	ldr	r3, [r3, #0]
 800bace:	4a13      	ldr	r2, [pc, #76]	; (800bb1c <HAL_TIMEx_MasterConfigSynchronization+0xfc>)
 800bad0:	4293      	cmp	r3, r2
 800bad2:	d004      	beq.n	800bade <HAL_TIMEx_MasterConfigSynchronization+0xbe>
 800bad4:	687b      	ldr	r3, [r7, #4]
 800bad6:	681b      	ldr	r3, [r3, #0]
 800bad8:	4a14      	ldr	r2, [pc, #80]	; (800bb2c <HAL_TIMEx_MasterConfigSynchronization+0x10c>)
 800bada:	4293      	cmp	r3, r2
 800badc:	d10c      	bne.n	800baf8 <HAL_TIMEx_MasterConfigSynchronization+0xd8>
 800bade:	68bb      	ldr	r3, [r7, #8]
 800bae0:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 800bae4:	60bb      	str	r3, [r7, #8]
 800bae6:	683b      	ldr	r3, [r7, #0]
 800bae8:	689b      	ldr	r3, [r3, #8]
 800baea:	68ba      	ldr	r2, [r7, #8]
 800baec:	4313      	orrs	r3, r2
 800baee:	60bb      	str	r3, [r7, #8]
 800baf0:	687b      	ldr	r3, [r7, #4]
 800baf2:	681b      	ldr	r3, [r3, #0]
 800baf4:	68ba      	ldr	r2, [r7, #8]
 800baf6:	609a      	str	r2, [r3, #8]
 800baf8:	687b      	ldr	r3, [r7, #4]
 800bafa:	2201      	movs	r2, #1
 800bafc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
 800bb00:	687b      	ldr	r3, [r7, #4]
 800bb02:	2200      	movs	r2, #0
 800bb04:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
 800bb08:	2300      	movs	r3, #0
 800bb0a:	4618      	mov	r0, r3
 800bb0c:	3714      	adds	r7, #20
 800bb0e:	46bd      	mov	sp, r7
 800bb10:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb14:	4770      	bx	lr
 800bb16:	bf00      	nop
 800bb18:	40012c00 	.word	0x40012c00
 800bb1c:	40013400 	.word	0x40013400
 800bb20:	40000400 	.word	0x40000400
 800bb24:	40000800 	.word	0x40000800
 800bb28:	40000c00 	.word	0x40000c00
 800bb2c:	40014000 	.word	0x40014000

0800bb30 <HAL_TIMEx_CommutCallback>:
 800bb30:	b480      	push	{r7}
 800bb32:	b083      	sub	sp, #12
 800bb34:	af00      	add	r7, sp, #0
 800bb36:	6078      	str	r0, [r7, #4]
 800bb38:	bf00      	nop
 800bb3a:	370c      	adds	r7, #12
 800bb3c:	46bd      	mov	sp, r7
 800bb3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb42:	4770      	bx	lr

0800bb44 <HAL_TIMEx_BreakCallback>:
 800bb44:	b480      	push	{r7}
 800bb46:	b083      	sub	sp, #12
 800bb48:	af00      	add	r7, sp, #0
 800bb4a:	6078      	str	r0, [r7, #4]
 800bb4c:	bf00      	nop
 800bb4e:	370c      	adds	r7, #12
 800bb50:	46bd      	mov	sp, r7
 800bb52:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb56:	4770      	bx	lr

0800bb58 <HAL_TIMEx_Break2Callback>:
 800bb58:	b480      	push	{r7}
 800bb5a:	b083      	sub	sp, #12
 800bb5c:	af00      	add	r7, sp, #0
 800bb5e:	6078      	str	r0, [r7, #4]
 800bb60:	bf00      	nop
 800bb62:	370c      	adds	r7, #12
 800bb64:	46bd      	mov	sp, r7
 800bb66:	f85d 7b04 	ldr.w	r7, [sp], #4
 800bb6a:	4770      	bx	lr

0800bb6c <HAL_UART_Init>:
 800bb6c:	b580      	push	{r7, lr}
 800bb6e:	b082      	sub	sp, #8
 800bb70:	af00      	add	r7, sp, #0
 800bb72:	6078      	str	r0, [r7, #4]
 800bb74:	687b      	ldr	r3, [r7, #4]
 800bb76:	2b00      	cmp	r3, #0
 800bb78:	d101      	bne.n	800bb7e <HAL_UART_Init+0x12>
 800bb7a:	2301      	movs	r3, #1
 800bb7c:	e042      	b.n	800bc04 <HAL_UART_Init+0x98>
 800bb7e:	687b      	ldr	r3, [r7, #4]
 800bb80:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bb84:	2b00      	cmp	r3, #0
 800bb86:	d106      	bne.n	800bb96 <HAL_UART_Init+0x2a>
 800bb88:	687b      	ldr	r3, [r7, #4]
 800bb8a:	2200      	movs	r2, #0
 800bb8c:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800bb90:	6878      	ldr	r0, [r7, #4]
 800bb92:	f7fb fe0b 	bl	80077ac <HAL_UART_MspInit>
 800bb96:	687b      	ldr	r3, [r7, #4]
 800bb98:	2224      	movs	r2, #36	; 0x24
 800bb9a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800bb9e:	687b      	ldr	r3, [r7, #4]
 800bba0:	681b      	ldr	r3, [r3, #0]
 800bba2:	681a      	ldr	r2, [r3, #0]
 800bba4:	687b      	ldr	r3, [r7, #4]
 800bba6:	681b      	ldr	r3, [r3, #0]
 800bba8:	f022 0201 	bic.w	r2, r2, #1
 800bbac:	601a      	str	r2, [r3, #0]
 800bbae:	6878      	ldr	r0, [r7, #4]
 800bbb0:	f000 f8c6 	bl	800bd40 <UART_SetConfig>
 800bbb4:	4603      	mov	r3, r0
 800bbb6:	2b01      	cmp	r3, #1
 800bbb8:	d101      	bne.n	800bbbe <HAL_UART_Init+0x52>
 800bbba:	2301      	movs	r3, #1
 800bbbc:	e022      	b.n	800bc04 <HAL_UART_Init+0x98>
 800bbbe:	687b      	ldr	r3, [r7, #4]
 800bbc0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800bbc2:	2b00      	cmp	r3, #0
 800bbc4:	d002      	beq.n	800bbcc <HAL_UART_Init+0x60>
 800bbc6:	6878      	ldr	r0, [r7, #4]
 800bbc8:	f001 faa8 	bl	800d11c <UART_AdvFeatureConfig>
 800bbcc:	687b      	ldr	r3, [r7, #4]
 800bbce:	681b      	ldr	r3, [r3, #0]
 800bbd0:	685a      	ldr	r2, [r3, #4]
 800bbd2:	687b      	ldr	r3, [r7, #4]
 800bbd4:	681b      	ldr	r3, [r3, #0]
 800bbd6:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 800bbda:	605a      	str	r2, [r3, #4]
 800bbdc:	687b      	ldr	r3, [r7, #4]
 800bbde:	681b      	ldr	r3, [r3, #0]
 800bbe0:	689a      	ldr	r2, [r3, #8]
 800bbe2:	687b      	ldr	r3, [r7, #4]
 800bbe4:	681b      	ldr	r3, [r3, #0]
 800bbe6:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 800bbea:	609a      	str	r2, [r3, #8]
 800bbec:	687b      	ldr	r3, [r7, #4]
 800bbee:	681b      	ldr	r3, [r3, #0]
 800bbf0:	681a      	ldr	r2, [r3, #0]
 800bbf2:	687b      	ldr	r3, [r7, #4]
 800bbf4:	681b      	ldr	r3, [r3, #0]
 800bbf6:	f042 0201 	orr.w	r2, r2, #1
 800bbfa:	601a      	str	r2, [r3, #0]
 800bbfc:	6878      	ldr	r0, [r7, #4]
 800bbfe:	f001 fb2f 	bl	800d260 <UART_CheckIdleState>
 800bc02:	4603      	mov	r3, r0
 800bc04:	4618      	mov	r0, r3
 800bc06:	3708      	adds	r7, #8
 800bc08:	46bd      	mov	sp, r7
 800bc0a:	bd80      	pop	{r7, pc}

0800bc0c <HAL_UART_Transmit>:
 800bc0c:	b580      	push	{r7, lr}
 800bc0e:	b08a      	sub	sp, #40	; 0x28
 800bc10:	af02      	add	r7, sp, #8
 800bc12:	60f8      	str	r0, [r7, #12]
 800bc14:	60b9      	str	r1, [r7, #8]
 800bc16:	603b      	str	r3, [r7, #0]
 800bc18:	4613      	mov	r3, r2
 800bc1a:	80fb      	strh	r3, [r7, #6]
 800bc1c:	68fb      	ldr	r3, [r7, #12]
 800bc1e:	f8d3 3080 	ldr.w	r3, [r3, #128]	; 0x80
 800bc22:	2b20      	cmp	r3, #32
 800bc24:	f040 8084 	bne.w	800bd30 <HAL_UART_Transmit+0x124>
 800bc28:	68bb      	ldr	r3, [r7, #8]
 800bc2a:	2b00      	cmp	r3, #0
 800bc2c:	d002      	beq.n	800bc34 <HAL_UART_Transmit+0x28>
 800bc2e:	88fb      	ldrh	r3, [r7, #6]
 800bc30:	2b00      	cmp	r3, #0
 800bc32:	d101      	bne.n	800bc38 <HAL_UART_Transmit+0x2c>
 800bc34:	2301      	movs	r3, #1
 800bc36:	e07c      	b.n	800bd32 <HAL_UART_Transmit+0x126>
 800bc38:	68fb      	ldr	r3, [r7, #12]
 800bc3a:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 800bc3e:	2b01      	cmp	r3, #1
 800bc40:	d101      	bne.n	800bc46 <HAL_UART_Transmit+0x3a>
 800bc42:	2302      	movs	r3, #2
 800bc44:	e075      	b.n	800bd32 <HAL_UART_Transmit+0x126>
 800bc46:	68fb      	ldr	r3, [r7, #12]
 800bc48:	2201      	movs	r2, #1
 800bc4a:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800bc4e:	68fb      	ldr	r3, [r7, #12]
 800bc50:	2200      	movs	r2, #0
 800bc52:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800bc56:	68fb      	ldr	r3, [r7, #12]
 800bc58:	2221      	movs	r2, #33	; 0x21
 800bc5a:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800bc5e:	f7fc fbcb 	bl	80083f8 <HAL_GetTick>
 800bc62:	6178      	str	r0, [r7, #20]
 800bc64:	68fb      	ldr	r3, [r7, #12]
 800bc66:	88fa      	ldrh	r2, [r7, #6]
 800bc68:	f8a3 2054 	strh.w	r2, [r3, #84]	; 0x54
 800bc6c:	68fb      	ldr	r3, [r7, #12]
 800bc6e:	88fa      	ldrh	r2, [r7, #6]
 800bc70:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800bc74:	68fb      	ldr	r3, [r7, #12]
 800bc76:	689b      	ldr	r3, [r3, #8]
 800bc78:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 800bc7c:	d108      	bne.n	800bc90 <HAL_UART_Transmit+0x84>
 800bc7e:	68fb      	ldr	r3, [r7, #12]
 800bc80:	691b      	ldr	r3, [r3, #16]
 800bc82:	2b00      	cmp	r3, #0
 800bc84:	d104      	bne.n	800bc90 <HAL_UART_Transmit+0x84>
 800bc86:	2300      	movs	r3, #0
 800bc88:	61fb      	str	r3, [r7, #28]
 800bc8a:	68bb      	ldr	r3, [r7, #8]
 800bc8c:	61bb      	str	r3, [r7, #24]
 800bc8e:	e003      	b.n	800bc98 <HAL_UART_Transmit+0x8c>
 800bc90:	68bb      	ldr	r3, [r7, #8]
 800bc92:	61fb      	str	r3, [r7, #28]
 800bc94:	2300      	movs	r3, #0
 800bc96:	61bb      	str	r3, [r7, #24]
 800bc98:	68fb      	ldr	r3, [r7, #12]
 800bc9a:	2200      	movs	r2, #0
 800bc9c:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800bca0:	e02d      	b.n	800bcfe <HAL_UART_Transmit+0xf2>
 800bca2:	683b      	ldr	r3, [r7, #0]
 800bca4:	9300      	str	r3, [sp, #0]
 800bca6:	697b      	ldr	r3, [r7, #20]
 800bca8:	2200      	movs	r2, #0
 800bcaa:	2180      	movs	r1, #128	; 0x80
 800bcac:	68f8      	ldr	r0, [r7, #12]
 800bcae:	f001 fb1f 	bl	800d2f0 <UART_WaitOnFlagUntilTimeout>
 800bcb2:	4603      	mov	r3, r0
 800bcb4:	2b00      	cmp	r3, #0
 800bcb6:	d001      	beq.n	800bcbc <HAL_UART_Transmit+0xb0>
 800bcb8:	2303      	movs	r3, #3
 800bcba:	e03a      	b.n	800bd32 <HAL_UART_Transmit+0x126>
 800bcbc:	69fb      	ldr	r3, [r7, #28]
 800bcbe:	2b00      	cmp	r3, #0
 800bcc0:	d10b      	bne.n	800bcda <HAL_UART_Transmit+0xce>
 800bcc2:	69bb      	ldr	r3, [r7, #24]
 800bcc4:	881a      	ldrh	r2, [r3, #0]
 800bcc6:	68fb      	ldr	r3, [r7, #12]
 800bcc8:	681b      	ldr	r3, [r3, #0]
 800bcca:	f3c2 0208 	ubfx	r2, r2, #0, #9
 800bcce:	b292      	uxth	r2, r2
 800bcd0:	851a      	strh	r2, [r3, #40]	; 0x28
 800bcd2:	69bb      	ldr	r3, [r7, #24]
 800bcd4:	3302      	adds	r3, #2
 800bcd6:	61bb      	str	r3, [r7, #24]
 800bcd8:	e008      	b.n	800bcec <HAL_UART_Transmit+0xe0>
 800bcda:	69fb      	ldr	r3, [r7, #28]
 800bcdc:	781a      	ldrb	r2, [r3, #0]
 800bcde:	68fb      	ldr	r3, [r7, #12]
 800bce0:	681b      	ldr	r3, [r3, #0]
 800bce2:	b292      	uxth	r2, r2
 800bce4:	851a      	strh	r2, [r3, #40]	; 0x28
 800bce6:	69fb      	ldr	r3, [r7, #28]
 800bce8:	3301      	adds	r3, #1
 800bcea:	61fb      	str	r3, [r7, #28]
 800bcec:	68fb      	ldr	r3, [r7, #12]
 800bcee:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800bcf2:	b29b      	uxth	r3, r3
 800bcf4:	3b01      	subs	r3, #1
 800bcf6:	b29a      	uxth	r2, r3
 800bcf8:	68fb      	ldr	r3, [r7, #12]
 800bcfa:	f8a3 2056 	strh.w	r2, [r3, #86]	; 0x56
 800bcfe:	68fb      	ldr	r3, [r7, #12]
 800bd00:	f8b3 3056 	ldrh.w	r3, [r3, #86]	; 0x56
 800bd04:	b29b      	uxth	r3, r3
 800bd06:	2b00      	cmp	r3, #0
 800bd08:	d1cb      	bne.n	800bca2 <HAL_UART_Transmit+0x96>
 800bd0a:	683b      	ldr	r3, [r7, #0]
 800bd0c:	9300      	str	r3, [sp, #0]
 800bd0e:	697b      	ldr	r3, [r7, #20]
 800bd10:	2200      	movs	r2, #0
 800bd12:	2140      	movs	r1, #64	; 0x40
 800bd14:	68f8      	ldr	r0, [r7, #12]
 800bd16:	f001 faeb 	bl	800d2f0 <UART_WaitOnFlagUntilTimeout>
 800bd1a:	4603      	mov	r3, r0
 800bd1c:	2b00      	cmp	r3, #0
 800bd1e:	d001      	beq.n	800bd24 <HAL_UART_Transmit+0x118>
 800bd20:	2303      	movs	r3, #3
 800bd22:	e006      	b.n	800bd32 <HAL_UART_Transmit+0x126>
 800bd24:	68fb      	ldr	r3, [r7, #12]
 800bd26:	2220      	movs	r2, #32
 800bd28:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800bd2c:	2300      	movs	r3, #0
 800bd2e:	e000      	b.n	800bd32 <HAL_UART_Transmit+0x126>
 800bd30:	2302      	movs	r3, #2
 800bd32:	4618      	mov	r0, r3
 800bd34:	3720      	adds	r7, #32
 800bd36:	46bd      	mov	sp, r7
 800bd38:	bd80      	pop	{r7, pc}
 800bd3a:	0000      	movs	r0, r0
 800bd3c:	0000      	movs	r0, r0
	...

0800bd40 <UART_SetConfig>:
 800bd40:	e92d 4890 	stmdb	sp!, {r4, r7, fp, lr}
 800bd44:	b08a      	sub	sp, #40	; 0x28
 800bd46:	af00      	add	r7, sp, #0
 800bd48:	6078      	str	r0, [r7, #4]
 800bd4a:	2300      	movs	r3, #0
 800bd4c:	61fb      	str	r3, [r7, #28]
 800bd4e:	2300      	movs	r3, #0
 800bd50:	76fb      	strb	r3, [r7, #27]
 800bd52:	2300      	movs	r3, #0
 800bd54:	617b      	str	r3, [r7, #20]
 800bd56:	687b      	ldr	r3, [r7, #4]
 800bd58:	689a      	ldr	r2, [r3, #8]
 800bd5a:	687b      	ldr	r3, [r7, #4]
 800bd5c:	691b      	ldr	r3, [r3, #16]
 800bd5e:	431a      	orrs	r2, r3
 800bd60:	687b      	ldr	r3, [r7, #4]
 800bd62:	695b      	ldr	r3, [r3, #20]
 800bd64:	431a      	orrs	r2, r3
 800bd66:	687b      	ldr	r3, [r7, #4]
 800bd68:	69db      	ldr	r3, [r3, #28]
 800bd6a:	4313      	orrs	r3, r2
 800bd6c:	627b      	str	r3, [r7, #36]	; 0x24
 800bd6e:	687b      	ldr	r3, [r7, #4]
 800bd70:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800bd72:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800bd74:	4313      	orrs	r3, r2
 800bd76:	627b      	str	r3, [r7, #36]	; 0x24
 800bd78:	687b      	ldr	r3, [r7, #4]
 800bd7a:	681b      	ldr	r3, [r3, #0]
 800bd7c:	681a      	ldr	r2, [r3, #0]
 800bd7e:	4baa      	ldr	r3, [pc, #680]	; (800c028 <UART_SetConfig+0x2e8>)
 800bd80:	4013      	ands	r3, r2
 800bd82:	687a      	ldr	r2, [r7, #4]
 800bd84:	6812      	ldr	r2, [r2, #0]
 800bd86:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800bd88:	430b      	orrs	r3, r1
 800bd8a:	6013      	str	r3, [r2, #0]
 800bd8c:	687b      	ldr	r3, [r7, #4]
 800bd8e:	681b      	ldr	r3, [r3, #0]
 800bd90:	685b      	ldr	r3, [r3, #4]
 800bd92:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 800bd96:	687b      	ldr	r3, [r7, #4]
 800bd98:	68da      	ldr	r2, [r3, #12]
 800bd9a:	687b      	ldr	r3, [r7, #4]
 800bd9c:	681b      	ldr	r3, [r3, #0]
 800bd9e:	430a      	orrs	r2, r1
 800bda0:	605a      	str	r2, [r3, #4]
 800bda2:	687b      	ldr	r3, [r7, #4]
 800bda4:	699b      	ldr	r3, [r3, #24]
 800bda6:	627b      	str	r3, [r7, #36]	; 0x24
 800bda8:	687b      	ldr	r3, [r7, #4]
 800bdaa:	681b      	ldr	r3, [r3, #0]
 800bdac:	4a9f      	ldr	r2, [pc, #636]	; (800c02c <UART_SetConfig+0x2ec>)
 800bdae:	4293      	cmp	r3, r2
 800bdb0:	d004      	beq.n	800bdbc <UART_SetConfig+0x7c>
 800bdb2:	687b      	ldr	r3, [r7, #4]
 800bdb4:	6a1b      	ldr	r3, [r3, #32]
 800bdb6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800bdb8:	4313      	orrs	r3, r2
 800bdba:	627b      	str	r3, [r7, #36]	; 0x24
 800bdbc:	687b      	ldr	r3, [r7, #4]
 800bdbe:	681b      	ldr	r3, [r3, #0]
 800bdc0:	689b      	ldr	r3, [r3, #8]
 800bdc2:	f023 436e 	bic.w	r3, r3, #3992977408	; 0xee000000
 800bdc6:	f423 6330 	bic.w	r3, r3, #2816	; 0xb00
 800bdca:	687a      	ldr	r2, [r7, #4]
 800bdcc:	6812      	ldr	r2, [r2, #0]
 800bdce:	6a79      	ldr	r1, [r7, #36]	; 0x24
 800bdd0:	430b      	orrs	r3, r1
 800bdd2:	6093      	str	r3, [r2, #8]
 800bdd4:	687b      	ldr	r3, [r7, #4]
 800bdd6:	681b      	ldr	r3, [r3, #0]
 800bdd8:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800bdda:	f023 010f 	bic.w	r1, r3, #15
 800bdde:	687b      	ldr	r3, [r7, #4]
 800bde0:	6a5a      	ldr	r2, [r3, #36]	; 0x24
 800bde2:	687b      	ldr	r3, [r7, #4]
 800bde4:	681b      	ldr	r3, [r3, #0]
 800bde6:	430a      	orrs	r2, r1
 800bde8:	62da      	str	r2, [r3, #44]	; 0x2c
 800bdea:	687b      	ldr	r3, [r7, #4]
 800bdec:	681b      	ldr	r3, [r3, #0]
 800bdee:	4a90      	ldr	r2, [pc, #576]	; (800c030 <UART_SetConfig+0x2f0>)
 800bdf0:	4293      	cmp	r3, r2
 800bdf2:	d126      	bne.n	800be42 <UART_SetConfig+0x102>
 800bdf4:	4b8f      	ldr	r3, [pc, #572]	; (800c034 <UART_SetConfig+0x2f4>)
 800bdf6:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800bdfa:	f003 0303 	and.w	r3, r3, #3
 800bdfe:	2b03      	cmp	r3, #3
 800be00:	d81a      	bhi.n	800be38 <UART_SetConfig+0xf8>
 800be02:	a201      	add	r2, pc, #4	; (adr r2, 800be08 <UART_SetConfig+0xc8>)
 800be04:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800be08:	0800be19 	.word	0x0800be19
 800be0c:	0800be29 	.word	0x0800be29
 800be10:	0800be21 	.word	0x0800be21
 800be14:	0800be31 	.word	0x0800be31
 800be18:	2301      	movs	r3, #1
 800be1a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800be1e:	e116      	b.n	800c04e <UART_SetConfig+0x30e>
 800be20:	2302      	movs	r3, #2
 800be22:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800be26:	e112      	b.n	800c04e <UART_SetConfig+0x30e>
 800be28:	2304      	movs	r3, #4
 800be2a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800be2e:	e10e      	b.n	800c04e <UART_SetConfig+0x30e>
 800be30:	2308      	movs	r3, #8
 800be32:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800be36:	e10a      	b.n	800c04e <UART_SetConfig+0x30e>
 800be38:	2310      	movs	r3, #16
 800be3a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800be3e:	bf00      	nop
 800be40:	e105      	b.n	800c04e <UART_SetConfig+0x30e>
 800be42:	687b      	ldr	r3, [r7, #4]
 800be44:	681b      	ldr	r3, [r3, #0]
 800be46:	4a7c      	ldr	r2, [pc, #496]	; (800c038 <UART_SetConfig+0x2f8>)
 800be48:	4293      	cmp	r3, r2
 800be4a:	d138      	bne.n	800bebe <UART_SetConfig+0x17e>
 800be4c:	4b79      	ldr	r3, [pc, #484]	; (800c034 <UART_SetConfig+0x2f4>)
 800be4e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800be52:	f003 030c 	and.w	r3, r3, #12
 800be56:	2b0c      	cmp	r3, #12
 800be58:	d82c      	bhi.n	800beb4 <UART_SetConfig+0x174>
 800be5a:	a201      	add	r2, pc, #4	; (adr r2, 800be60 <UART_SetConfig+0x120>)
 800be5c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800be60:	0800be95 	.word	0x0800be95
 800be64:	0800beb5 	.word	0x0800beb5
 800be68:	0800beb5 	.word	0x0800beb5
 800be6c:	0800beb5 	.word	0x0800beb5
 800be70:	0800bea5 	.word	0x0800bea5
 800be74:	0800beb5 	.word	0x0800beb5
 800be78:	0800beb5 	.word	0x0800beb5
 800be7c:	0800beb5 	.word	0x0800beb5
 800be80:	0800be9d 	.word	0x0800be9d
 800be84:	0800beb5 	.word	0x0800beb5
 800be88:	0800beb5 	.word	0x0800beb5
 800be8c:	0800beb5 	.word	0x0800beb5
 800be90:	0800bead 	.word	0x0800bead
 800be94:	2300      	movs	r3, #0
 800be96:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800be9a:	e0d8      	b.n	800c04e <UART_SetConfig+0x30e>
 800be9c:	2302      	movs	r3, #2
 800be9e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bea2:	e0d4      	b.n	800c04e <UART_SetConfig+0x30e>
 800bea4:	2304      	movs	r3, #4
 800bea6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800beaa:	e0d0      	b.n	800c04e <UART_SetConfig+0x30e>
 800beac:	2308      	movs	r3, #8
 800beae:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800beb2:	e0cc      	b.n	800c04e <UART_SetConfig+0x30e>
 800beb4:	2310      	movs	r3, #16
 800beb6:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800beba:	bf00      	nop
 800bebc:	e0c7      	b.n	800c04e <UART_SetConfig+0x30e>
 800bebe:	687b      	ldr	r3, [r7, #4]
 800bec0:	681b      	ldr	r3, [r3, #0]
 800bec2:	4a5e      	ldr	r2, [pc, #376]	; (800c03c <UART_SetConfig+0x2fc>)
 800bec4:	4293      	cmp	r3, r2
 800bec6:	d125      	bne.n	800bf14 <UART_SetConfig+0x1d4>
 800bec8:	4b5a      	ldr	r3, [pc, #360]	; (800c034 <UART_SetConfig+0x2f4>)
 800beca:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800bece:	f003 0330 	and.w	r3, r3, #48	; 0x30
 800bed2:	2b10      	cmp	r3, #16
 800bed4:	d011      	beq.n	800befa <UART_SetConfig+0x1ba>
 800bed6:	2b10      	cmp	r3, #16
 800bed8:	d802      	bhi.n	800bee0 <UART_SetConfig+0x1a0>
 800beda:	2b00      	cmp	r3, #0
 800bedc:	d005      	beq.n	800beea <UART_SetConfig+0x1aa>
 800bede:	e014      	b.n	800bf0a <UART_SetConfig+0x1ca>
 800bee0:	2b20      	cmp	r3, #32
 800bee2:	d006      	beq.n	800bef2 <UART_SetConfig+0x1b2>
 800bee4:	2b30      	cmp	r3, #48	; 0x30
 800bee6:	d00c      	beq.n	800bf02 <UART_SetConfig+0x1c2>
 800bee8:	e00f      	b.n	800bf0a <UART_SetConfig+0x1ca>
 800beea:	2300      	movs	r3, #0
 800beec:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bef0:	e0ad      	b.n	800c04e <UART_SetConfig+0x30e>
 800bef2:	2302      	movs	r3, #2
 800bef4:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bef8:	e0a9      	b.n	800c04e <UART_SetConfig+0x30e>
 800befa:	2304      	movs	r3, #4
 800befc:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bf00:	e0a5      	b.n	800c04e <UART_SetConfig+0x30e>
 800bf02:	2308      	movs	r3, #8
 800bf04:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bf08:	e0a1      	b.n	800c04e <UART_SetConfig+0x30e>
 800bf0a:	2310      	movs	r3, #16
 800bf0c:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bf10:	bf00      	nop
 800bf12:	e09c      	b.n	800c04e <UART_SetConfig+0x30e>
 800bf14:	687b      	ldr	r3, [r7, #4]
 800bf16:	681b      	ldr	r3, [r3, #0]
 800bf18:	4a49      	ldr	r2, [pc, #292]	; (800c040 <UART_SetConfig+0x300>)
 800bf1a:	4293      	cmp	r3, r2
 800bf1c:	d125      	bne.n	800bf6a <UART_SetConfig+0x22a>
 800bf1e:	4b45      	ldr	r3, [pc, #276]	; (800c034 <UART_SetConfig+0x2f4>)
 800bf20:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800bf24:	f003 03c0 	and.w	r3, r3, #192	; 0xc0
 800bf28:	2b40      	cmp	r3, #64	; 0x40
 800bf2a:	d011      	beq.n	800bf50 <UART_SetConfig+0x210>
 800bf2c:	2b40      	cmp	r3, #64	; 0x40
 800bf2e:	d802      	bhi.n	800bf36 <UART_SetConfig+0x1f6>
 800bf30:	2b00      	cmp	r3, #0
 800bf32:	d005      	beq.n	800bf40 <UART_SetConfig+0x200>
 800bf34:	e014      	b.n	800bf60 <UART_SetConfig+0x220>
 800bf36:	2b80      	cmp	r3, #128	; 0x80
 800bf38:	d006      	beq.n	800bf48 <UART_SetConfig+0x208>
 800bf3a:	2bc0      	cmp	r3, #192	; 0xc0
 800bf3c:	d00c      	beq.n	800bf58 <UART_SetConfig+0x218>
 800bf3e:	e00f      	b.n	800bf60 <UART_SetConfig+0x220>
 800bf40:	2300      	movs	r3, #0
 800bf42:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bf46:	e082      	b.n	800c04e <UART_SetConfig+0x30e>
 800bf48:	2302      	movs	r3, #2
 800bf4a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bf4e:	e07e      	b.n	800c04e <UART_SetConfig+0x30e>
 800bf50:	2304      	movs	r3, #4
 800bf52:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bf56:	e07a      	b.n	800c04e <UART_SetConfig+0x30e>
 800bf58:	2308      	movs	r3, #8
 800bf5a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bf5e:	e076      	b.n	800c04e <UART_SetConfig+0x30e>
 800bf60:	2310      	movs	r3, #16
 800bf62:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bf66:	bf00      	nop
 800bf68:	e071      	b.n	800c04e <UART_SetConfig+0x30e>
 800bf6a:	687b      	ldr	r3, [r7, #4]
 800bf6c:	681b      	ldr	r3, [r3, #0]
 800bf6e:	4a35      	ldr	r2, [pc, #212]	; (800c044 <UART_SetConfig+0x304>)
 800bf70:	4293      	cmp	r3, r2
 800bf72:	d129      	bne.n	800bfc8 <UART_SetConfig+0x288>
 800bf74:	4b2f      	ldr	r3, [pc, #188]	; (800c034 <UART_SetConfig+0x2f4>)
 800bf76:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800bf7a:	f403 7340 	and.w	r3, r3, #768	; 0x300
 800bf7e:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bf82:	d014      	beq.n	800bfae <UART_SetConfig+0x26e>
 800bf84:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 800bf88:	d802      	bhi.n	800bf90 <UART_SetConfig+0x250>
 800bf8a:	2b00      	cmp	r3, #0
 800bf8c:	d007      	beq.n	800bf9e <UART_SetConfig+0x25e>
 800bf8e:	e016      	b.n	800bfbe <UART_SetConfig+0x27e>
 800bf90:	f5b3 7f00 	cmp.w	r3, #512	; 0x200
 800bf94:	d007      	beq.n	800bfa6 <UART_SetConfig+0x266>
 800bf96:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800bf9a:	d00c      	beq.n	800bfb6 <UART_SetConfig+0x276>
 800bf9c:	e00f      	b.n	800bfbe <UART_SetConfig+0x27e>
 800bf9e:	2300      	movs	r3, #0
 800bfa0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bfa4:	e053      	b.n	800c04e <UART_SetConfig+0x30e>
 800bfa6:	2302      	movs	r3, #2
 800bfa8:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bfac:	e04f      	b.n	800c04e <UART_SetConfig+0x30e>
 800bfae:	2304      	movs	r3, #4
 800bfb0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bfb4:	e04b      	b.n	800c04e <UART_SetConfig+0x30e>
 800bfb6:	2308      	movs	r3, #8
 800bfb8:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bfbc:	e047      	b.n	800c04e <UART_SetConfig+0x30e>
 800bfbe:	2310      	movs	r3, #16
 800bfc0:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800bfc4:	bf00      	nop
 800bfc6:	e042      	b.n	800c04e <UART_SetConfig+0x30e>
 800bfc8:	687b      	ldr	r3, [r7, #4]
 800bfca:	681b      	ldr	r3, [r3, #0]
 800bfcc:	4a17      	ldr	r2, [pc, #92]	; (800c02c <UART_SetConfig+0x2ec>)
 800bfce:	4293      	cmp	r3, r2
 800bfd0:	d13a      	bne.n	800c048 <UART_SetConfig+0x308>
 800bfd2:	4b18      	ldr	r3, [pc, #96]	; (800c034 <UART_SetConfig+0x2f4>)
 800bfd4:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 800bfd8:	f403 6340 	and.w	r3, r3, #3072	; 0xc00
 800bfdc:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bfe0:	d014      	beq.n	800c00c <UART_SetConfig+0x2cc>
 800bfe2:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 800bfe6:	d802      	bhi.n	800bfee <UART_SetConfig+0x2ae>
 800bfe8:	2b00      	cmp	r3, #0
 800bfea:	d007      	beq.n	800bffc <UART_SetConfig+0x2bc>
 800bfec:	e016      	b.n	800c01c <UART_SetConfig+0x2dc>
 800bfee:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800bff2:	d007      	beq.n	800c004 <UART_SetConfig+0x2c4>
 800bff4:	f5b3 6f40 	cmp.w	r3, #3072	; 0xc00
 800bff8:	d00c      	beq.n	800c014 <UART_SetConfig+0x2d4>
 800bffa:	e00f      	b.n	800c01c <UART_SetConfig+0x2dc>
 800bffc:	2300      	movs	r3, #0
 800bffe:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800c002:	e024      	b.n	800c04e <UART_SetConfig+0x30e>
 800c004:	2302      	movs	r3, #2
 800c006:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800c00a:	e020      	b.n	800c04e <UART_SetConfig+0x30e>
 800c00c:	2304      	movs	r3, #4
 800c00e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800c012:	e01c      	b.n	800c04e <UART_SetConfig+0x30e>
 800c014:	2308      	movs	r3, #8
 800c016:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800c01a:	e018      	b.n	800c04e <UART_SetConfig+0x30e>
 800c01c:	2310      	movs	r3, #16
 800c01e:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800c022:	bf00      	nop
 800c024:	e013      	b.n	800c04e <UART_SetConfig+0x30e>
 800c026:	bf00      	nop
 800c028:	cfff69f3 	.word	0xcfff69f3
 800c02c:	40008000 	.word	0x40008000
 800c030:	40013800 	.word	0x40013800
 800c034:	40021000 	.word	0x40021000
 800c038:	40004400 	.word	0x40004400
 800c03c:	40004800 	.word	0x40004800
 800c040:	40004c00 	.word	0x40004c00
 800c044:	40005000 	.word	0x40005000
 800c048:	2310      	movs	r3, #16
 800c04a:	f887 3023 	strb.w	r3, [r7, #35]	; 0x23
 800c04e:	687b      	ldr	r3, [r7, #4]
 800c050:	681b      	ldr	r3, [r3, #0]
 800c052:	4a86      	ldr	r2, [pc, #536]	; (800c26c <UART_SetConfig+0x52c>)
 800c054:	4293      	cmp	r3, r2
 800c056:	f040 8422 	bne.w	800c89e <UART_SetConfig+0xb5e>
 800c05a:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800c05e:	2b08      	cmp	r3, #8
 800c060:	f200 8173 	bhi.w	800c34a <UART_SetConfig+0x60a>
 800c064:	a201      	add	r2, pc, #4	; (adr r2, 800c06c <UART_SetConfig+0x32c>)
 800c066:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c06a:	bf00      	nop
 800c06c:	0800c091 	.word	0x0800c091
 800c070:	0800c34b 	.word	0x0800c34b
 800c074:	0800c133 	.word	0x0800c133
 800c078:	0800c34b 	.word	0x0800c34b
 800c07c:	0800c1cb 	.word	0x0800c1cb
 800c080:	0800c34b 	.word	0x0800c34b
 800c084:	0800c34b 	.word	0x0800c34b
 800c088:	0800c34b 	.word	0x0800c34b
 800c08c:	0800c29d 	.word	0x0800c29d
 800c090:	f7fd fdf2 	bl	8009c78 <HAL_RCC_GetPCLK1Freq>
 800c094:	4602      	mov	r2, r0
 800c096:	687b      	ldr	r3, [r7, #4]
 800c098:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c09a:	2b00      	cmp	r3, #0
 800c09c:	d044      	beq.n	800c128 <UART_SetConfig+0x3e8>
 800c09e:	687b      	ldr	r3, [r7, #4]
 800c0a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0a2:	2b01      	cmp	r3, #1
 800c0a4:	d03e      	beq.n	800c124 <UART_SetConfig+0x3e4>
 800c0a6:	687b      	ldr	r3, [r7, #4]
 800c0a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0aa:	2b02      	cmp	r3, #2
 800c0ac:	d038      	beq.n	800c120 <UART_SetConfig+0x3e0>
 800c0ae:	687b      	ldr	r3, [r7, #4]
 800c0b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0b2:	2b03      	cmp	r3, #3
 800c0b4:	d032      	beq.n	800c11c <UART_SetConfig+0x3dc>
 800c0b6:	687b      	ldr	r3, [r7, #4]
 800c0b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0ba:	2b04      	cmp	r3, #4
 800c0bc:	d02c      	beq.n	800c118 <UART_SetConfig+0x3d8>
 800c0be:	687b      	ldr	r3, [r7, #4]
 800c0c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0c2:	2b05      	cmp	r3, #5
 800c0c4:	d026      	beq.n	800c114 <UART_SetConfig+0x3d4>
 800c0c6:	687b      	ldr	r3, [r7, #4]
 800c0c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0ca:	2b06      	cmp	r3, #6
 800c0cc:	d020      	beq.n	800c110 <UART_SetConfig+0x3d0>
 800c0ce:	687b      	ldr	r3, [r7, #4]
 800c0d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0d2:	2b07      	cmp	r3, #7
 800c0d4:	d01a      	beq.n	800c10c <UART_SetConfig+0x3cc>
 800c0d6:	687b      	ldr	r3, [r7, #4]
 800c0d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0da:	2b08      	cmp	r3, #8
 800c0dc:	d014      	beq.n	800c108 <UART_SetConfig+0x3c8>
 800c0de:	687b      	ldr	r3, [r7, #4]
 800c0e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0e2:	2b09      	cmp	r3, #9
 800c0e4:	d00e      	beq.n	800c104 <UART_SetConfig+0x3c4>
 800c0e6:	687b      	ldr	r3, [r7, #4]
 800c0e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0ea:	2b0a      	cmp	r3, #10
 800c0ec:	d008      	beq.n	800c100 <UART_SetConfig+0x3c0>
 800c0ee:	687b      	ldr	r3, [r7, #4]
 800c0f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c0f2:	2b0b      	cmp	r3, #11
 800c0f4:	d102      	bne.n	800c0fc <UART_SetConfig+0x3bc>
 800c0f6:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c0fa:	e016      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c0fc:	2301      	movs	r3, #1
 800c0fe:	e014      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c100:	2380      	movs	r3, #128	; 0x80
 800c102:	e012      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c104:	2340      	movs	r3, #64	; 0x40
 800c106:	e010      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c108:	2320      	movs	r3, #32
 800c10a:	e00e      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c10c:	2310      	movs	r3, #16
 800c10e:	e00c      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c110:	230c      	movs	r3, #12
 800c112:	e00a      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c114:	230a      	movs	r3, #10
 800c116:	e008      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c118:	2308      	movs	r3, #8
 800c11a:	e006      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c11c:	2306      	movs	r3, #6
 800c11e:	e004      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c120:	2304      	movs	r3, #4
 800c122:	e002      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c124:	2302      	movs	r3, #2
 800c126:	e000      	b.n	800c12a <UART_SetConfig+0x3ea>
 800c128:	2301      	movs	r3, #1
 800c12a:	fbb2 f3f3 	udiv	r3, r2, r3
 800c12e:	617b      	str	r3, [r7, #20]
 800c130:	e10e      	b.n	800c350 <UART_SetConfig+0x610>
 800c132:	687b      	ldr	r3, [r7, #4]
 800c134:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c136:	2b00      	cmp	r3, #0
 800c138:	d044      	beq.n	800c1c4 <UART_SetConfig+0x484>
 800c13a:	687b      	ldr	r3, [r7, #4]
 800c13c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c13e:	2b01      	cmp	r3, #1
 800c140:	d03e      	beq.n	800c1c0 <UART_SetConfig+0x480>
 800c142:	687b      	ldr	r3, [r7, #4]
 800c144:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c146:	2b02      	cmp	r3, #2
 800c148:	d038      	beq.n	800c1bc <UART_SetConfig+0x47c>
 800c14a:	687b      	ldr	r3, [r7, #4]
 800c14c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c14e:	2b03      	cmp	r3, #3
 800c150:	d032      	beq.n	800c1b8 <UART_SetConfig+0x478>
 800c152:	687b      	ldr	r3, [r7, #4]
 800c154:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c156:	2b04      	cmp	r3, #4
 800c158:	d02c      	beq.n	800c1b4 <UART_SetConfig+0x474>
 800c15a:	687b      	ldr	r3, [r7, #4]
 800c15c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c15e:	2b05      	cmp	r3, #5
 800c160:	d026      	beq.n	800c1b0 <UART_SetConfig+0x470>
 800c162:	687b      	ldr	r3, [r7, #4]
 800c164:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c166:	2b06      	cmp	r3, #6
 800c168:	d020      	beq.n	800c1ac <UART_SetConfig+0x46c>
 800c16a:	687b      	ldr	r3, [r7, #4]
 800c16c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c16e:	2b07      	cmp	r3, #7
 800c170:	d01a      	beq.n	800c1a8 <UART_SetConfig+0x468>
 800c172:	687b      	ldr	r3, [r7, #4]
 800c174:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c176:	2b08      	cmp	r3, #8
 800c178:	d014      	beq.n	800c1a4 <UART_SetConfig+0x464>
 800c17a:	687b      	ldr	r3, [r7, #4]
 800c17c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c17e:	2b09      	cmp	r3, #9
 800c180:	d00e      	beq.n	800c1a0 <UART_SetConfig+0x460>
 800c182:	687b      	ldr	r3, [r7, #4]
 800c184:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c186:	2b0a      	cmp	r3, #10
 800c188:	d008      	beq.n	800c19c <UART_SetConfig+0x45c>
 800c18a:	687b      	ldr	r3, [r7, #4]
 800c18c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c18e:	2b0b      	cmp	r3, #11
 800c190:	d102      	bne.n	800c198 <UART_SetConfig+0x458>
 800c192:	f24f 4324 	movw	r3, #62500	; 0xf424
 800c196:	e016      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c198:	4b35      	ldr	r3, [pc, #212]	; (800c270 <UART_SetConfig+0x530>)
 800c19a:	e014      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c19c:	4b35      	ldr	r3, [pc, #212]	; (800c274 <UART_SetConfig+0x534>)
 800c19e:	e012      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c1a0:	4b35      	ldr	r3, [pc, #212]	; (800c278 <UART_SetConfig+0x538>)
 800c1a2:	e010      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c1a4:	4b35      	ldr	r3, [pc, #212]	; (800c27c <UART_SetConfig+0x53c>)
 800c1a6:	e00e      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c1a8:	4b35      	ldr	r3, [pc, #212]	; (800c280 <UART_SetConfig+0x540>)
 800c1aa:	e00c      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c1ac:	4b35      	ldr	r3, [pc, #212]	; (800c284 <UART_SetConfig+0x544>)
 800c1ae:	e00a      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c1b0:	4b35      	ldr	r3, [pc, #212]	; (800c288 <UART_SetConfig+0x548>)
 800c1b2:	e008      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c1b4:	4b35      	ldr	r3, [pc, #212]	; (800c28c <UART_SetConfig+0x54c>)
 800c1b6:	e006      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c1b8:	4b35      	ldr	r3, [pc, #212]	; (800c290 <UART_SetConfig+0x550>)
 800c1ba:	e004      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c1bc:	4b35      	ldr	r3, [pc, #212]	; (800c294 <UART_SetConfig+0x554>)
 800c1be:	e002      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c1c0:	4b35      	ldr	r3, [pc, #212]	; (800c298 <UART_SetConfig+0x558>)
 800c1c2:	e000      	b.n	800c1c6 <UART_SetConfig+0x486>
 800c1c4:	4b2a      	ldr	r3, [pc, #168]	; (800c270 <UART_SetConfig+0x530>)
 800c1c6:	617b      	str	r3, [r7, #20]
 800c1c8:	e0c2      	b.n	800c350 <UART_SetConfig+0x610>
 800c1ca:	f7fd fcbf 	bl	8009b4c <HAL_RCC_GetSysClockFreq>
 800c1ce:	4602      	mov	r2, r0
 800c1d0:	687b      	ldr	r3, [r7, #4]
 800c1d2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c1d4:	2b00      	cmp	r3, #0
 800c1d6:	d044      	beq.n	800c262 <UART_SetConfig+0x522>
 800c1d8:	687b      	ldr	r3, [r7, #4]
 800c1da:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c1dc:	2b01      	cmp	r3, #1
 800c1de:	d03e      	beq.n	800c25e <UART_SetConfig+0x51e>
 800c1e0:	687b      	ldr	r3, [r7, #4]
 800c1e2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c1e4:	2b02      	cmp	r3, #2
 800c1e6:	d038      	beq.n	800c25a <UART_SetConfig+0x51a>
 800c1e8:	687b      	ldr	r3, [r7, #4]
 800c1ea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c1ec:	2b03      	cmp	r3, #3
 800c1ee:	d032      	beq.n	800c256 <UART_SetConfig+0x516>
 800c1f0:	687b      	ldr	r3, [r7, #4]
 800c1f2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c1f4:	2b04      	cmp	r3, #4
 800c1f6:	d02c      	beq.n	800c252 <UART_SetConfig+0x512>
 800c1f8:	687b      	ldr	r3, [r7, #4]
 800c1fa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c1fc:	2b05      	cmp	r3, #5
 800c1fe:	d026      	beq.n	800c24e <UART_SetConfig+0x50e>
 800c200:	687b      	ldr	r3, [r7, #4]
 800c202:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c204:	2b06      	cmp	r3, #6
 800c206:	d020      	beq.n	800c24a <UART_SetConfig+0x50a>
 800c208:	687b      	ldr	r3, [r7, #4]
 800c20a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c20c:	2b07      	cmp	r3, #7
 800c20e:	d01a      	beq.n	800c246 <UART_SetConfig+0x506>
 800c210:	687b      	ldr	r3, [r7, #4]
 800c212:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c214:	2b08      	cmp	r3, #8
 800c216:	d014      	beq.n	800c242 <UART_SetConfig+0x502>
 800c218:	687b      	ldr	r3, [r7, #4]
 800c21a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c21c:	2b09      	cmp	r3, #9
 800c21e:	d00e      	beq.n	800c23e <UART_SetConfig+0x4fe>
 800c220:	687b      	ldr	r3, [r7, #4]
 800c222:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c224:	2b0a      	cmp	r3, #10
 800c226:	d008      	beq.n	800c23a <UART_SetConfig+0x4fa>
 800c228:	687b      	ldr	r3, [r7, #4]
 800c22a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c22c:	2b0b      	cmp	r3, #11
 800c22e:	d102      	bne.n	800c236 <UART_SetConfig+0x4f6>
 800c230:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c234:	e016      	b.n	800c264 <UART_SetConfig+0x524>
 800c236:	2301      	movs	r3, #1
 800c238:	e014      	b.n	800c264 <UART_SetConfig+0x524>
 800c23a:	2380      	movs	r3, #128	; 0x80
 800c23c:	e012      	b.n	800c264 <UART_SetConfig+0x524>
 800c23e:	2340      	movs	r3, #64	; 0x40
 800c240:	e010      	b.n	800c264 <UART_SetConfig+0x524>
 800c242:	2320      	movs	r3, #32
 800c244:	e00e      	b.n	800c264 <UART_SetConfig+0x524>
 800c246:	2310      	movs	r3, #16
 800c248:	e00c      	b.n	800c264 <UART_SetConfig+0x524>
 800c24a:	230c      	movs	r3, #12
 800c24c:	e00a      	b.n	800c264 <UART_SetConfig+0x524>
 800c24e:	230a      	movs	r3, #10
 800c250:	e008      	b.n	800c264 <UART_SetConfig+0x524>
 800c252:	2308      	movs	r3, #8
 800c254:	e006      	b.n	800c264 <UART_SetConfig+0x524>
 800c256:	2306      	movs	r3, #6
 800c258:	e004      	b.n	800c264 <UART_SetConfig+0x524>
 800c25a:	2304      	movs	r3, #4
 800c25c:	e002      	b.n	800c264 <UART_SetConfig+0x524>
 800c25e:	2302      	movs	r3, #2
 800c260:	e000      	b.n	800c264 <UART_SetConfig+0x524>
 800c262:	2301      	movs	r3, #1
 800c264:	fbb2 f3f3 	udiv	r3, r2, r3
 800c268:	617b      	str	r3, [r7, #20]
 800c26a:	e071      	b.n	800c350 <UART_SetConfig+0x610>
 800c26c:	40008000 	.word	0x40008000
 800c270:	00f42400 	.word	0x00f42400
 800c274:	0001e848 	.word	0x0001e848
 800c278:	0003d090 	.word	0x0003d090
 800c27c:	0007a120 	.word	0x0007a120
 800c280:	000f4240 	.word	0x000f4240
 800c284:	00145855 	.word	0x00145855
 800c288:	00186a00 	.word	0x00186a00
 800c28c:	001e8480 	.word	0x001e8480
 800c290:	0028b0aa 	.word	0x0028b0aa
 800c294:	003d0900 	.word	0x003d0900
 800c298:	007a1200 	.word	0x007a1200
 800c29c:	687b      	ldr	r3, [r7, #4]
 800c29e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2a0:	2b00      	cmp	r3, #0
 800c2a2:	d04e      	beq.n	800c342 <UART_SetConfig+0x602>
 800c2a4:	687b      	ldr	r3, [r7, #4]
 800c2a6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2a8:	2b01      	cmp	r3, #1
 800c2aa:	d047      	beq.n	800c33c <UART_SetConfig+0x5fc>
 800c2ac:	687b      	ldr	r3, [r7, #4]
 800c2ae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2b0:	2b02      	cmp	r3, #2
 800c2b2:	d040      	beq.n	800c336 <UART_SetConfig+0x5f6>
 800c2b4:	687b      	ldr	r3, [r7, #4]
 800c2b6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2b8:	2b03      	cmp	r3, #3
 800c2ba:	d039      	beq.n	800c330 <UART_SetConfig+0x5f0>
 800c2bc:	687b      	ldr	r3, [r7, #4]
 800c2be:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2c0:	2b04      	cmp	r3, #4
 800c2c2:	d032      	beq.n	800c32a <UART_SetConfig+0x5ea>
 800c2c4:	687b      	ldr	r3, [r7, #4]
 800c2c6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2c8:	2b05      	cmp	r3, #5
 800c2ca:	d02b      	beq.n	800c324 <UART_SetConfig+0x5e4>
 800c2cc:	687b      	ldr	r3, [r7, #4]
 800c2ce:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2d0:	2b06      	cmp	r3, #6
 800c2d2:	d024      	beq.n	800c31e <UART_SetConfig+0x5de>
 800c2d4:	687b      	ldr	r3, [r7, #4]
 800c2d6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2d8:	2b07      	cmp	r3, #7
 800c2da:	d01d      	beq.n	800c318 <UART_SetConfig+0x5d8>
 800c2dc:	687b      	ldr	r3, [r7, #4]
 800c2de:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2e0:	2b08      	cmp	r3, #8
 800c2e2:	d016      	beq.n	800c312 <UART_SetConfig+0x5d2>
 800c2e4:	687b      	ldr	r3, [r7, #4]
 800c2e6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2e8:	2b09      	cmp	r3, #9
 800c2ea:	d00f      	beq.n	800c30c <UART_SetConfig+0x5cc>
 800c2ec:	687b      	ldr	r3, [r7, #4]
 800c2ee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2f0:	2b0a      	cmp	r3, #10
 800c2f2:	d008      	beq.n	800c306 <UART_SetConfig+0x5c6>
 800c2f4:	687b      	ldr	r3, [r7, #4]
 800c2f6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c2f8:	2b0b      	cmp	r3, #11
 800c2fa:	d101      	bne.n	800c300 <UART_SetConfig+0x5c0>
 800c2fc:	2380      	movs	r3, #128	; 0x80
 800c2fe:	e022      	b.n	800c346 <UART_SetConfig+0x606>
 800c300:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800c304:	e01f      	b.n	800c346 <UART_SetConfig+0x606>
 800c306:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c30a:	e01c      	b.n	800c346 <UART_SetConfig+0x606>
 800c30c:	f44f 7300 	mov.w	r3, #512	; 0x200
 800c310:	e019      	b.n	800c346 <UART_SetConfig+0x606>
 800c312:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800c316:	e016      	b.n	800c346 <UART_SetConfig+0x606>
 800c318:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800c31c:	e013      	b.n	800c346 <UART_SetConfig+0x606>
 800c31e:	f640 23aa 	movw	r3, #2730	; 0xaaa
 800c322:	e010      	b.n	800c346 <UART_SetConfig+0x606>
 800c324:	f640 43cc 	movw	r3, #3276	; 0xccc
 800c328:	e00d      	b.n	800c346 <UART_SetConfig+0x606>
 800c32a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800c32e:	e00a      	b.n	800c346 <UART_SetConfig+0x606>
 800c330:	f241 5355 	movw	r3, #5461	; 0x1555
 800c334:	e007      	b.n	800c346 <UART_SetConfig+0x606>
 800c336:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800c33a:	e004      	b.n	800c346 <UART_SetConfig+0x606>
 800c33c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800c340:	e001      	b.n	800c346 <UART_SetConfig+0x606>
 800c342:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800c346:	617b      	str	r3, [r7, #20]
 800c348:	e002      	b.n	800c350 <UART_SetConfig+0x610>
 800c34a:	2301      	movs	r3, #1
 800c34c:	76fb      	strb	r3, [r7, #27]
 800c34e:	bf00      	nop
 800c350:	697b      	ldr	r3, [r7, #20]
 800c352:	2b00      	cmp	r3, #0
 800c354:	f000 86b7 	beq.w	800d0c6 <UART_SetConfig+0x1386>
 800c358:	687b      	ldr	r3, [r7, #4]
 800c35a:	685a      	ldr	r2, [r3, #4]
 800c35c:	4613      	mov	r3, r2
 800c35e:	005b      	lsls	r3, r3, #1
 800c360:	4413      	add	r3, r2
 800c362:	697a      	ldr	r2, [r7, #20]
 800c364:	429a      	cmp	r2, r3
 800c366:	d305      	bcc.n	800c374 <UART_SetConfig+0x634>
 800c368:	687b      	ldr	r3, [r7, #4]
 800c36a:	685b      	ldr	r3, [r3, #4]
 800c36c:	031b      	lsls	r3, r3, #12
 800c36e:	697a      	ldr	r2, [r7, #20]
 800c370:	429a      	cmp	r2, r3
 800c372:	d903      	bls.n	800c37c <UART_SetConfig+0x63c>
 800c374:	2301      	movs	r3, #1
 800c376:	76fb      	strb	r3, [r7, #27]
 800c378:	f000 bea5 	b.w	800d0c6 <UART_SetConfig+0x1386>
 800c37c:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800c380:	2b08      	cmp	r3, #8
 800c382:	f200 8277 	bhi.w	800c874 <UART_SetConfig+0xb34>
 800c386:	a201      	add	r2, pc, #4	; (adr r2, 800c38c <UART_SetConfig+0x64c>)
 800c388:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c38c:	0800c3b1 	.word	0x0800c3b1
 800c390:	0800c875 	.word	0x0800c875
 800c394:	0800c4ef 	.word	0x0800c4ef
 800c398:	0800c875 	.word	0x0800c875
 800c39c:	0800c5e5 	.word	0x0800c5e5
 800c3a0:	0800c875 	.word	0x0800c875
 800c3a4:	0800c875 	.word	0x0800c875
 800c3a8:	0800c875 	.word	0x0800c875
 800c3ac:	0800c723 	.word	0x0800c723
 800c3b0:	f7fd fc62 	bl	8009c78 <HAL_RCC_GetPCLK1Freq>
 800c3b4:	6138      	str	r0, [r7, #16]
 800c3b6:	693b      	ldr	r3, [r7, #16]
 800c3b8:	4618      	mov	r0, r3
 800c3ba:	f04f 0100 	mov.w	r1, #0
 800c3be:	687b      	ldr	r3, [r7, #4]
 800c3c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3c2:	2b00      	cmp	r3, #0
 800c3c4:	d067      	beq.n	800c496 <UART_SetConfig+0x756>
 800c3c6:	687b      	ldr	r3, [r7, #4]
 800c3c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3ca:	2b01      	cmp	r3, #1
 800c3cc:	d05e      	beq.n	800c48c <UART_SetConfig+0x74c>
 800c3ce:	687b      	ldr	r3, [r7, #4]
 800c3d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3d2:	2b02      	cmp	r3, #2
 800c3d4:	d055      	beq.n	800c482 <UART_SetConfig+0x742>
 800c3d6:	687b      	ldr	r3, [r7, #4]
 800c3d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3da:	2b03      	cmp	r3, #3
 800c3dc:	d04c      	beq.n	800c478 <UART_SetConfig+0x738>
 800c3de:	687b      	ldr	r3, [r7, #4]
 800c3e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3e2:	2b04      	cmp	r3, #4
 800c3e4:	d043      	beq.n	800c46e <UART_SetConfig+0x72e>
 800c3e6:	687b      	ldr	r3, [r7, #4]
 800c3e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3ea:	2b05      	cmp	r3, #5
 800c3ec:	d03a      	beq.n	800c464 <UART_SetConfig+0x724>
 800c3ee:	687b      	ldr	r3, [r7, #4]
 800c3f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3f2:	2b06      	cmp	r3, #6
 800c3f4:	d031      	beq.n	800c45a <UART_SetConfig+0x71a>
 800c3f6:	687b      	ldr	r3, [r7, #4]
 800c3f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c3fa:	2b07      	cmp	r3, #7
 800c3fc:	d028      	beq.n	800c450 <UART_SetConfig+0x710>
 800c3fe:	687b      	ldr	r3, [r7, #4]
 800c400:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c402:	2b08      	cmp	r3, #8
 800c404:	d01f      	beq.n	800c446 <UART_SetConfig+0x706>
 800c406:	687b      	ldr	r3, [r7, #4]
 800c408:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c40a:	2b09      	cmp	r3, #9
 800c40c:	d016      	beq.n	800c43c <UART_SetConfig+0x6fc>
 800c40e:	687b      	ldr	r3, [r7, #4]
 800c410:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c412:	2b0a      	cmp	r3, #10
 800c414:	d00d      	beq.n	800c432 <UART_SetConfig+0x6f2>
 800c416:	687b      	ldr	r3, [r7, #4]
 800c418:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c41a:	2b0b      	cmp	r3, #11
 800c41c:	d104      	bne.n	800c428 <UART_SetConfig+0x6e8>
 800c41e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c422:	f04f 0400 	mov.w	r4, #0
 800c426:	e03a      	b.n	800c49e <UART_SetConfig+0x75e>
 800c428:	f04f 0301 	mov.w	r3, #1
 800c42c:	f04f 0400 	mov.w	r4, #0
 800c430:	e035      	b.n	800c49e <UART_SetConfig+0x75e>
 800c432:	f04f 0380 	mov.w	r3, #128	; 0x80
 800c436:	f04f 0400 	mov.w	r4, #0
 800c43a:	e030      	b.n	800c49e <UART_SetConfig+0x75e>
 800c43c:	f04f 0340 	mov.w	r3, #64	; 0x40
 800c440:	f04f 0400 	mov.w	r4, #0
 800c444:	e02b      	b.n	800c49e <UART_SetConfig+0x75e>
 800c446:	f04f 0320 	mov.w	r3, #32
 800c44a:	f04f 0400 	mov.w	r4, #0
 800c44e:	e026      	b.n	800c49e <UART_SetConfig+0x75e>
 800c450:	f04f 0310 	mov.w	r3, #16
 800c454:	f04f 0400 	mov.w	r4, #0
 800c458:	e021      	b.n	800c49e <UART_SetConfig+0x75e>
 800c45a:	f04f 030c 	mov.w	r3, #12
 800c45e:	f04f 0400 	mov.w	r4, #0
 800c462:	e01c      	b.n	800c49e <UART_SetConfig+0x75e>
 800c464:	f04f 030a 	mov.w	r3, #10
 800c468:	f04f 0400 	mov.w	r4, #0
 800c46c:	e017      	b.n	800c49e <UART_SetConfig+0x75e>
 800c46e:	f04f 0308 	mov.w	r3, #8
 800c472:	f04f 0400 	mov.w	r4, #0
 800c476:	e012      	b.n	800c49e <UART_SetConfig+0x75e>
 800c478:	f04f 0306 	mov.w	r3, #6
 800c47c:	f04f 0400 	mov.w	r4, #0
 800c480:	e00d      	b.n	800c49e <UART_SetConfig+0x75e>
 800c482:	f04f 0304 	mov.w	r3, #4
 800c486:	f04f 0400 	mov.w	r4, #0
 800c48a:	e008      	b.n	800c49e <UART_SetConfig+0x75e>
 800c48c:	f04f 0302 	mov.w	r3, #2
 800c490:	f04f 0400 	mov.w	r4, #0
 800c494:	e003      	b.n	800c49e <UART_SetConfig+0x75e>
 800c496:	f04f 0301 	mov.w	r3, #1
 800c49a:	f04f 0400 	mov.w	r4, #0
 800c49e:	461a      	mov	r2, r3
 800c4a0:	4623      	mov	r3, r4
 800c4a2:	f7f4 fbc3 	bl	8000c2c <__aeabi_uldivmod>
 800c4a6:	4603      	mov	r3, r0
 800c4a8:	460c      	mov	r4, r1
 800c4aa:	4619      	mov	r1, r3
 800c4ac:	4622      	mov	r2, r4
 800c4ae:	f04f 0300 	mov.w	r3, #0
 800c4b2:	f04f 0400 	mov.w	r4, #0
 800c4b6:	0214      	lsls	r4, r2, #8
 800c4b8:	ea44 6411 	orr.w	r4, r4, r1, lsr #24
 800c4bc:	020b      	lsls	r3, r1, #8
 800c4be:	687a      	ldr	r2, [r7, #4]
 800c4c0:	6852      	ldr	r2, [r2, #4]
 800c4c2:	0852      	lsrs	r2, r2, #1
 800c4c4:	4611      	mov	r1, r2
 800c4c6:	f04f 0200 	mov.w	r2, #0
 800c4ca:	eb13 0b01 	adds.w	fp, r3, r1
 800c4ce:	eb44 0c02 	adc.w	ip, r4, r2
 800c4d2:	4658      	mov	r0, fp
 800c4d4:	4661      	mov	r1, ip
 800c4d6:	687b      	ldr	r3, [r7, #4]
 800c4d8:	685b      	ldr	r3, [r3, #4]
 800c4da:	f04f 0400 	mov.w	r4, #0
 800c4de:	461a      	mov	r2, r3
 800c4e0:	4623      	mov	r3, r4
 800c4e2:	f7f4 fba3 	bl	8000c2c <__aeabi_uldivmod>
 800c4e6:	4603      	mov	r3, r0
 800c4e8:	460c      	mov	r4, r1
 800c4ea:	61fb      	str	r3, [r7, #28]
 800c4ec:	e1c5      	b.n	800c87a <UART_SetConfig+0xb3a>
 800c4ee:	687b      	ldr	r3, [r7, #4]
 800c4f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c4f2:	2b00      	cmp	r3, #0
 800c4f4:	d05b      	beq.n	800c5ae <UART_SetConfig+0x86e>
 800c4f6:	687b      	ldr	r3, [r7, #4]
 800c4f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c4fa:	2b01      	cmp	r3, #1
 800c4fc:	d053      	beq.n	800c5a6 <UART_SetConfig+0x866>
 800c4fe:	687b      	ldr	r3, [r7, #4]
 800c500:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c502:	2b02      	cmp	r3, #2
 800c504:	d04b      	beq.n	800c59e <UART_SetConfig+0x85e>
 800c506:	687b      	ldr	r3, [r7, #4]
 800c508:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c50a:	2b03      	cmp	r3, #3
 800c50c:	d043      	beq.n	800c596 <UART_SetConfig+0x856>
 800c50e:	687b      	ldr	r3, [r7, #4]
 800c510:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c512:	2b04      	cmp	r3, #4
 800c514:	d03b      	beq.n	800c58e <UART_SetConfig+0x84e>
 800c516:	687b      	ldr	r3, [r7, #4]
 800c518:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c51a:	2b05      	cmp	r3, #5
 800c51c:	d033      	beq.n	800c586 <UART_SetConfig+0x846>
 800c51e:	687b      	ldr	r3, [r7, #4]
 800c520:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c522:	2b06      	cmp	r3, #6
 800c524:	d02b      	beq.n	800c57e <UART_SetConfig+0x83e>
 800c526:	687b      	ldr	r3, [r7, #4]
 800c528:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c52a:	2b07      	cmp	r3, #7
 800c52c:	d023      	beq.n	800c576 <UART_SetConfig+0x836>
 800c52e:	687b      	ldr	r3, [r7, #4]
 800c530:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c532:	2b08      	cmp	r3, #8
 800c534:	d01b      	beq.n	800c56e <UART_SetConfig+0x82e>
 800c536:	687b      	ldr	r3, [r7, #4]
 800c538:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c53a:	2b09      	cmp	r3, #9
 800c53c:	d013      	beq.n	800c566 <UART_SetConfig+0x826>
 800c53e:	687b      	ldr	r3, [r7, #4]
 800c540:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c542:	2b0a      	cmp	r3, #10
 800c544:	d00b      	beq.n	800c55e <UART_SetConfig+0x81e>
 800c546:	687b      	ldr	r3, [r7, #4]
 800c548:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c54a:	2b0b      	cmp	r3, #11
 800c54c:	d103      	bne.n	800c556 <UART_SetConfig+0x816>
 800c54e:	4bae      	ldr	r3, [pc, #696]	; (800c808 <UART_SetConfig+0xac8>)
 800c550:	f04f 0400 	mov.w	r4, #0
 800c554:	e02e      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c556:	4bad      	ldr	r3, [pc, #692]	; (800c80c <UART_SetConfig+0xacc>)
 800c558:	f04f 0400 	mov.w	r4, #0
 800c55c:	e02a      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c55e:	4bac      	ldr	r3, [pc, #688]	; (800c810 <UART_SetConfig+0xad0>)
 800c560:	f04f 0400 	mov.w	r4, #0
 800c564:	e026      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c566:	4bab      	ldr	r3, [pc, #684]	; (800c814 <UART_SetConfig+0xad4>)
 800c568:	f04f 0400 	mov.w	r4, #0
 800c56c:	e022      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c56e:	4baa      	ldr	r3, [pc, #680]	; (800c818 <UART_SetConfig+0xad8>)
 800c570:	f04f 0400 	mov.w	r4, #0
 800c574:	e01e      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c576:	4ba9      	ldr	r3, [pc, #676]	; (800c81c <UART_SetConfig+0xadc>)
 800c578:	f04f 0400 	mov.w	r4, #0
 800c57c:	e01a      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c57e:	a49e      	add	r4, pc, #632	; (adr r4, 800c7f8 <UART_SetConfig+0xab8>)
 800c580:	e9d4 3400 	ldrd	r3, r4, [r4]
 800c584:	e016      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c586:	4ba6      	ldr	r3, [pc, #664]	; (800c820 <UART_SetConfig+0xae0>)
 800c588:	f04f 0400 	mov.w	r4, #0
 800c58c:	e012      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c58e:	4ba5      	ldr	r3, [pc, #660]	; (800c824 <UART_SetConfig+0xae4>)
 800c590:	f04f 0400 	mov.w	r4, #0
 800c594:	e00e      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c596:	a49a      	add	r4, pc, #616	; (adr r4, 800c800 <UART_SetConfig+0xac0>)
 800c598:	e9d4 3400 	ldrd	r3, r4, [r4]
 800c59c:	e00a      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c59e:	4ba2      	ldr	r3, [pc, #648]	; (800c828 <UART_SetConfig+0xae8>)
 800c5a0:	f04f 0400 	mov.w	r4, #0
 800c5a4:	e006      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c5a6:	4ba1      	ldr	r3, [pc, #644]	; (800c82c <UART_SetConfig+0xaec>)
 800c5a8:	f04f 0400 	mov.w	r4, #0
 800c5ac:	e002      	b.n	800c5b4 <UART_SetConfig+0x874>
 800c5ae:	4b97      	ldr	r3, [pc, #604]	; (800c80c <UART_SetConfig+0xacc>)
 800c5b0:	f04f 0400 	mov.w	r4, #0
 800c5b4:	687a      	ldr	r2, [r7, #4]
 800c5b6:	6852      	ldr	r2, [r2, #4]
 800c5b8:	0852      	lsrs	r2, r2, #1
 800c5ba:	4611      	mov	r1, r2
 800c5bc:	f04f 0200 	mov.w	r2, #0
 800c5c0:	eb13 0b01 	adds.w	fp, r3, r1
 800c5c4:	eb44 0c02 	adc.w	ip, r4, r2
 800c5c8:	4658      	mov	r0, fp
 800c5ca:	4661      	mov	r1, ip
 800c5cc:	687b      	ldr	r3, [r7, #4]
 800c5ce:	685b      	ldr	r3, [r3, #4]
 800c5d0:	f04f 0400 	mov.w	r4, #0
 800c5d4:	461a      	mov	r2, r3
 800c5d6:	4623      	mov	r3, r4
 800c5d8:	f7f4 fb28 	bl	8000c2c <__aeabi_uldivmod>
 800c5dc:	4603      	mov	r3, r0
 800c5de:	460c      	mov	r4, r1
 800c5e0:	61fb      	str	r3, [r7, #28]
 800c5e2:	e14a      	b.n	800c87a <UART_SetConfig+0xb3a>
 800c5e4:	f7fd fab2 	bl	8009b4c <HAL_RCC_GetSysClockFreq>
 800c5e8:	6138      	str	r0, [r7, #16]
 800c5ea:	693b      	ldr	r3, [r7, #16]
 800c5ec:	4618      	mov	r0, r3
 800c5ee:	f04f 0100 	mov.w	r1, #0
 800c5f2:	687b      	ldr	r3, [r7, #4]
 800c5f4:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c5f6:	2b00      	cmp	r3, #0
 800c5f8:	d067      	beq.n	800c6ca <UART_SetConfig+0x98a>
 800c5fa:	687b      	ldr	r3, [r7, #4]
 800c5fc:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c5fe:	2b01      	cmp	r3, #1
 800c600:	d05e      	beq.n	800c6c0 <UART_SetConfig+0x980>
 800c602:	687b      	ldr	r3, [r7, #4]
 800c604:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c606:	2b02      	cmp	r3, #2
 800c608:	d055      	beq.n	800c6b6 <UART_SetConfig+0x976>
 800c60a:	687b      	ldr	r3, [r7, #4]
 800c60c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c60e:	2b03      	cmp	r3, #3
 800c610:	d04c      	beq.n	800c6ac <UART_SetConfig+0x96c>
 800c612:	687b      	ldr	r3, [r7, #4]
 800c614:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c616:	2b04      	cmp	r3, #4
 800c618:	d043      	beq.n	800c6a2 <UART_SetConfig+0x962>
 800c61a:	687b      	ldr	r3, [r7, #4]
 800c61c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c61e:	2b05      	cmp	r3, #5
 800c620:	d03a      	beq.n	800c698 <UART_SetConfig+0x958>
 800c622:	687b      	ldr	r3, [r7, #4]
 800c624:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c626:	2b06      	cmp	r3, #6
 800c628:	d031      	beq.n	800c68e <UART_SetConfig+0x94e>
 800c62a:	687b      	ldr	r3, [r7, #4]
 800c62c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c62e:	2b07      	cmp	r3, #7
 800c630:	d028      	beq.n	800c684 <UART_SetConfig+0x944>
 800c632:	687b      	ldr	r3, [r7, #4]
 800c634:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c636:	2b08      	cmp	r3, #8
 800c638:	d01f      	beq.n	800c67a <UART_SetConfig+0x93a>
 800c63a:	687b      	ldr	r3, [r7, #4]
 800c63c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c63e:	2b09      	cmp	r3, #9
 800c640:	d016      	beq.n	800c670 <UART_SetConfig+0x930>
 800c642:	687b      	ldr	r3, [r7, #4]
 800c644:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c646:	2b0a      	cmp	r3, #10
 800c648:	d00d      	beq.n	800c666 <UART_SetConfig+0x926>
 800c64a:	687b      	ldr	r3, [r7, #4]
 800c64c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c64e:	2b0b      	cmp	r3, #11
 800c650:	d104      	bne.n	800c65c <UART_SetConfig+0x91c>
 800c652:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c656:	f04f 0400 	mov.w	r4, #0
 800c65a:	e03a      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c65c:	f04f 0301 	mov.w	r3, #1
 800c660:	f04f 0400 	mov.w	r4, #0
 800c664:	e035      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c666:	f04f 0380 	mov.w	r3, #128	; 0x80
 800c66a:	f04f 0400 	mov.w	r4, #0
 800c66e:	e030      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c670:	f04f 0340 	mov.w	r3, #64	; 0x40
 800c674:	f04f 0400 	mov.w	r4, #0
 800c678:	e02b      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c67a:	f04f 0320 	mov.w	r3, #32
 800c67e:	f04f 0400 	mov.w	r4, #0
 800c682:	e026      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c684:	f04f 0310 	mov.w	r3, #16
 800c688:	f04f 0400 	mov.w	r4, #0
 800c68c:	e021      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c68e:	f04f 030c 	mov.w	r3, #12
 800c692:	f04f 0400 	mov.w	r4, #0
 800c696:	e01c      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c698:	f04f 030a 	mov.w	r3, #10
 800c69c:	f04f 0400 	mov.w	r4, #0
 800c6a0:	e017      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c6a2:	f04f 0308 	mov.w	r3, #8
 800c6a6:	f04f 0400 	mov.w	r4, #0
 800c6aa:	e012      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c6ac:	f04f 0306 	mov.w	r3, #6
 800c6b0:	f04f 0400 	mov.w	r4, #0
 800c6b4:	e00d      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c6b6:	f04f 0304 	mov.w	r3, #4
 800c6ba:	f04f 0400 	mov.w	r4, #0
 800c6be:	e008      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c6c0:	f04f 0302 	mov.w	r3, #2
 800c6c4:	f04f 0400 	mov.w	r4, #0
 800c6c8:	e003      	b.n	800c6d2 <UART_SetConfig+0x992>
 800c6ca:	f04f 0301 	mov.w	r3, #1
 800c6ce:	f04f 0400 	mov.w	r4, #0
 800c6d2:	461a      	mov	r2, r3
 800c6d4:	4623      	mov	r3, r4
 800c6d6:	f7f4 faa9 	bl	8000c2c <__aeabi_uldivmod>
 800c6da:	4603      	mov	r3, r0
 800c6dc:	460c      	mov	r4, r1
 800c6de:	4619      	mov	r1, r3
 800c6e0:	4622      	mov	r2, r4
 800c6e2:	f04f 0300 	mov.w	r3, #0
 800c6e6:	f04f 0400 	mov.w	r4, #0
 800c6ea:	0214      	lsls	r4, r2, #8
 800c6ec:	ea44 6411 	orr.w	r4, r4, r1, lsr #24
 800c6f0:	020b      	lsls	r3, r1, #8
 800c6f2:	687a      	ldr	r2, [r7, #4]
 800c6f4:	6852      	ldr	r2, [r2, #4]
 800c6f6:	0852      	lsrs	r2, r2, #1
 800c6f8:	4611      	mov	r1, r2
 800c6fa:	f04f 0200 	mov.w	r2, #0
 800c6fe:	eb13 0b01 	adds.w	fp, r3, r1
 800c702:	eb44 0c02 	adc.w	ip, r4, r2
 800c706:	4658      	mov	r0, fp
 800c708:	4661      	mov	r1, ip
 800c70a:	687b      	ldr	r3, [r7, #4]
 800c70c:	685b      	ldr	r3, [r3, #4]
 800c70e:	f04f 0400 	mov.w	r4, #0
 800c712:	461a      	mov	r2, r3
 800c714:	4623      	mov	r3, r4
 800c716:	f7f4 fa89 	bl	8000c2c <__aeabi_uldivmod>
 800c71a:	4603      	mov	r3, r0
 800c71c:	460c      	mov	r4, r1
 800c71e:	61fb      	str	r3, [r7, #28]
 800c720:	e0ab      	b.n	800c87a <UART_SetConfig+0xb3a>
 800c722:	687b      	ldr	r3, [r7, #4]
 800c724:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c726:	2b00      	cmp	r3, #0
 800c728:	f000 8088 	beq.w	800c83c <UART_SetConfig+0xafc>
 800c72c:	687b      	ldr	r3, [r7, #4]
 800c72e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c730:	2b01      	cmp	r3, #1
 800c732:	d05b      	beq.n	800c7ec <UART_SetConfig+0xaac>
 800c734:	687b      	ldr	r3, [r7, #4]
 800c736:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c738:	2b02      	cmp	r3, #2
 800c73a:	d052      	beq.n	800c7e2 <UART_SetConfig+0xaa2>
 800c73c:	687b      	ldr	r3, [r7, #4]
 800c73e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c740:	2b03      	cmp	r3, #3
 800c742:	d04a      	beq.n	800c7da <UART_SetConfig+0xa9a>
 800c744:	687b      	ldr	r3, [r7, #4]
 800c746:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c748:	2b04      	cmp	r3, #4
 800c74a:	d041      	beq.n	800c7d0 <UART_SetConfig+0xa90>
 800c74c:	687b      	ldr	r3, [r7, #4]
 800c74e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c750:	2b05      	cmp	r3, #5
 800c752:	d039      	beq.n	800c7c8 <UART_SetConfig+0xa88>
 800c754:	687b      	ldr	r3, [r7, #4]
 800c756:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c758:	2b06      	cmp	r3, #6
 800c75a:	d031      	beq.n	800c7c0 <UART_SetConfig+0xa80>
 800c75c:	687b      	ldr	r3, [r7, #4]
 800c75e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c760:	2b07      	cmp	r3, #7
 800c762:	d028      	beq.n	800c7b6 <UART_SetConfig+0xa76>
 800c764:	687b      	ldr	r3, [r7, #4]
 800c766:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c768:	2b08      	cmp	r3, #8
 800c76a:	d01f      	beq.n	800c7ac <UART_SetConfig+0xa6c>
 800c76c:	687b      	ldr	r3, [r7, #4]
 800c76e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c770:	2b09      	cmp	r3, #9
 800c772:	d016      	beq.n	800c7a2 <UART_SetConfig+0xa62>
 800c774:	687b      	ldr	r3, [r7, #4]
 800c776:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c778:	2b0a      	cmp	r3, #10
 800c77a:	d00d      	beq.n	800c798 <UART_SetConfig+0xa58>
 800c77c:	687b      	ldr	r3, [r7, #4]
 800c77e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c780:	2b0b      	cmp	r3, #11
 800c782:	d104      	bne.n	800c78e <UART_SetConfig+0xa4e>
 800c784:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800c788:	f04f 0400 	mov.w	r4, #0
 800c78c:	e05a      	b.n	800c844 <UART_SetConfig+0xb04>
 800c78e:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800c792:	f04f 0400 	mov.w	r4, #0
 800c796:	e055      	b.n	800c844 <UART_SetConfig+0xb04>
 800c798:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800c79c:	f04f 0400 	mov.w	r4, #0
 800c7a0:	e050      	b.n	800c844 <UART_SetConfig+0xb04>
 800c7a2:	f44f 3300 	mov.w	r3, #131072	; 0x20000
 800c7a6:	f04f 0400 	mov.w	r4, #0
 800c7aa:	e04b      	b.n	800c844 <UART_SetConfig+0xb04>
 800c7ac:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 800c7b0:	f04f 0400 	mov.w	r4, #0
 800c7b4:	e046      	b.n	800c844 <UART_SetConfig+0xb04>
 800c7b6:	f44f 2300 	mov.w	r3, #524288	; 0x80000
 800c7ba:	f04f 0400 	mov.w	r4, #0
 800c7be:	e041      	b.n	800c844 <UART_SetConfig+0xb04>
 800c7c0:	4b1b      	ldr	r3, [pc, #108]	; (800c830 <UART_SetConfig+0xaf0>)
 800c7c2:	f04f 0400 	mov.w	r4, #0
 800c7c6:	e03d      	b.n	800c844 <UART_SetConfig+0xb04>
 800c7c8:	4b1a      	ldr	r3, [pc, #104]	; (800c834 <UART_SetConfig+0xaf4>)
 800c7ca:	f04f 0400 	mov.w	r4, #0
 800c7ce:	e039      	b.n	800c844 <UART_SetConfig+0xb04>
 800c7d0:	f44f 1380 	mov.w	r3, #1048576	; 0x100000
 800c7d4:	f04f 0400 	mov.w	r4, #0
 800c7d8:	e034      	b.n	800c844 <UART_SetConfig+0xb04>
 800c7da:	4b17      	ldr	r3, [pc, #92]	; (800c838 <UART_SetConfig+0xaf8>)
 800c7dc:	f04f 0400 	mov.w	r4, #0
 800c7e0:	e030      	b.n	800c844 <UART_SetConfig+0xb04>
 800c7e2:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 800c7e6:	f04f 0400 	mov.w	r4, #0
 800c7ea:	e02b      	b.n	800c844 <UART_SetConfig+0xb04>
 800c7ec:	f44f 0380 	mov.w	r3, #4194304	; 0x400000
 800c7f0:	f04f 0400 	mov.w	r4, #0
 800c7f4:	e026      	b.n	800c844 <UART_SetConfig+0xb04>
 800c7f6:	bf00      	nop
 800c7f8:	14585500 	.word	0x14585500
 800c7fc:	00000000 	.word	0x00000000
 800c800:	28b0aa00 	.word	0x28b0aa00
 800c804:	00000000 	.word	0x00000000
 800c808:	00f42400 	.word	0x00f42400
 800c80c:	f4240000 	.word	0xf4240000
 800c810:	01e84800 	.word	0x01e84800
 800c814:	03d09000 	.word	0x03d09000
 800c818:	07a12000 	.word	0x07a12000
 800c81c:	0f424000 	.word	0x0f424000
 800c820:	186a0000 	.word	0x186a0000
 800c824:	1e848000 	.word	0x1e848000
 800c828:	3d090000 	.word	0x3d090000
 800c82c:	7a120000 	.word	0x7a120000
 800c830:	000aaa00 	.word	0x000aaa00
 800c834:	000ccc00 	.word	0x000ccc00
 800c838:	00155500 	.word	0x00155500
 800c83c:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 800c840:	f04f 0400 	mov.w	r4, #0
 800c844:	687a      	ldr	r2, [r7, #4]
 800c846:	6852      	ldr	r2, [r2, #4]
 800c848:	0852      	lsrs	r2, r2, #1
 800c84a:	4611      	mov	r1, r2
 800c84c:	f04f 0200 	mov.w	r2, #0
 800c850:	eb13 0b01 	adds.w	fp, r3, r1
 800c854:	eb44 0c02 	adc.w	ip, r4, r2
 800c858:	4658      	mov	r0, fp
 800c85a:	4661      	mov	r1, ip
 800c85c:	687b      	ldr	r3, [r7, #4]
 800c85e:	685b      	ldr	r3, [r3, #4]
 800c860:	f04f 0400 	mov.w	r4, #0
 800c864:	461a      	mov	r2, r3
 800c866:	4623      	mov	r3, r4
 800c868:	f7f4 f9e0 	bl	8000c2c <__aeabi_uldivmod>
 800c86c:	4603      	mov	r3, r0
 800c86e:	460c      	mov	r4, r1
 800c870:	61fb      	str	r3, [r7, #28]
 800c872:	e002      	b.n	800c87a <UART_SetConfig+0xb3a>
 800c874:	2301      	movs	r3, #1
 800c876:	76fb      	strb	r3, [r7, #27]
 800c878:	bf00      	nop
 800c87a:	69fb      	ldr	r3, [r7, #28]
 800c87c:	f5b3 7f40 	cmp.w	r3, #768	; 0x300
 800c880:	d309      	bcc.n	800c896 <UART_SetConfig+0xb56>
 800c882:	69fb      	ldr	r3, [r7, #28]
 800c884:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800c888:	d205      	bcs.n	800c896 <UART_SetConfig+0xb56>
 800c88a:	687b      	ldr	r3, [r7, #4]
 800c88c:	681b      	ldr	r3, [r3, #0]
 800c88e:	69fa      	ldr	r2, [r7, #28]
 800c890:	60da      	str	r2, [r3, #12]
 800c892:	f000 bc18 	b.w	800d0c6 <UART_SetConfig+0x1386>
 800c896:	2301      	movs	r3, #1
 800c898:	76fb      	strb	r3, [r7, #27]
 800c89a:	f000 bc14 	b.w	800d0c6 <UART_SetConfig+0x1386>
 800c89e:	687b      	ldr	r3, [r7, #4]
 800c8a0:	69db      	ldr	r3, [r3, #28]
 800c8a2:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 800c8a6:	f040 8204 	bne.w	800ccb2 <UART_SetConfig+0xf72>
 800c8aa:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800c8ae:	2b08      	cmp	r3, #8
 800c8b0:	f200 81df 	bhi.w	800cc72 <UART_SetConfig+0xf32>
 800c8b4:	a201      	add	r2, pc, #4	; (adr r2, 800c8bc <UART_SetConfig+0xb7c>)
 800c8b6:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800c8ba:	bf00      	nop
 800c8bc:	0800c8e1 	.word	0x0800c8e1
 800c8c0:	0800c999 	.word	0x0800c999
 800c8c4:	0800ca51 	.word	0x0800ca51
 800c8c8:	0800cc73 	.word	0x0800cc73
 800c8cc:	0800caf9 	.word	0x0800caf9
 800c8d0:	0800cc73 	.word	0x0800cc73
 800c8d4:	0800cc73 	.word	0x0800cc73
 800c8d8:	0800cc73 	.word	0x0800cc73
 800c8dc:	0800cbb1 	.word	0x0800cbb1
 800c8e0:	f7fd f9ca 	bl	8009c78 <HAL_RCC_GetPCLK1Freq>
 800c8e4:	6138      	str	r0, [r7, #16]
 800c8e6:	687b      	ldr	r3, [r7, #4]
 800c8e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c8ea:	2b00      	cmp	r3, #0
 800c8ec:	d044      	beq.n	800c978 <UART_SetConfig+0xc38>
 800c8ee:	687b      	ldr	r3, [r7, #4]
 800c8f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c8f2:	2b01      	cmp	r3, #1
 800c8f4:	d03e      	beq.n	800c974 <UART_SetConfig+0xc34>
 800c8f6:	687b      	ldr	r3, [r7, #4]
 800c8f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c8fa:	2b02      	cmp	r3, #2
 800c8fc:	d038      	beq.n	800c970 <UART_SetConfig+0xc30>
 800c8fe:	687b      	ldr	r3, [r7, #4]
 800c900:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c902:	2b03      	cmp	r3, #3
 800c904:	d032      	beq.n	800c96c <UART_SetConfig+0xc2c>
 800c906:	687b      	ldr	r3, [r7, #4]
 800c908:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c90a:	2b04      	cmp	r3, #4
 800c90c:	d02c      	beq.n	800c968 <UART_SetConfig+0xc28>
 800c90e:	687b      	ldr	r3, [r7, #4]
 800c910:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c912:	2b05      	cmp	r3, #5
 800c914:	d026      	beq.n	800c964 <UART_SetConfig+0xc24>
 800c916:	687b      	ldr	r3, [r7, #4]
 800c918:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c91a:	2b06      	cmp	r3, #6
 800c91c:	d020      	beq.n	800c960 <UART_SetConfig+0xc20>
 800c91e:	687b      	ldr	r3, [r7, #4]
 800c920:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c922:	2b07      	cmp	r3, #7
 800c924:	d01a      	beq.n	800c95c <UART_SetConfig+0xc1c>
 800c926:	687b      	ldr	r3, [r7, #4]
 800c928:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c92a:	2b08      	cmp	r3, #8
 800c92c:	d014      	beq.n	800c958 <UART_SetConfig+0xc18>
 800c92e:	687b      	ldr	r3, [r7, #4]
 800c930:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c932:	2b09      	cmp	r3, #9
 800c934:	d00e      	beq.n	800c954 <UART_SetConfig+0xc14>
 800c936:	687b      	ldr	r3, [r7, #4]
 800c938:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c93a:	2b0a      	cmp	r3, #10
 800c93c:	d008      	beq.n	800c950 <UART_SetConfig+0xc10>
 800c93e:	687b      	ldr	r3, [r7, #4]
 800c940:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c942:	2b0b      	cmp	r3, #11
 800c944:	d102      	bne.n	800c94c <UART_SetConfig+0xc0c>
 800c946:	f44f 7380 	mov.w	r3, #256	; 0x100
 800c94a:	e016      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c94c:	2301      	movs	r3, #1
 800c94e:	e014      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c950:	2380      	movs	r3, #128	; 0x80
 800c952:	e012      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c954:	2340      	movs	r3, #64	; 0x40
 800c956:	e010      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c958:	2320      	movs	r3, #32
 800c95a:	e00e      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c95c:	2310      	movs	r3, #16
 800c95e:	e00c      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c960:	230c      	movs	r3, #12
 800c962:	e00a      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c964:	230a      	movs	r3, #10
 800c966:	e008      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c968:	2308      	movs	r3, #8
 800c96a:	e006      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c96c:	2306      	movs	r3, #6
 800c96e:	e004      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c970:	2304      	movs	r3, #4
 800c972:	e002      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c974:	2302      	movs	r3, #2
 800c976:	e000      	b.n	800c97a <UART_SetConfig+0xc3a>
 800c978:	2301      	movs	r3, #1
 800c97a:	693a      	ldr	r2, [r7, #16]
 800c97c:	fbb2 f3f3 	udiv	r3, r2, r3
 800c980:	005a      	lsls	r2, r3, #1
 800c982:	687b      	ldr	r3, [r7, #4]
 800c984:	685b      	ldr	r3, [r3, #4]
 800c986:	085b      	lsrs	r3, r3, #1
 800c988:	441a      	add	r2, r3
 800c98a:	687b      	ldr	r3, [r7, #4]
 800c98c:	685b      	ldr	r3, [r3, #4]
 800c98e:	fbb2 f3f3 	udiv	r3, r2, r3
 800c992:	b29b      	uxth	r3, r3
 800c994:	61fb      	str	r3, [r7, #28]
 800c996:	e16f      	b.n	800cc78 <UART_SetConfig+0xf38>
 800c998:	f7fd f984 	bl	8009ca4 <HAL_RCC_GetPCLK2Freq>
 800c99c:	6138      	str	r0, [r7, #16]
 800c99e:	687b      	ldr	r3, [r7, #4]
 800c9a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9a2:	2b00      	cmp	r3, #0
 800c9a4:	d044      	beq.n	800ca30 <UART_SetConfig+0xcf0>
 800c9a6:	687b      	ldr	r3, [r7, #4]
 800c9a8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9aa:	2b01      	cmp	r3, #1
 800c9ac:	d03e      	beq.n	800ca2c <UART_SetConfig+0xcec>
 800c9ae:	687b      	ldr	r3, [r7, #4]
 800c9b0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9b2:	2b02      	cmp	r3, #2
 800c9b4:	d038      	beq.n	800ca28 <UART_SetConfig+0xce8>
 800c9b6:	687b      	ldr	r3, [r7, #4]
 800c9b8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9ba:	2b03      	cmp	r3, #3
 800c9bc:	d032      	beq.n	800ca24 <UART_SetConfig+0xce4>
 800c9be:	687b      	ldr	r3, [r7, #4]
 800c9c0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9c2:	2b04      	cmp	r3, #4
 800c9c4:	d02c      	beq.n	800ca20 <UART_SetConfig+0xce0>
 800c9c6:	687b      	ldr	r3, [r7, #4]
 800c9c8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9ca:	2b05      	cmp	r3, #5
 800c9cc:	d026      	beq.n	800ca1c <UART_SetConfig+0xcdc>
 800c9ce:	687b      	ldr	r3, [r7, #4]
 800c9d0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9d2:	2b06      	cmp	r3, #6
 800c9d4:	d020      	beq.n	800ca18 <UART_SetConfig+0xcd8>
 800c9d6:	687b      	ldr	r3, [r7, #4]
 800c9d8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9da:	2b07      	cmp	r3, #7
 800c9dc:	d01a      	beq.n	800ca14 <UART_SetConfig+0xcd4>
 800c9de:	687b      	ldr	r3, [r7, #4]
 800c9e0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9e2:	2b08      	cmp	r3, #8
 800c9e4:	d014      	beq.n	800ca10 <UART_SetConfig+0xcd0>
 800c9e6:	687b      	ldr	r3, [r7, #4]
 800c9e8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9ea:	2b09      	cmp	r3, #9
 800c9ec:	d00e      	beq.n	800ca0c <UART_SetConfig+0xccc>
 800c9ee:	687b      	ldr	r3, [r7, #4]
 800c9f0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9f2:	2b0a      	cmp	r3, #10
 800c9f4:	d008      	beq.n	800ca08 <UART_SetConfig+0xcc8>
 800c9f6:	687b      	ldr	r3, [r7, #4]
 800c9f8:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800c9fa:	2b0b      	cmp	r3, #11
 800c9fc:	d102      	bne.n	800ca04 <UART_SetConfig+0xcc4>
 800c9fe:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ca02:	e016      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca04:	2301      	movs	r3, #1
 800ca06:	e014      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca08:	2380      	movs	r3, #128	; 0x80
 800ca0a:	e012      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca0c:	2340      	movs	r3, #64	; 0x40
 800ca0e:	e010      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca10:	2320      	movs	r3, #32
 800ca12:	e00e      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca14:	2310      	movs	r3, #16
 800ca16:	e00c      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca18:	230c      	movs	r3, #12
 800ca1a:	e00a      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca1c:	230a      	movs	r3, #10
 800ca1e:	e008      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca20:	2308      	movs	r3, #8
 800ca22:	e006      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca24:	2306      	movs	r3, #6
 800ca26:	e004      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca28:	2304      	movs	r3, #4
 800ca2a:	e002      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca2c:	2302      	movs	r3, #2
 800ca2e:	e000      	b.n	800ca32 <UART_SetConfig+0xcf2>
 800ca30:	2301      	movs	r3, #1
 800ca32:	693a      	ldr	r2, [r7, #16]
 800ca34:	fbb2 f3f3 	udiv	r3, r2, r3
 800ca38:	005a      	lsls	r2, r3, #1
 800ca3a:	687b      	ldr	r3, [r7, #4]
 800ca3c:	685b      	ldr	r3, [r3, #4]
 800ca3e:	085b      	lsrs	r3, r3, #1
 800ca40:	441a      	add	r2, r3
 800ca42:	687b      	ldr	r3, [r7, #4]
 800ca44:	685b      	ldr	r3, [r3, #4]
 800ca46:	fbb2 f3f3 	udiv	r3, r2, r3
 800ca4a:	b29b      	uxth	r3, r3
 800ca4c:	61fb      	str	r3, [r7, #28]
 800ca4e:	e113      	b.n	800cc78 <UART_SetConfig+0xf38>
 800ca50:	687b      	ldr	r3, [r7, #4]
 800ca52:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca54:	2b00      	cmp	r3, #0
 800ca56:	d043      	beq.n	800cae0 <UART_SetConfig+0xda0>
 800ca58:	687b      	ldr	r3, [r7, #4]
 800ca5a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca5c:	2b01      	cmp	r3, #1
 800ca5e:	d03d      	beq.n	800cadc <UART_SetConfig+0xd9c>
 800ca60:	687b      	ldr	r3, [r7, #4]
 800ca62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca64:	2b02      	cmp	r3, #2
 800ca66:	d037      	beq.n	800cad8 <UART_SetConfig+0xd98>
 800ca68:	687b      	ldr	r3, [r7, #4]
 800ca6a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca6c:	2b03      	cmp	r3, #3
 800ca6e:	d031      	beq.n	800cad4 <UART_SetConfig+0xd94>
 800ca70:	687b      	ldr	r3, [r7, #4]
 800ca72:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca74:	2b04      	cmp	r3, #4
 800ca76:	d02b      	beq.n	800cad0 <UART_SetConfig+0xd90>
 800ca78:	687b      	ldr	r3, [r7, #4]
 800ca7a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca7c:	2b05      	cmp	r3, #5
 800ca7e:	d025      	beq.n	800cacc <UART_SetConfig+0xd8c>
 800ca80:	687b      	ldr	r3, [r7, #4]
 800ca82:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca84:	2b06      	cmp	r3, #6
 800ca86:	d01f      	beq.n	800cac8 <UART_SetConfig+0xd88>
 800ca88:	687b      	ldr	r3, [r7, #4]
 800ca8a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca8c:	2b07      	cmp	r3, #7
 800ca8e:	d019      	beq.n	800cac4 <UART_SetConfig+0xd84>
 800ca90:	687b      	ldr	r3, [r7, #4]
 800ca92:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca94:	2b08      	cmp	r3, #8
 800ca96:	d013      	beq.n	800cac0 <UART_SetConfig+0xd80>
 800ca98:	687b      	ldr	r3, [r7, #4]
 800ca9a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ca9c:	2b09      	cmp	r3, #9
 800ca9e:	d00d      	beq.n	800cabc <UART_SetConfig+0xd7c>
 800caa0:	687b      	ldr	r3, [r7, #4]
 800caa2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800caa4:	2b0a      	cmp	r3, #10
 800caa6:	d007      	beq.n	800cab8 <UART_SetConfig+0xd78>
 800caa8:	687b      	ldr	r3, [r7, #4]
 800caaa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800caac:	2b0b      	cmp	r3, #11
 800caae:	d101      	bne.n	800cab4 <UART_SetConfig+0xd74>
 800cab0:	4b8d      	ldr	r3, [pc, #564]	; (800cce8 <UART_SetConfig+0xfa8>)
 800cab2:	e016      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cab4:	4b8d      	ldr	r3, [pc, #564]	; (800ccec <UART_SetConfig+0xfac>)
 800cab6:	e014      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cab8:	4b8d      	ldr	r3, [pc, #564]	; (800ccf0 <UART_SetConfig+0xfb0>)
 800caba:	e012      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cabc:	4b8d      	ldr	r3, [pc, #564]	; (800ccf4 <UART_SetConfig+0xfb4>)
 800cabe:	e010      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cac0:	4b8d      	ldr	r3, [pc, #564]	; (800ccf8 <UART_SetConfig+0xfb8>)
 800cac2:	e00e      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cac4:	4b8d      	ldr	r3, [pc, #564]	; (800ccfc <UART_SetConfig+0xfbc>)
 800cac6:	e00c      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cac8:	4b8d      	ldr	r3, [pc, #564]	; (800cd00 <UART_SetConfig+0xfc0>)
 800caca:	e00a      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cacc:	4b8d      	ldr	r3, [pc, #564]	; (800cd04 <UART_SetConfig+0xfc4>)
 800cace:	e008      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cad0:	4b8d      	ldr	r3, [pc, #564]	; (800cd08 <UART_SetConfig+0xfc8>)
 800cad2:	e006      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cad4:	4b8d      	ldr	r3, [pc, #564]	; (800cd0c <UART_SetConfig+0xfcc>)
 800cad6:	e004      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cad8:	4b8d      	ldr	r3, [pc, #564]	; (800cd10 <UART_SetConfig+0xfd0>)
 800cada:	e002      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cadc:	4b8d      	ldr	r3, [pc, #564]	; (800cd14 <UART_SetConfig+0xfd4>)
 800cade:	e000      	b.n	800cae2 <UART_SetConfig+0xda2>
 800cae0:	4b82      	ldr	r3, [pc, #520]	; (800ccec <UART_SetConfig+0xfac>)
 800cae2:	687a      	ldr	r2, [r7, #4]
 800cae4:	6852      	ldr	r2, [r2, #4]
 800cae6:	0852      	lsrs	r2, r2, #1
 800cae8:	441a      	add	r2, r3
 800caea:	687b      	ldr	r3, [r7, #4]
 800caec:	685b      	ldr	r3, [r3, #4]
 800caee:	fbb2 f3f3 	udiv	r3, r2, r3
 800caf2:	b29b      	uxth	r3, r3
 800caf4:	61fb      	str	r3, [r7, #28]
 800caf6:	e0bf      	b.n	800cc78 <UART_SetConfig+0xf38>
 800caf8:	f7fd f828 	bl	8009b4c <HAL_RCC_GetSysClockFreq>
 800cafc:	6138      	str	r0, [r7, #16]
 800cafe:	687b      	ldr	r3, [r7, #4]
 800cb00:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb02:	2b00      	cmp	r3, #0
 800cb04:	d044      	beq.n	800cb90 <UART_SetConfig+0xe50>
 800cb06:	687b      	ldr	r3, [r7, #4]
 800cb08:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb0a:	2b01      	cmp	r3, #1
 800cb0c:	d03e      	beq.n	800cb8c <UART_SetConfig+0xe4c>
 800cb0e:	687b      	ldr	r3, [r7, #4]
 800cb10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb12:	2b02      	cmp	r3, #2
 800cb14:	d038      	beq.n	800cb88 <UART_SetConfig+0xe48>
 800cb16:	687b      	ldr	r3, [r7, #4]
 800cb18:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb1a:	2b03      	cmp	r3, #3
 800cb1c:	d032      	beq.n	800cb84 <UART_SetConfig+0xe44>
 800cb1e:	687b      	ldr	r3, [r7, #4]
 800cb20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb22:	2b04      	cmp	r3, #4
 800cb24:	d02c      	beq.n	800cb80 <UART_SetConfig+0xe40>
 800cb26:	687b      	ldr	r3, [r7, #4]
 800cb28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb2a:	2b05      	cmp	r3, #5
 800cb2c:	d026      	beq.n	800cb7c <UART_SetConfig+0xe3c>
 800cb2e:	687b      	ldr	r3, [r7, #4]
 800cb30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb32:	2b06      	cmp	r3, #6
 800cb34:	d020      	beq.n	800cb78 <UART_SetConfig+0xe38>
 800cb36:	687b      	ldr	r3, [r7, #4]
 800cb38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb3a:	2b07      	cmp	r3, #7
 800cb3c:	d01a      	beq.n	800cb74 <UART_SetConfig+0xe34>
 800cb3e:	687b      	ldr	r3, [r7, #4]
 800cb40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb42:	2b08      	cmp	r3, #8
 800cb44:	d014      	beq.n	800cb70 <UART_SetConfig+0xe30>
 800cb46:	687b      	ldr	r3, [r7, #4]
 800cb48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb4a:	2b09      	cmp	r3, #9
 800cb4c:	d00e      	beq.n	800cb6c <UART_SetConfig+0xe2c>
 800cb4e:	687b      	ldr	r3, [r7, #4]
 800cb50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb52:	2b0a      	cmp	r3, #10
 800cb54:	d008      	beq.n	800cb68 <UART_SetConfig+0xe28>
 800cb56:	687b      	ldr	r3, [r7, #4]
 800cb58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cb5a:	2b0b      	cmp	r3, #11
 800cb5c:	d102      	bne.n	800cb64 <UART_SetConfig+0xe24>
 800cb5e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cb62:	e016      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb64:	2301      	movs	r3, #1
 800cb66:	e014      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb68:	2380      	movs	r3, #128	; 0x80
 800cb6a:	e012      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb6c:	2340      	movs	r3, #64	; 0x40
 800cb6e:	e010      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb70:	2320      	movs	r3, #32
 800cb72:	e00e      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb74:	2310      	movs	r3, #16
 800cb76:	e00c      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb78:	230c      	movs	r3, #12
 800cb7a:	e00a      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb7c:	230a      	movs	r3, #10
 800cb7e:	e008      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb80:	2308      	movs	r3, #8
 800cb82:	e006      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb84:	2306      	movs	r3, #6
 800cb86:	e004      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb88:	2304      	movs	r3, #4
 800cb8a:	e002      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb8c:	2302      	movs	r3, #2
 800cb8e:	e000      	b.n	800cb92 <UART_SetConfig+0xe52>
 800cb90:	2301      	movs	r3, #1
 800cb92:	693a      	ldr	r2, [r7, #16]
 800cb94:	fbb2 f3f3 	udiv	r3, r2, r3
 800cb98:	005a      	lsls	r2, r3, #1
 800cb9a:	687b      	ldr	r3, [r7, #4]
 800cb9c:	685b      	ldr	r3, [r3, #4]
 800cb9e:	085b      	lsrs	r3, r3, #1
 800cba0:	441a      	add	r2, r3
 800cba2:	687b      	ldr	r3, [r7, #4]
 800cba4:	685b      	ldr	r3, [r3, #4]
 800cba6:	fbb2 f3f3 	udiv	r3, r2, r3
 800cbaa:	b29b      	uxth	r3, r3
 800cbac:	61fb      	str	r3, [r7, #28]
 800cbae:	e063      	b.n	800cc78 <UART_SetConfig+0xf38>
 800cbb0:	687b      	ldr	r3, [r7, #4]
 800cbb2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbb4:	2b00      	cmp	r3, #0
 800cbb6:	d04f      	beq.n	800cc58 <UART_SetConfig+0xf18>
 800cbb8:	687b      	ldr	r3, [r7, #4]
 800cbba:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbbc:	2b01      	cmp	r3, #1
 800cbbe:	d048      	beq.n	800cc52 <UART_SetConfig+0xf12>
 800cbc0:	687b      	ldr	r3, [r7, #4]
 800cbc2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbc4:	2b02      	cmp	r3, #2
 800cbc6:	d041      	beq.n	800cc4c <UART_SetConfig+0xf0c>
 800cbc8:	687b      	ldr	r3, [r7, #4]
 800cbca:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbcc:	2b03      	cmp	r3, #3
 800cbce:	d03a      	beq.n	800cc46 <UART_SetConfig+0xf06>
 800cbd0:	687b      	ldr	r3, [r7, #4]
 800cbd2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbd4:	2b04      	cmp	r3, #4
 800cbd6:	d033      	beq.n	800cc40 <UART_SetConfig+0xf00>
 800cbd8:	687b      	ldr	r3, [r7, #4]
 800cbda:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbdc:	2b05      	cmp	r3, #5
 800cbde:	d02c      	beq.n	800cc3a <UART_SetConfig+0xefa>
 800cbe0:	687b      	ldr	r3, [r7, #4]
 800cbe2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbe4:	2b06      	cmp	r3, #6
 800cbe6:	d025      	beq.n	800cc34 <UART_SetConfig+0xef4>
 800cbe8:	687b      	ldr	r3, [r7, #4]
 800cbea:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbec:	2b07      	cmp	r3, #7
 800cbee:	d01e      	beq.n	800cc2e <UART_SetConfig+0xeee>
 800cbf0:	687b      	ldr	r3, [r7, #4]
 800cbf2:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbf4:	2b08      	cmp	r3, #8
 800cbf6:	d017      	beq.n	800cc28 <UART_SetConfig+0xee8>
 800cbf8:	687b      	ldr	r3, [r7, #4]
 800cbfa:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cbfc:	2b09      	cmp	r3, #9
 800cbfe:	d010      	beq.n	800cc22 <UART_SetConfig+0xee2>
 800cc00:	687b      	ldr	r3, [r7, #4]
 800cc02:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cc04:	2b0a      	cmp	r3, #10
 800cc06:	d009      	beq.n	800cc1c <UART_SetConfig+0xedc>
 800cc08:	687b      	ldr	r3, [r7, #4]
 800cc0a:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cc0c:	2b0b      	cmp	r3, #11
 800cc0e:	d102      	bne.n	800cc16 <UART_SetConfig+0xed6>
 800cc10:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cc14:	e022      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc16:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800cc1a:	e01f      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc1c:	f44f 7300 	mov.w	r3, #512	; 0x200
 800cc20:	e01c      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc22:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800cc26:	e019      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc28:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800cc2c:	e016      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc2e:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800cc32:	e013      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc34:	f241 5354 	movw	r3, #5460	; 0x1554
 800cc38:	e010      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc3a:	f641 1398 	movw	r3, #6552	; 0x1998
 800cc3e:	e00d      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc40:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800cc44:	e00a      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc46:	f642 23aa 	movw	r3, #10922	; 0x2aaa
 800cc4a:	e007      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc4c:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800cc50:	e004      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc52:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800cc56:	e001      	b.n	800cc5c <UART_SetConfig+0xf1c>
 800cc58:	f44f 3380 	mov.w	r3, #65536	; 0x10000
 800cc5c:	687a      	ldr	r2, [r7, #4]
 800cc5e:	6852      	ldr	r2, [r2, #4]
 800cc60:	0852      	lsrs	r2, r2, #1
 800cc62:	441a      	add	r2, r3
 800cc64:	687b      	ldr	r3, [r7, #4]
 800cc66:	685b      	ldr	r3, [r3, #4]
 800cc68:	fbb2 f3f3 	udiv	r3, r2, r3
 800cc6c:	b29b      	uxth	r3, r3
 800cc6e:	61fb      	str	r3, [r7, #28]
 800cc70:	e002      	b.n	800cc78 <UART_SetConfig+0xf38>
 800cc72:	2301      	movs	r3, #1
 800cc74:	76fb      	strb	r3, [r7, #27]
 800cc76:	bf00      	nop
 800cc78:	69fb      	ldr	r3, [r7, #28]
 800cc7a:	2b0f      	cmp	r3, #15
 800cc7c:	d916      	bls.n	800ccac <UART_SetConfig+0xf6c>
 800cc7e:	69fb      	ldr	r3, [r7, #28]
 800cc80:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800cc84:	d212      	bcs.n	800ccac <UART_SetConfig+0xf6c>
 800cc86:	69fb      	ldr	r3, [r7, #28]
 800cc88:	b29b      	uxth	r3, r3
 800cc8a:	f023 030f 	bic.w	r3, r3, #15
 800cc8e:	81fb      	strh	r3, [r7, #14]
 800cc90:	69fb      	ldr	r3, [r7, #28]
 800cc92:	085b      	lsrs	r3, r3, #1
 800cc94:	b29b      	uxth	r3, r3
 800cc96:	f003 0307 	and.w	r3, r3, #7
 800cc9a:	b29a      	uxth	r2, r3
 800cc9c:	89fb      	ldrh	r3, [r7, #14]
 800cc9e:	4313      	orrs	r3, r2
 800cca0:	81fb      	strh	r3, [r7, #14]
 800cca2:	687b      	ldr	r3, [r7, #4]
 800cca4:	681b      	ldr	r3, [r3, #0]
 800cca6:	89fa      	ldrh	r2, [r7, #14]
 800cca8:	60da      	str	r2, [r3, #12]
 800ccaa:	e20c      	b.n	800d0c6 <UART_SetConfig+0x1386>
 800ccac:	2301      	movs	r3, #1
 800ccae:	76fb      	strb	r3, [r7, #27]
 800ccb0:	e209      	b.n	800d0c6 <UART_SetConfig+0x1386>
 800ccb2:	f897 3023 	ldrb.w	r3, [r7, #35]	; 0x23
 800ccb6:	2b08      	cmp	r3, #8
 800ccb8:	f200 81f4 	bhi.w	800d0a4 <UART_SetConfig+0x1364>
 800ccbc:	a201      	add	r2, pc, #4	; (adr r2, 800ccc4 <UART_SetConfig+0xf84>)
 800ccbe:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800ccc2:	bf00      	nop
 800ccc4:	0800cd19 	.word	0x0800cd19
 800ccc8:	0800cdcf 	.word	0x0800cdcf
 800cccc:	0800ce85 	.word	0x0800ce85
 800ccd0:	0800d0a5 	.word	0x0800d0a5
 800ccd4:	0800cf2f 	.word	0x0800cf2f
 800ccd8:	0800d0a5 	.word	0x0800d0a5
 800ccdc:	0800d0a5 	.word	0x0800d0a5
 800cce0:	0800d0a5 	.word	0x0800d0a5
 800cce4:	0800cfe5 	.word	0x0800cfe5
 800cce8:	0001e848 	.word	0x0001e848
 800ccec:	01e84800 	.word	0x01e84800
 800ccf0:	0003d090 	.word	0x0003d090
 800ccf4:	0007a120 	.word	0x0007a120
 800ccf8:	000f4240 	.word	0x000f4240
 800ccfc:	001e8480 	.word	0x001e8480
 800cd00:	0028b0aa 	.word	0x0028b0aa
 800cd04:	0030d400 	.word	0x0030d400
 800cd08:	003d0900 	.word	0x003d0900
 800cd0c:	00516154 	.word	0x00516154
 800cd10:	007a1200 	.word	0x007a1200
 800cd14:	00f42400 	.word	0x00f42400
 800cd18:	f7fc ffae 	bl	8009c78 <HAL_RCC_GetPCLK1Freq>
 800cd1c:	6138      	str	r0, [r7, #16]
 800cd1e:	687b      	ldr	r3, [r7, #4]
 800cd20:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd22:	2b00      	cmp	r3, #0
 800cd24:	d044      	beq.n	800cdb0 <UART_SetConfig+0x1070>
 800cd26:	687b      	ldr	r3, [r7, #4]
 800cd28:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd2a:	2b01      	cmp	r3, #1
 800cd2c:	d03e      	beq.n	800cdac <UART_SetConfig+0x106c>
 800cd2e:	687b      	ldr	r3, [r7, #4]
 800cd30:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd32:	2b02      	cmp	r3, #2
 800cd34:	d038      	beq.n	800cda8 <UART_SetConfig+0x1068>
 800cd36:	687b      	ldr	r3, [r7, #4]
 800cd38:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd3a:	2b03      	cmp	r3, #3
 800cd3c:	d032      	beq.n	800cda4 <UART_SetConfig+0x1064>
 800cd3e:	687b      	ldr	r3, [r7, #4]
 800cd40:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd42:	2b04      	cmp	r3, #4
 800cd44:	d02c      	beq.n	800cda0 <UART_SetConfig+0x1060>
 800cd46:	687b      	ldr	r3, [r7, #4]
 800cd48:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd4a:	2b05      	cmp	r3, #5
 800cd4c:	d026      	beq.n	800cd9c <UART_SetConfig+0x105c>
 800cd4e:	687b      	ldr	r3, [r7, #4]
 800cd50:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd52:	2b06      	cmp	r3, #6
 800cd54:	d020      	beq.n	800cd98 <UART_SetConfig+0x1058>
 800cd56:	687b      	ldr	r3, [r7, #4]
 800cd58:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd5a:	2b07      	cmp	r3, #7
 800cd5c:	d01a      	beq.n	800cd94 <UART_SetConfig+0x1054>
 800cd5e:	687b      	ldr	r3, [r7, #4]
 800cd60:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd62:	2b08      	cmp	r3, #8
 800cd64:	d014      	beq.n	800cd90 <UART_SetConfig+0x1050>
 800cd66:	687b      	ldr	r3, [r7, #4]
 800cd68:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd6a:	2b09      	cmp	r3, #9
 800cd6c:	d00e      	beq.n	800cd8c <UART_SetConfig+0x104c>
 800cd6e:	687b      	ldr	r3, [r7, #4]
 800cd70:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd72:	2b0a      	cmp	r3, #10
 800cd74:	d008      	beq.n	800cd88 <UART_SetConfig+0x1048>
 800cd76:	687b      	ldr	r3, [r7, #4]
 800cd78:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cd7a:	2b0b      	cmp	r3, #11
 800cd7c:	d102      	bne.n	800cd84 <UART_SetConfig+0x1044>
 800cd7e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cd82:	e016      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cd84:	2301      	movs	r3, #1
 800cd86:	e014      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cd88:	2380      	movs	r3, #128	; 0x80
 800cd8a:	e012      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cd8c:	2340      	movs	r3, #64	; 0x40
 800cd8e:	e010      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cd90:	2320      	movs	r3, #32
 800cd92:	e00e      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cd94:	2310      	movs	r3, #16
 800cd96:	e00c      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cd98:	230c      	movs	r3, #12
 800cd9a:	e00a      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cd9c:	230a      	movs	r3, #10
 800cd9e:	e008      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cda0:	2308      	movs	r3, #8
 800cda2:	e006      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cda4:	2306      	movs	r3, #6
 800cda6:	e004      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cda8:	2304      	movs	r3, #4
 800cdaa:	e002      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cdac:	2302      	movs	r3, #2
 800cdae:	e000      	b.n	800cdb2 <UART_SetConfig+0x1072>
 800cdb0:	2301      	movs	r3, #1
 800cdb2:	693a      	ldr	r2, [r7, #16]
 800cdb4:	fbb2 f2f3 	udiv	r2, r2, r3
 800cdb8:	687b      	ldr	r3, [r7, #4]
 800cdba:	685b      	ldr	r3, [r3, #4]
 800cdbc:	085b      	lsrs	r3, r3, #1
 800cdbe:	441a      	add	r2, r3
 800cdc0:	687b      	ldr	r3, [r7, #4]
 800cdc2:	685b      	ldr	r3, [r3, #4]
 800cdc4:	fbb2 f3f3 	udiv	r3, r2, r3
 800cdc8:	b29b      	uxth	r3, r3
 800cdca:	61fb      	str	r3, [r7, #28]
 800cdcc:	e16d      	b.n	800d0aa <UART_SetConfig+0x136a>
 800cdce:	f7fc ff69 	bl	8009ca4 <HAL_RCC_GetPCLK2Freq>
 800cdd2:	6138      	str	r0, [r7, #16]
 800cdd4:	687b      	ldr	r3, [r7, #4]
 800cdd6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cdd8:	2b00      	cmp	r3, #0
 800cdda:	d044      	beq.n	800ce66 <UART_SetConfig+0x1126>
 800cddc:	687b      	ldr	r3, [r7, #4]
 800cdde:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cde0:	2b01      	cmp	r3, #1
 800cde2:	d03e      	beq.n	800ce62 <UART_SetConfig+0x1122>
 800cde4:	687b      	ldr	r3, [r7, #4]
 800cde6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cde8:	2b02      	cmp	r3, #2
 800cdea:	d038      	beq.n	800ce5e <UART_SetConfig+0x111e>
 800cdec:	687b      	ldr	r3, [r7, #4]
 800cdee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cdf0:	2b03      	cmp	r3, #3
 800cdf2:	d032      	beq.n	800ce5a <UART_SetConfig+0x111a>
 800cdf4:	687b      	ldr	r3, [r7, #4]
 800cdf6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cdf8:	2b04      	cmp	r3, #4
 800cdfa:	d02c      	beq.n	800ce56 <UART_SetConfig+0x1116>
 800cdfc:	687b      	ldr	r3, [r7, #4]
 800cdfe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce00:	2b05      	cmp	r3, #5
 800ce02:	d026      	beq.n	800ce52 <UART_SetConfig+0x1112>
 800ce04:	687b      	ldr	r3, [r7, #4]
 800ce06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce08:	2b06      	cmp	r3, #6
 800ce0a:	d020      	beq.n	800ce4e <UART_SetConfig+0x110e>
 800ce0c:	687b      	ldr	r3, [r7, #4]
 800ce0e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce10:	2b07      	cmp	r3, #7
 800ce12:	d01a      	beq.n	800ce4a <UART_SetConfig+0x110a>
 800ce14:	687b      	ldr	r3, [r7, #4]
 800ce16:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce18:	2b08      	cmp	r3, #8
 800ce1a:	d014      	beq.n	800ce46 <UART_SetConfig+0x1106>
 800ce1c:	687b      	ldr	r3, [r7, #4]
 800ce1e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce20:	2b09      	cmp	r3, #9
 800ce22:	d00e      	beq.n	800ce42 <UART_SetConfig+0x1102>
 800ce24:	687b      	ldr	r3, [r7, #4]
 800ce26:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce28:	2b0a      	cmp	r3, #10
 800ce2a:	d008      	beq.n	800ce3e <UART_SetConfig+0x10fe>
 800ce2c:	687b      	ldr	r3, [r7, #4]
 800ce2e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce30:	2b0b      	cmp	r3, #11
 800ce32:	d102      	bne.n	800ce3a <UART_SetConfig+0x10fa>
 800ce34:	f44f 7380 	mov.w	r3, #256	; 0x100
 800ce38:	e016      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce3a:	2301      	movs	r3, #1
 800ce3c:	e014      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce3e:	2380      	movs	r3, #128	; 0x80
 800ce40:	e012      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce42:	2340      	movs	r3, #64	; 0x40
 800ce44:	e010      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce46:	2320      	movs	r3, #32
 800ce48:	e00e      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce4a:	2310      	movs	r3, #16
 800ce4c:	e00c      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce4e:	230c      	movs	r3, #12
 800ce50:	e00a      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce52:	230a      	movs	r3, #10
 800ce54:	e008      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce56:	2308      	movs	r3, #8
 800ce58:	e006      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce5a:	2306      	movs	r3, #6
 800ce5c:	e004      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce5e:	2304      	movs	r3, #4
 800ce60:	e002      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce62:	2302      	movs	r3, #2
 800ce64:	e000      	b.n	800ce68 <UART_SetConfig+0x1128>
 800ce66:	2301      	movs	r3, #1
 800ce68:	693a      	ldr	r2, [r7, #16]
 800ce6a:	fbb2 f2f3 	udiv	r2, r2, r3
 800ce6e:	687b      	ldr	r3, [r7, #4]
 800ce70:	685b      	ldr	r3, [r3, #4]
 800ce72:	085b      	lsrs	r3, r3, #1
 800ce74:	441a      	add	r2, r3
 800ce76:	687b      	ldr	r3, [r7, #4]
 800ce78:	685b      	ldr	r3, [r3, #4]
 800ce7a:	fbb2 f3f3 	udiv	r3, r2, r3
 800ce7e:	b29b      	uxth	r3, r3
 800ce80:	61fb      	str	r3, [r7, #28]
 800ce82:	e112      	b.n	800d0aa <UART_SetConfig+0x136a>
 800ce84:	687b      	ldr	r3, [r7, #4]
 800ce86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce88:	2b00      	cmp	r3, #0
 800ce8a:	d044      	beq.n	800cf16 <UART_SetConfig+0x11d6>
 800ce8c:	687b      	ldr	r3, [r7, #4]
 800ce8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce90:	2b01      	cmp	r3, #1
 800ce92:	d03e      	beq.n	800cf12 <UART_SetConfig+0x11d2>
 800ce94:	687b      	ldr	r3, [r7, #4]
 800ce96:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ce98:	2b02      	cmp	r3, #2
 800ce9a:	d038      	beq.n	800cf0e <UART_SetConfig+0x11ce>
 800ce9c:	687b      	ldr	r3, [r7, #4]
 800ce9e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cea0:	2b03      	cmp	r3, #3
 800cea2:	d032      	beq.n	800cf0a <UART_SetConfig+0x11ca>
 800cea4:	687b      	ldr	r3, [r7, #4]
 800cea6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cea8:	2b04      	cmp	r3, #4
 800ceaa:	d02c      	beq.n	800cf06 <UART_SetConfig+0x11c6>
 800ceac:	687b      	ldr	r3, [r7, #4]
 800ceae:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ceb0:	2b05      	cmp	r3, #5
 800ceb2:	d026      	beq.n	800cf02 <UART_SetConfig+0x11c2>
 800ceb4:	687b      	ldr	r3, [r7, #4]
 800ceb6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ceb8:	2b06      	cmp	r3, #6
 800ceba:	d020      	beq.n	800cefe <UART_SetConfig+0x11be>
 800cebc:	687b      	ldr	r3, [r7, #4]
 800cebe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cec0:	2b07      	cmp	r3, #7
 800cec2:	d01a      	beq.n	800cefa <UART_SetConfig+0x11ba>
 800cec4:	687b      	ldr	r3, [r7, #4]
 800cec6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cec8:	2b08      	cmp	r3, #8
 800ceca:	d014      	beq.n	800cef6 <UART_SetConfig+0x11b6>
 800cecc:	687b      	ldr	r3, [r7, #4]
 800cece:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ced0:	2b09      	cmp	r3, #9
 800ced2:	d00e      	beq.n	800cef2 <UART_SetConfig+0x11b2>
 800ced4:	687b      	ldr	r3, [r7, #4]
 800ced6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800ced8:	2b0a      	cmp	r3, #10
 800ceda:	d008      	beq.n	800ceee <UART_SetConfig+0x11ae>
 800cedc:	687b      	ldr	r3, [r7, #4]
 800cede:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cee0:	2b0b      	cmp	r3, #11
 800cee2:	d102      	bne.n	800ceea <UART_SetConfig+0x11aa>
 800cee4:	f24f 4324 	movw	r3, #62500	; 0xf424
 800cee8:	e016      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800ceea:	4b81      	ldr	r3, [pc, #516]	; (800d0f0 <UART_SetConfig+0x13b0>)
 800ceec:	e014      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800ceee:	4b81      	ldr	r3, [pc, #516]	; (800d0f4 <UART_SetConfig+0x13b4>)
 800cef0:	e012      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800cef2:	4b81      	ldr	r3, [pc, #516]	; (800d0f8 <UART_SetConfig+0x13b8>)
 800cef4:	e010      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800cef6:	4b81      	ldr	r3, [pc, #516]	; (800d0fc <UART_SetConfig+0x13bc>)
 800cef8:	e00e      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800cefa:	4b81      	ldr	r3, [pc, #516]	; (800d100 <UART_SetConfig+0x13c0>)
 800cefc:	e00c      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800cefe:	4b81      	ldr	r3, [pc, #516]	; (800d104 <UART_SetConfig+0x13c4>)
 800cf00:	e00a      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800cf02:	4b81      	ldr	r3, [pc, #516]	; (800d108 <UART_SetConfig+0x13c8>)
 800cf04:	e008      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800cf06:	4b81      	ldr	r3, [pc, #516]	; (800d10c <UART_SetConfig+0x13cc>)
 800cf08:	e006      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800cf0a:	4b81      	ldr	r3, [pc, #516]	; (800d110 <UART_SetConfig+0x13d0>)
 800cf0c:	e004      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800cf0e:	4b81      	ldr	r3, [pc, #516]	; (800d114 <UART_SetConfig+0x13d4>)
 800cf10:	e002      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800cf12:	4b81      	ldr	r3, [pc, #516]	; (800d118 <UART_SetConfig+0x13d8>)
 800cf14:	e000      	b.n	800cf18 <UART_SetConfig+0x11d8>
 800cf16:	4b76      	ldr	r3, [pc, #472]	; (800d0f0 <UART_SetConfig+0x13b0>)
 800cf18:	687a      	ldr	r2, [r7, #4]
 800cf1a:	6852      	ldr	r2, [r2, #4]
 800cf1c:	0852      	lsrs	r2, r2, #1
 800cf1e:	441a      	add	r2, r3
 800cf20:	687b      	ldr	r3, [r7, #4]
 800cf22:	685b      	ldr	r3, [r3, #4]
 800cf24:	fbb2 f3f3 	udiv	r3, r2, r3
 800cf28:	b29b      	uxth	r3, r3
 800cf2a:	61fb      	str	r3, [r7, #28]
 800cf2c:	e0bd      	b.n	800d0aa <UART_SetConfig+0x136a>
 800cf2e:	f7fc fe0d 	bl	8009b4c <HAL_RCC_GetSysClockFreq>
 800cf32:	6138      	str	r0, [r7, #16]
 800cf34:	687b      	ldr	r3, [r7, #4]
 800cf36:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf38:	2b00      	cmp	r3, #0
 800cf3a:	d044      	beq.n	800cfc6 <UART_SetConfig+0x1286>
 800cf3c:	687b      	ldr	r3, [r7, #4]
 800cf3e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf40:	2b01      	cmp	r3, #1
 800cf42:	d03e      	beq.n	800cfc2 <UART_SetConfig+0x1282>
 800cf44:	687b      	ldr	r3, [r7, #4]
 800cf46:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf48:	2b02      	cmp	r3, #2
 800cf4a:	d038      	beq.n	800cfbe <UART_SetConfig+0x127e>
 800cf4c:	687b      	ldr	r3, [r7, #4]
 800cf4e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf50:	2b03      	cmp	r3, #3
 800cf52:	d032      	beq.n	800cfba <UART_SetConfig+0x127a>
 800cf54:	687b      	ldr	r3, [r7, #4]
 800cf56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf58:	2b04      	cmp	r3, #4
 800cf5a:	d02c      	beq.n	800cfb6 <UART_SetConfig+0x1276>
 800cf5c:	687b      	ldr	r3, [r7, #4]
 800cf5e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf60:	2b05      	cmp	r3, #5
 800cf62:	d026      	beq.n	800cfb2 <UART_SetConfig+0x1272>
 800cf64:	687b      	ldr	r3, [r7, #4]
 800cf66:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf68:	2b06      	cmp	r3, #6
 800cf6a:	d020      	beq.n	800cfae <UART_SetConfig+0x126e>
 800cf6c:	687b      	ldr	r3, [r7, #4]
 800cf6e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf70:	2b07      	cmp	r3, #7
 800cf72:	d01a      	beq.n	800cfaa <UART_SetConfig+0x126a>
 800cf74:	687b      	ldr	r3, [r7, #4]
 800cf76:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf78:	2b08      	cmp	r3, #8
 800cf7a:	d014      	beq.n	800cfa6 <UART_SetConfig+0x1266>
 800cf7c:	687b      	ldr	r3, [r7, #4]
 800cf7e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf80:	2b09      	cmp	r3, #9
 800cf82:	d00e      	beq.n	800cfa2 <UART_SetConfig+0x1262>
 800cf84:	687b      	ldr	r3, [r7, #4]
 800cf86:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf88:	2b0a      	cmp	r3, #10
 800cf8a:	d008      	beq.n	800cf9e <UART_SetConfig+0x125e>
 800cf8c:	687b      	ldr	r3, [r7, #4]
 800cf8e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cf90:	2b0b      	cmp	r3, #11
 800cf92:	d102      	bne.n	800cf9a <UART_SetConfig+0x125a>
 800cf94:	f44f 7380 	mov.w	r3, #256	; 0x100
 800cf98:	e016      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cf9a:	2301      	movs	r3, #1
 800cf9c:	e014      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cf9e:	2380      	movs	r3, #128	; 0x80
 800cfa0:	e012      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cfa2:	2340      	movs	r3, #64	; 0x40
 800cfa4:	e010      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cfa6:	2320      	movs	r3, #32
 800cfa8:	e00e      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cfaa:	2310      	movs	r3, #16
 800cfac:	e00c      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cfae:	230c      	movs	r3, #12
 800cfb0:	e00a      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cfb2:	230a      	movs	r3, #10
 800cfb4:	e008      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cfb6:	2308      	movs	r3, #8
 800cfb8:	e006      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cfba:	2306      	movs	r3, #6
 800cfbc:	e004      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cfbe:	2304      	movs	r3, #4
 800cfc0:	e002      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cfc2:	2302      	movs	r3, #2
 800cfc4:	e000      	b.n	800cfc8 <UART_SetConfig+0x1288>
 800cfc6:	2301      	movs	r3, #1
 800cfc8:	693a      	ldr	r2, [r7, #16]
 800cfca:	fbb2 f2f3 	udiv	r2, r2, r3
 800cfce:	687b      	ldr	r3, [r7, #4]
 800cfd0:	685b      	ldr	r3, [r3, #4]
 800cfd2:	085b      	lsrs	r3, r3, #1
 800cfd4:	441a      	add	r2, r3
 800cfd6:	687b      	ldr	r3, [r7, #4]
 800cfd8:	685b      	ldr	r3, [r3, #4]
 800cfda:	fbb2 f3f3 	udiv	r3, r2, r3
 800cfde:	b29b      	uxth	r3, r3
 800cfe0:	61fb      	str	r3, [r7, #28]
 800cfe2:	e062      	b.n	800d0aa <UART_SetConfig+0x136a>
 800cfe4:	687b      	ldr	r3, [r7, #4]
 800cfe6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cfe8:	2b00      	cmp	r3, #0
 800cfea:	d04e      	beq.n	800d08a <UART_SetConfig+0x134a>
 800cfec:	687b      	ldr	r3, [r7, #4]
 800cfee:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cff0:	2b01      	cmp	r3, #1
 800cff2:	d047      	beq.n	800d084 <UART_SetConfig+0x1344>
 800cff4:	687b      	ldr	r3, [r7, #4]
 800cff6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800cff8:	2b02      	cmp	r3, #2
 800cffa:	d040      	beq.n	800d07e <UART_SetConfig+0x133e>
 800cffc:	687b      	ldr	r3, [r7, #4]
 800cffe:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d000:	2b03      	cmp	r3, #3
 800d002:	d039      	beq.n	800d078 <UART_SetConfig+0x1338>
 800d004:	687b      	ldr	r3, [r7, #4]
 800d006:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d008:	2b04      	cmp	r3, #4
 800d00a:	d032      	beq.n	800d072 <UART_SetConfig+0x1332>
 800d00c:	687b      	ldr	r3, [r7, #4]
 800d00e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d010:	2b05      	cmp	r3, #5
 800d012:	d02b      	beq.n	800d06c <UART_SetConfig+0x132c>
 800d014:	687b      	ldr	r3, [r7, #4]
 800d016:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d018:	2b06      	cmp	r3, #6
 800d01a:	d024      	beq.n	800d066 <UART_SetConfig+0x1326>
 800d01c:	687b      	ldr	r3, [r7, #4]
 800d01e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d020:	2b07      	cmp	r3, #7
 800d022:	d01d      	beq.n	800d060 <UART_SetConfig+0x1320>
 800d024:	687b      	ldr	r3, [r7, #4]
 800d026:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d028:	2b08      	cmp	r3, #8
 800d02a:	d016      	beq.n	800d05a <UART_SetConfig+0x131a>
 800d02c:	687b      	ldr	r3, [r7, #4]
 800d02e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d030:	2b09      	cmp	r3, #9
 800d032:	d00f      	beq.n	800d054 <UART_SetConfig+0x1314>
 800d034:	687b      	ldr	r3, [r7, #4]
 800d036:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d038:	2b0a      	cmp	r3, #10
 800d03a:	d008      	beq.n	800d04e <UART_SetConfig+0x130e>
 800d03c:	687b      	ldr	r3, [r7, #4]
 800d03e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800d040:	2b0b      	cmp	r3, #11
 800d042:	d101      	bne.n	800d048 <UART_SetConfig+0x1308>
 800d044:	2380      	movs	r3, #128	; 0x80
 800d046:	e022      	b.n	800d08e <UART_SetConfig+0x134e>
 800d048:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d04c:	e01f      	b.n	800d08e <UART_SetConfig+0x134e>
 800d04e:	f44f 7380 	mov.w	r3, #256	; 0x100
 800d052:	e01c      	b.n	800d08e <UART_SetConfig+0x134e>
 800d054:	f44f 7300 	mov.w	r3, #512	; 0x200
 800d058:	e019      	b.n	800d08e <UART_SetConfig+0x134e>
 800d05a:	f44f 6380 	mov.w	r3, #1024	; 0x400
 800d05e:	e016      	b.n	800d08e <UART_SetConfig+0x134e>
 800d060:	f44f 6300 	mov.w	r3, #2048	; 0x800
 800d064:	e013      	b.n	800d08e <UART_SetConfig+0x134e>
 800d066:	f640 23aa 	movw	r3, #2730	; 0xaaa
 800d06a:	e010      	b.n	800d08e <UART_SetConfig+0x134e>
 800d06c:	f640 43cc 	movw	r3, #3276	; 0xccc
 800d070:	e00d      	b.n	800d08e <UART_SetConfig+0x134e>
 800d072:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 800d076:	e00a      	b.n	800d08e <UART_SetConfig+0x134e>
 800d078:	f241 5355 	movw	r3, #5461	; 0x1555
 800d07c:	e007      	b.n	800d08e <UART_SetConfig+0x134e>
 800d07e:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 800d082:	e004      	b.n	800d08e <UART_SetConfig+0x134e>
 800d084:	f44f 4380 	mov.w	r3, #16384	; 0x4000
 800d088:	e001      	b.n	800d08e <UART_SetConfig+0x134e>
 800d08a:	f44f 4300 	mov.w	r3, #32768	; 0x8000
 800d08e:	687a      	ldr	r2, [r7, #4]
 800d090:	6852      	ldr	r2, [r2, #4]
 800d092:	0852      	lsrs	r2, r2, #1
 800d094:	441a      	add	r2, r3
 800d096:	687b      	ldr	r3, [r7, #4]
 800d098:	685b      	ldr	r3, [r3, #4]
 800d09a:	fbb2 f3f3 	udiv	r3, r2, r3
 800d09e:	b29b      	uxth	r3, r3
 800d0a0:	61fb      	str	r3, [r7, #28]
 800d0a2:	e002      	b.n	800d0aa <UART_SetConfig+0x136a>
 800d0a4:	2301      	movs	r3, #1
 800d0a6:	76fb      	strb	r3, [r7, #27]
 800d0a8:	bf00      	nop
 800d0aa:	69fb      	ldr	r3, [r7, #28]
 800d0ac:	2b0f      	cmp	r3, #15
 800d0ae:	d908      	bls.n	800d0c2 <UART_SetConfig+0x1382>
 800d0b0:	69fb      	ldr	r3, [r7, #28]
 800d0b2:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 800d0b6:	d204      	bcs.n	800d0c2 <UART_SetConfig+0x1382>
 800d0b8:	687b      	ldr	r3, [r7, #4]
 800d0ba:	681b      	ldr	r3, [r3, #0]
 800d0bc:	69fa      	ldr	r2, [r7, #28]
 800d0be:	60da      	str	r2, [r3, #12]
 800d0c0:	e001      	b.n	800d0c6 <UART_SetConfig+0x1386>
 800d0c2:	2301      	movs	r3, #1
 800d0c4:	76fb      	strb	r3, [r7, #27]
 800d0c6:	687b      	ldr	r3, [r7, #4]
 800d0c8:	2201      	movs	r2, #1
 800d0ca:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800d0ce:	687b      	ldr	r3, [r7, #4]
 800d0d0:	2201      	movs	r2, #1
 800d0d2:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800d0d6:	687b      	ldr	r3, [r7, #4]
 800d0d8:	2200      	movs	r2, #0
 800d0da:	66da      	str	r2, [r3, #108]	; 0x6c
 800d0dc:	687b      	ldr	r3, [r7, #4]
 800d0de:	2200      	movs	r2, #0
 800d0e0:	671a      	str	r2, [r3, #112]	; 0x70
 800d0e2:	7efb      	ldrb	r3, [r7, #27]
 800d0e4:	4618      	mov	r0, r3
 800d0e6:	3728      	adds	r7, #40	; 0x28
 800d0e8:	46bd      	mov	sp, r7
 800d0ea:	e8bd 8890 	ldmia.w	sp!, {r4, r7, fp, pc}
 800d0ee:	bf00      	nop
 800d0f0:	00f42400 	.word	0x00f42400
 800d0f4:	0001e848 	.word	0x0001e848
 800d0f8:	0003d090 	.word	0x0003d090
 800d0fc:	0007a120 	.word	0x0007a120
 800d100:	000f4240 	.word	0x000f4240
 800d104:	00145855 	.word	0x00145855
 800d108:	00186a00 	.word	0x00186a00
 800d10c:	001e8480 	.word	0x001e8480
 800d110:	0028b0aa 	.word	0x0028b0aa
 800d114:	003d0900 	.word	0x003d0900
 800d118:	007a1200 	.word	0x007a1200

0800d11c <UART_AdvFeatureConfig>:
 800d11c:	b480      	push	{r7}
 800d11e:	b083      	sub	sp, #12
 800d120:	af00      	add	r7, sp, #0
 800d122:	6078      	str	r0, [r7, #4]
 800d124:	687b      	ldr	r3, [r7, #4]
 800d126:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d128:	f003 0301 	and.w	r3, r3, #1
 800d12c:	2b00      	cmp	r3, #0
 800d12e:	d00a      	beq.n	800d146 <UART_AdvFeatureConfig+0x2a>
 800d130:	687b      	ldr	r3, [r7, #4]
 800d132:	681b      	ldr	r3, [r3, #0]
 800d134:	685b      	ldr	r3, [r3, #4]
 800d136:	f423 3100 	bic.w	r1, r3, #131072	; 0x20000
 800d13a:	687b      	ldr	r3, [r7, #4]
 800d13c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800d13e:	687b      	ldr	r3, [r7, #4]
 800d140:	681b      	ldr	r3, [r3, #0]
 800d142:	430a      	orrs	r2, r1
 800d144:	605a      	str	r2, [r3, #4]
 800d146:	687b      	ldr	r3, [r7, #4]
 800d148:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d14a:	f003 0302 	and.w	r3, r3, #2
 800d14e:	2b00      	cmp	r3, #0
 800d150:	d00a      	beq.n	800d168 <UART_AdvFeatureConfig+0x4c>
 800d152:	687b      	ldr	r3, [r7, #4]
 800d154:	681b      	ldr	r3, [r3, #0]
 800d156:	685b      	ldr	r3, [r3, #4]
 800d158:	f423 3180 	bic.w	r1, r3, #65536	; 0x10000
 800d15c:	687b      	ldr	r3, [r7, #4]
 800d15e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800d160:	687b      	ldr	r3, [r7, #4]
 800d162:	681b      	ldr	r3, [r3, #0]
 800d164:	430a      	orrs	r2, r1
 800d166:	605a      	str	r2, [r3, #4]
 800d168:	687b      	ldr	r3, [r7, #4]
 800d16a:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d16c:	f003 0304 	and.w	r3, r3, #4
 800d170:	2b00      	cmp	r3, #0
 800d172:	d00a      	beq.n	800d18a <UART_AdvFeatureConfig+0x6e>
 800d174:	687b      	ldr	r3, [r7, #4]
 800d176:	681b      	ldr	r3, [r3, #0]
 800d178:	685b      	ldr	r3, [r3, #4]
 800d17a:	f423 2180 	bic.w	r1, r3, #262144	; 0x40000
 800d17e:	687b      	ldr	r3, [r7, #4]
 800d180:	6b5a      	ldr	r2, [r3, #52]	; 0x34
 800d182:	687b      	ldr	r3, [r7, #4]
 800d184:	681b      	ldr	r3, [r3, #0]
 800d186:	430a      	orrs	r2, r1
 800d188:	605a      	str	r2, [r3, #4]
 800d18a:	687b      	ldr	r3, [r7, #4]
 800d18c:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d18e:	f003 0308 	and.w	r3, r3, #8
 800d192:	2b00      	cmp	r3, #0
 800d194:	d00a      	beq.n	800d1ac <UART_AdvFeatureConfig+0x90>
 800d196:	687b      	ldr	r3, [r7, #4]
 800d198:	681b      	ldr	r3, [r3, #0]
 800d19a:	685b      	ldr	r3, [r3, #4]
 800d19c:	f423 4100 	bic.w	r1, r3, #32768	; 0x8000
 800d1a0:	687b      	ldr	r3, [r7, #4]
 800d1a2:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800d1a4:	687b      	ldr	r3, [r7, #4]
 800d1a6:	681b      	ldr	r3, [r3, #0]
 800d1a8:	430a      	orrs	r2, r1
 800d1aa:	605a      	str	r2, [r3, #4]
 800d1ac:	687b      	ldr	r3, [r7, #4]
 800d1ae:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d1b0:	f003 0310 	and.w	r3, r3, #16
 800d1b4:	2b00      	cmp	r3, #0
 800d1b6:	d00a      	beq.n	800d1ce <UART_AdvFeatureConfig+0xb2>
 800d1b8:	687b      	ldr	r3, [r7, #4]
 800d1ba:	681b      	ldr	r3, [r3, #0]
 800d1bc:	689b      	ldr	r3, [r3, #8]
 800d1be:	f423 5180 	bic.w	r1, r3, #4096	; 0x1000
 800d1c2:	687b      	ldr	r3, [r7, #4]
 800d1c4:	6bda      	ldr	r2, [r3, #60]	; 0x3c
 800d1c6:	687b      	ldr	r3, [r7, #4]
 800d1c8:	681b      	ldr	r3, [r3, #0]
 800d1ca:	430a      	orrs	r2, r1
 800d1cc:	609a      	str	r2, [r3, #8]
 800d1ce:	687b      	ldr	r3, [r7, #4]
 800d1d0:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d1d2:	f003 0320 	and.w	r3, r3, #32
 800d1d6:	2b00      	cmp	r3, #0
 800d1d8:	d00a      	beq.n	800d1f0 <UART_AdvFeatureConfig+0xd4>
 800d1da:	687b      	ldr	r3, [r7, #4]
 800d1dc:	681b      	ldr	r3, [r3, #0]
 800d1de:	689b      	ldr	r3, [r3, #8]
 800d1e0:	f423 5100 	bic.w	r1, r3, #8192	; 0x2000
 800d1e4:	687b      	ldr	r3, [r7, #4]
 800d1e6:	6c1a      	ldr	r2, [r3, #64]	; 0x40
 800d1e8:	687b      	ldr	r3, [r7, #4]
 800d1ea:	681b      	ldr	r3, [r3, #0]
 800d1ec:	430a      	orrs	r2, r1
 800d1ee:	609a      	str	r2, [r3, #8]
 800d1f0:	687b      	ldr	r3, [r7, #4]
 800d1f2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d1f4:	f003 0340 	and.w	r3, r3, #64	; 0x40
 800d1f8:	2b00      	cmp	r3, #0
 800d1fa:	d01a      	beq.n	800d232 <UART_AdvFeatureConfig+0x116>
 800d1fc:	687b      	ldr	r3, [r7, #4]
 800d1fe:	681b      	ldr	r3, [r3, #0]
 800d200:	685b      	ldr	r3, [r3, #4]
 800d202:	f423 1180 	bic.w	r1, r3, #1048576	; 0x100000
 800d206:	687b      	ldr	r3, [r7, #4]
 800d208:	6c5a      	ldr	r2, [r3, #68]	; 0x44
 800d20a:	687b      	ldr	r3, [r7, #4]
 800d20c:	681b      	ldr	r3, [r3, #0]
 800d20e:	430a      	orrs	r2, r1
 800d210:	605a      	str	r2, [r3, #4]
 800d212:	687b      	ldr	r3, [r7, #4]
 800d214:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 800d216:	f5b3 1f80 	cmp.w	r3, #1048576	; 0x100000
 800d21a:	d10a      	bne.n	800d232 <UART_AdvFeatureConfig+0x116>
 800d21c:	687b      	ldr	r3, [r7, #4]
 800d21e:	681b      	ldr	r3, [r3, #0]
 800d220:	685b      	ldr	r3, [r3, #4]
 800d222:	f423 01c0 	bic.w	r1, r3, #6291456	; 0x600000
 800d226:	687b      	ldr	r3, [r7, #4]
 800d228:	6c9a      	ldr	r2, [r3, #72]	; 0x48
 800d22a:	687b      	ldr	r3, [r7, #4]
 800d22c:	681b      	ldr	r3, [r3, #0]
 800d22e:	430a      	orrs	r2, r1
 800d230:	605a      	str	r2, [r3, #4]
 800d232:	687b      	ldr	r3, [r7, #4]
 800d234:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800d236:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800d23a:	2b00      	cmp	r3, #0
 800d23c:	d00a      	beq.n	800d254 <UART_AdvFeatureConfig+0x138>
 800d23e:	687b      	ldr	r3, [r7, #4]
 800d240:	681b      	ldr	r3, [r3, #0]
 800d242:	685b      	ldr	r3, [r3, #4]
 800d244:	f423 2100 	bic.w	r1, r3, #524288	; 0x80000
 800d248:	687b      	ldr	r3, [r7, #4]
 800d24a:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800d24c:	687b      	ldr	r3, [r7, #4]
 800d24e:	681b      	ldr	r3, [r3, #0]
 800d250:	430a      	orrs	r2, r1
 800d252:	605a      	str	r2, [r3, #4]
 800d254:	bf00      	nop
 800d256:	370c      	adds	r7, #12
 800d258:	46bd      	mov	sp, r7
 800d25a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d25e:	4770      	bx	lr

0800d260 <UART_CheckIdleState>:
 800d260:	b580      	push	{r7, lr}
 800d262:	b086      	sub	sp, #24
 800d264:	af02      	add	r7, sp, #8
 800d266:	6078      	str	r0, [r7, #4]
 800d268:	687b      	ldr	r3, [r7, #4]
 800d26a:	2200      	movs	r2, #0
 800d26c:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800d270:	f7fb f8c2 	bl	80083f8 <HAL_GetTick>
 800d274:	60f8      	str	r0, [r7, #12]
 800d276:	687b      	ldr	r3, [r7, #4]
 800d278:	681b      	ldr	r3, [r3, #0]
 800d27a:	681b      	ldr	r3, [r3, #0]
 800d27c:	f003 0308 	and.w	r3, r3, #8
 800d280:	2b08      	cmp	r3, #8
 800d282:	d10e      	bne.n	800d2a2 <UART_CheckIdleState+0x42>
 800d284:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800d288:	9300      	str	r3, [sp, #0]
 800d28a:	68fb      	ldr	r3, [r7, #12]
 800d28c:	2200      	movs	r2, #0
 800d28e:	f44f 1100 	mov.w	r1, #2097152	; 0x200000
 800d292:	6878      	ldr	r0, [r7, #4]
 800d294:	f000 f82c 	bl	800d2f0 <UART_WaitOnFlagUntilTimeout>
 800d298:	4603      	mov	r3, r0
 800d29a:	2b00      	cmp	r3, #0
 800d29c:	d001      	beq.n	800d2a2 <UART_CheckIdleState+0x42>
 800d29e:	2303      	movs	r3, #3
 800d2a0:	e022      	b.n	800d2e8 <UART_CheckIdleState+0x88>
 800d2a2:	687b      	ldr	r3, [r7, #4]
 800d2a4:	681b      	ldr	r3, [r3, #0]
 800d2a6:	681b      	ldr	r3, [r3, #0]
 800d2a8:	f003 0304 	and.w	r3, r3, #4
 800d2ac:	2b04      	cmp	r3, #4
 800d2ae:	d10e      	bne.n	800d2ce <UART_CheckIdleState+0x6e>
 800d2b0:	f06f 437e 	mvn.w	r3, #4261412864	; 0xfe000000
 800d2b4:	9300      	str	r3, [sp, #0]
 800d2b6:	68fb      	ldr	r3, [r7, #12]
 800d2b8:	2200      	movs	r2, #0
 800d2ba:	f44f 0180 	mov.w	r1, #4194304	; 0x400000
 800d2be:	6878      	ldr	r0, [r7, #4]
 800d2c0:	f000 f816 	bl	800d2f0 <UART_WaitOnFlagUntilTimeout>
 800d2c4:	4603      	mov	r3, r0
 800d2c6:	2b00      	cmp	r3, #0
 800d2c8:	d001      	beq.n	800d2ce <UART_CheckIdleState+0x6e>
 800d2ca:	2303      	movs	r3, #3
 800d2cc:	e00c      	b.n	800d2e8 <UART_CheckIdleState+0x88>
 800d2ce:	687b      	ldr	r3, [r7, #4]
 800d2d0:	2220      	movs	r2, #32
 800d2d2:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800d2d6:	687b      	ldr	r3, [r7, #4]
 800d2d8:	2220      	movs	r2, #32
 800d2da:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d2de:	687b      	ldr	r3, [r7, #4]
 800d2e0:	2200      	movs	r2, #0
 800d2e2:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800d2e6:	2300      	movs	r3, #0
 800d2e8:	4618      	mov	r0, r3
 800d2ea:	3710      	adds	r7, #16
 800d2ec:	46bd      	mov	sp, r7
 800d2ee:	bd80      	pop	{r7, pc}

0800d2f0 <UART_WaitOnFlagUntilTimeout>:
 800d2f0:	b580      	push	{r7, lr}
 800d2f2:	b084      	sub	sp, #16
 800d2f4:	af00      	add	r7, sp, #0
 800d2f6:	60f8      	str	r0, [r7, #12]
 800d2f8:	60b9      	str	r1, [r7, #8]
 800d2fa:	603b      	str	r3, [r7, #0]
 800d2fc:	4613      	mov	r3, r2
 800d2fe:	71fb      	strb	r3, [r7, #7]
 800d300:	e062      	b.n	800d3c8 <UART_WaitOnFlagUntilTimeout+0xd8>
 800d302:	69bb      	ldr	r3, [r7, #24]
 800d304:	f1b3 3fff 	cmp.w	r3, #4294967295
 800d308:	d05e      	beq.n	800d3c8 <UART_WaitOnFlagUntilTimeout+0xd8>
 800d30a:	f7fb f875 	bl	80083f8 <HAL_GetTick>
 800d30e:	4602      	mov	r2, r0
 800d310:	683b      	ldr	r3, [r7, #0]
 800d312:	1ad3      	subs	r3, r2, r3
 800d314:	69ba      	ldr	r2, [r7, #24]
 800d316:	429a      	cmp	r2, r3
 800d318:	d302      	bcc.n	800d320 <UART_WaitOnFlagUntilTimeout+0x30>
 800d31a:	69bb      	ldr	r3, [r7, #24]
 800d31c:	2b00      	cmp	r3, #0
 800d31e:	d11d      	bne.n	800d35c <UART_WaitOnFlagUntilTimeout+0x6c>
 800d320:	68fb      	ldr	r3, [r7, #12]
 800d322:	681b      	ldr	r3, [r3, #0]
 800d324:	681a      	ldr	r2, [r3, #0]
 800d326:	68fb      	ldr	r3, [r7, #12]
 800d328:	681b      	ldr	r3, [r3, #0]
 800d32a:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800d32e:	601a      	str	r2, [r3, #0]
 800d330:	68fb      	ldr	r3, [r7, #12]
 800d332:	681b      	ldr	r3, [r3, #0]
 800d334:	689a      	ldr	r2, [r3, #8]
 800d336:	68fb      	ldr	r3, [r7, #12]
 800d338:	681b      	ldr	r3, [r3, #0]
 800d33a:	f022 0201 	bic.w	r2, r2, #1
 800d33e:	609a      	str	r2, [r3, #8]
 800d340:	68fb      	ldr	r3, [r7, #12]
 800d342:	2220      	movs	r2, #32
 800d344:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800d348:	68fb      	ldr	r3, [r7, #12]
 800d34a:	2220      	movs	r2, #32
 800d34c:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d350:	68fb      	ldr	r3, [r7, #12]
 800d352:	2200      	movs	r2, #0
 800d354:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800d358:	2303      	movs	r3, #3
 800d35a:	e045      	b.n	800d3e8 <UART_WaitOnFlagUntilTimeout+0xf8>
 800d35c:	68fb      	ldr	r3, [r7, #12]
 800d35e:	681b      	ldr	r3, [r3, #0]
 800d360:	681b      	ldr	r3, [r3, #0]
 800d362:	f003 0304 	and.w	r3, r3, #4
 800d366:	2b00      	cmp	r3, #0
 800d368:	d02e      	beq.n	800d3c8 <UART_WaitOnFlagUntilTimeout+0xd8>
 800d36a:	68fb      	ldr	r3, [r7, #12]
 800d36c:	681b      	ldr	r3, [r3, #0]
 800d36e:	69db      	ldr	r3, [r3, #28]
 800d370:	f403 6300 	and.w	r3, r3, #2048	; 0x800
 800d374:	f5b3 6f00 	cmp.w	r3, #2048	; 0x800
 800d378:	d126      	bne.n	800d3c8 <UART_WaitOnFlagUntilTimeout+0xd8>
 800d37a:	68fb      	ldr	r3, [r7, #12]
 800d37c:	681b      	ldr	r3, [r3, #0]
 800d37e:	f44f 6200 	mov.w	r2, #2048	; 0x800
 800d382:	621a      	str	r2, [r3, #32]
 800d384:	68fb      	ldr	r3, [r7, #12]
 800d386:	681b      	ldr	r3, [r3, #0]
 800d388:	681a      	ldr	r2, [r3, #0]
 800d38a:	68fb      	ldr	r3, [r7, #12]
 800d38c:	681b      	ldr	r3, [r3, #0]
 800d38e:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 800d392:	601a      	str	r2, [r3, #0]
 800d394:	68fb      	ldr	r3, [r7, #12]
 800d396:	681b      	ldr	r3, [r3, #0]
 800d398:	689a      	ldr	r2, [r3, #8]
 800d39a:	68fb      	ldr	r3, [r7, #12]
 800d39c:	681b      	ldr	r3, [r3, #0]
 800d39e:	f022 0201 	bic.w	r2, r2, #1
 800d3a2:	609a      	str	r2, [r3, #8]
 800d3a4:	68fb      	ldr	r3, [r7, #12]
 800d3a6:	2220      	movs	r2, #32
 800d3a8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800d3ac:	68fb      	ldr	r3, [r7, #12]
 800d3ae:	2220      	movs	r2, #32
 800d3b0:	f8c3 2084 	str.w	r2, [r3, #132]	; 0x84
 800d3b4:	68fb      	ldr	r3, [r7, #12]
 800d3b6:	2220      	movs	r2, #32
 800d3b8:	f8c3 2088 	str.w	r2, [r3, #136]	; 0x88
 800d3bc:	68fb      	ldr	r3, [r7, #12]
 800d3be:	2200      	movs	r2, #0
 800d3c0:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800d3c4:	2303      	movs	r3, #3
 800d3c6:	e00f      	b.n	800d3e8 <UART_WaitOnFlagUntilTimeout+0xf8>
 800d3c8:	68fb      	ldr	r3, [r7, #12]
 800d3ca:	681b      	ldr	r3, [r3, #0]
 800d3cc:	69da      	ldr	r2, [r3, #28]
 800d3ce:	68bb      	ldr	r3, [r7, #8]
 800d3d0:	4013      	ands	r3, r2
 800d3d2:	68ba      	ldr	r2, [r7, #8]
 800d3d4:	429a      	cmp	r2, r3
 800d3d6:	bf0c      	ite	eq
 800d3d8:	2301      	moveq	r3, #1
 800d3da:	2300      	movne	r3, #0
 800d3dc:	b2db      	uxtb	r3, r3
 800d3de:	461a      	mov	r2, r3
 800d3e0:	79fb      	ldrb	r3, [r7, #7]
 800d3e2:	429a      	cmp	r2, r3
 800d3e4:	d08d      	beq.n	800d302 <UART_WaitOnFlagUntilTimeout+0x12>
 800d3e6:	2300      	movs	r3, #0
 800d3e8:	4618      	mov	r0, r3
 800d3ea:	3710      	adds	r7, #16
 800d3ec:	46bd      	mov	sp, r7
 800d3ee:	bd80      	pop	{r7, pc}

0800d3f0 <HAL_UARTEx_DisableFifoMode>:
 800d3f0:	b480      	push	{r7}
 800d3f2:	b085      	sub	sp, #20
 800d3f4:	af00      	add	r7, sp, #0
 800d3f6:	6078      	str	r0, [r7, #4]
 800d3f8:	687b      	ldr	r3, [r7, #4]
 800d3fa:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 800d3fe:	2b01      	cmp	r3, #1
 800d400:	d101      	bne.n	800d406 <HAL_UARTEx_DisableFifoMode+0x16>
 800d402:	2302      	movs	r3, #2
 800d404:	e027      	b.n	800d456 <HAL_UARTEx_DisableFifoMode+0x66>
 800d406:	687b      	ldr	r3, [r7, #4]
 800d408:	2201      	movs	r2, #1
 800d40a:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800d40e:	687b      	ldr	r3, [r7, #4]
 800d410:	2224      	movs	r2, #36	; 0x24
 800d412:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800d416:	687b      	ldr	r3, [r7, #4]
 800d418:	681b      	ldr	r3, [r3, #0]
 800d41a:	681b      	ldr	r3, [r3, #0]
 800d41c:	60fb      	str	r3, [r7, #12]
 800d41e:	687b      	ldr	r3, [r7, #4]
 800d420:	681b      	ldr	r3, [r3, #0]
 800d422:	681a      	ldr	r2, [r3, #0]
 800d424:	687b      	ldr	r3, [r7, #4]
 800d426:	681b      	ldr	r3, [r3, #0]
 800d428:	f022 0201 	bic.w	r2, r2, #1
 800d42c:	601a      	str	r2, [r3, #0]
 800d42e:	68fb      	ldr	r3, [r7, #12]
 800d430:	f023 5300 	bic.w	r3, r3, #536870912	; 0x20000000
 800d434:	60fb      	str	r3, [r7, #12]
 800d436:	687b      	ldr	r3, [r7, #4]
 800d438:	2200      	movs	r2, #0
 800d43a:	665a      	str	r2, [r3, #100]	; 0x64
 800d43c:	687b      	ldr	r3, [r7, #4]
 800d43e:	681b      	ldr	r3, [r3, #0]
 800d440:	68fa      	ldr	r2, [r7, #12]
 800d442:	601a      	str	r2, [r3, #0]
 800d444:	687b      	ldr	r3, [r7, #4]
 800d446:	2220      	movs	r2, #32
 800d448:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800d44c:	687b      	ldr	r3, [r7, #4]
 800d44e:	2200      	movs	r2, #0
 800d450:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800d454:	2300      	movs	r3, #0
 800d456:	4618      	mov	r0, r3
 800d458:	3714      	adds	r7, #20
 800d45a:	46bd      	mov	sp, r7
 800d45c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d460:	4770      	bx	lr

0800d462 <HAL_UARTEx_SetTxFifoThreshold>:
 800d462:	b580      	push	{r7, lr}
 800d464:	b084      	sub	sp, #16
 800d466:	af00      	add	r7, sp, #0
 800d468:	6078      	str	r0, [r7, #4]
 800d46a:	6039      	str	r1, [r7, #0]
 800d46c:	687b      	ldr	r3, [r7, #4]
 800d46e:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 800d472:	2b01      	cmp	r3, #1
 800d474:	d101      	bne.n	800d47a <HAL_UARTEx_SetTxFifoThreshold+0x18>
 800d476:	2302      	movs	r3, #2
 800d478:	e02d      	b.n	800d4d6 <HAL_UARTEx_SetTxFifoThreshold+0x74>
 800d47a:	687b      	ldr	r3, [r7, #4]
 800d47c:	2201      	movs	r2, #1
 800d47e:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800d482:	687b      	ldr	r3, [r7, #4]
 800d484:	2224      	movs	r2, #36	; 0x24
 800d486:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800d48a:	687b      	ldr	r3, [r7, #4]
 800d48c:	681b      	ldr	r3, [r3, #0]
 800d48e:	681b      	ldr	r3, [r3, #0]
 800d490:	60fb      	str	r3, [r7, #12]
 800d492:	687b      	ldr	r3, [r7, #4]
 800d494:	681b      	ldr	r3, [r3, #0]
 800d496:	681a      	ldr	r2, [r3, #0]
 800d498:	687b      	ldr	r3, [r7, #4]
 800d49a:	681b      	ldr	r3, [r3, #0]
 800d49c:	f022 0201 	bic.w	r2, r2, #1
 800d4a0:	601a      	str	r2, [r3, #0]
 800d4a2:	687b      	ldr	r3, [r7, #4]
 800d4a4:	681b      	ldr	r3, [r3, #0]
 800d4a6:	689b      	ldr	r3, [r3, #8]
 800d4a8:	f023 4160 	bic.w	r1, r3, #3758096384	; 0xe0000000
 800d4ac:	687b      	ldr	r3, [r7, #4]
 800d4ae:	681b      	ldr	r3, [r3, #0]
 800d4b0:	683a      	ldr	r2, [r7, #0]
 800d4b2:	430a      	orrs	r2, r1
 800d4b4:	609a      	str	r2, [r3, #8]
 800d4b6:	6878      	ldr	r0, [r7, #4]
 800d4b8:	f000 f850 	bl	800d55c <UARTEx_SetNbDataToProcess>
 800d4bc:	687b      	ldr	r3, [r7, #4]
 800d4be:	681b      	ldr	r3, [r3, #0]
 800d4c0:	68fa      	ldr	r2, [r7, #12]
 800d4c2:	601a      	str	r2, [r3, #0]
 800d4c4:	687b      	ldr	r3, [r7, #4]
 800d4c6:	2220      	movs	r2, #32
 800d4c8:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800d4cc:	687b      	ldr	r3, [r7, #4]
 800d4ce:	2200      	movs	r2, #0
 800d4d0:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800d4d4:	2300      	movs	r3, #0
 800d4d6:	4618      	mov	r0, r3
 800d4d8:	3710      	adds	r7, #16
 800d4da:	46bd      	mov	sp, r7
 800d4dc:	bd80      	pop	{r7, pc}

0800d4de <HAL_UARTEx_SetRxFifoThreshold>:
 800d4de:	b580      	push	{r7, lr}
 800d4e0:	b084      	sub	sp, #16
 800d4e2:	af00      	add	r7, sp, #0
 800d4e4:	6078      	str	r0, [r7, #4]
 800d4e6:	6039      	str	r1, [r7, #0]
 800d4e8:	687b      	ldr	r3, [r7, #4]
 800d4ea:	f893 307c 	ldrb.w	r3, [r3, #124]	; 0x7c
 800d4ee:	2b01      	cmp	r3, #1
 800d4f0:	d101      	bne.n	800d4f6 <HAL_UARTEx_SetRxFifoThreshold+0x18>
 800d4f2:	2302      	movs	r3, #2
 800d4f4:	e02d      	b.n	800d552 <HAL_UARTEx_SetRxFifoThreshold+0x74>
 800d4f6:	687b      	ldr	r3, [r7, #4]
 800d4f8:	2201      	movs	r2, #1
 800d4fa:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800d4fe:	687b      	ldr	r3, [r7, #4]
 800d500:	2224      	movs	r2, #36	; 0x24
 800d502:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800d506:	687b      	ldr	r3, [r7, #4]
 800d508:	681b      	ldr	r3, [r3, #0]
 800d50a:	681b      	ldr	r3, [r3, #0]
 800d50c:	60fb      	str	r3, [r7, #12]
 800d50e:	687b      	ldr	r3, [r7, #4]
 800d510:	681b      	ldr	r3, [r3, #0]
 800d512:	681a      	ldr	r2, [r3, #0]
 800d514:	687b      	ldr	r3, [r7, #4]
 800d516:	681b      	ldr	r3, [r3, #0]
 800d518:	f022 0201 	bic.w	r2, r2, #1
 800d51c:	601a      	str	r2, [r3, #0]
 800d51e:	687b      	ldr	r3, [r7, #4]
 800d520:	681b      	ldr	r3, [r3, #0]
 800d522:	689b      	ldr	r3, [r3, #8]
 800d524:	f023 6160 	bic.w	r1, r3, #234881024	; 0xe000000
 800d528:	687b      	ldr	r3, [r7, #4]
 800d52a:	681b      	ldr	r3, [r3, #0]
 800d52c:	683a      	ldr	r2, [r7, #0]
 800d52e:	430a      	orrs	r2, r1
 800d530:	609a      	str	r2, [r3, #8]
 800d532:	6878      	ldr	r0, [r7, #4]
 800d534:	f000 f812 	bl	800d55c <UARTEx_SetNbDataToProcess>
 800d538:	687b      	ldr	r3, [r7, #4]
 800d53a:	681b      	ldr	r3, [r3, #0]
 800d53c:	68fa      	ldr	r2, [r7, #12]
 800d53e:	601a      	str	r2, [r3, #0]
 800d540:	687b      	ldr	r3, [r7, #4]
 800d542:	2220      	movs	r2, #32
 800d544:	f8c3 2080 	str.w	r2, [r3, #128]	; 0x80
 800d548:	687b      	ldr	r3, [r7, #4]
 800d54a:	2200      	movs	r2, #0
 800d54c:	f883 207c 	strb.w	r2, [r3, #124]	; 0x7c
 800d550:	2300      	movs	r3, #0
 800d552:	4618      	mov	r0, r3
 800d554:	3710      	adds	r7, #16
 800d556:	46bd      	mov	sp, r7
 800d558:	bd80      	pop	{r7, pc}
	...

0800d55c <UARTEx_SetNbDataToProcess>:
 800d55c:	b480      	push	{r7}
 800d55e:	b089      	sub	sp, #36	; 0x24
 800d560:	af00      	add	r7, sp, #0
 800d562:	6078      	str	r0, [r7, #4]
 800d564:	4a2f      	ldr	r2, [pc, #188]	; (800d624 <UARTEx_SetNbDataToProcess+0xc8>)
 800d566:	f107 0314 	add.w	r3, r7, #20
 800d56a:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d56e:	e883 0003 	stmia.w	r3, {r0, r1}
 800d572:	4a2d      	ldr	r2, [pc, #180]	; (800d628 <UARTEx_SetNbDataToProcess+0xcc>)
 800d574:	f107 030c 	add.w	r3, r7, #12
 800d578:	e892 0003 	ldmia.w	r2, {r0, r1}
 800d57c:	e883 0003 	stmia.w	r3, {r0, r1}
 800d580:	687b      	ldr	r3, [r7, #4]
 800d582:	6e5b      	ldr	r3, [r3, #100]	; 0x64
 800d584:	2b00      	cmp	r3, #0
 800d586:	d108      	bne.n	800d59a <UARTEx_SetNbDataToProcess+0x3e>
 800d588:	687b      	ldr	r3, [r7, #4]
 800d58a:	2201      	movs	r2, #1
 800d58c:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800d590:	687b      	ldr	r3, [r7, #4]
 800d592:	2201      	movs	r2, #1
 800d594:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800d598:	e03d      	b.n	800d616 <UARTEx_SetNbDataToProcess+0xba>
 800d59a:	2308      	movs	r3, #8
 800d59c:	77fb      	strb	r3, [r7, #31]
 800d59e:	2308      	movs	r3, #8
 800d5a0:	77bb      	strb	r3, [r7, #30]
 800d5a2:	687b      	ldr	r3, [r7, #4]
 800d5a4:	681b      	ldr	r3, [r3, #0]
 800d5a6:	689b      	ldr	r3, [r3, #8]
 800d5a8:	0e5b      	lsrs	r3, r3, #25
 800d5aa:	b2db      	uxtb	r3, r3
 800d5ac:	f003 0307 	and.w	r3, r3, #7
 800d5b0:	777b      	strb	r3, [r7, #29]
 800d5b2:	687b      	ldr	r3, [r7, #4]
 800d5b4:	681b      	ldr	r3, [r3, #0]
 800d5b6:	689b      	ldr	r3, [r3, #8]
 800d5b8:	0f5b      	lsrs	r3, r3, #29
 800d5ba:	b2db      	uxtb	r3, r3
 800d5bc:	f003 0307 	and.w	r3, r3, #7
 800d5c0:	773b      	strb	r3, [r7, #28]
 800d5c2:	7fbb      	ldrb	r3, [r7, #30]
 800d5c4:	7f3a      	ldrb	r2, [r7, #28]
 800d5c6:	f107 0120 	add.w	r1, r7, #32
 800d5ca:	440a      	add	r2, r1
 800d5cc:	f812 2c0c 	ldrb.w	r2, [r2, #-12]
 800d5d0:	fb02 f303 	mul.w	r3, r2, r3
 800d5d4:	7f3a      	ldrb	r2, [r7, #28]
 800d5d6:	f107 0120 	add.w	r1, r7, #32
 800d5da:	440a      	add	r2, r1
 800d5dc:	f812 2c14 	ldrb.w	r2, [r2, #-20]
 800d5e0:	fb93 f3f2 	sdiv	r3, r3, r2
 800d5e4:	b29a      	uxth	r2, r3
 800d5e6:	687b      	ldr	r3, [r7, #4]
 800d5e8:	f8a3 206a 	strh.w	r2, [r3, #106]	; 0x6a
 800d5ec:	7ffb      	ldrb	r3, [r7, #31]
 800d5ee:	7f7a      	ldrb	r2, [r7, #29]
 800d5f0:	f107 0120 	add.w	r1, r7, #32
 800d5f4:	440a      	add	r2, r1
 800d5f6:	f812 2c0c 	ldrb.w	r2, [r2, #-12]
 800d5fa:	fb02 f303 	mul.w	r3, r2, r3
 800d5fe:	7f7a      	ldrb	r2, [r7, #29]
 800d600:	f107 0120 	add.w	r1, r7, #32
 800d604:	440a      	add	r2, r1
 800d606:	f812 2c14 	ldrb.w	r2, [r2, #-20]
 800d60a:	fb93 f3f2 	sdiv	r3, r3, r2
 800d60e:	b29a      	uxth	r2, r3
 800d610:	687b      	ldr	r3, [r7, #4]
 800d612:	f8a3 2068 	strh.w	r2, [r3, #104]	; 0x68
 800d616:	bf00      	nop
 800d618:	3724      	adds	r7, #36	; 0x24
 800d61a:	46bd      	mov	sp, r7
 800d61c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d620:	4770      	bx	lr
 800d622:	bf00      	nop
 800d624:	080162c4 	.word	0x080162c4
 800d628:	080162cc 	.word	0x080162cc

0800d62c <USB_CoreInit>:
 800d62c:	b084      	sub	sp, #16
 800d62e:	b580      	push	{r7, lr}
 800d630:	b084      	sub	sp, #16
 800d632:	af00      	add	r7, sp, #0
 800d634:	6078      	str	r0, [r7, #4]
 800d636:	f107 001c 	add.w	r0, r7, #28
 800d63a:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800d63e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800d640:	2b01      	cmp	r3, #1
 800d642:	d122      	bne.n	800d68a <USB_CoreInit+0x5e>
 800d644:	687b      	ldr	r3, [r7, #4]
 800d646:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d648:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800d64c:	687b      	ldr	r3, [r7, #4]
 800d64e:	639a      	str	r2, [r3, #56]	; 0x38
 800d650:	687b      	ldr	r3, [r7, #4]
 800d652:	68db      	ldr	r3, [r3, #12]
 800d654:	f423 0384 	bic.w	r3, r3, #4325376	; 0x420000
 800d658:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 800d65c:	687a      	ldr	r2, [r7, #4]
 800d65e:	60d3      	str	r3, [r2, #12]
 800d660:	687b      	ldr	r3, [r7, #4]
 800d662:	68db      	ldr	r3, [r3, #12]
 800d664:	f423 1240 	bic.w	r2, r3, #3145728	; 0x300000
 800d668:	687b      	ldr	r3, [r7, #4]
 800d66a:	60da      	str	r2, [r3, #12]
 800d66c:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800d66e:	2b01      	cmp	r3, #1
 800d670:	d105      	bne.n	800d67e <USB_CoreInit+0x52>
 800d672:	687b      	ldr	r3, [r7, #4]
 800d674:	68db      	ldr	r3, [r3, #12]
 800d676:	f443 1280 	orr.w	r2, r3, #1048576	; 0x100000
 800d67a:	687b      	ldr	r3, [r7, #4]
 800d67c:	60da      	str	r2, [r3, #12]
 800d67e:	6878      	ldr	r0, [r7, #4]
 800d680:	f000 fa28 	bl	800dad4 <USB_CoreReset>
 800d684:	4603      	mov	r3, r0
 800d686:	73fb      	strb	r3, [r7, #15]
 800d688:	e01a      	b.n	800d6c0 <USB_CoreInit+0x94>
 800d68a:	687b      	ldr	r3, [r7, #4]
 800d68c:	68db      	ldr	r3, [r3, #12]
 800d68e:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800d692:	687b      	ldr	r3, [r7, #4]
 800d694:	60da      	str	r2, [r3, #12]
 800d696:	6878      	ldr	r0, [r7, #4]
 800d698:	f000 fa1c 	bl	800dad4 <USB_CoreReset>
 800d69c:	4603      	mov	r3, r0
 800d69e:	73fb      	strb	r3, [r7, #15]
 800d6a0:	6c3b      	ldr	r3, [r7, #64]	; 0x40
 800d6a2:	2b00      	cmp	r3, #0
 800d6a4:	d106      	bne.n	800d6b4 <USB_CoreInit+0x88>
 800d6a6:	687b      	ldr	r3, [r7, #4]
 800d6a8:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d6aa:	f443 3280 	orr.w	r2, r3, #65536	; 0x10000
 800d6ae:	687b      	ldr	r3, [r7, #4]
 800d6b0:	639a      	str	r2, [r3, #56]	; 0x38
 800d6b2:	e005      	b.n	800d6c0 <USB_CoreInit+0x94>
 800d6b4:	687b      	ldr	r3, [r7, #4]
 800d6b6:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d6b8:	f423 3280 	bic.w	r2, r3, #65536	; 0x10000
 800d6bc:	687b      	ldr	r3, [r7, #4]
 800d6be:	639a      	str	r2, [r3, #56]	; 0x38
 800d6c0:	7bfb      	ldrb	r3, [r7, #15]
 800d6c2:	4618      	mov	r0, r3
 800d6c4:	3710      	adds	r7, #16
 800d6c6:	46bd      	mov	sp, r7
 800d6c8:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d6cc:	b004      	add	sp, #16
 800d6ce:	4770      	bx	lr

0800d6d0 <USB_DisableGlobalInt>:
 800d6d0:	b480      	push	{r7}
 800d6d2:	b083      	sub	sp, #12
 800d6d4:	af00      	add	r7, sp, #0
 800d6d6:	6078      	str	r0, [r7, #4]
 800d6d8:	687b      	ldr	r3, [r7, #4]
 800d6da:	689b      	ldr	r3, [r3, #8]
 800d6dc:	f023 0201 	bic.w	r2, r3, #1
 800d6e0:	687b      	ldr	r3, [r7, #4]
 800d6e2:	609a      	str	r2, [r3, #8]
 800d6e4:	2300      	movs	r3, #0
 800d6e6:	4618      	mov	r0, r3
 800d6e8:	370c      	adds	r7, #12
 800d6ea:	46bd      	mov	sp, r7
 800d6ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800d6f0:	4770      	bx	lr

0800d6f2 <USB_SetCurrentMode>:
 800d6f2:	b580      	push	{r7, lr}
 800d6f4:	b082      	sub	sp, #8
 800d6f6:	af00      	add	r7, sp, #0
 800d6f8:	6078      	str	r0, [r7, #4]
 800d6fa:	460b      	mov	r3, r1
 800d6fc:	70fb      	strb	r3, [r7, #3]
 800d6fe:	687b      	ldr	r3, [r7, #4]
 800d700:	68db      	ldr	r3, [r3, #12]
 800d702:	f023 42c0 	bic.w	r2, r3, #1610612736	; 0x60000000
 800d706:	687b      	ldr	r3, [r7, #4]
 800d708:	60da      	str	r2, [r3, #12]
 800d70a:	78fb      	ldrb	r3, [r7, #3]
 800d70c:	2b01      	cmp	r3, #1
 800d70e:	d106      	bne.n	800d71e <USB_SetCurrentMode+0x2c>
 800d710:	687b      	ldr	r3, [r7, #4]
 800d712:	68db      	ldr	r3, [r3, #12]
 800d714:	f043 5200 	orr.w	r2, r3, #536870912	; 0x20000000
 800d718:	687b      	ldr	r3, [r7, #4]
 800d71a:	60da      	str	r2, [r3, #12]
 800d71c:	e00b      	b.n	800d736 <USB_SetCurrentMode+0x44>
 800d71e:	78fb      	ldrb	r3, [r7, #3]
 800d720:	2b00      	cmp	r3, #0
 800d722:	d106      	bne.n	800d732 <USB_SetCurrentMode+0x40>
 800d724:	687b      	ldr	r3, [r7, #4]
 800d726:	68db      	ldr	r3, [r3, #12]
 800d728:	f043 4280 	orr.w	r2, r3, #1073741824	; 0x40000000
 800d72c:	687b      	ldr	r3, [r7, #4]
 800d72e:	60da      	str	r2, [r3, #12]
 800d730:	e001      	b.n	800d736 <USB_SetCurrentMode+0x44>
 800d732:	2301      	movs	r3, #1
 800d734:	e003      	b.n	800d73e <USB_SetCurrentMode+0x4c>
 800d736:	2032      	movs	r0, #50	; 0x32
 800d738:	f7fa fe6a 	bl	8008410 <HAL_Delay>
 800d73c:	2300      	movs	r3, #0
 800d73e:	4618      	mov	r0, r3
 800d740:	3708      	adds	r7, #8
 800d742:	46bd      	mov	sp, r7
 800d744:	bd80      	pop	{r7, pc}
	...

0800d748 <USB_DevInit>:
 800d748:	b084      	sub	sp, #16
 800d74a:	b580      	push	{r7, lr}
 800d74c:	b086      	sub	sp, #24
 800d74e:	af00      	add	r7, sp, #0
 800d750:	6078      	str	r0, [r7, #4]
 800d752:	f107 0024 	add.w	r0, r7, #36	; 0x24
 800d756:	e880 000e 	stmia.w	r0, {r1, r2, r3}
 800d75a:	2300      	movs	r3, #0
 800d75c:	75fb      	strb	r3, [r7, #23]
 800d75e:	687b      	ldr	r3, [r7, #4]
 800d760:	60fb      	str	r3, [r7, #12]
 800d762:	2300      	movs	r3, #0
 800d764:	613b      	str	r3, [r7, #16]
 800d766:	e009      	b.n	800d77c <USB_DevInit+0x34>
 800d768:	687a      	ldr	r2, [r7, #4]
 800d76a:	693b      	ldr	r3, [r7, #16]
 800d76c:	3340      	adds	r3, #64	; 0x40
 800d76e:	009b      	lsls	r3, r3, #2
 800d770:	4413      	add	r3, r2
 800d772:	2200      	movs	r2, #0
 800d774:	605a      	str	r2, [r3, #4]
 800d776:	693b      	ldr	r3, [r7, #16]
 800d778:	3301      	adds	r3, #1
 800d77a:	613b      	str	r3, [r7, #16]
 800d77c:	693b      	ldr	r3, [r7, #16]
 800d77e:	2b0e      	cmp	r3, #14
 800d780:	d9f2      	bls.n	800d768 <USB_DevInit+0x20>
 800d782:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800d784:	2b00      	cmp	r3, #0
 800d786:	d11c      	bne.n	800d7c2 <USB_DevInit+0x7a>
 800d788:	68fb      	ldr	r3, [r7, #12]
 800d78a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800d78e:	685b      	ldr	r3, [r3, #4]
 800d790:	68fa      	ldr	r2, [r7, #12]
 800d792:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800d796:	f043 0302 	orr.w	r3, r3, #2
 800d79a:	6053      	str	r3, [r2, #4]
 800d79c:	687b      	ldr	r3, [r7, #4]
 800d79e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d7a0:	f423 1200 	bic.w	r2, r3, #2097152	; 0x200000
 800d7a4:	687b      	ldr	r3, [r7, #4]
 800d7a6:	639a      	str	r2, [r3, #56]	; 0x38
 800d7a8:	687b      	ldr	r3, [r7, #4]
 800d7aa:	681b      	ldr	r3, [r3, #0]
 800d7ac:	f043 0240 	orr.w	r2, r3, #64	; 0x40
 800d7b0:	687b      	ldr	r3, [r7, #4]
 800d7b2:	601a      	str	r2, [r3, #0]
 800d7b4:	687b      	ldr	r3, [r7, #4]
 800d7b6:	681b      	ldr	r3, [r3, #0]
 800d7b8:	f043 0280 	orr.w	r2, r3, #128	; 0x80
 800d7bc:	687b      	ldr	r3, [r7, #4]
 800d7be:	601a      	str	r2, [r3, #0]
 800d7c0:	e005      	b.n	800d7ce <USB_DevInit+0x86>
 800d7c2:	687b      	ldr	r3, [r7, #4]
 800d7c4:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800d7c6:	f443 1200 	orr.w	r2, r3, #2097152	; 0x200000
 800d7ca:	687b      	ldr	r3, [r7, #4]
 800d7cc:	639a      	str	r2, [r3, #56]	; 0x38
 800d7ce:	68fb      	ldr	r3, [r7, #12]
 800d7d0:	f503 6360 	add.w	r3, r3, #3584	; 0xe00
 800d7d4:	461a      	mov	r2, r3
 800d7d6:	2300      	movs	r3, #0
 800d7d8:	6013      	str	r3, [r2, #0]
 800d7da:	68fb      	ldr	r3, [r7, #12]
 800d7dc:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800d7e0:	4619      	mov	r1, r3
 800d7e2:	68fb      	ldr	r3, [r7, #12]
 800d7e4:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800d7e8:	461a      	mov	r2, r3
 800d7ea:	680b      	ldr	r3, [r1, #0]
 800d7ec:	6013      	str	r3, [r2, #0]
 800d7ee:	2103      	movs	r1, #3
 800d7f0:	6878      	ldr	r0, [r7, #4]
 800d7f2:	f000 f93d 	bl	800da70 <USB_SetDevSpeed>
 800d7f6:	2110      	movs	r1, #16
 800d7f8:	6878      	ldr	r0, [r7, #4]
 800d7fa:	f000 f8f1 	bl	800d9e0 <USB_FlushTxFifo>
 800d7fe:	4603      	mov	r3, r0
 800d800:	2b00      	cmp	r3, #0
 800d802:	d001      	beq.n	800d808 <USB_DevInit+0xc0>
 800d804:	2301      	movs	r3, #1
 800d806:	75fb      	strb	r3, [r7, #23]
 800d808:	6878      	ldr	r0, [r7, #4]
 800d80a:	f000 f90f 	bl	800da2c <USB_FlushRxFifo>
 800d80e:	4603      	mov	r3, r0
 800d810:	2b00      	cmp	r3, #0
 800d812:	d001      	beq.n	800d818 <USB_DevInit+0xd0>
 800d814:	2301      	movs	r3, #1
 800d816:	75fb      	strb	r3, [r7, #23]
 800d818:	68fb      	ldr	r3, [r7, #12]
 800d81a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800d81e:	461a      	mov	r2, r3
 800d820:	2300      	movs	r3, #0
 800d822:	6113      	str	r3, [r2, #16]
 800d824:	68fb      	ldr	r3, [r7, #12]
 800d826:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800d82a:	461a      	mov	r2, r3
 800d82c:	2300      	movs	r3, #0
 800d82e:	6153      	str	r3, [r2, #20]
 800d830:	68fb      	ldr	r3, [r7, #12]
 800d832:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800d836:	461a      	mov	r2, r3
 800d838:	2300      	movs	r3, #0
 800d83a:	61d3      	str	r3, [r2, #28]
 800d83c:	2300      	movs	r3, #0
 800d83e:	613b      	str	r3, [r7, #16]
 800d840:	e043      	b.n	800d8ca <USB_DevInit+0x182>
 800d842:	693b      	ldr	r3, [r7, #16]
 800d844:	015a      	lsls	r2, r3, #5
 800d846:	68fb      	ldr	r3, [r7, #12]
 800d848:	4413      	add	r3, r2
 800d84a:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800d84e:	681b      	ldr	r3, [r3, #0]
 800d850:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800d854:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800d858:	d118      	bne.n	800d88c <USB_DevInit+0x144>
 800d85a:	693b      	ldr	r3, [r7, #16]
 800d85c:	2b00      	cmp	r3, #0
 800d85e:	d10a      	bne.n	800d876 <USB_DevInit+0x12e>
 800d860:	693b      	ldr	r3, [r7, #16]
 800d862:	015a      	lsls	r2, r3, #5
 800d864:	68fb      	ldr	r3, [r7, #12]
 800d866:	4413      	add	r3, r2
 800d868:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800d86c:	461a      	mov	r2, r3
 800d86e:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800d872:	6013      	str	r3, [r2, #0]
 800d874:	e013      	b.n	800d89e <USB_DevInit+0x156>
 800d876:	693b      	ldr	r3, [r7, #16]
 800d878:	015a      	lsls	r2, r3, #5
 800d87a:	68fb      	ldr	r3, [r7, #12]
 800d87c:	4413      	add	r3, r2
 800d87e:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800d882:	461a      	mov	r2, r3
 800d884:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800d888:	6013      	str	r3, [r2, #0]
 800d88a:	e008      	b.n	800d89e <USB_DevInit+0x156>
 800d88c:	693b      	ldr	r3, [r7, #16]
 800d88e:	015a      	lsls	r2, r3, #5
 800d890:	68fb      	ldr	r3, [r7, #12]
 800d892:	4413      	add	r3, r2
 800d894:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800d898:	461a      	mov	r2, r3
 800d89a:	2300      	movs	r3, #0
 800d89c:	6013      	str	r3, [r2, #0]
 800d89e:	693b      	ldr	r3, [r7, #16]
 800d8a0:	015a      	lsls	r2, r3, #5
 800d8a2:	68fb      	ldr	r3, [r7, #12]
 800d8a4:	4413      	add	r3, r2
 800d8a6:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800d8aa:	461a      	mov	r2, r3
 800d8ac:	2300      	movs	r3, #0
 800d8ae:	6113      	str	r3, [r2, #16]
 800d8b0:	693b      	ldr	r3, [r7, #16]
 800d8b2:	015a      	lsls	r2, r3, #5
 800d8b4:	68fb      	ldr	r3, [r7, #12]
 800d8b6:	4413      	add	r3, r2
 800d8b8:	f503 6310 	add.w	r3, r3, #2304	; 0x900
 800d8bc:	461a      	mov	r2, r3
 800d8be:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 800d8c2:	6093      	str	r3, [r2, #8]
 800d8c4:	693b      	ldr	r3, [r7, #16]
 800d8c6:	3301      	adds	r3, #1
 800d8c8:	613b      	str	r3, [r7, #16]
 800d8ca:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d8cc:	693a      	ldr	r2, [r7, #16]
 800d8ce:	429a      	cmp	r2, r3
 800d8d0:	d3b7      	bcc.n	800d842 <USB_DevInit+0xfa>
 800d8d2:	2300      	movs	r3, #0
 800d8d4:	613b      	str	r3, [r7, #16]
 800d8d6:	e043      	b.n	800d960 <USB_DevInit+0x218>
 800d8d8:	693b      	ldr	r3, [r7, #16]
 800d8da:	015a      	lsls	r2, r3, #5
 800d8dc:	68fb      	ldr	r3, [r7, #12]
 800d8de:	4413      	add	r3, r2
 800d8e0:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d8e4:	681b      	ldr	r3, [r3, #0]
 800d8e6:	f003 4300 	and.w	r3, r3, #2147483648	; 0x80000000
 800d8ea:	f1b3 4f00 	cmp.w	r3, #2147483648	; 0x80000000
 800d8ee:	d118      	bne.n	800d922 <USB_DevInit+0x1da>
 800d8f0:	693b      	ldr	r3, [r7, #16]
 800d8f2:	2b00      	cmp	r3, #0
 800d8f4:	d10a      	bne.n	800d90c <USB_DevInit+0x1c4>
 800d8f6:	693b      	ldr	r3, [r7, #16]
 800d8f8:	015a      	lsls	r2, r3, #5
 800d8fa:	68fb      	ldr	r3, [r7, #12]
 800d8fc:	4413      	add	r3, r2
 800d8fe:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d902:	461a      	mov	r2, r3
 800d904:	f04f 6300 	mov.w	r3, #134217728	; 0x8000000
 800d908:	6013      	str	r3, [r2, #0]
 800d90a:	e013      	b.n	800d934 <USB_DevInit+0x1ec>
 800d90c:	693b      	ldr	r3, [r7, #16]
 800d90e:	015a      	lsls	r2, r3, #5
 800d910:	68fb      	ldr	r3, [r7, #12]
 800d912:	4413      	add	r3, r2
 800d914:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d918:	461a      	mov	r2, r3
 800d91a:	f04f 4390 	mov.w	r3, #1207959552	; 0x48000000
 800d91e:	6013      	str	r3, [r2, #0]
 800d920:	e008      	b.n	800d934 <USB_DevInit+0x1ec>
 800d922:	693b      	ldr	r3, [r7, #16]
 800d924:	015a      	lsls	r2, r3, #5
 800d926:	68fb      	ldr	r3, [r7, #12]
 800d928:	4413      	add	r3, r2
 800d92a:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d92e:	461a      	mov	r2, r3
 800d930:	2300      	movs	r3, #0
 800d932:	6013      	str	r3, [r2, #0]
 800d934:	693b      	ldr	r3, [r7, #16]
 800d936:	015a      	lsls	r2, r3, #5
 800d938:	68fb      	ldr	r3, [r7, #12]
 800d93a:	4413      	add	r3, r2
 800d93c:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d940:	461a      	mov	r2, r3
 800d942:	2300      	movs	r3, #0
 800d944:	6113      	str	r3, [r2, #16]
 800d946:	693b      	ldr	r3, [r7, #16]
 800d948:	015a      	lsls	r2, r3, #5
 800d94a:	68fb      	ldr	r3, [r7, #12]
 800d94c:	4413      	add	r3, r2
 800d94e:	f503 6330 	add.w	r3, r3, #2816	; 0xb00
 800d952:	461a      	mov	r2, r3
 800d954:	f64f 337f 	movw	r3, #64383	; 0xfb7f
 800d958:	6093      	str	r3, [r2, #8]
 800d95a:	693b      	ldr	r3, [r7, #16]
 800d95c:	3301      	adds	r3, #1
 800d95e:	613b      	str	r3, [r7, #16]
 800d960:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800d962:	693a      	ldr	r2, [r7, #16]
 800d964:	429a      	cmp	r2, r3
 800d966:	d3b7      	bcc.n	800d8d8 <USB_DevInit+0x190>
 800d968:	68fb      	ldr	r3, [r7, #12]
 800d96a:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800d96e:	691b      	ldr	r3, [r3, #16]
 800d970:	68fa      	ldr	r2, [r7, #12]
 800d972:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800d976:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 800d97a:	6113      	str	r3, [r2, #16]
 800d97c:	687b      	ldr	r3, [r7, #4]
 800d97e:	2200      	movs	r2, #0
 800d980:	619a      	str	r2, [r3, #24]
 800d982:	687b      	ldr	r3, [r7, #4]
 800d984:	f06f 4280 	mvn.w	r2, #1073741824	; 0x40000000
 800d988:	615a      	str	r2, [r3, #20]
 800d98a:	687b      	ldr	r3, [r7, #4]
 800d98c:	699b      	ldr	r3, [r3, #24]
 800d98e:	f043 0210 	orr.w	r2, r3, #16
 800d992:	687b      	ldr	r3, [r7, #4]
 800d994:	619a      	str	r2, [r3, #24]
 800d996:	687b      	ldr	r3, [r7, #4]
 800d998:	699a      	ldr	r2, [r3, #24]
 800d99a:	4b10      	ldr	r3, [pc, #64]	; (800d9dc <USB_DevInit+0x294>)
 800d99c:	4313      	orrs	r3, r2
 800d99e:	687a      	ldr	r2, [r7, #4]
 800d9a0:	6193      	str	r3, [r2, #24]
 800d9a2:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 800d9a4:	2b00      	cmp	r3, #0
 800d9a6:	d005      	beq.n	800d9b4 <USB_DevInit+0x26c>
 800d9a8:	687b      	ldr	r3, [r7, #4]
 800d9aa:	699b      	ldr	r3, [r3, #24]
 800d9ac:	f043 0208 	orr.w	r2, r3, #8
 800d9b0:	687b      	ldr	r3, [r7, #4]
 800d9b2:	619a      	str	r2, [r3, #24]
 800d9b4:	6cfb      	ldr	r3, [r7, #76]	; 0x4c
 800d9b6:	2b01      	cmp	r3, #1
 800d9b8:	d107      	bne.n	800d9ca <USB_DevInit+0x282>
 800d9ba:	687b      	ldr	r3, [r7, #4]
 800d9bc:	699b      	ldr	r3, [r3, #24]
 800d9be:	f043 4380 	orr.w	r3, r3, #1073741824	; 0x40000000
 800d9c2:	f043 0304 	orr.w	r3, r3, #4
 800d9c6:	687a      	ldr	r2, [r7, #4]
 800d9c8:	6193      	str	r3, [r2, #24]
 800d9ca:	7dfb      	ldrb	r3, [r7, #23]
 800d9cc:	4618      	mov	r0, r3
 800d9ce:	3718      	adds	r7, #24
 800d9d0:	46bd      	mov	sp, r7
 800d9d2:	e8bd 4080 	ldmia.w	sp!, {r7, lr}
 800d9d6:	b004      	add	sp, #16
 800d9d8:	4770      	bx	lr
 800d9da:	bf00      	nop
 800d9dc:	803c3800 	.word	0x803c3800

0800d9e0 <USB_FlushTxFifo>:
 800d9e0:	b480      	push	{r7}
 800d9e2:	b085      	sub	sp, #20
 800d9e4:	af00      	add	r7, sp, #0
 800d9e6:	6078      	str	r0, [r7, #4]
 800d9e8:	6039      	str	r1, [r7, #0]
 800d9ea:	2300      	movs	r3, #0
 800d9ec:	60fb      	str	r3, [r7, #12]
 800d9ee:	683b      	ldr	r3, [r7, #0]
 800d9f0:	019b      	lsls	r3, r3, #6
 800d9f2:	f043 0220 	orr.w	r2, r3, #32
 800d9f6:	687b      	ldr	r3, [r7, #4]
 800d9f8:	611a      	str	r2, [r3, #16]
 800d9fa:	68fb      	ldr	r3, [r7, #12]
 800d9fc:	3301      	adds	r3, #1
 800d9fe:	60fb      	str	r3, [r7, #12]
 800da00:	68fb      	ldr	r3, [r7, #12]
 800da02:	4a09      	ldr	r2, [pc, #36]	; (800da28 <USB_FlushTxFifo+0x48>)
 800da04:	4293      	cmp	r3, r2
 800da06:	d901      	bls.n	800da0c <USB_FlushTxFifo+0x2c>
 800da08:	2303      	movs	r3, #3
 800da0a:	e006      	b.n	800da1a <USB_FlushTxFifo+0x3a>
 800da0c:	687b      	ldr	r3, [r7, #4]
 800da0e:	691b      	ldr	r3, [r3, #16]
 800da10:	f003 0320 	and.w	r3, r3, #32
 800da14:	2b20      	cmp	r3, #32
 800da16:	d0f0      	beq.n	800d9fa <USB_FlushTxFifo+0x1a>
 800da18:	2300      	movs	r3, #0
 800da1a:	4618      	mov	r0, r3
 800da1c:	3714      	adds	r7, #20
 800da1e:	46bd      	mov	sp, r7
 800da20:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da24:	4770      	bx	lr
 800da26:	bf00      	nop
 800da28:	00030d40 	.word	0x00030d40

0800da2c <USB_FlushRxFifo>:
 800da2c:	b480      	push	{r7}
 800da2e:	b085      	sub	sp, #20
 800da30:	af00      	add	r7, sp, #0
 800da32:	6078      	str	r0, [r7, #4]
 800da34:	2300      	movs	r3, #0
 800da36:	60fb      	str	r3, [r7, #12]
 800da38:	687b      	ldr	r3, [r7, #4]
 800da3a:	2210      	movs	r2, #16
 800da3c:	611a      	str	r2, [r3, #16]
 800da3e:	68fb      	ldr	r3, [r7, #12]
 800da40:	3301      	adds	r3, #1
 800da42:	60fb      	str	r3, [r7, #12]
 800da44:	68fb      	ldr	r3, [r7, #12]
 800da46:	4a09      	ldr	r2, [pc, #36]	; (800da6c <USB_FlushRxFifo+0x40>)
 800da48:	4293      	cmp	r3, r2
 800da4a:	d901      	bls.n	800da50 <USB_FlushRxFifo+0x24>
 800da4c:	2303      	movs	r3, #3
 800da4e:	e006      	b.n	800da5e <USB_FlushRxFifo+0x32>
 800da50:	687b      	ldr	r3, [r7, #4]
 800da52:	691b      	ldr	r3, [r3, #16]
 800da54:	f003 0310 	and.w	r3, r3, #16
 800da58:	2b10      	cmp	r3, #16
 800da5a:	d0f0      	beq.n	800da3e <USB_FlushRxFifo+0x12>
 800da5c:	2300      	movs	r3, #0
 800da5e:	4618      	mov	r0, r3
 800da60:	3714      	adds	r7, #20
 800da62:	46bd      	mov	sp, r7
 800da64:	f85d 7b04 	ldr.w	r7, [sp], #4
 800da68:	4770      	bx	lr
 800da6a:	bf00      	nop
 800da6c:	00030d40 	.word	0x00030d40

0800da70 <USB_SetDevSpeed>:
 800da70:	b480      	push	{r7}
 800da72:	b085      	sub	sp, #20
 800da74:	af00      	add	r7, sp, #0
 800da76:	6078      	str	r0, [r7, #4]
 800da78:	460b      	mov	r3, r1
 800da7a:	70fb      	strb	r3, [r7, #3]
 800da7c:	687b      	ldr	r3, [r7, #4]
 800da7e:	60fb      	str	r3, [r7, #12]
 800da80:	68fb      	ldr	r3, [r7, #12]
 800da82:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800da86:	681a      	ldr	r2, [r3, #0]
 800da88:	78fb      	ldrb	r3, [r7, #3]
 800da8a:	68f9      	ldr	r1, [r7, #12]
 800da8c:	f501 6100 	add.w	r1, r1, #2048	; 0x800
 800da90:	4313      	orrs	r3, r2
 800da92:	600b      	str	r3, [r1, #0]
 800da94:	2300      	movs	r3, #0
 800da96:	4618      	mov	r0, r3
 800da98:	3714      	adds	r7, #20
 800da9a:	46bd      	mov	sp, r7
 800da9c:	f85d 7b04 	ldr.w	r7, [sp], #4
 800daa0:	4770      	bx	lr

0800daa2 <USB_DevDisconnect>:
 800daa2:	b580      	push	{r7, lr}
 800daa4:	b084      	sub	sp, #16
 800daa6:	af00      	add	r7, sp, #0
 800daa8:	6078      	str	r0, [r7, #4]
 800daaa:	687b      	ldr	r3, [r7, #4]
 800daac:	60fb      	str	r3, [r7, #12]
 800daae:	68fb      	ldr	r3, [r7, #12]
 800dab0:	f503 6300 	add.w	r3, r3, #2048	; 0x800
 800dab4:	685b      	ldr	r3, [r3, #4]
 800dab6:	68fa      	ldr	r2, [r7, #12]
 800dab8:	f502 6200 	add.w	r2, r2, #2048	; 0x800
 800dabc:	f043 0302 	orr.w	r3, r3, #2
 800dac0:	6053      	str	r3, [r2, #4]
 800dac2:	2003      	movs	r0, #3
 800dac4:	f7fa fca4 	bl	8008410 <HAL_Delay>
 800dac8:	2300      	movs	r3, #0
 800daca:	4618      	mov	r0, r3
 800dacc:	3710      	adds	r7, #16
 800dace:	46bd      	mov	sp, r7
 800dad0:	bd80      	pop	{r7, pc}
	...

0800dad4 <USB_CoreReset>:
 800dad4:	b480      	push	{r7}
 800dad6:	b085      	sub	sp, #20
 800dad8:	af00      	add	r7, sp, #0
 800dada:	6078      	str	r0, [r7, #4]
 800dadc:	2300      	movs	r3, #0
 800dade:	60fb      	str	r3, [r7, #12]
 800dae0:	68fb      	ldr	r3, [r7, #12]
 800dae2:	3301      	adds	r3, #1
 800dae4:	60fb      	str	r3, [r7, #12]
 800dae6:	68fb      	ldr	r3, [r7, #12]
 800dae8:	4a13      	ldr	r2, [pc, #76]	; (800db38 <USB_CoreReset+0x64>)
 800daea:	4293      	cmp	r3, r2
 800daec:	d901      	bls.n	800daf2 <USB_CoreReset+0x1e>
 800daee:	2303      	movs	r3, #3
 800daf0:	e01b      	b.n	800db2a <USB_CoreReset+0x56>
 800daf2:	687b      	ldr	r3, [r7, #4]
 800daf4:	691b      	ldr	r3, [r3, #16]
 800daf6:	2b00      	cmp	r3, #0
 800daf8:	daf2      	bge.n	800dae0 <USB_CoreReset+0xc>
 800dafa:	2300      	movs	r3, #0
 800dafc:	60fb      	str	r3, [r7, #12]
 800dafe:	687b      	ldr	r3, [r7, #4]
 800db00:	691b      	ldr	r3, [r3, #16]
 800db02:	f043 0201 	orr.w	r2, r3, #1
 800db06:	687b      	ldr	r3, [r7, #4]
 800db08:	611a      	str	r2, [r3, #16]
 800db0a:	68fb      	ldr	r3, [r7, #12]
 800db0c:	3301      	adds	r3, #1
 800db0e:	60fb      	str	r3, [r7, #12]
 800db10:	68fb      	ldr	r3, [r7, #12]
 800db12:	4a09      	ldr	r2, [pc, #36]	; (800db38 <USB_CoreReset+0x64>)
 800db14:	4293      	cmp	r3, r2
 800db16:	d901      	bls.n	800db1c <USB_CoreReset+0x48>
 800db18:	2303      	movs	r3, #3
 800db1a:	e006      	b.n	800db2a <USB_CoreReset+0x56>
 800db1c:	687b      	ldr	r3, [r7, #4]
 800db1e:	691b      	ldr	r3, [r3, #16]
 800db20:	f003 0301 	and.w	r3, r3, #1
 800db24:	2b01      	cmp	r3, #1
 800db26:	d0f0      	beq.n	800db0a <USB_CoreReset+0x36>
 800db28:	2300      	movs	r3, #0
 800db2a:	4618      	mov	r0, r3
 800db2c:	3714      	adds	r7, #20
 800db2e:	46bd      	mov	sp, r7
 800db30:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db34:	4770      	bx	lr
 800db36:	bf00      	nop
 800db38:	00030d40 	.word	0x00030d40

0800db3c <SVC_Setup>:
 800db3c:	b480      	push	{r7}
 800db3e:	af00      	add	r7, sp, #0
 800db40:	bf00      	nop
 800db42:	46bd      	mov	sp, r7
 800db44:	f85d 7b04 	ldr.w	r7, [sp], #4
 800db48:	4770      	bx	lr
	...

0800db4c <osKernelInitialize>:
 800db4c:	b480      	push	{r7}
 800db4e:	b085      	sub	sp, #20
 800db50:	af00      	add	r7, sp, #0
 800db52:	f3ef 8305 	mrs	r3, IPSR
 800db56:	60bb      	str	r3, [r7, #8]
 800db58:	68bb      	ldr	r3, [r7, #8]
 800db5a:	2b00      	cmp	r3, #0
 800db5c:	d10f      	bne.n	800db7e <osKernelInitialize+0x32>
 800db5e:	f3ef 8310 	mrs	r3, PRIMASK
 800db62:	607b      	str	r3, [r7, #4]
 800db64:	687b      	ldr	r3, [r7, #4]
 800db66:	2b00      	cmp	r3, #0
 800db68:	d105      	bne.n	800db76 <osKernelInitialize+0x2a>
 800db6a:	f3ef 8311 	mrs	r3, BASEPRI
 800db6e:	603b      	str	r3, [r7, #0]
 800db70:	683b      	ldr	r3, [r7, #0]
 800db72:	2b00      	cmp	r3, #0
 800db74:	d007      	beq.n	800db86 <osKernelInitialize+0x3a>
 800db76:	4b0e      	ldr	r3, [pc, #56]	; (800dbb0 <osKernelInitialize+0x64>)
 800db78:	681b      	ldr	r3, [r3, #0]
 800db7a:	2b02      	cmp	r3, #2
 800db7c:	d103      	bne.n	800db86 <osKernelInitialize+0x3a>
 800db7e:	f06f 0305 	mvn.w	r3, #5
 800db82:	60fb      	str	r3, [r7, #12]
 800db84:	e00c      	b.n	800dba0 <osKernelInitialize+0x54>
 800db86:	4b0a      	ldr	r3, [pc, #40]	; (800dbb0 <osKernelInitialize+0x64>)
 800db88:	681b      	ldr	r3, [r3, #0]
 800db8a:	2b00      	cmp	r3, #0
 800db8c:	d105      	bne.n	800db9a <osKernelInitialize+0x4e>
 800db8e:	4b08      	ldr	r3, [pc, #32]	; (800dbb0 <osKernelInitialize+0x64>)
 800db90:	2201      	movs	r2, #1
 800db92:	601a      	str	r2, [r3, #0]
 800db94:	2300      	movs	r3, #0
 800db96:	60fb      	str	r3, [r7, #12]
 800db98:	e002      	b.n	800dba0 <osKernelInitialize+0x54>
 800db9a:	f04f 33ff 	mov.w	r3, #4294967295
 800db9e:	60fb      	str	r3, [r7, #12]
 800dba0:	68fb      	ldr	r3, [r7, #12]
 800dba2:	4618      	mov	r0, r3
 800dba4:	3714      	adds	r7, #20
 800dba6:	46bd      	mov	sp, r7
 800dba8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800dbac:	4770      	bx	lr
 800dbae:	bf00      	nop
 800dbb0:	20006070 	.word	0x20006070

0800dbb4 <osKernelStart>:
 800dbb4:	b580      	push	{r7, lr}
 800dbb6:	b084      	sub	sp, #16
 800dbb8:	af00      	add	r7, sp, #0
 800dbba:	f3ef 8305 	mrs	r3, IPSR
 800dbbe:	60bb      	str	r3, [r7, #8]
 800dbc0:	68bb      	ldr	r3, [r7, #8]
 800dbc2:	2b00      	cmp	r3, #0
 800dbc4:	d10f      	bne.n	800dbe6 <osKernelStart+0x32>
 800dbc6:	f3ef 8310 	mrs	r3, PRIMASK
 800dbca:	607b      	str	r3, [r7, #4]
 800dbcc:	687b      	ldr	r3, [r7, #4]
 800dbce:	2b00      	cmp	r3, #0
 800dbd0:	d105      	bne.n	800dbde <osKernelStart+0x2a>
 800dbd2:	f3ef 8311 	mrs	r3, BASEPRI
 800dbd6:	603b      	str	r3, [r7, #0]
 800dbd8:	683b      	ldr	r3, [r7, #0]
 800dbda:	2b00      	cmp	r3, #0
 800dbdc:	d007      	beq.n	800dbee <osKernelStart+0x3a>
 800dbde:	4b0f      	ldr	r3, [pc, #60]	; (800dc1c <osKernelStart+0x68>)
 800dbe0:	681b      	ldr	r3, [r3, #0]
 800dbe2:	2b02      	cmp	r3, #2
 800dbe4:	d103      	bne.n	800dbee <osKernelStart+0x3a>
 800dbe6:	f06f 0305 	mvn.w	r3, #5
 800dbea:	60fb      	str	r3, [r7, #12]
 800dbec:	e010      	b.n	800dc10 <osKernelStart+0x5c>
 800dbee:	4b0b      	ldr	r3, [pc, #44]	; (800dc1c <osKernelStart+0x68>)
 800dbf0:	681b      	ldr	r3, [r3, #0]
 800dbf2:	2b01      	cmp	r3, #1
 800dbf4:	d109      	bne.n	800dc0a <osKernelStart+0x56>
 800dbf6:	f7ff ffa1 	bl	800db3c <SVC_Setup>
 800dbfa:	4b08      	ldr	r3, [pc, #32]	; (800dc1c <osKernelStart+0x68>)
 800dbfc:	2202      	movs	r2, #2
 800dbfe:	601a      	str	r2, [r3, #0]
 800dc00:	f001 f870 	bl	800ece4 <vTaskStartScheduler>
 800dc04:	2300      	movs	r3, #0
 800dc06:	60fb      	str	r3, [r7, #12]
 800dc08:	e002      	b.n	800dc10 <osKernelStart+0x5c>
 800dc0a:	f04f 33ff 	mov.w	r3, #4294967295
 800dc0e:	60fb      	str	r3, [r7, #12]
 800dc10:	68fb      	ldr	r3, [r7, #12]
 800dc12:	4618      	mov	r0, r3
 800dc14:	3710      	adds	r7, #16
 800dc16:	46bd      	mov	sp, r7
 800dc18:	bd80      	pop	{r7, pc}
 800dc1a:	bf00      	nop
 800dc1c:	20006070 	.word	0x20006070

0800dc20 <osThreadNew>:
 800dc20:	b580      	push	{r7, lr}
 800dc22:	b090      	sub	sp, #64	; 0x40
 800dc24:	af04      	add	r7, sp, #16
 800dc26:	60f8      	str	r0, [r7, #12]
 800dc28:	60b9      	str	r1, [r7, #8]
 800dc2a:	607a      	str	r2, [r7, #4]
 800dc2c:	2300      	movs	r3, #0
 800dc2e:	613b      	str	r3, [r7, #16]
 800dc30:	f3ef 8305 	mrs	r3, IPSR
 800dc34:	61fb      	str	r3, [r7, #28]
 800dc36:	69fb      	ldr	r3, [r7, #28]
 800dc38:	2b00      	cmp	r3, #0
 800dc3a:	f040 808f 	bne.w	800dd5c <osThreadNew+0x13c>
 800dc3e:	f3ef 8310 	mrs	r3, PRIMASK
 800dc42:	61bb      	str	r3, [r7, #24]
 800dc44:	69bb      	ldr	r3, [r7, #24]
 800dc46:	2b00      	cmp	r3, #0
 800dc48:	d105      	bne.n	800dc56 <osThreadNew+0x36>
 800dc4a:	f3ef 8311 	mrs	r3, BASEPRI
 800dc4e:	617b      	str	r3, [r7, #20]
 800dc50:	697b      	ldr	r3, [r7, #20]
 800dc52:	2b00      	cmp	r3, #0
 800dc54:	d003      	beq.n	800dc5e <osThreadNew+0x3e>
 800dc56:	4b44      	ldr	r3, [pc, #272]	; (800dd68 <osThreadNew+0x148>)
 800dc58:	681b      	ldr	r3, [r3, #0]
 800dc5a:	2b02      	cmp	r3, #2
 800dc5c:	d07e      	beq.n	800dd5c <osThreadNew+0x13c>
 800dc5e:	68fb      	ldr	r3, [r7, #12]
 800dc60:	2b00      	cmp	r3, #0
 800dc62:	d07b      	beq.n	800dd5c <osThreadNew+0x13c>
 800dc64:	2380      	movs	r3, #128	; 0x80
 800dc66:	62bb      	str	r3, [r7, #40]	; 0x28
 800dc68:	2318      	movs	r3, #24
 800dc6a:	627b      	str	r3, [r7, #36]	; 0x24
 800dc6c:	2300      	movs	r3, #0
 800dc6e:	62fb      	str	r3, [r7, #44]	; 0x2c
 800dc70:	f04f 33ff 	mov.w	r3, #4294967295
 800dc74:	623b      	str	r3, [r7, #32]
 800dc76:	687b      	ldr	r3, [r7, #4]
 800dc78:	2b00      	cmp	r3, #0
 800dc7a:	d045      	beq.n	800dd08 <osThreadNew+0xe8>
 800dc7c:	687b      	ldr	r3, [r7, #4]
 800dc7e:	681b      	ldr	r3, [r3, #0]
 800dc80:	2b00      	cmp	r3, #0
 800dc82:	d002      	beq.n	800dc8a <osThreadNew+0x6a>
 800dc84:	687b      	ldr	r3, [r7, #4]
 800dc86:	681b      	ldr	r3, [r3, #0]
 800dc88:	62fb      	str	r3, [r7, #44]	; 0x2c
 800dc8a:	687b      	ldr	r3, [r7, #4]
 800dc8c:	699b      	ldr	r3, [r3, #24]
 800dc8e:	2b00      	cmp	r3, #0
 800dc90:	d002      	beq.n	800dc98 <osThreadNew+0x78>
 800dc92:	687b      	ldr	r3, [r7, #4]
 800dc94:	699b      	ldr	r3, [r3, #24]
 800dc96:	627b      	str	r3, [r7, #36]	; 0x24
 800dc98:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dc9a:	2b00      	cmp	r3, #0
 800dc9c:	d008      	beq.n	800dcb0 <osThreadNew+0x90>
 800dc9e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dca0:	2b38      	cmp	r3, #56	; 0x38
 800dca2:	d805      	bhi.n	800dcb0 <osThreadNew+0x90>
 800dca4:	687b      	ldr	r3, [r7, #4]
 800dca6:	685b      	ldr	r3, [r3, #4]
 800dca8:	f003 0301 	and.w	r3, r3, #1
 800dcac:	2b00      	cmp	r3, #0
 800dcae:	d001      	beq.n	800dcb4 <osThreadNew+0x94>
 800dcb0:	2300      	movs	r3, #0
 800dcb2:	e054      	b.n	800dd5e <osThreadNew+0x13e>
 800dcb4:	687b      	ldr	r3, [r7, #4]
 800dcb6:	695b      	ldr	r3, [r3, #20]
 800dcb8:	2b00      	cmp	r3, #0
 800dcba:	d003      	beq.n	800dcc4 <osThreadNew+0xa4>
 800dcbc:	687b      	ldr	r3, [r7, #4]
 800dcbe:	695b      	ldr	r3, [r3, #20]
 800dcc0:	089b      	lsrs	r3, r3, #2
 800dcc2:	62bb      	str	r3, [r7, #40]	; 0x28
 800dcc4:	687b      	ldr	r3, [r7, #4]
 800dcc6:	689b      	ldr	r3, [r3, #8]
 800dcc8:	2b00      	cmp	r3, #0
 800dcca:	d00e      	beq.n	800dcea <osThreadNew+0xca>
 800dccc:	687b      	ldr	r3, [r7, #4]
 800dcce:	68db      	ldr	r3, [r3, #12]
 800dcd0:	2b5b      	cmp	r3, #91	; 0x5b
 800dcd2:	d90a      	bls.n	800dcea <osThreadNew+0xca>
 800dcd4:	687b      	ldr	r3, [r7, #4]
 800dcd6:	691b      	ldr	r3, [r3, #16]
 800dcd8:	2b00      	cmp	r3, #0
 800dcda:	d006      	beq.n	800dcea <osThreadNew+0xca>
 800dcdc:	687b      	ldr	r3, [r7, #4]
 800dcde:	695b      	ldr	r3, [r3, #20]
 800dce0:	2b00      	cmp	r3, #0
 800dce2:	d002      	beq.n	800dcea <osThreadNew+0xca>
 800dce4:	2301      	movs	r3, #1
 800dce6:	623b      	str	r3, [r7, #32]
 800dce8:	e010      	b.n	800dd0c <osThreadNew+0xec>
 800dcea:	687b      	ldr	r3, [r7, #4]
 800dcec:	689b      	ldr	r3, [r3, #8]
 800dcee:	2b00      	cmp	r3, #0
 800dcf0:	d10c      	bne.n	800dd0c <osThreadNew+0xec>
 800dcf2:	687b      	ldr	r3, [r7, #4]
 800dcf4:	68db      	ldr	r3, [r3, #12]
 800dcf6:	2b00      	cmp	r3, #0
 800dcf8:	d108      	bne.n	800dd0c <osThreadNew+0xec>
 800dcfa:	687b      	ldr	r3, [r7, #4]
 800dcfc:	691b      	ldr	r3, [r3, #16]
 800dcfe:	2b00      	cmp	r3, #0
 800dd00:	d104      	bne.n	800dd0c <osThreadNew+0xec>
 800dd02:	2300      	movs	r3, #0
 800dd04:	623b      	str	r3, [r7, #32]
 800dd06:	e001      	b.n	800dd0c <osThreadNew+0xec>
 800dd08:	2300      	movs	r3, #0
 800dd0a:	623b      	str	r3, [r7, #32]
 800dd0c:	6a3b      	ldr	r3, [r7, #32]
 800dd0e:	2b01      	cmp	r3, #1
 800dd10:	d110      	bne.n	800dd34 <osThreadNew+0x114>
 800dd12:	687b      	ldr	r3, [r7, #4]
 800dd14:	691b      	ldr	r3, [r3, #16]
 800dd16:	687a      	ldr	r2, [r7, #4]
 800dd18:	6892      	ldr	r2, [r2, #8]
 800dd1a:	9202      	str	r2, [sp, #8]
 800dd1c:	9301      	str	r3, [sp, #4]
 800dd1e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dd20:	9300      	str	r3, [sp, #0]
 800dd22:	68bb      	ldr	r3, [r7, #8]
 800dd24:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800dd26:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800dd28:	68f8      	ldr	r0, [r7, #12]
 800dd2a:	f000 fe09 	bl	800e940 <xTaskCreateStatic>
 800dd2e:	4603      	mov	r3, r0
 800dd30:	613b      	str	r3, [r7, #16]
 800dd32:	e013      	b.n	800dd5c <osThreadNew+0x13c>
 800dd34:	6a3b      	ldr	r3, [r7, #32]
 800dd36:	2b00      	cmp	r3, #0
 800dd38:	d110      	bne.n	800dd5c <osThreadNew+0x13c>
 800dd3a:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800dd3c:	b29a      	uxth	r2, r3
 800dd3e:	f107 0310 	add.w	r3, r7, #16
 800dd42:	9301      	str	r3, [sp, #4]
 800dd44:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800dd46:	9300      	str	r3, [sp, #0]
 800dd48:	68bb      	ldr	r3, [r7, #8]
 800dd4a:	6af9      	ldr	r1, [r7, #44]	; 0x2c
 800dd4c:	68f8      	ldr	r0, [r7, #12]
 800dd4e:	f000 fe51 	bl	800e9f4 <xTaskCreate>
 800dd52:	4603      	mov	r3, r0
 800dd54:	2b01      	cmp	r3, #1
 800dd56:	d001      	beq.n	800dd5c <osThreadNew+0x13c>
 800dd58:	2300      	movs	r3, #0
 800dd5a:	613b      	str	r3, [r7, #16]
 800dd5c:	693b      	ldr	r3, [r7, #16]
 800dd5e:	4618      	mov	r0, r3
 800dd60:	3730      	adds	r7, #48	; 0x30
 800dd62:	46bd      	mov	sp, r7
 800dd64:	bd80      	pop	{r7, pc}
 800dd66:	bf00      	nop
 800dd68:	20006070 	.word	0x20006070

0800dd6c <osDelay>:
 800dd6c:	b580      	push	{r7, lr}
 800dd6e:	b086      	sub	sp, #24
 800dd70:	af00      	add	r7, sp, #0
 800dd72:	6078      	str	r0, [r7, #4]
 800dd74:	f3ef 8305 	mrs	r3, IPSR
 800dd78:	613b      	str	r3, [r7, #16]
 800dd7a:	693b      	ldr	r3, [r7, #16]
 800dd7c:	2b00      	cmp	r3, #0
 800dd7e:	d10f      	bne.n	800dda0 <osDelay+0x34>
 800dd80:	f3ef 8310 	mrs	r3, PRIMASK
 800dd84:	60fb      	str	r3, [r7, #12]
 800dd86:	68fb      	ldr	r3, [r7, #12]
 800dd88:	2b00      	cmp	r3, #0
 800dd8a:	d105      	bne.n	800dd98 <osDelay+0x2c>
 800dd8c:	f3ef 8311 	mrs	r3, BASEPRI
 800dd90:	60bb      	str	r3, [r7, #8]
 800dd92:	68bb      	ldr	r3, [r7, #8]
 800dd94:	2b00      	cmp	r3, #0
 800dd96:	d007      	beq.n	800dda8 <osDelay+0x3c>
 800dd98:	4b0a      	ldr	r3, [pc, #40]	; (800ddc4 <osDelay+0x58>)
 800dd9a:	681b      	ldr	r3, [r3, #0]
 800dd9c:	2b02      	cmp	r3, #2
 800dd9e:	d103      	bne.n	800dda8 <osDelay+0x3c>
 800dda0:	f06f 0305 	mvn.w	r3, #5
 800dda4:	617b      	str	r3, [r7, #20]
 800dda6:	e007      	b.n	800ddb8 <osDelay+0x4c>
 800dda8:	2300      	movs	r3, #0
 800ddaa:	617b      	str	r3, [r7, #20]
 800ddac:	687b      	ldr	r3, [r7, #4]
 800ddae:	2b00      	cmp	r3, #0
 800ddb0:	d002      	beq.n	800ddb8 <osDelay+0x4c>
 800ddb2:	6878      	ldr	r0, [r7, #4]
 800ddb4:	f000 ff62 	bl	800ec7c <vTaskDelay>
 800ddb8:	697b      	ldr	r3, [r7, #20]
 800ddba:	4618      	mov	r0, r3
 800ddbc:	3718      	adds	r7, #24
 800ddbe:	46bd      	mov	sp, r7
 800ddc0:	bd80      	pop	{r7, pc}
 800ddc2:	bf00      	nop
 800ddc4:	20006070 	.word	0x20006070

0800ddc8 <vApplicationGetIdleTaskMemory>:
 800ddc8:	b480      	push	{r7}
 800ddca:	b085      	sub	sp, #20
 800ddcc:	af00      	add	r7, sp, #0
 800ddce:	60f8      	str	r0, [r7, #12]
 800ddd0:	60b9      	str	r1, [r7, #8]
 800ddd2:	607a      	str	r2, [r7, #4]
 800ddd4:	68fb      	ldr	r3, [r7, #12]
 800ddd6:	4a07      	ldr	r2, [pc, #28]	; (800ddf4 <vApplicationGetIdleTaskMemory+0x2c>)
 800ddd8:	601a      	str	r2, [r3, #0]
 800ddda:	68bb      	ldr	r3, [r7, #8]
 800dddc:	4a06      	ldr	r2, [pc, #24]	; (800ddf8 <vApplicationGetIdleTaskMemory+0x30>)
 800ddde:	601a      	str	r2, [r3, #0]
 800dde0:	687b      	ldr	r3, [r7, #4]
 800dde2:	2280      	movs	r2, #128	; 0x80
 800dde4:	601a      	str	r2, [r3, #0]
 800dde6:	bf00      	nop
 800dde8:	3714      	adds	r7, #20
 800ddea:	46bd      	mov	sp, r7
 800ddec:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ddf0:	4770      	bx	lr
 800ddf2:	bf00      	nop
 800ddf4:	20006074 	.word	0x20006074
 800ddf8:	200060d0 	.word	0x200060d0

0800ddfc <vApplicationGetTimerTaskMemory>:
 800ddfc:	b480      	push	{r7}
 800ddfe:	b085      	sub	sp, #20
 800de00:	af00      	add	r7, sp, #0
 800de02:	60f8      	str	r0, [r7, #12]
 800de04:	60b9      	str	r1, [r7, #8]
 800de06:	607a      	str	r2, [r7, #4]
 800de08:	68fb      	ldr	r3, [r7, #12]
 800de0a:	4a07      	ldr	r2, [pc, #28]	; (800de28 <vApplicationGetTimerTaskMemory+0x2c>)
 800de0c:	601a      	str	r2, [r3, #0]
 800de0e:	68bb      	ldr	r3, [r7, #8]
 800de10:	4a06      	ldr	r2, [pc, #24]	; (800de2c <vApplicationGetTimerTaskMemory+0x30>)
 800de12:	601a      	str	r2, [r3, #0]
 800de14:	687b      	ldr	r3, [r7, #4]
 800de16:	f44f 7280 	mov.w	r2, #256	; 0x100
 800de1a:	601a      	str	r2, [r3, #0]
 800de1c:	bf00      	nop
 800de1e:	3714      	adds	r7, #20
 800de20:	46bd      	mov	sp, r7
 800de22:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de26:	4770      	bx	lr
 800de28:	200062d0 	.word	0x200062d0
 800de2c:	2000632c 	.word	0x2000632c

0800de30 <vListInitialise>:
 800de30:	b480      	push	{r7}
 800de32:	b083      	sub	sp, #12
 800de34:	af00      	add	r7, sp, #0
 800de36:	6078      	str	r0, [r7, #4]
 800de38:	687b      	ldr	r3, [r7, #4]
 800de3a:	f103 0208 	add.w	r2, r3, #8
 800de3e:	687b      	ldr	r3, [r7, #4]
 800de40:	605a      	str	r2, [r3, #4]
 800de42:	687b      	ldr	r3, [r7, #4]
 800de44:	f04f 32ff 	mov.w	r2, #4294967295
 800de48:	609a      	str	r2, [r3, #8]
 800de4a:	687b      	ldr	r3, [r7, #4]
 800de4c:	f103 0208 	add.w	r2, r3, #8
 800de50:	687b      	ldr	r3, [r7, #4]
 800de52:	60da      	str	r2, [r3, #12]
 800de54:	687b      	ldr	r3, [r7, #4]
 800de56:	f103 0208 	add.w	r2, r3, #8
 800de5a:	687b      	ldr	r3, [r7, #4]
 800de5c:	611a      	str	r2, [r3, #16]
 800de5e:	687b      	ldr	r3, [r7, #4]
 800de60:	2200      	movs	r2, #0
 800de62:	601a      	str	r2, [r3, #0]
 800de64:	bf00      	nop
 800de66:	370c      	adds	r7, #12
 800de68:	46bd      	mov	sp, r7
 800de6a:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de6e:	4770      	bx	lr

0800de70 <vListInitialiseItem>:
 800de70:	b480      	push	{r7}
 800de72:	b083      	sub	sp, #12
 800de74:	af00      	add	r7, sp, #0
 800de76:	6078      	str	r0, [r7, #4]
 800de78:	687b      	ldr	r3, [r7, #4]
 800de7a:	2200      	movs	r2, #0
 800de7c:	611a      	str	r2, [r3, #16]
 800de7e:	bf00      	nop
 800de80:	370c      	adds	r7, #12
 800de82:	46bd      	mov	sp, r7
 800de84:	f85d 7b04 	ldr.w	r7, [sp], #4
 800de88:	4770      	bx	lr

0800de8a <vListInsertEnd>:
 800de8a:	b480      	push	{r7}
 800de8c:	b085      	sub	sp, #20
 800de8e:	af00      	add	r7, sp, #0
 800de90:	6078      	str	r0, [r7, #4]
 800de92:	6039      	str	r1, [r7, #0]
 800de94:	687b      	ldr	r3, [r7, #4]
 800de96:	685b      	ldr	r3, [r3, #4]
 800de98:	60fb      	str	r3, [r7, #12]
 800de9a:	683b      	ldr	r3, [r7, #0]
 800de9c:	68fa      	ldr	r2, [r7, #12]
 800de9e:	605a      	str	r2, [r3, #4]
 800dea0:	68fb      	ldr	r3, [r7, #12]
 800dea2:	689a      	ldr	r2, [r3, #8]
 800dea4:	683b      	ldr	r3, [r7, #0]
 800dea6:	609a      	str	r2, [r3, #8]
 800dea8:	68fb      	ldr	r3, [r7, #12]
 800deaa:	689b      	ldr	r3, [r3, #8]
 800deac:	683a      	ldr	r2, [r7, #0]
 800deae:	605a      	str	r2, [r3, #4]
 800deb0:	68fb      	ldr	r3, [r7, #12]
 800deb2:	683a      	ldr	r2, [r7, #0]
 800deb4:	609a      	str	r2, [r3, #8]
 800deb6:	683b      	ldr	r3, [r7, #0]
 800deb8:	687a      	ldr	r2, [r7, #4]
 800deba:	611a      	str	r2, [r3, #16]
 800debc:	687b      	ldr	r3, [r7, #4]
 800debe:	681b      	ldr	r3, [r3, #0]
 800dec0:	1c5a      	adds	r2, r3, #1
 800dec2:	687b      	ldr	r3, [r7, #4]
 800dec4:	601a      	str	r2, [r3, #0]
 800dec6:	bf00      	nop
 800dec8:	3714      	adds	r7, #20
 800deca:	46bd      	mov	sp, r7
 800decc:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ded0:	4770      	bx	lr

0800ded2 <vListInsert>:
 800ded2:	b480      	push	{r7}
 800ded4:	b085      	sub	sp, #20
 800ded6:	af00      	add	r7, sp, #0
 800ded8:	6078      	str	r0, [r7, #4]
 800deda:	6039      	str	r1, [r7, #0]
 800dedc:	683b      	ldr	r3, [r7, #0]
 800dede:	681b      	ldr	r3, [r3, #0]
 800dee0:	60bb      	str	r3, [r7, #8]
 800dee2:	68bb      	ldr	r3, [r7, #8]
 800dee4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800dee8:	d103      	bne.n	800def2 <vListInsert+0x20>
 800deea:	687b      	ldr	r3, [r7, #4]
 800deec:	691b      	ldr	r3, [r3, #16]
 800deee:	60fb      	str	r3, [r7, #12]
 800def0:	e00c      	b.n	800df0c <vListInsert+0x3a>
 800def2:	687b      	ldr	r3, [r7, #4]
 800def4:	3308      	adds	r3, #8
 800def6:	60fb      	str	r3, [r7, #12]
 800def8:	e002      	b.n	800df00 <vListInsert+0x2e>
 800defa:	68fb      	ldr	r3, [r7, #12]
 800defc:	685b      	ldr	r3, [r3, #4]
 800defe:	60fb      	str	r3, [r7, #12]
 800df00:	68fb      	ldr	r3, [r7, #12]
 800df02:	685b      	ldr	r3, [r3, #4]
 800df04:	681b      	ldr	r3, [r3, #0]
 800df06:	68ba      	ldr	r2, [r7, #8]
 800df08:	429a      	cmp	r2, r3
 800df0a:	d2f6      	bcs.n	800defa <vListInsert+0x28>
 800df0c:	68fb      	ldr	r3, [r7, #12]
 800df0e:	685a      	ldr	r2, [r3, #4]
 800df10:	683b      	ldr	r3, [r7, #0]
 800df12:	605a      	str	r2, [r3, #4]
 800df14:	683b      	ldr	r3, [r7, #0]
 800df16:	685b      	ldr	r3, [r3, #4]
 800df18:	683a      	ldr	r2, [r7, #0]
 800df1a:	609a      	str	r2, [r3, #8]
 800df1c:	683b      	ldr	r3, [r7, #0]
 800df1e:	68fa      	ldr	r2, [r7, #12]
 800df20:	609a      	str	r2, [r3, #8]
 800df22:	68fb      	ldr	r3, [r7, #12]
 800df24:	683a      	ldr	r2, [r7, #0]
 800df26:	605a      	str	r2, [r3, #4]
 800df28:	683b      	ldr	r3, [r7, #0]
 800df2a:	687a      	ldr	r2, [r7, #4]
 800df2c:	611a      	str	r2, [r3, #16]
 800df2e:	687b      	ldr	r3, [r7, #4]
 800df30:	681b      	ldr	r3, [r3, #0]
 800df32:	1c5a      	adds	r2, r3, #1
 800df34:	687b      	ldr	r3, [r7, #4]
 800df36:	601a      	str	r2, [r3, #0]
 800df38:	bf00      	nop
 800df3a:	3714      	adds	r7, #20
 800df3c:	46bd      	mov	sp, r7
 800df3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df42:	4770      	bx	lr

0800df44 <uxListRemove>:
 800df44:	b480      	push	{r7}
 800df46:	b085      	sub	sp, #20
 800df48:	af00      	add	r7, sp, #0
 800df4a:	6078      	str	r0, [r7, #4]
 800df4c:	687b      	ldr	r3, [r7, #4]
 800df4e:	691b      	ldr	r3, [r3, #16]
 800df50:	60fb      	str	r3, [r7, #12]
 800df52:	687b      	ldr	r3, [r7, #4]
 800df54:	685b      	ldr	r3, [r3, #4]
 800df56:	687a      	ldr	r2, [r7, #4]
 800df58:	6892      	ldr	r2, [r2, #8]
 800df5a:	609a      	str	r2, [r3, #8]
 800df5c:	687b      	ldr	r3, [r7, #4]
 800df5e:	689b      	ldr	r3, [r3, #8]
 800df60:	687a      	ldr	r2, [r7, #4]
 800df62:	6852      	ldr	r2, [r2, #4]
 800df64:	605a      	str	r2, [r3, #4]
 800df66:	68fb      	ldr	r3, [r7, #12]
 800df68:	685b      	ldr	r3, [r3, #4]
 800df6a:	687a      	ldr	r2, [r7, #4]
 800df6c:	429a      	cmp	r2, r3
 800df6e:	d103      	bne.n	800df78 <uxListRemove+0x34>
 800df70:	687b      	ldr	r3, [r7, #4]
 800df72:	689a      	ldr	r2, [r3, #8]
 800df74:	68fb      	ldr	r3, [r7, #12]
 800df76:	605a      	str	r2, [r3, #4]
 800df78:	687b      	ldr	r3, [r7, #4]
 800df7a:	2200      	movs	r2, #0
 800df7c:	611a      	str	r2, [r3, #16]
 800df7e:	68fb      	ldr	r3, [r7, #12]
 800df80:	681b      	ldr	r3, [r3, #0]
 800df82:	1e5a      	subs	r2, r3, #1
 800df84:	68fb      	ldr	r3, [r7, #12]
 800df86:	601a      	str	r2, [r3, #0]
 800df88:	68fb      	ldr	r3, [r7, #12]
 800df8a:	681b      	ldr	r3, [r3, #0]
 800df8c:	4618      	mov	r0, r3
 800df8e:	3714      	adds	r7, #20
 800df90:	46bd      	mov	sp, r7
 800df92:	f85d 7b04 	ldr.w	r7, [sp], #4
 800df96:	4770      	bx	lr

0800df98 <xQueueGenericReset>:
 800df98:	b580      	push	{r7, lr}
 800df9a:	b084      	sub	sp, #16
 800df9c:	af00      	add	r7, sp, #0
 800df9e:	6078      	str	r0, [r7, #4]
 800dfa0:	6039      	str	r1, [r7, #0]
 800dfa2:	687b      	ldr	r3, [r7, #4]
 800dfa4:	60fb      	str	r3, [r7, #12]
 800dfa6:	68fb      	ldr	r3, [r7, #12]
 800dfa8:	2b00      	cmp	r3, #0
 800dfaa:	d109      	bne.n	800dfc0 <xQueueGenericReset+0x28>
 800dfac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800dfb0:	f383 8811 	msr	BASEPRI, r3
 800dfb4:	f3bf 8f6f 	isb	sy
 800dfb8:	f3bf 8f4f 	dsb	sy
 800dfbc:	60bb      	str	r3, [r7, #8]
 800dfbe:	e7fe      	b.n	800dfbe <xQueueGenericReset+0x26>
 800dfc0:	f002 f814 	bl	800ffec <vPortEnterCritical>
 800dfc4:	68fb      	ldr	r3, [r7, #12]
 800dfc6:	681a      	ldr	r2, [r3, #0]
 800dfc8:	68fb      	ldr	r3, [r7, #12]
 800dfca:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dfcc:	68f9      	ldr	r1, [r7, #12]
 800dfce:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800dfd0:	fb01 f303 	mul.w	r3, r1, r3
 800dfd4:	441a      	add	r2, r3
 800dfd6:	68fb      	ldr	r3, [r7, #12]
 800dfd8:	609a      	str	r2, [r3, #8]
 800dfda:	68fb      	ldr	r3, [r7, #12]
 800dfdc:	2200      	movs	r2, #0
 800dfde:	639a      	str	r2, [r3, #56]	; 0x38
 800dfe0:	68fb      	ldr	r3, [r7, #12]
 800dfe2:	681a      	ldr	r2, [r3, #0]
 800dfe4:	68fb      	ldr	r3, [r7, #12]
 800dfe6:	605a      	str	r2, [r3, #4]
 800dfe8:	68fb      	ldr	r3, [r7, #12]
 800dfea:	681a      	ldr	r2, [r3, #0]
 800dfec:	68fb      	ldr	r3, [r7, #12]
 800dfee:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800dff0:	3b01      	subs	r3, #1
 800dff2:	68f9      	ldr	r1, [r7, #12]
 800dff4:	6c09      	ldr	r1, [r1, #64]	; 0x40
 800dff6:	fb01 f303 	mul.w	r3, r1, r3
 800dffa:	441a      	add	r2, r3
 800dffc:	68fb      	ldr	r3, [r7, #12]
 800dffe:	60da      	str	r2, [r3, #12]
 800e000:	68fb      	ldr	r3, [r7, #12]
 800e002:	22ff      	movs	r2, #255	; 0xff
 800e004:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800e008:	68fb      	ldr	r3, [r7, #12]
 800e00a:	22ff      	movs	r2, #255	; 0xff
 800e00c:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800e010:	683b      	ldr	r3, [r7, #0]
 800e012:	2b00      	cmp	r3, #0
 800e014:	d114      	bne.n	800e040 <xQueueGenericReset+0xa8>
 800e016:	68fb      	ldr	r3, [r7, #12]
 800e018:	691b      	ldr	r3, [r3, #16]
 800e01a:	2b00      	cmp	r3, #0
 800e01c:	d01a      	beq.n	800e054 <xQueueGenericReset+0xbc>
 800e01e:	68fb      	ldr	r3, [r7, #12]
 800e020:	3310      	adds	r3, #16
 800e022:	4618      	mov	r0, r3
 800e024:	f001 f8de 	bl	800f1e4 <xTaskRemoveFromEventList>
 800e028:	4603      	mov	r3, r0
 800e02a:	2b00      	cmp	r3, #0
 800e02c:	d012      	beq.n	800e054 <xQueueGenericReset+0xbc>
 800e02e:	4b0d      	ldr	r3, [pc, #52]	; (800e064 <xQueueGenericReset+0xcc>)
 800e030:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e034:	601a      	str	r2, [r3, #0]
 800e036:	f3bf 8f4f 	dsb	sy
 800e03a:	f3bf 8f6f 	isb	sy
 800e03e:	e009      	b.n	800e054 <xQueueGenericReset+0xbc>
 800e040:	68fb      	ldr	r3, [r7, #12]
 800e042:	3310      	adds	r3, #16
 800e044:	4618      	mov	r0, r3
 800e046:	f7ff fef3 	bl	800de30 <vListInitialise>
 800e04a:	68fb      	ldr	r3, [r7, #12]
 800e04c:	3324      	adds	r3, #36	; 0x24
 800e04e:	4618      	mov	r0, r3
 800e050:	f7ff feee 	bl	800de30 <vListInitialise>
 800e054:	f001 fff8 	bl	8010048 <vPortExitCritical>
 800e058:	2301      	movs	r3, #1
 800e05a:	4618      	mov	r0, r3
 800e05c:	3710      	adds	r7, #16
 800e05e:	46bd      	mov	sp, r7
 800e060:	bd80      	pop	{r7, pc}
 800e062:	bf00      	nop
 800e064:	e000ed04 	.word	0xe000ed04

0800e068 <xQueueGenericCreateStatic>:
 800e068:	b580      	push	{r7, lr}
 800e06a:	b08e      	sub	sp, #56	; 0x38
 800e06c:	af02      	add	r7, sp, #8
 800e06e:	60f8      	str	r0, [r7, #12]
 800e070:	60b9      	str	r1, [r7, #8]
 800e072:	607a      	str	r2, [r7, #4]
 800e074:	603b      	str	r3, [r7, #0]
 800e076:	68fb      	ldr	r3, [r7, #12]
 800e078:	2b00      	cmp	r3, #0
 800e07a:	d109      	bne.n	800e090 <xQueueGenericCreateStatic+0x28>
 800e07c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e080:	f383 8811 	msr	BASEPRI, r3
 800e084:	f3bf 8f6f 	isb	sy
 800e088:	f3bf 8f4f 	dsb	sy
 800e08c:	62bb      	str	r3, [r7, #40]	; 0x28
 800e08e:	e7fe      	b.n	800e08e <xQueueGenericCreateStatic+0x26>
 800e090:	683b      	ldr	r3, [r7, #0]
 800e092:	2b00      	cmp	r3, #0
 800e094:	d109      	bne.n	800e0aa <xQueueGenericCreateStatic+0x42>
 800e096:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e09a:	f383 8811 	msr	BASEPRI, r3
 800e09e:	f3bf 8f6f 	isb	sy
 800e0a2:	f3bf 8f4f 	dsb	sy
 800e0a6:	627b      	str	r3, [r7, #36]	; 0x24
 800e0a8:	e7fe      	b.n	800e0a8 <xQueueGenericCreateStatic+0x40>
 800e0aa:	687b      	ldr	r3, [r7, #4]
 800e0ac:	2b00      	cmp	r3, #0
 800e0ae:	d002      	beq.n	800e0b6 <xQueueGenericCreateStatic+0x4e>
 800e0b0:	68bb      	ldr	r3, [r7, #8]
 800e0b2:	2b00      	cmp	r3, #0
 800e0b4:	d001      	beq.n	800e0ba <xQueueGenericCreateStatic+0x52>
 800e0b6:	2301      	movs	r3, #1
 800e0b8:	e000      	b.n	800e0bc <xQueueGenericCreateStatic+0x54>
 800e0ba:	2300      	movs	r3, #0
 800e0bc:	2b00      	cmp	r3, #0
 800e0be:	d109      	bne.n	800e0d4 <xQueueGenericCreateStatic+0x6c>
 800e0c0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0c4:	f383 8811 	msr	BASEPRI, r3
 800e0c8:	f3bf 8f6f 	isb	sy
 800e0cc:	f3bf 8f4f 	dsb	sy
 800e0d0:	623b      	str	r3, [r7, #32]
 800e0d2:	e7fe      	b.n	800e0d2 <xQueueGenericCreateStatic+0x6a>
 800e0d4:	687b      	ldr	r3, [r7, #4]
 800e0d6:	2b00      	cmp	r3, #0
 800e0d8:	d102      	bne.n	800e0e0 <xQueueGenericCreateStatic+0x78>
 800e0da:	68bb      	ldr	r3, [r7, #8]
 800e0dc:	2b00      	cmp	r3, #0
 800e0de:	d101      	bne.n	800e0e4 <xQueueGenericCreateStatic+0x7c>
 800e0e0:	2301      	movs	r3, #1
 800e0e2:	e000      	b.n	800e0e6 <xQueueGenericCreateStatic+0x7e>
 800e0e4:	2300      	movs	r3, #0
 800e0e6:	2b00      	cmp	r3, #0
 800e0e8:	d109      	bne.n	800e0fe <xQueueGenericCreateStatic+0x96>
 800e0ea:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e0ee:	f383 8811 	msr	BASEPRI, r3
 800e0f2:	f3bf 8f6f 	isb	sy
 800e0f6:	f3bf 8f4f 	dsb	sy
 800e0fa:	61fb      	str	r3, [r7, #28]
 800e0fc:	e7fe      	b.n	800e0fc <xQueueGenericCreateStatic+0x94>
 800e0fe:	2350      	movs	r3, #80	; 0x50
 800e100:	617b      	str	r3, [r7, #20]
 800e102:	697b      	ldr	r3, [r7, #20]
 800e104:	2b50      	cmp	r3, #80	; 0x50
 800e106:	d009      	beq.n	800e11c <xQueueGenericCreateStatic+0xb4>
 800e108:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e10c:	f383 8811 	msr	BASEPRI, r3
 800e110:	f3bf 8f6f 	isb	sy
 800e114:	f3bf 8f4f 	dsb	sy
 800e118:	61bb      	str	r3, [r7, #24]
 800e11a:	e7fe      	b.n	800e11a <xQueueGenericCreateStatic+0xb2>
 800e11c:	697b      	ldr	r3, [r7, #20]
 800e11e:	683b      	ldr	r3, [r7, #0]
 800e120:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e122:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e124:	2b00      	cmp	r3, #0
 800e126:	d00d      	beq.n	800e144 <xQueueGenericCreateStatic+0xdc>
 800e128:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e12a:	2201      	movs	r2, #1
 800e12c:	f883 2046 	strb.w	r2, [r3, #70]	; 0x46
 800e130:	f897 2038 	ldrb.w	r2, [r7, #56]	; 0x38
 800e134:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e136:	9300      	str	r3, [sp, #0]
 800e138:	4613      	mov	r3, r2
 800e13a:	687a      	ldr	r2, [r7, #4]
 800e13c:	68b9      	ldr	r1, [r7, #8]
 800e13e:	68f8      	ldr	r0, [r7, #12]
 800e140:	f000 f805 	bl	800e14e <prvInitialiseNewQueue>
 800e144:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e146:	4618      	mov	r0, r3
 800e148:	3730      	adds	r7, #48	; 0x30
 800e14a:	46bd      	mov	sp, r7
 800e14c:	bd80      	pop	{r7, pc}

0800e14e <prvInitialiseNewQueue>:
 800e14e:	b580      	push	{r7, lr}
 800e150:	b084      	sub	sp, #16
 800e152:	af00      	add	r7, sp, #0
 800e154:	60f8      	str	r0, [r7, #12]
 800e156:	60b9      	str	r1, [r7, #8]
 800e158:	607a      	str	r2, [r7, #4]
 800e15a:	70fb      	strb	r3, [r7, #3]
 800e15c:	68bb      	ldr	r3, [r7, #8]
 800e15e:	2b00      	cmp	r3, #0
 800e160:	d103      	bne.n	800e16a <prvInitialiseNewQueue+0x1c>
 800e162:	69bb      	ldr	r3, [r7, #24]
 800e164:	69ba      	ldr	r2, [r7, #24]
 800e166:	601a      	str	r2, [r3, #0]
 800e168:	e002      	b.n	800e170 <prvInitialiseNewQueue+0x22>
 800e16a:	69bb      	ldr	r3, [r7, #24]
 800e16c:	687a      	ldr	r2, [r7, #4]
 800e16e:	601a      	str	r2, [r3, #0]
 800e170:	69bb      	ldr	r3, [r7, #24]
 800e172:	68fa      	ldr	r2, [r7, #12]
 800e174:	63da      	str	r2, [r3, #60]	; 0x3c
 800e176:	69bb      	ldr	r3, [r7, #24]
 800e178:	68ba      	ldr	r2, [r7, #8]
 800e17a:	641a      	str	r2, [r3, #64]	; 0x40
 800e17c:	2101      	movs	r1, #1
 800e17e:	69b8      	ldr	r0, [r7, #24]
 800e180:	f7ff ff0a 	bl	800df98 <xQueueGenericReset>
 800e184:	69bb      	ldr	r3, [r7, #24]
 800e186:	78fa      	ldrb	r2, [r7, #3]
 800e188:	f883 204c 	strb.w	r2, [r3, #76]	; 0x4c
 800e18c:	bf00      	nop
 800e18e:	3710      	adds	r7, #16
 800e190:	46bd      	mov	sp, r7
 800e192:	bd80      	pop	{r7, pc}

0800e194 <xQueueGenericSend>:
 800e194:	b580      	push	{r7, lr}
 800e196:	b08e      	sub	sp, #56	; 0x38
 800e198:	af00      	add	r7, sp, #0
 800e19a:	60f8      	str	r0, [r7, #12]
 800e19c:	60b9      	str	r1, [r7, #8]
 800e19e:	607a      	str	r2, [r7, #4]
 800e1a0:	603b      	str	r3, [r7, #0]
 800e1a2:	2300      	movs	r3, #0
 800e1a4:	637b      	str	r3, [r7, #52]	; 0x34
 800e1a6:	68fb      	ldr	r3, [r7, #12]
 800e1a8:	633b      	str	r3, [r7, #48]	; 0x30
 800e1aa:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e1ac:	2b00      	cmp	r3, #0
 800e1ae:	d109      	bne.n	800e1c4 <xQueueGenericSend+0x30>
 800e1b0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1b4:	f383 8811 	msr	BASEPRI, r3
 800e1b8:	f3bf 8f6f 	isb	sy
 800e1bc:	f3bf 8f4f 	dsb	sy
 800e1c0:	62bb      	str	r3, [r7, #40]	; 0x28
 800e1c2:	e7fe      	b.n	800e1c2 <xQueueGenericSend+0x2e>
 800e1c4:	68bb      	ldr	r3, [r7, #8]
 800e1c6:	2b00      	cmp	r3, #0
 800e1c8:	d103      	bne.n	800e1d2 <xQueueGenericSend+0x3e>
 800e1ca:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e1cc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e1ce:	2b00      	cmp	r3, #0
 800e1d0:	d101      	bne.n	800e1d6 <xQueueGenericSend+0x42>
 800e1d2:	2301      	movs	r3, #1
 800e1d4:	e000      	b.n	800e1d8 <xQueueGenericSend+0x44>
 800e1d6:	2300      	movs	r3, #0
 800e1d8:	2b00      	cmp	r3, #0
 800e1da:	d109      	bne.n	800e1f0 <xQueueGenericSend+0x5c>
 800e1dc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e1e0:	f383 8811 	msr	BASEPRI, r3
 800e1e4:	f3bf 8f6f 	isb	sy
 800e1e8:	f3bf 8f4f 	dsb	sy
 800e1ec:	627b      	str	r3, [r7, #36]	; 0x24
 800e1ee:	e7fe      	b.n	800e1ee <xQueueGenericSend+0x5a>
 800e1f0:	683b      	ldr	r3, [r7, #0]
 800e1f2:	2b02      	cmp	r3, #2
 800e1f4:	d103      	bne.n	800e1fe <xQueueGenericSend+0x6a>
 800e1f6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e1f8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e1fa:	2b01      	cmp	r3, #1
 800e1fc:	d101      	bne.n	800e202 <xQueueGenericSend+0x6e>
 800e1fe:	2301      	movs	r3, #1
 800e200:	e000      	b.n	800e204 <xQueueGenericSend+0x70>
 800e202:	2300      	movs	r3, #0
 800e204:	2b00      	cmp	r3, #0
 800e206:	d109      	bne.n	800e21c <xQueueGenericSend+0x88>
 800e208:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e20c:	f383 8811 	msr	BASEPRI, r3
 800e210:	f3bf 8f6f 	isb	sy
 800e214:	f3bf 8f4f 	dsb	sy
 800e218:	623b      	str	r3, [r7, #32]
 800e21a:	e7fe      	b.n	800e21a <xQueueGenericSend+0x86>
 800e21c:	f001 f998 	bl	800f550 <xTaskGetSchedulerState>
 800e220:	4603      	mov	r3, r0
 800e222:	2b00      	cmp	r3, #0
 800e224:	d102      	bne.n	800e22c <xQueueGenericSend+0x98>
 800e226:	687b      	ldr	r3, [r7, #4]
 800e228:	2b00      	cmp	r3, #0
 800e22a:	d101      	bne.n	800e230 <xQueueGenericSend+0x9c>
 800e22c:	2301      	movs	r3, #1
 800e22e:	e000      	b.n	800e232 <xQueueGenericSend+0x9e>
 800e230:	2300      	movs	r3, #0
 800e232:	2b00      	cmp	r3, #0
 800e234:	d109      	bne.n	800e24a <xQueueGenericSend+0xb6>
 800e236:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e23a:	f383 8811 	msr	BASEPRI, r3
 800e23e:	f3bf 8f6f 	isb	sy
 800e242:	f3bf 8f4f 	dsb	sy
 800e246:	61fb      	str	r3, [r7, #28]
 800e248:	e7fe      	b.n	800e248 <xQueueGenericSend+0xb4>
 800e24a:	f001 fecf 	bl	800ffec <vPortEnterCritical>
 800e24e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e250:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e252:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e254:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e256:	429a      	cmp	r2, r3
 800e258:	d302      	bcc.n	800e260 <xQueueGenericSend+0xcc>
 800e25a:	683b      	ldr	r3, [r7, #0]
 800e25c:	2b02      	cmp	r3, #2
 800e25e:	d129      	bne.n	800e2b4 <xQueueGenericSend+0x120>
 800e260:	683a      	ldr	r2, [r7, #0]
 800e262:	68b9      	ldr	r1, [r7, #8]
 800e264:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800e266:	f000 f9ff 	bl	800e668 <prvCopyDataToQueue>
 800e26a:	62f8      	str	r0, [r7, #44]	; 0x2c
 800e26c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e26e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e270:	2b00      	cmp	r3, #0
 800e272:	d010      	beq.n	800e296 <xQueueGenericSend+0x102>
 800e274:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e276:	3324      	adds	r3, #36	; 0x24
 800e278:	4618      	mov	r0, r3
 800e27a:	f000 ffb3 	bl	800f1e4 <xTaskRemoveFromEventList>
 800e27e:	4603      	mov	r3, r0
 800e280:	2b00      	cmp	r3, #0
 800e282:	d013      	beq.n	800e2ac <xQueueGenericSend+0x118>
 800e284:	4b3f      	ldr	r3, [pc, #252]	; (800e384 <xQueueGenericSend+0x1f0>)
 800e286:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e28a:	601a      	str	r2, [r3, #0]
 800e28c:	f3bf 8f4f 	dsb	sy
 800e290:	f3bf 8f6f 	isb	sy
 800e294:	e00a      	b.n	800e2ac <xQueueGenericSend+0x118>
 800e296:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e298:	2b00      	cmp	r3, #0
 800e29a:	d007      	beq.n	800e2ac <xQueueGenericSend+0x118>
 800e29c:	4b39      	ldr	r3, [pc, #228]	; (800e384 <xQueueGenericSend+0x1f0>)
 800e29e:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e2a2:	601a      	str	r2, [r3, #0]
 800e2a4:	f3bf 8f4f 	dsb	sy
 800e2a8:	f3bf 8f6f 	isb	sy
 800e2ac:	f001 fecc 	bl	8010048 <vPortExitCritical>
 800e2b0:	2301      	movs	r3, #1
 800e2b2:	e063      	b.n	800e37c <xQueueGenericSend+0x1e8>
 800e2b4:	687b      	ldr	r3, [r7, #4]
 800e2b6:	2b00      	cmp	r3, #0
 800e2b8:	d103      	bne.n	800e2c2 <xQueueGenericSend+0x12e>
 800e2ba:	f001 fec5 	bl	8010048 <vPortExitCritical>
 800e2be:	2300      	movs	r3, #0
 800e2c0:	e05c      	b.n	800e37c <xQueueGenericSend+0x1e8>
 800e2c2:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e2c4:	2b00      	cmp	r3, #0
 800e2c6:	d106      	bne.n	800e2d6 <xQueueGenericSend+0x142>
 800e2c8:	f107 0314 	add.w	r3, r7, #20
 800e2cc:	4618      	mov	r0, r3
 800e2ce:	f000 ffeb 	bl	800f2a8 <vTaskInternalSetTimeOutState>
 800e2d2:	2301      	movs	r3, #1
 800e2d4:	637b      	str	r3, [r7, #52]	; 0x34
 800e2d6:	f001 feb7 	bl	8010048 <vPortExitCritical>
 800e2da:	f000 fd67 	bl	800edac <vTaskSuspendAll>
 800e2de:	f001 fe85 	bl	800ffec <vPortEnterCritical>
 800e2e2:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e2e4:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800e2e8:	b25b      	sxtb	r3, r3
 800e2ea:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e2ee:	d103      	bne.n	800e2f8 <xQueueGenericSend+0x164>
 800e2f0:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e2f2:	2200      	movs	r2, #0
 800e2f4:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800e2f8:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e2fa:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800e2fe:	b25b      	sxtb	r3, r3
 800e300:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e304:	d103      	bne.n	800e30e <xQueueGenericSend+0x17a>
 800e306:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e308:	2200      	movs	r2, #0
 800e30a:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800e30e:	f001 fe9b 	bl	8010048 <vPortExitCritical>
 800e312:	1d3a      	adds	r2, r7, #4
 800e314:	f107 0314 	add.w	r3, r7, #20
 800e318:	4611      	mov	r1, r2
 800e31a:	4618      	mov	r0, r3
 800e31c:	f000 ffda 	bl	800f2d4 <xTaskCheckForTimeOut>
 800e320:	4603      	mov	r3, r0
 800e322:	2b00      	cmp	r3, #0
 800e324:	d124      	bne.n	800e370 <xQueueGenericSend+0x1dc>
 800e326:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800e328:	f000 fa96 	bl	800e858 <prvIsQueueFull>
 800e32c:	4603      	mov	r3, r0
 800e32e:	2b00      	cmp	r3, #0
 800e330:	d018      	beq.n	800e364 <xQueueGenericSend+0x1d0>
 800e332:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e334:	3310      	adds	r3, #16
 800e336:	687a      	ldr	r2, [r7, #4]
 800e338:	4611      	mov	r1, r2
 800e33a:	4618      	mov	r0, r3
 800e33c:	f000 ff04 	bl	800f148 <vTaskPlaceOnEventList>
 800e340:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800e342:	f000 fa21 	bl	800e788 <prvUnlockQueue>
 800e346:	f000 fd3f 	bl	800edc8 <xTaskResumeAll>
 800e34a:	4603      	mov	r3, r0
 800e34c:	2b00      	cmp	r3, #0
 800e34e:	f47f af7c 	bne.w	800e24a <xQueueGenericSend+0xb6>
 800e352:	4b0c      	ldr	r3, [pc, #48]	; (800e384 <xQueueGenericSend+0x1f0>)
 800e354:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e358:	601a      	str	r2, [r3, #0]
 800e35a:	f3bf 8f4f 	dsb	sy
 800e35e:	f3bf 8f6f 	isb	sy
 800e362:	e772      	b.n	800e24a <xQueueGenericSend+0xb6>
 800e364:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800e366:	f000 fa0f 	bl	800e788 <prvUnlockQueue>
 800e36a:	f000 fd2d 	bl	800edc8 <xTaskResumeAll>
 800e36e:	e76c      	b.n	800e24a <xQueueGenericSend+0xb6>
 800e370:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800e372:	f000 fa09 	bl	800e788 <prvUnlockQueue>
 800e376:	f000 fd27 	bl	800edc8 <xTaskResumeAll>
 800e37a:	2300      	movs	r3, #0
 800e37c:	4618      	mov	r0, r3
 800e37e:	3738      	adds	r7, #56	; 0x38
 800e380:	46bd      	mov	sp, r7
 800e382:	bd80      	pop	{r7, pc}
 800e384:	e000ed04 	.word	0xe000ed04

0800e388 <xQueueGenericSendFromISR>:
 800e388:	b580      	push	{r7, lr}
 800e38a:	b08e      	sub	sp, #56	; 0x38
 800e38c:	af00      	add	r7, sp, #0
 800e38e:	60f8      	str	r0, [r7, #12]
 800e390:	60b9      	str	r1, [r7, #8]
 800e392:	607a      	str	r2, [r7, #4]
 800e394:	603b      	str	r3, [r7, #0]
 800e396:	68fb      	ldr	r3, [r7, #12]
 800e398:	633b      	str	r3, [r7, #48]	; 0x30
 800e39a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e39c:	2b00      	cmp	r3, #0
 800e39e:	d109      	bne.n	800e3b4 <xQueueGenericSendFromISR+0x2c>
 800e3a0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3a4:	f383 8811 	msr	BASEPRI, r3
 800e3a8:	f3bf 8f6f 	isb	sy
 800e3ac:	f3bf 8f4f 	dsb	sy
 800e3b0:	627b      	str	r3, [r7, #36]	; 0x24
 800e3b2:	e7fe      	b.n	800e3b2 <xQueueGenericSendFromISR+0x2a>
 800e3b4:	68bb      	ldr	r3, [r7, #8]
 800e3b6:	2b00      	cmp	r3, #0
 800e3b8:	d103      	bne.n	800e3c2 <xQueueGenericSendFromISR+0x3a>
 800e3ba:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e3bc:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e3be:	2b00      	cmp	r3, #0
 800e3c0:	d101      	bne.n	800e3c6 <xQueueGenericSendFromISR+0x3e>
 800e3c2:	2301      	movs	r3, #1
 800e3c4:	e000      	b.n	800e3c8 <xQueueGenericSendFromISR+0x40>
 800e3c6:	2300      	movs	r3, #0
 800e3c8:	2b00      	cmp	r3, #0
 800e3ca:	d109      	bne.n	800e3e0 <xQueueGenericSendFromISR+0x58>
 800e3cc:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3d0:	f383 8811 	msr	BASEPRI, r3
 800e3d4:	f3bf 8f6f 	isb	sy
 800e3d8:	f3bf 8f4f 	dsb	sy
 800e3dc:	623b      	str	r3, [r7, #32]
 800e3de:	e7fe      	b.n	800e3de <xQueueGenericSendFromISR+0x56>
 800e3e0:	683b      	ldr	r3, [r7, #0]
 800e3e2:	2b02      	cmp	r3, #2
 800e3e4:	d103      	bne.n	800e3ee <xQueueGenericSendFromISR+0x66>
 800e3e6:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e3e8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e3ea:	2b01      	cmp	r3, #1
 800e3ec:	d101      	bne.n	800e3f2 <xQueueGenericSendFromISR+0x6a>
 800e3ee:	2301      	movs	r3, #1
 800e3f0:	e000      	b.n	800e3f4 <xQueueGenericSendFromISR+0x6c>
 800e3f2:	2300      	movs	r3, #0
 800e3f4:	2b00      	cmp	r3, #0
 800e3f6:	d109      	bne.n	800e40c <xQueueGenericSendFromISR+0x84>
 800e3f8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e3fc:	f383 8811 	msr	BASEPRI, r3
 800e400:	f3bf 8f6f 	isb	sy
 800e404:	f3bf 8f4f 	dsb	sy
 800e408:	61fb      	str	r3, [r7, #28]
 800e40a:	e7fe      	b.n	800e40a <xQueueGenericSendFromISR+0x82>
 800e40c:	f001 feca 	bl	80101a4 <vPortValidateInterruptPriority>
 800e410:	f3ef 8211 	mrs	r2, BASEPRI
 800e414:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e418:	f383 8811 	msr	BASEPRI, r3
 800e41c:	f3bf 8f6f 	isb	sy
 800e420:	f3bf 8f4f 	dsb	sy
 800e424:	61ba      	str	r2, [r7, #24]
 800e426:	617b      	str	r3, [r7, #20]
 800e428:	69bb      	ldr	r3, [r7, #24]
 800e42a:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e42c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e42e:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e430:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e432:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e434:	429a      	cmp	r2, r3
 800e436:	d302      	bcc.n	800e43e <xQueueGenericSendFromISR+0xb6>
 800e438:	683b      	ldr	r3, [r7, #0]
 800e43a:	2b02      	cmp	r3, #2
 800e43c:	d12c      	bne.n	800e498 <xQueueGenericSendFromISR+0x110>
 800e43e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e440:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800e444:	f887 302b 	strb.w	r3, [r7, #43]	; 0x2b
 800e448:	683a      	ldr	r2, [r7, #0]
 800e44a:	68b9      	ldr	r1, [r7, #8]
 800e44c:	6b38      	ldr	r0, [r7, #48]	; 0x30
 800e44e:	f000 f90b 	bl	800e668 <prvCopyDataToQueue>
 800e452:	f997 302b 	ldrsb.w	r3, [r7, #43]	; 0x2b
 800e456:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e45a:	d112      	bne.n	800e482 <xQueueGenericSendFromISR+0xfa>
 800e45c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e45e:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e460:	2b00      	cmp	r3, #0
 800e462:	d016      	beq.n	800e492 <xQueueGenericSendFromISR+0x10a>
 800e464:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e466:	3324      	adds	r3, #36	; 0x24
 800e468:	4618      	mov	r0, r3
 800e46a:	f000 febb 	bl	800f1e4 <xTaskRemoveFromEventList>
 800e46e:	4603      	mov	r3, r0
 800e470:	2b00      	cmp	r3, #0
 800e472:	d00e      	beq.n	800e492 <xQueueGenericSendFromISR+0x10a>
 800e474:	687b      	ldr	r3, [r7, #4]
 800e476:	2b00      	cmp	r3, #0
 800e478:	d00b      	beq.n	800e492 <xQueueGenericSendFromISR+0x10a>
 800e47a:	687b      	ldr	r3, [r7, #4]
 800e47c:	2201      	movs	r2, #1
 800e47e:	601a      	str	r2, [r3, #0]
 800e480:	e007      	b.n	800e492 <xQueueGenericSendFromISR+0x10a>
 800e482:	f897 302b 	ldrb.w	r3, [r7, #43]	; 0x2b
 800e486:	3301      	adds	r3, #1
 800e488:	b2db      	uxtb	r3, r3
 800e48a:	b25a      	sxtb	r2, r3
 800e48c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e48e:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800e492:	2301      	movs	r3, #1
 800e494:	637b      	str	r3, [r7, #52]	; 0x34
 800e496:	e001      	b.n	800e49c <xQueueGenericSendFromISR+0x114>
 800e498:	2300      	movs	r3, #0
 800e49a:	637b      	str	r3, [r7, #52]	; 0x34
 800e49c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e49e:	613b      	str	r3, [r7, #16]
 800e4a0:	693b      	ldr	r3, [r7, #16]
 800e4a2:	f383 8811 	msr	BASEPRI, r3
 800e4a6:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e4a8:	4618      	mov	r0, r3
 800e4aa:	3738      	adds	r7, #56	; 0x38
 800e4ac:	46bd      	mov	sp, r7
 800e4ae:	bd80      	pop	{r7, pc}

0800e4b0 <xQueueReceive>:
 800e4b0:	b580      	push	{r7, lr}
 800e4b2:	b08c      	sub	sp, #48	; 0x30
 800e4b4:	af00      	add	r7, sp, #0
 800e4b6:	60f8      	str	r0, [r7, #12]
 800e4b8:	60b9      	str	r1, [r7, #8]
 800e4ba:	607a      	str	r2, [r7, #4]
 800e4bc:	2300      	movs	r3, #0
 800e4be:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e4c0:	68fb      	ldr	r3, [r7, #12]
 800e4c2:	62bb      	str	r3, [r7, #40]	; 0x28
 800e4c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e4c6:	2b00      	cmp	r3, #0
 800e4c8:	d109      	bne.n	800e4de <xQueueReceive+0x2e>
 800e4ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4ce:	f383 8811 	msr	BASEPRI, r3
 800e4d2:	f3bf 8f6f 	isb	sy
 800e4d6:	f3bf 8f4f 	dsb	sy
 800e4da:	623b      	str	r3, [r7, #32]
 800e4dc:	e7fe      	b.n	800e4dc <xQueueReceive+0x2c>
 800e4de:	68bb      	ldr	r3, [r7, #8]
 800e4e0:	2b00      	cmp	r3, #0
 800e4e2:	d103      	bne.n	800e4ec <xQueueReceive+0x3c>
 800e4e4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e4e6:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e4e8:	2b00      	cmp	r3, #0
 800e4ea:	d101      	bne.n	800e4f0 <xQueueReceive+0x40>
 800e4ec:	2301      	movs	r3, #1
 800e4ee:	e000      	b.n	800e4f2 <xQueueReceive+0x42>
 800e4f0:	2300      	movs	r3, #0
 800e4f2:	2b00      	cmp	r3, #0
 800e4f4:	d109      	bne.n	800e50a <xQueueReceive+0x5a>
 800e4f6:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e4fa:	f383 8811 	msr	BASEPRI, r3
 800e4fe:	f3bf 8f6f 	isb	sy
 800e502:	f3bf 8f4f 	dsb	sy
 800e506:	61fb      	str	r3, [r7, #28]
 800e508:	e7fe      	b.n	800e508 <xQueueReceive+0x58>
 800e50a:	f001 f821 	bl	800f550 <xTaskGetSchedulerState>
 800e50e:	4603      	mov	r3, r0
 800e510:	2b00      	cmp	r3, #0
 800e512:	d102      	bne.n	800e51a <xQueueReceive+0x6a>
 800e514:	687b      	ldr	r3, [r7, #4]
 800e516:	2b00      	cmp	r3, #0
 800e518:	d101      	bne.n	800e51e <xQueueReceive+0x6e>
 800e51a:	2301      	movs	r3, #1
 800e51c:	e000      	b.n	800e520 <xQueueReceive+0x70>
 800e51e:	2300      	movs	r3, #0
 800e520:	2b00      	cmp	r3, #0
 800e522:	d109      	bne.n	800e538 <xQueueReceive+0x88>
 800e524:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e528:	f383 8811 	msr	BASEPRI, r3
 800e52c:	f3bf 8f6f 	isb	sy
 800e530:	f3bf 8f4f 	dsb	sy
 800e534:	61bb      	str	r3, [r7, #24]
 800e536:	e7fe      	b.n	800e536 <xQueueReceive+0x86>
 800e538:	f001 fd58 	bl	800ffec <vPortEnterCritical>
 800e53c:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e53e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e540:	627b      	str	r3, [r7, #36]	; 0x24
 800e542:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e544:	2b00      	cmp	r3, #0
 800e546:	d01f      	beq.n	800e588 <xQueueReceive+0xd8>
 800e548:	68b9      	ldr	r1, [r7, #8]
 800e54a:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800e54c:	f000 f8f6 	bl	800e73c <prvCopyDataFromQueue>
 800e550:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e552:	1e5a      	subs	r2, r3, #1
 800e554:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e556:	639a      	str	r2, [r3, #56]	; 0x38
 800e558:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e55a:	691b      	ldr	r3, [r3, #16]
 800e55c:	2b00      	cmp	r3, #0
 800e55e:	d00f      	beq.n	800e580 <xQueueReceive+0xd0>
 800e560:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e562:	3310      	adds	r3, #16
 800e564:	4618      	mov	r0, r3
 800e566:	f000 fe3d 	bl	800f1e4 <xTaskRemoveFromEventList>
 800e56a:	4603      	mov	r3, r0
 800e56c:	2b00      	cmp	r3, #0
 800e56e:	d007      	beq.n	800e580 <xQueueReceive+0xd0>
 800e570:	4b3c      	ldr	r3, [pc, #240]	; (800e664 <xQueueReceive+0x1b4>)
 800e572:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e576:	601a      	str	r2, [r3, #0]
 800e578:	f3bf 8f4f 	dsb	sy
 800e57c:	f3bf 8f6f 	isb	sy
 800e580:	f001 fd62 	bl	8010048 <vPortExitCritical>
 800e584:	2301      	movs	r3, #1
 800e586:	e069      	b.n	800e65c <xQueueReceive+0x1ac>
 800e588:	687b      	ldr	r3, [r7, #4]
 800e58a:	2b00      	cmp	r3, #0
 800e58c:	d103      	bne.n	800e596 <xQueueReceive+0xe6>
 800e58e:	f001 fd5b 	bl	8010048 <vPortExitCritical>
 800e592:	2300      	movs	r3, #0
 800e594:	e062      	b.n	800e65c <xQueueReceive+0x1ac>
 800e596:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800e598:	2b00      	cmp	r3, #0
 800e59a:	d106      	bne.n	800e5aa <xQueueReceive+0xfa>
 800e59c:	f107 0310 	add.w	r3, r7, #16
 800e5a0:	4618      	mov	r0, r3
 800e5a2:	f000 fe81 	bl	800f2a8 <vTaskInternalSetTimeOutState>
 800e5a6:	2301      	movs	r3, #1
 800e5a8:	62fb      	str	r3, [r7, #44]	; 0x2c
 800e5aa:	f001 fd4d 	bl	8010048 <vPortExitCritical>
 800e5ae:	f000 fbfd 	bl	800edac <vTaskSuspendAll>
 800e5b2:	f001 fd1b 	bl	800ffec <vPortEnterCritical>
 800e5b6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e5b8:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800e5bc:	b25b      	sxtb	r3, r3
 800e5be:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e5c2:	d103      	bne.n	800e5cc <xQueueReceive+0x11c>
 800e5c4:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e5c6:	2200      	movs	r2, #0
 800e5c8:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800e5cc:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e5ce:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800e5d2:	b25b      	sxtb	r3, r3
 800e5d4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e5d8:	d103      	bne.n	800e5e2 <xQueueReceive+0x132>
 800e5da:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e5dc:	2200      	movs	r2, #0
 800e5de:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800e5e2:	f001 fd31 	bl	8010048 <vPortExitCritical>
 800e5e6:	1d3a      	adds	r2, r7, #4
 800e5e8:	f107 0310 	add.w	r3, r7, #16
 800e5ec:	4611      	mov	r1, r2
 800e5ee:	4618      	mov	r0, r3
 800e5f0:	f000 fe70 	bl	800f2d4 <xTaskCheckForTimeOut>
 800e5f4:	4603      	mov	r3, r0
 800e5f6:	2b00      	cmp	r3, #0
 800e5f8:	d123      	bne.n	800e642 <xQueueReceive+0x192>
 800e5fa:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800e5fc:	f000 f916 	bl	800e82c <prvIsQueueEmpty>
 800e600:	4603      	mov	r3, r0
 800e602:	2b00      	cmp	r3, #0
 800e604:	d017      	beq.n	800e636 <xQueueReceive+0x186>
 800e606:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800e608:	3324      	adds	r3, #36	; 0x24
 800e60a:	687a      	ldr	r2, [r7, #4]
 800e60c:	4611      	mov	r1, r2
 800e60e:	4618      	mov	r0, r3
 800e610:	f000 fd9a 	bl	800f148 <vTaskPlaceOnEventList>
 800e614:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800e616:	f000 f8b7 	bl	800e788 <prvUnlockQueue>
 800e61a:	f000 fbd5 	bl	800edc8 <xTaskResumeAll>
 800e61e:	4603      	mov	r3, r0
 800e620:	2b00      	cmp	r3, #0
 800e622:	d189      	bne.n	800e538 <xQueueReceive+0x88>
 800e624:	4b0f      	ldr	r3, [pc, #60]	; (800e664 <xQueueReceive+0x1b4>)
 800e626:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800e62a:	601a      	str	r2, [r3, #0]
 800e62c:	f3bf 8f4f 	dsb	sy
 800e630:	f3bf 8f6f 	isb	sy
 800e634:	e780      	b.n	800e538 <xQueueReceive+0x88>
 800e636:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800e638:	f000 f8a6 	bl	800e788 <prvUnlockQueue>
 800e63c:	f000 fbc4 	bl	800edc8 <xTaskResumeAll>
 800e640:	e77a      	b.n	800e538 <xQueueReceive+0x88>
 800e642:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800e644:	f000 f8a0 	bl	800e788 <prvUnlockQueue>
 800e648:	f000 fbbe 	bl	800edc8 <xTaskResumeAll>
 800e64c:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800e64e:	f000 f8ed 	bl	800e82c <prvIsQueueEmpty>
 800e652:	4603      	mov	r3, r0
 800e654:	2b00      	cmp	r3, #0
 800e656:	f43f af6f 	beq.w	800e538 <xQueueReceive+0x88>
 800e65a:	2300      	movs	r3, #0
 800e65c:	4618      	mov	r0, r3
 800e65e:	3730      	adds	r7, #48	; 0x30
 800e660:	46bd      	mov	sp, r7
 800e662:	bd80      	pop	{r7, pc}
 800e664:	e000ed04 	.word	0xe000ed04

0800e668 <prvCopyDataToQueue>:
 800e668:	b580      	push	{r7, lr}
 800e66a:	b086      	sub	sp, #24
 800e66c:	af00      	add	r7, sp, #0
 800e66e:	60f8      	str	r0, [r7, #12]
 800e670:	60b9      	str	r1, [r7, #8]
 800e672:	607a      	str	r2, [r7, #4]
 800e674:	2300      	movs	r3, #0
 800e676:	617b      	str	r3, [r7, #20]
 800e678:	68fb      	ldr	r3, [r7, #12]
 800e67a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e67c:	613b      	str	r3, [r7, #16]
 800e67e:	68fb      	ldr	r3, [r7, #12]
 800e680:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e682:	2b00      	cmp	r3, #0
 800e684:	d10d      	bne.n	800e6a2 <prvCopyDataToQueue+0x3a>
 800e686:	68fb      	ldr	r3, [r7, #12]
 800e688:	681b      	ldr	r3, [r3, #0]
 800e68a:	2b00      	cmp	r3, #0
 800e68c:	d14d      	bne.n	800e72a <prvCopyDataToQueue+0xc2>
 800e68e:	68fb      	ldr	r3, [r7, #12]
 800e690:	689b      	ldr	r3, [r3, #8]
 800e692:	4618      	mov	r0, r3
 800e694:	f000 ff7a 	bl	800f58c <xTaskPriorityDisinherit>
 800e698:	6178      	str	r0, [r7, #20]
 800e69a:	68fb      	ldr	r3, [r7, #12]
 800e69c:	2200      	movs	r2, #0
 800e69e:	609a      	str	r2, [r3, #8]
 800e6a0:	e043      	b.n	800e72a <prvCopyDataToQueue+0xc2>
 800e6a2:	687b      	ldr	r3, [r7, #4]
 800e6a4:	2b00      	cmp	r3, #0
 800e6a6:	d119      	bne.n	800e6dc <prvCopyDataToQueue+0x74>
 800e6a8:	68fb      	ldr	r3, [r7, #12]
 800e6aa:	6858      	ldr	r0, [r3, #4]
 800e6ac:	68fb      	ldr	r3, [r7, #12]
 800e6ae:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e6b0:	461a      	mov	r2, r3
 800e6b2:	68b9      	ldr	r1, [r7, #8]
 800e6b4:	f001 ffb8 	bl	8010628 <memcpy>
 800e6b8:	68fb      	ldr	r3, [r7, #12]
 800e6ba:	685a      	ldr	r2, [r3, #4]
 800e6bc:	68fb      	ldr	r3, [r7, #12]
 800e6be:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e6c0:	441a      	add	r2, r3
 800e6c2:	68fb      	ldr	r3, [r7, #12]
 800e6c4:	605a      	str	r2, [r3, #4]
 800e6c6:	68fb      	ldr	r3, [r7, #12]
 800e6c8:	685a      	ldr	r2, [r3, #4]
 800e6ca:	68fb      	ldr	r3, [r7, #12]
 800e6cc:	689b      	ldr	r3, [r3, #8]
 800e6ce:	429a      	cmp	r2, r3
 800e6d0:	d32b      	bcc.n	800e72a <prvCopyDataToQueue+0xc2>
 800e6d2:	68fb      	ldr	r3, [r7, #12]
 800e6d4:	681a      	ldr	r2, [r3, #0]
 800e6d6:	68fb      	ldr	r3, [r7, #12]
 800e6d8:	605a      	str	r2, [r3, #4]
 800e6da:	e026      	b.n	800e72a <prvCopyDataToQueue+0xc2>
 800e6dc:	68fb      	ldr	r3, [r7, #12]
 800e6de:	68d8      	ldr	r0, [r3, #12]
 800e6e0:	68fb      	ldr	r3, [r7, #12]
 800e6e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e6e4:	461a      	mov	r2, r3
 800e6e6:	68b9      	ldr	r1, [r7, #8]
 800e6e8:	f001 ff9e 	bl	8010628 <memcpy>
 800e6ec:	68fb      	ldr	r3, [r7, #12]
 800e6ee:	68da      	ldr	r2, [r3, #12]
 800e6f0:	68fb      	ldr	r3, [r7, #12]
 800e6f2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e6f4:	425b      	negs	r3, r3
 800e6f6:	441a      	add	r2, r3
 800e6f8:	68fb      	ldr	r3, [r7, #12]
 800e6fa:	60da      	str	r2, [r3, #12]
 800e6fc:	68fb      	ldr	r3, [r7, #12]
 800e6fe:	68da      	ldr	r2, [r3, #12]
 800e700:	68fb      	ldr	r3, [r7, #12]
 800e702:	681b      	ldr	r3, [r3, #0]
 800e704:	429a      	cmp	r2, r3
 800e706:	d207      	bcs.n	800e718 <prvCopyDataToQueue+0xb0>
 800e708:	68fb      	ldr	r3, [r7, #12]
 800e70a:	689a      	ldr	r2, [r3, #8]
 800e70c:	68fb      	ldr	r3, [r7, #12]
 800e70e:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e710:	425b      	negs	r3, r3
 800e712:	441a      	add	r2, r3
 800e714:	68fb      	ldr	r3, [r7, #12]
 800e716:	60da      	str	r2, [r3, #12]
 800e718:	687b      	ldr	r3, [r7, #4]
 800e71a:	2b02      	cmp	r3, #2
 800e71c:	d105      	bne.n	800e72a <prvCopyDataToQueue+0xc2>
 800e71e:	693b      	ldr	r3, [r7, #16]
 800e720:	2b00      	cmp	r3, #0
 800e722:	d002      	beq.n	800e72a <prvCopyDataToQueue+0xc2>
 800e724:	693b      	ldr	r3, [r7, #16]
 800e726:	3b01      	subs	r3, #1
 800e728:	613b      	str	r3, [r7, #16]
 800e72a:	693b      	ldr	r3, [r7, #16]
 800e72c:	1c5a      	adds	r2, r3, #1
 800e72e:	68fb      	ldr	r3, [r7, #12]
 800e730:	639a      	str	r2, [r3, #56]	; 0x38
 800e732:	697b      	ldr	r3, [r7, #20]
 800e734:	4618      	mov	r0, r3
 800e736:	3718      	adds	r7, #24
 800e738:	46bd      	mov	sp, r7
 800e73a:	bd80      	pop	{r7, pc}

0800e73c <prvCopyDataFromQueue>:
 800e73c:	b580      	push	{r7, lr}
 800e73e:	b082      	sub	sp, #8
 800e740:	af00      	add	r7, sp, #0
 800e742:	6078      	str	r0, [r7, #4]
 800e744:	6039      	str	r1, [r7, #0]
 800e746:	687b      	ldr	r3, [r7, #4]
 800e748:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e74a:	2b00      	cmp	r3, #0
 800e74c:	d018      	beq.n	800e780 <prvCopyDataFromQueue+0x44>
 800e74e:	687b      	ldr	r3, [r7, #4]
 800e750:	68da      	ldr	r2, [r3, #12]
 800e752:	687b      	ldr	r3, [r7, #4]
 800e754:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e756:	441a      	add	r2, r3
 800e758:	687b      	ldr	r3, [r7, #4]
 800e75a:	60da      	str	r2, [r3, #12]
 800e75c:	687b      	ldr	r3, [r7, #4]
 800e75e:	68da      	ldr	r2, [r3, #12]
 800e760:	687b      	ldr	r3, [r7, #4]
 800e762:	689b      	ldr	r3, [r3, #8]
 800e764:	429a      	cmp	r2, r3
 800e766:	d303      	bcc.n	800e770 <prvCopyDataFromQueue+0x34>
 800e768:	687b      	ldr	r3, [r7, #4]
 800e76a:	681a      	ldr	r2, [r3, #0]
 800e76c:	687b      	ldr	r3, [r7, #4]
 800e76e:	60da      	str	r2, [r3, #12]
 800e770:	687b      	ldr	r3, [r7, #4]
 800e772:	68d9      	ldr	r1, [r3, #12]
 800e774:	687b      	ldr	r3, [r7, #4]
 800e776:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 800e778:	461a      	mov	r2, r3
 800e77a:	6838      	ldr	r0, [r7, #0]
 800e77c:	f001 ff54 	bl	8010628 <memcpy>
 800e780:	bf00      	nop
 800e782:	3708      	adds	r7, #8
 800e784:	46bd      	mov	sp, r7
 800e786:	bd80      	pop	{r7, pc}

0800e788 <prvUnlockQueue>:
 800e788:	b580      	push	{r7, lr}
 800e78a:	b084      	sub	sp, #16
 800e78c:	af00      	add	r7, sp, #0
 800e78e:	6078      	str	r0, [r7, #4]
 800e790:	f001 fc2c 	bl	800ffec <vPortEnterCritical>
 800e794:	687b      	ldr	r3, [r7, #4]
 800e796:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800e79a:	73fb      	strb	r3, [r7, #15]
 800e79c:	e011      	b.n	800e7c2 <prvUnlockQueue+0x3a>
 800e79e:	687b      	ldr	r3, [r7, #4]
 800e7a0:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 800e7a2:	2b00      	cmp	r3, #0
 800e7a4:	d012      	beq.n	800e7cc <prvUnlockQueue+0x44>
 800e7a6:	687b      	ldr	r3, [r7, #4]
 800e7a8:	3324      	adds	r3, #36	; 0x24
 800e7aa:	4618      	mov	r0, r3
 800e7ac:	f000 fd1a 	bl	800f1e4 <xTaskRemoveFromEventList>
 800e7b0:	4603      	mov	r3, r0
 800e7b2:	2b00      	cmp	r3, #0
 800e7b4:	d001      	beq.n	800e7ba <prvUnlockQueue+0x32>
 800e7b6:	f000 fded 	bl	800f394 <vTaskMissedYield>
 800e7ba:	7bfb      	ldrb	r3, [r7, #15]
 800e7bc:	3b01      	subs	r3, #1
 800e7be:	b2db      	uxtb	r3, r3
 800e7c0:	73fb      	strb	r3, [r7, #15]
 800e7c2:	f997 300f 	ldrsb.w	r3, [r7, #15]
 800e7c6:	2b00      	cmp	r3, #0
 800e7c8:	dce9      	bgt.n	800e79e <prvUnlockQueue+0x16>
 800e7ca:	e000      	b.n	800e7ce <prvUnlockQueue+0x46>
 800e7cc:	bf00      	nop
 800e7ce:	687b      	ldr	r3, [r7, #4]
 800e7d0:	22ff      	movs	r2, #255	; 0xff
 800e7d2:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800e7d6:	f001 fc37 	bl	8010048 <vPortExitCritical>
 800e7da:	f001 fc07 	bl	800ffec <vPortEnterCritical>
 800e7de:	687b      	ldr	r3, [r7, #4]
 800e7e0:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800e7e4:	73bb      	strb	r3, [r7, #14]
 800e7e6:	e011      	b.n	800e80c <prvUnlockQueue+0x84>
 800e7e8:	687b      	ldr	r3, [r7, #4]
 800e7ea:	691b      	ldr	r3, [r3, #16]
 800e7ec:	2b00      	cmp	r3, #0
 800e7ee:	d012      	beq.n	800e816 <prvUnlockQueue+0x8e>
 800e7f0:	687b      	ldr	r3, [r7, #4]
 800e7f2:	3310      	adds	r3, #16
 800e7f4:	4618      	mov	r0, r3
 800e7f6:	f000 fcf5 	bl	800f1e4 <xTaskRemoveFromEventList>
 800e7fa:	4603      	mov	r3, r0
 800e7fc:	2b00      	cmp	r3, #0
 800e7fe:	d001      	beq.n	800e804 <prvUnlockQueue+0x7c>
 800e800:	f000 fdc8 	bl	800f394 <vTaskMissedYield>
 800e804:	7bbb      	ldrb	r3, [r7, #14]
 800e806:	3b01      	subs	r3, #1
 800e808:	b2db      	uxtb	r3, r3
 800e80a:	73bb      	strb	r3, [r7, #14]
 800e80c:	f997 300e 	ldrsb.w	r3, [r7, #14]
 800e810:	2b00      	cmp	r3, #0
 800e812:	dce9      	bgt.n	800e7e8 <prvUnlockQueue+0x60>
 800e814:	e000      	b.n	800e818 <prvUnlockQueue+0x90>
 800e816:	bf00      	nop
 800e818:	687b      	ldr	r3, [r7, #4]
 800e81a:	22ff      	movs	r2, #255	; 0xff
 800e81c:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800e820:	f001 fc12 	bl	8010048 <vPortExitCritical>
 800e824:	bf00      	nop
 800e826:	3710      	adds	r7, #16
 800e828:	46bd      	mov	sp, r7
 800e82a:	bd80      	pop	{r7, pc}

0800e82c <prvIsQueueEmpty>:
 800e82c:	b580      	push	{r7, lr}
 800e82e:	b084      	sub	sp, #16
 800e830:	af00      	add	r7, sp, #0
 800e832:	6078      	str	r0, [r7, #4]
 800e834:	f001 fbda 	bl	800ffec <vPortEnterCritical>
 800e838:	687b      	ldr	r3, [r7, #4]
 800e83a:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e83c:	2b00      	cmp	r3, #0
 800e83e:	d102      	bne.n	800e846 <prvIsQueueEmpty+0x1a>
 800e840:	2301      	movs	r3, #1
 800e842:	60fb      	str	r3, [r7, #12]
 800e844:	e001      	b.n	800e84a <prvIsQueueEmpty+0x1e>
 800e846:	2300      	movs	r3, #0
 800e848:	60fb      	str	r3, [r7, #12]
 800e84a:	f001 fbfd 	bl	8010048 <vPortExitCritical>
 800e84e:	68fb      	ldr	r3, [r7, #12]
 800e850:	4618      	mov	r0, r3
 800e852:	3710      	adds	r7, #16
 800e854:	46bd      	mov	sp, r7
 800e856:	bd80      	pop	{r7, pc}

0800e858 <prvIsQueueFull>:
 800e858:	b580      	push	{r7, lr}
 800e85a:	b084      	sub	sp, #16
 800e85c:	af00      	add	r7, sp, #0
 800e85e:	6078      	str	r0, [r7, #4]
 800e860:	f001 fbc4 	bl	800ffec <vPortEnterCritical>
 800e864:	687b      	ldr	r3, [r7, #4]
 800e866:	6b9a      	ldr	r2, [r3, #56]	; 0x38
 800e868:	687b      	ldr	r3, [r7, #4]
 800e86a:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 800e86c:	429a      	cmp	r2, r3
 800e86e:	d102      	bne.n	800e876 <prvIsQueueFull+0x1e>
 800e870:	2301      	movs	r3, #1
 800e872:	60fb      	str	r3, [r7, #12]
 800e874:	e001      	b.n	800e87a <prvIsQueueFull+0x22>
 800e876:	2300      	movs	r3, #0
 800e878:	60fb      	str	r3, [r7, #12]
 800e87a:	f001 fbe5 	bl	8010048 <vPortExitCritical>
 800e87e:	68fb      	ldr	r3, [r7, #12]
 800e880:	4618      	mov	r0, r3
 800e882:	3710      	adds	r7, #16
 800e884:	46bd      	mov	sp, r7
 800e886:	bd80      	pop	{r7, pc}

0800e888 <vQueueAddToRegistry>:
 800e888:	b480      	push	{r7}
 800e88a:	b085      	sub	sp, #20
 800e88c:	af00      	add	r7, sp, #0
 800e88e:	6078      	str	r0, [r7, #4]
 800e890:	6039      	str	r1, [r7, #0]
 800e892:	2300      	movs	r3, #0
 800e894:	60fb      	str	r3, [r7, #12]
 800e896:	e014      	b.n	800e8c2 <vQueueAddToRegistry+0x3a>
 800e898:	4a0e      	ldr	r2, [pc, #56]	; (800e8d4 <vQueueAddToRegistry+0x4c>)
 800e89a:	68fb      	ldr	r3, [r7, #12]
 800e89c:	f852 3033 	ldr.w	r3, [r2, r3, lsl #3]
 800e8a0:	2b00      	cmp	r3, #0
 800e8a2:	d10b      	bne.n	800e8bc <vQueueAddToRegistry+0x34>
 800e8a4:	490b      	ldr	r1, [pc, #44]	; (800e8d4 <vQueueAddToRegistry+0x4c>)
 800e8a6:	68fb      	ldr	r3, [r7, #12]
 800e8a8:	683a      	ldr	r2, [r7, #0]
 800e8aa:	f841 2033 	str.w	r2, [r1, r3, lsl #3]
 800e8ae:	4a09      	ldr	r2, [pc, #36]	; (800e8d4 <vQueueAddToRegistry+0x4c>)
 800e8b0:	68fb      	ldr	r3, [r7, #12]
 800e8b2:	00db      	lsls	r3, r3, #3
 800e8b4:	4413      	add	r3, r2
 800e8b6:	687a      	ldr	r2, [r7, #4]
 800e8b8:	605a      	str	r2, [r3, #4]
 800e8ba:	e005      	b.n	800e8c8 <vQueueAddToRegistry+0x40>
 800e8bc:	68fb      	ldr	r3, [r7, #12]
 800e8be:	3301      	adds	r3, #1
 800e8c0:	60fb      	str	r3, [r7, #12]
 800e8c2:	68fb      	ldr	r3, [r7, #12]
 800e8c4:	2b07      	cmp	r3, #7
 800e8c6:	d9e7      	bls.n	800e898 <vQueueAddToRegistry+0x10>
 800e8c8:	bf00      	nop
 800e8ca:	3714      	adds	r7, #20
 800e8cc:	46bd      	mov	sp, r7
 800e8ce:	f85d 7b04 	ldr.w	r7, [sp], #4
 800e8d2:	4770      	bx	lr
 800e8d4:	2000b5a0 	.word	0x2000b5a0

0800e8d8 <vQueueWaitForMessageRestricted>:
 800e8d8:	b580      	push	{r7, lr}
 800e8da:	b086      	sub	sp, #24
 800e8dc:	af00      	add	r7, sp, #0
 800e8de:	60f8      	str	r0, [r7, #12]
 800e8e0:	60b9      	str	r1, [r7, #8]
 800e8e2:	607a      	str	r2, [r7, #4]
 800e8e4:	68fb      	ldr	r3, [r7, #12]
 800e8e6:	617b      	str	r3, [r7, #20]
 800e8e8:	f001 fb80 	bl	800ffec <vPortEnterCritical>
 800e8ec:	697b      	ldr	r3, [r7, #20]
 800e8ee:	f893 3044 	ldrb.w	r3, [r3, #68]	; 0x44
 800e8f2:	b25b      	sxtb	r3, r3
 800e8f4:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e8f8:	d103      	bne.n	800e902 <vQueueWaitForMessageRestricted+0x2a>
 800e8fa:	697b      	ldr	r3, [r7, #20]
 800e8fc:	2200      	movs	r2, #0
 800e8fe:	f883 2044 	strb.w	r2, [r3, #68]	; 0x44
 800e902:	697b      	ldr	r3, [r7, #20]
 800e904:	f893 3045 	ldrb.w	r3, [r3, #69]	; 0x45
 800e908:	b25b      	sxtb	r3, r3
 800e90a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800e90e:	d103      	bne.n	800e918 <vQueueWaitForMessageRestricted+0x40>
 800e910:	697b      	ldr	r3, [r7, #20]
 800e912:	2200      	movs	r2, #0
 800e914:	f883 2045 	strb.w	r2, [r3, #69]	; 0x45
 800e918:	f001 fb96 	bl	8010048 <vPortExitCritical>
 800e91c:	697b      	ldr	r3, [r7, #20]
 800e91e:	6b9b      	ldr	r3, [r3, #56]	; 0x38
 800e920:	2b00      	cmp	r3, #0
 800e922:	d106      	bne.n	800e932 <vQueueWaitForMessageRestricted+0x5a>
 800e924:	697b      	ldr	r3, [r7, #20]
 800e926:	3324      	adds	r3, #36	; 0x24
 800e928:	687a      	ldr	r2, [r7, #4]
 800e92a:	68b9      	ldr	r1, [r7, #8]
 800e92c:	4618      	mov	r0, r3
 800e92e:	f000 fc2f 	bl	800f190 <vTaskPlaceOnEventListRestricted>
 800e932:	6978      	ldr	r0, [r7, #20]
 800e934:	f7ff ff28 	bl	800e788 <prvUnlockQueue>
 800e938:	bf00      	nop
 800e93a:	3718      	adds	r7, #24
 800e93c:	46bd      	mov	sp, r7
 800e93e:	bd80      	pop	{r7, pc}

0800e940 <xTaskCreateStatic>:
 800e940:	b580      	push	{r7, lr}
 800e942:	b08e      	sub	sp, #56	; 0x38
 800e944:	af04      	add	r7, sp, #16
 800e946:	60f8      	str	r0, [r7, #12]
 800e948:	60b9      	str	r1, [r7, #8]
 800e94a:	607a      	str	r2, [r7, #4]
 800e94c:	603b      	str	r3, [r7, #0]
 800e94e:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e950:	2b00      	cmp	r3, #0
 800e952:	d109      	bne.n	800e968 <xTaskCreateStatic+0x28>
 800e954:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e958:	f383 8811 	msr	BASEPRI, r3
 800e95c:	f3bf 8f6f 	isb	sy
 800e960:	f3bf 8f4f 	dsb	sy
 800e964:	623b      	str	r3, [r7, #32]
 800e966:	e7fe      	b.n	800e966 <xTaskCreateStatic+0x26>
 800e968:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e96a:	2b00      	cmp	r3, #0
 800e96c:	d109      	bne.n	800e982 <xTaskCreateStatic+0x42>
 800e96e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e972:	f383 8811 	msr	BASEPRI, r3
 800e976:	f3bf 8f6f 	isb	sy
 800e97a:	f3bf 8f4f 	dsb	sy
 800e97e:	61fb      	str	r3, [r7, #28]
 800e980:	e7fe      	b.n	800e980 <xTaskCreateStatic+0x40>
 800e982:	235c      	movs	r3, #92	; 0x5c
 800e984:	613b      	str	r3, [r7, #16]
 800e986:	693b      	ldr	r3, [r7, #16]
 800e988:	2b5c      	cmp	r3, #92	; 0x5c
 800e98a:	d009      	beq.n	800e9a0 <xTaskCreateStatic+0x60>
 800e98c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800e990:	f383 8811 	msr	BASEPRI, r3
 800e994:	f3bf 8f6f 	isb	sy
 800e998:	f3bf 8f4f 	dsb	sy
 800e99c:	61bb      	str	r3, [r7, #24]
 800e99e:	e7fe      	b.n	800e99e <xTaskCreateStatic+0x5e>
 800e9a0:	693b      	ldr	r3, [r7, #16]
 800e9a2:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e9a4:	2b00      	cmp	r3, #0
 800e9a6:	d01e      	beq.n	800e9e6 <xTaskCreateStatic+0xa6>
 800e9a8:	6b7b      	ldr	r3, [r7, #52]	; 0x34
 800e9aa:	2b00      	cmp	r3, #0
 800e9ac:	d01b      	beq.n	800e9e6 <xTaskCreateStatic+0xa6>
 800e9ae:	6bbb      	ldr	r3, [r7, #56]	; 0x38
 800e9b0:	627b      	str	r3, [r7, #36]	; 0x24
 800e9b2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e9b4:	6b7a      	ldr	r2, [r7, #52]	; 0x34
 800e9b6:	631a      	str	r2, [r3, #48]	; 0x30
 800e9b8:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e9ba:	2202      	movs	r2, #2
 800e9bc:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 800e9c0:	2300      	movs	r3, #0
 800e9c2:	9303      	str	r3, [sp, #12]
 800e9c4:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800e9c6:	9302      	str	r3, [sp, #8]
 800e9c8:	f107 0314 	add.w	r3, r7, #20
 800e9cc:	9301      	str	r3, [sp, #4]
 800e9ce:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800e9d0:	9300      	str	r3, [sp, #0]
 800e9d2:	683b      	ldr	r3, [r7, #0]
 800e9d4:	687a      	ldr	r2, [r7, #4]
 800e9d6:	68b9      	ldr	r1, [r7, #8]
 800e9d8:	68f8      	ldr	r0, [r7, #12]
 800e9da:	f000 f850 	bl	800ea7e <prvInitialiseNewTask>
 800e9de:	6a78      	ldr	r0, [r7, #36]	; 0x24
 800e9e0:	f000 f8dc 	bl	800eb9c <prvAddNewTaskToReadyList>
 800e9e4:	e001      	b.n	800e9ea <xTaskCreateStatic+0xaa>
 800e9e6:	2300      	movs	r3, #0
 800e9e8:	617b      	str	r3, [r7, #20]
 800e9ea:	697b      	ldr	r3, [r7, #20]
 800e9ec:	4618      	mov	r0, r3
 800e9ee:	3728      	adds	r7, #40	; 0x28
 800e9f0:	46bd      	mov	sp, r7
 800e9f2:	bd80      	pop	{r7, pc}

0800e9f4 <xTaskCreate>:
 800e9f4:	b580      	push	{r7, lr}
 800e9f6:	b08c      	sub	sp, #48	; 0x30
 800e9f8:	af04      	add	r7, sp, #16
 800e9fa:	60f8      	str	r0, [r7, #12]
 800e9fc:	60b9      	str	r1, [r7, #8]
 800e9fe:	603b      	str	r3, [r7, #0]
 800ea00:	4613      	mov	r3, r2
 800ea02:	80fb      	strh	r3, [r7, #6]
 800ea04:	88fb      	ldrh	r3, [r7, #6]
 800ea06:	009b      	lsls	r3, r3, #2
 800ea08:	4618      	mov	r0, r3
 800ea0a:	f001 fc09 	bl	8010220 <pvPortMalloc>
 800ea0e:	6178      	str	r0, [r7, #20]
 800ea10:	697b      	ldr	r3, [r7, #20]
 800ea12:	2b00      	cmp	r3, #0
 800ea14:	d00e      	beq.n	800ea34 <xTaskCreate+0x40>
 800ea16:	205c      	movs	r0, #92	; 0x5c
 800ea18:	f001 fc02 	bl	8010220 <pvPortMalloc>
 800ea1c:	61f8      	str	r0, [r7, #28]
 800ea1e:	69fb      	ldr	r3, [r7, #28]
 800ea20:	2b00      	cmp	r3, #0
 800ea22:	d003      	beq.n	800ea2c <xTaskCreate+0x38>
 800ea24:	69fb      	ldr	r3, [r7, #28]
 800ea26:	697a      	ldr	r2, [r7, #20]
 800ea28:	631a      	str	r2, [r3, #48]	; 0x30
 800ea2a:	e005      	b.n	800ea38 <xTaskCreate+0x44>
 800ea2c:	6978      	ldr	r0, [r7, #20]
 800ea2e:	f001 fcb9 	bl	80103a4 <vPortFree>
 800ea32:	e001      	b.n	800ea38 <xTaskCreate+0x44>
 800ea34:	2300      	movs	r3, #0
 800ea36:	61fb      	str	r3, [r7, #28]
 800ea38:	69fb      	ldr	r3, [r7, #28]
 800ea3a:	2b00      	cmp	r3, #0
 800ea3c:	d017      	beq.n	800ea6e <xTaskCreate+0x7a>
 800ea3e:	69fb      	ldr	r3, [r7, #28]
 800ea40:	2200      	movs	r2, #0
 800ea42:	f883 2059 	strb.w	r2, [r3, #89]	; 0x59
 800ea46:	88fa      	ldrh	r2, [r7, #6]
 800ea48:	2300      	movs	r3, #0
 800ea4a:	9303      	str	r3, [sp, #12]
 800ea4c:	69fb      	ldr	r3, [r7, #28]
 800ea4e:	9302      	str	r3, [sp, #8]
 800ea50:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800ea52:	9301      	str	r3, [sp, #4]
 800ea54:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800ea56:	9300      	str	r3, [sp, #0]
 800ea58:	683b      	ldr	r3, [r7, #0]
 800ea5a:	68b9      	ldr	r1, [r7, #8]
 800ea5c:	68f8      	ldr	r0, [r7, #12]
 800ea5e:	f000 f80e 	bl	800ea7e <prvInitialiseNewTask>
 800ea62:	69f8      	ldr	r0, [r7, #28]
 800ea64:	f000 f89a 	bl	800eb9c <prvAddNewTaskToReadyList>
 800ea68:	2301      	movs	r3, #1
 800ea6a:	61bb      	str	r3, [r7, #24]
 800ea6c:	e002      	b.n	800ea74 <xTaskCreate+0x80>
 800ea6e:	f04f 33ff 	mov.w	r3, #4294967295
 800ea72:	61bb      	str	r3, [r7, #24]
 800ea74:	69bb      	ldr	r3, [r7, #24]
 800ea76:	4618      	mov	r0, r3
 800ea78:	3720      	adds	r7, #32
 800ea7a:	46bd      	mov	sp, r7
 800ea7c:	bd80      	pop	{r7, pc}

0800ea7e <prvInitialiseNewTask>:
 800ea7e:	b580      	push	{r7, lr}
 800ea80:	b088      	sub	sp, #32
 800ea82:	af00      	add	r7, sp, #0
 800ea84:	60f8      	str	r0, [r7, #12]
 800ea86:	60b9      	str	r1, [r7, #8]
 800ea88:	607a      	str	r2, [r7, #4]
 800ea8a:	603b      	str	r3, [r7, #0]
 800ea8c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ea8e:	6b18      	ldr	r0, [r3, #48]	; 0x30
 800ea90:	687b      	ldr	r3, [r7, #4]
 800ea92:	009b      	lsls	r3, r3, #2
 800ea94:	461a      	mov	r2, r3
 800ea96:	21a5      	movs	r1, #165	; 0xa5
 800ea98:	f001 fdd1 	bl	801063e <memset>
 800ea9c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800ea9e:	6b1a      	ldr	r2, [r3, #48]	; 0x30
 800eaa0:	687b      	ldr	r3, [r7, #4]
 800eaa2:	f103 4380 	add.w	r3, r3, #1073741824	; 0x40000000
 800eaa6:	3b01      	subs	r3, #1
 800eaa8:	009b      	lsls	r3, r3, #2
 800eaaa:	4413      	add	r3, r2
 800eaac:	61bb      	str	r3, [r7, #24]
 800eaae:	69bb      	ldr	r3, [r7, #24]
 800eab0:	f023 0307 	bic.w	r3, r3, #7
 800eab4:	61bb      	str	r3, [r7, #24]
 800eab6:	69bb      	ldr	r3, [r7, #24]
 800eab8:	f003 0307 	and.w	r3, r3, #7
 800eabc:	2b00      	cmp	r3, #0
 800eabe:	d009      	beq.n	800ead4 <prvInitialiseNewTask+0x56>
 800eac0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800eac4:	f383 8811 	msr	BASEPRI, r3
 800eac8:	f3bf 8f6f 	isb	sy
 800eacc:	f3bf 8f4f 	dsb	sy
 800ead0:	617b      	str	r3, [r7, #20]
 800ead2:	e7fe      	b.n	800ead2 <prvInitialiseNewTask+0x54>
 800ead4:	68bb      	ldr	r3, [r7, #8]
 800ead6:	2b00      	cmp	r3, #0
 800ead8:	d01f      	beq.n	800eb1a <prvInitialiseNewTask+0x9c>
 800eada:	2300      	movs	r3, #0
 800eadc:	61fb      	str	r3, [r7, #28]
 800eade:	e012      	b.n	800eb06 <prvInitialiseNewTask+0x88>
 800eae0:	68ba      	ldr	r2, [r7, #8]
 800eae2:	69fb      	ldr	r3, [r7, #28]
 800eae4:	4413      	add	r3, r2
 800eae6:	7819      	ldrb	r1, [r3, #0]
 800eae8:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800eaea:	69fb      	ldr	r3, [r7, #28]
 800eaec:	4413      	add	r3, r2
 800eaee:	3334      	adds	r3, #52	; 0x34
 800eaf0:	460a      	mov	r2, r1
 800eaf2:	701a      	strb	r2, [r3, #0]
 800eaf4:	68ba      	ldr	r2, [r7, #8]
 800eaf6:	69fb      	ldr	r3, [r7, #28]
 800eaf8:	4413      	add	r3, r2
 800eafa:	781b      	ldrb	r3, [r3, #0]
 800eafc:	2b00      	cmp	r3, #0
 800eafe:	d006      	beq.n	800eb0e <prvInitialiseNewTask+0x90>
 800eb00:	69fb      	ldr	r3, [r7, #28]
 800eb02:	3301      	adds	r3, #1
 800eb04:	61fb      	str	r3, [r7, #28]
 800eb06:	69fb      	ldr	r3, [r7, #28]
 800eb08:	2b0f      	cmp	r3, #15
 800eb0a:	d9e9      	bls.n	800eae0 <prvInitialiseNewTask+0x62>
 800eb0c:	e000      	b.n	800eb10 <prvInitialiseNewTask+0x92>
 800eb0e:	bf00      	nop
 800eb10:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb12:	2200      	movs	r2, #0
 800eb14:	f883 2043 	strb.w	r2, [r3, #67]	; 0x43
 800eb18:	e003      	b.n	800eb22 <prvInitialiseNewTask+0xa4>
 800eb1a:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb1c:	2200      	movs	r2, #0
 800eb1e:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34
 800eb22:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eb24:	2b37      	cmp	r3, #55	; 0x37
 800eb26:	d901      	bls.n	800eb2c <prvInitialiseNewTask+0xae>
 800eb28:	2337      	movs	r3, #55	; 0x37
 800eb2a:	62bb      	str	r3, [r7, #40]	; 0x28
 800eb2c:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb2e:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800eb30:	62da      	str	r2, [r3, #44]	; 0x2c
 800eb32:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb34:	6aba      	ldr	r2, [r7, #40]	; 0x28
 800eb36:	64da      	str	r2, [r3, #76]	; 0x4c
 800eb38:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb3a:	2200      	movs	r2, #0
 800eb3c:	651a      	str	r2, [r3, #80]	; 0x50
 800eb3e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb40:	3304      	adds	r3, #4
 800eb42:	4618      	mov	r0, r3
 800eb44:	f7ff f994 	bl	800de70 <vListInitialiseItem>
 800eb48:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb4a:	3318      	adds	r3, #24
 800eb4c:	4618      	mov	r0, r3
 800eb4e:	f7ff f98f 	bl	800de70 <vListInitialiseItem>
 800eb52:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb54:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800eb56:	611a      	str	r2, [r3, #16]
 800eb58:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800eb5a:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800eb5e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb60:	619a      	str	r2, [r3, #24]
 800eb62:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb64:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800eb66:	625a      	str	r2, [r3, #36]	; 0x24
 800eb68:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb6a:	2200      	movs	r2, #0
 800eb6c:	655a      	str	r2, [r3, #84]	; 0x54
 800eb6e:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb70:	2200      	movs	r2, #0
 800eb72:	f883 2058 	strb.w	r2, [r3, #88]	; 0x58
 800eb76:	683a      	ldr	r2, [r7, #0]
 800eb78:	68f9      	ldr	r1, [r7, #12]
 800eb7a:	69b8      	ldr	r0, [r7, #24]
 800eb7c:	f001 f90c 	bl	800fd98 <pxPortInitialiseStack>
 800eb80:	4602      	mov	r2, r0
 800eb82:	6b3b      	ldr	r3, [r7, #48]	; 0x30
 800eb84:	601a      	str	r2, [r3, #0]
 800eb86:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800eb88:	2b00      	cmp	r3, #0
 800eb8a:	d002      	beq.n	800eb92 <prvInitialiseNewTask+0x114>
 800eb8c:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800eb8e:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800eb90:	601a      	str	r2, [r3, #0]
 800eb92:	bf00      	nop
 800eb94:	3720      	adds	r7, #32
 800eb96:	46bd      	mov	sp, r7
 800eb98:	bd80      	pop	{r7, pc}
	...

0800eb9c <prvAddNewTaskToReadyList>:
 800eb9c:	b580      	push	{r7, lr}
 800eb9e:	b082      	sub	sp, #8
 800eba0:	af00      	add	r7, sp, #0
 800eba2:	6078      	str	r0, [r7, #4]
 800eba4:	f001 fa22 	bl	800ffec <vPortEnterCritical>
 800eba8:	4b2d      	ldr	r3, [pc, #180]	; (800ec60 <prvAddNewTaskToReadyList+0xc4>)
 800ebaa:	681b      	ldr	r3, [r3, #0]
 800ebac:	3301      	adds	r3, #1
 800ebae:	4a2c      	ldr	r2, [pc, #176]	; (800ec60 <prvAddNewTaskToReadyList+0xc4>)
 800ebb0:	6013      	str	r3, [r2, #0]
 800ebb2:	4b2c      	ldr	r3, [pc, #176]	; (800ec64 <prvAddNewTaskToReadyList+0xc8>)
 800ebb4:	681b      	ldr	r3, [r3, #0]
 800ebb6:	2b00      	cmp	r3, #0
 800ebb8:	d109      	bne.n	800ebce <prvAddNewTaskToReadyList+0x32>
 800ebba:	4a2a      	ldr	r2, [pc, #168]	; (800ec64 <prvAddNewTaskToReadyList+0xc8>)
 800ebbc:	687b      	ldr	r3, [r7, #4]
 800ebbe:	6013      	str	r3, [r2, #0]
 800ebc0:	4b27      	ldr	r3, [pc, #156]	; (800ec60 <prvAddNewTaskToReadyList+0xc4>)
 800ebc2:	681b      	ldr	r3, [r3, #0]
 800ebc4:	2b01      	cmp	r3, #1
 800ebc6:	d110      	bne.n	800ebea <prvAddNewTaskToReadyList+0x4e>
 800ebc8:	f000 fc08 	bl	800f3dc <prvInitialiseTaskLists>
 800ebcc:	e00d      	b.n	800ebea <prvAddNewTaskToReadyList+0x4e>
 800ebce:	4b26      	ldr	r3, [pc, #152]	; (800ec68 <prvAddNewTaskToReadyList+0xcc>)
 800ebd0:	681b      	ldr	r3, [r3, #0]
 800ebd2:	2b00      	cmp	r3, #0
 800ebd4:	d109      	bne.n	800ebea <prvAddNewTaskToReadyList+0x4e>
 800ebd6:	4b23      	ldr	r3, [pc, #140]	; (800ec64 <prvAddNewTaskToReadyList+0xc8>)
 800ebd8:	681b      	ldr	r3, [r3, #0]
 800ebda:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ebdc:	687b      	ldr	r3, [r7, #4]
 800ebde:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ebe0:	429a      	cmp	r2, r3
 800ebe2:	d802      	bhi.n	800ebea <prvAddNewTaskToReadyList+0x4e>
 800ebe4:	4a1f      	ldr	r2, [pc, #124]	; (800ec64 <prvAddNewTaskToReadyList+0xc8>)
 800ebe6:	687b      	ldr	r3, [r7, #4]
 800ebe8:	6013      	str	r3, [r2, #0]
 800ebea:	4b20      	ldr	r3, [pc, #128]	; (800ec6c <prvAddNewTaskToReadyList+0xd0>)
 800ebec:	681b      	ldr	r3, [r3, #0]
 800ebee:	3301      	adds	r3, #1
 800ebf0:	4a1e      	ldr	r2, [pc, #120]	; (800ec6c <prvAddNewTaskToReadyList+0xd0>)
 800ebf2:	6013      	str	r3, [r2, #0]
 800ebf4:	4b1d      	ldr	r3, [pc, #116]	; (800ec6c <prvAddNewTaskToReadyList+0xd0>)
 800ebf6:	681a      	ldr	r2, [r3, #0]
 800ebf8:	687b      	ldr	r3, [r7, #4]
 800ebfa:	645a      	str	r2, [r3, #68]	; 0x44
 800ebfc:	687b      	ldr	r3, [r7, #4]
 800ebfe:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ec00:	4b1b      	ldr	r3, [pc, #108]	; (800ec70 <prvAddNewTaskToReadyList+0xd4>)
 800ec02:	681b      	ldr	r3, [r3, #0]
 800ec04:	429a      	cmp	r2, r3
 800ec06:	d903      	bls.n	800ec10 <prvAddNewTaskToReadyList+0x74>
 800ec08:	687b      	ldr	r3, [r7, #4]
 800ec0a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ec0c:	4a18      	ldr	r2, [pc, #96]	; (800ec70 <prvAddNewTaskToReadyList+0xd4>)
 800ec0e:	6013      	str	r3, [r2, #0]
 800ec10:	687b      	ldr	r3, [r7, #4]
 800ec12:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ec14:	4613      	mov	r3, r2
 800ec16:	009b      	lsls	r3, r3, #2
 800ec18:	4413      	add	r3, r2
 800ec1a:	009b      	lsls	r3, r3, #2
 800ec1c:	4a15      	ldr	r2, [pc, #84]	; (800ec74 <prvAddNewTaskToReadyList+0xd8>)
 800ec1e:	441a      	add	r2, r3
 800ec20:	687b      	ldr	r3, [r7, #4]
 800ec22:	3304      	adds	r3, #4
 800ec24:	4619      	mov	r1, r3
 800ec26:	4610      	mov	r0, r2
 800ec28:	f7ff f92f 	bl	800de8a <vListInsertEnd>
 800ec2c:	f001 fa0c 	bl	8010048 <vPortExitCritical>
 800ec30:	4b0d      	ldr	r3, [pc, #52]	; (800ec68 <prvAddNewTaskToReadyList+0xcc>)
 800ec32:	681b      	ldr	r3, [r3, #0]
 800ec34:	2b00      	cmp	r3, #0
 800ec36:	d00e      	beq.n	800ec56 <prvAddNewTaskToReadyList+0xba>
 800ec38:	4b0a      	ldr	r3, [pc, #40]	; (800ec64 <prvAddNewTaskToReadyList+0xc8>)
 800ec3a:	681b      	ldr	r3, [r3, #0]
 800ec3c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ec3e:	687b      	ldr	r3, [r7, #4]
 800ec40:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ec42:	429a      	cmp	r2, r3
 800ec44:	d207      	bcs.n	800ec56 <prvAddNewTaskToReadyList+0xba>
 800ec46:	4b0c      	ldr	r3, [pc, #48]	; (800ec78 <prvAddNewTaskToReadyList+0xdc>)
 800ec48:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ec4c:	601a      	str	r2, [r3, #0]
 800ec4e:	f3bf 8f4f 	dsb	sy
 800ec52:	f3bf 8f6f 	isb	sy
 800ec56:	bf00      	nop
 800ec58:	3708      	adds	r7, #8
 800ec5a:	46bd      	mov	sp, r7
 800ec5c:	bd80      	pop	{r7, pc}
 800ec5e:	bf00      	nop
 800ec60:	20006c00 	.word	0x20006c00
 800ec64:	2000672c 	.word	0x2000672c
 800ec68:	20006c0c 	.word	0x20006c0c
 800ec6c:	20006c1c 	.word	0x20006c1c
 800ec70:	20006c08 	.word	0x20006c08
 800ec74:	20006730 	.word	0x20006730
 800ec78:	e000ed04 	.word	0xe000ed04

0800ec7c <vTaskDelay>:
 800ec7c:	b580      	push	{r7, lr}
 800ec7e:	b084      	sub	sp, #16
 800ec80:	af00      	add	r7, sp, #0
 800ec82:	6078      	str	r0, [r7, #4]
 800ec84:	2300      	movs	r3, #0
 800ec86:	60fb      	str	r3, [r7, #12]
 800ec88:	687b      	ldr	r3, [r7, #4]
 800ec8a:	2b00      	cmp	r3, #0
 800ec8c:	d016      	beq.n	800ecbc <vTaskDelay+0x40>
 800ec8e:	4b13      	ldr	r3, [pc, #76]	; (800ecdc <vTaskDelay+0x60>)
 800ec90:	681b      	ldr	r3, [r3, #0]
 800ec92:	2b00      	cmp	r3, #0
 800ec94:	d009      	beq.n	800ecaa <vTaskDelay+0x2e>
 800ec96:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ec9a:	f383 8811 	msr	BASEPRI, r3
 800ec9e:	f3bf 8f6f 	isb	sy
 800eca2:	f3bf 8f4f 	dsb	sy
 800eca6:	60bb      	str	r3, [r7, #8]
 800eca8:	e7fe      	b.n	800eca8 <vTaskDelay+0x2c>
 800ecaa:	f000 f87f 	bl	800edac <vTaskSuspendAll>
 800ecae:	2100      	movs	r1, #0
 800ecb0:	6878      	ldr	r0, [r7, #4]
 800ecb2:	f000 fcd7 	bl	800f664 <prvAddCurrentTaskToDelayedList>
 800ecb6:	f000 f887 	bl	800edc8 <xTaskResumeAll>
 800ecba:	60f8      	str	r0, [r7, #12]
 800ecbc:	68fb      	ldr	r3, [r7, #12]
 800ecbe:	2b00      	cmp	r3, #0
 800ecc0:	d107      	bne.n	800ecd2 <vTaskDelay+0x56>
 800ecc2:	4b07      	ldr	r3, [pc, #28]	; (800ece0 <vTaskDelay+0x64>)
 800ecc4:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800ecc8:	601a      	str	r2, [r3, #0]
 800ecca:	f3bf 8f4f 	dsb	sy
 800ecce:	f3bf 8f6f 	isb	sy
 800ecd2:	bf00      	nop
 800ecd4:	3710      	adds	r7, #16
 800ecd6:	46bd      	mov	sp, r7
 800ecd8:	bd80      	pop	{r7, pc}
 800ecda:	bf00      	nop
 800ecdc:	20006c28 	.word	0x20006c28
 800ece0:	e000ed04 	.word	0xe000ed04

0800ece4 <vTaskStartScheduler>:
 800ece4:	b580      	push	{r7, lr}
 800ece6:	b08a      	sub	sp, #40	; 0x28
 800ece8:	af04      	add	r7, sp, #16
 800ecea:	2300      	movs	r3, #0
 800ecec:	60bb      	str	r3, [r7, #8]
 800ecee:	2300      	movs	r3, #0
 800ecf0:	607b      	str	r3, [r7, #4]
 800ecf2:	463a      	mov	r2, r7
 800ecf4:	1d39      	adds	r1, r7, #4
 800ecf6:	f107 0308 	add.w	r3, r7, #8
 800ecfa:	4618      	mov	r0, r3
 800ecfc:	f7ff f864 	bl	800ddc8 <vApplicationGetIdleTaskMemory>
 800ed00:	6839      	ldr	r1, [r7, #0]
 800ed02:	687b      	ldr	r3, [r7, #4]
 800ed04:	68ba      	ldr	r2, [r7, #8]
 800ed06:	9202      	str	r2, [sp, #8]
 800ed08:	9301      	str	r3, [sp, #4]
 800ed0a:	2300      	movs	r3, #0
 800ed0c:	9300      	str	r3, [sp, #0]
 800ed0e:	2300      	movs	r3, #0
 800ed10:	460a      	mov	r2, r1
 800ed12:	4920      	ldr	r1, [pc, #128]	; (800ed94 <vTaskStartScheduler+0xb0>)
 800ed14:	4820      	ldr	r0, [pc, #128]	; (800ed98 <vTaskStartScheduler+0xb4>)
 800ed16:	f7ff fe13 	bl	800e940 <xTaskCreateStatic>
 800ed1a:	4602      	mov	r2, r0
 800ed1c:	4b1f      	ldr	r3, [pc, #124]	; (800ed9c <vTaskStartScheduler+0xb8>)
 800ed1e:	601a      	str	r2, [r3, #0]
 800ed20:	4b1e      	ldr	r3, [pc, #120]	; (800ed9c <vTaskStartScheduler+0xb8>)
 800ed22:	681b      	ldr	r3, [r3, #0]
 800ed24:	2b00      	cmp	r3, #0
 800ed26:	d002      	beq.n	800ed2e <vTaskStartScheduler+0x4a>
 800ed28:	2301      	movs	r3, #1
 800ed2a:	617b      	str	r3, [r7, #20]
 800ed2c:	e001      	b.n	800ed32 <vTaskStartScheduler+0x4e>
 800ed2e:	2300      	movs	r3, #0
 800ed30:	617b      	str	r3, [r7, #20]
 800ed32:	697b      	ldr	r3, [r7, #20]
 800ed34:	2b01      	cmp	r3, #1
 800ed36:	d102      	bne.n	800ed3e <vTaskStartScheduler+0x5a>
 800ed38:	f000 fce8 	bl	800f70c <xTimerCreateTimerTask>
 800ed3c:	6178      	str	r0, [r7, #20]
 800ed3e:	697b      	ldr	r3, [r7, #20]
 800ed40:	2b01      	cmp	r3, #1
 800ed42:	d115      	bne.n	800ed70 <vTaskStartScheduler+0x8c>
 800ed44:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed48:	f383 8811 	msr	BASEPRI, r3
 800ed4c:	f3bf 8f6f 	isb	sy
 800ed50:	f3bf 8f4f 	dsb	sy
 800ed54:	613b      	str	r3, [r7, #16]
 800ed56:	4b12      	ldr	r3, [pc, #72]	; (800eda0 <vTaskStartScheduler+0xbc>)
 800ed58:	f04f 32ff 	mov.w	r2, #4294967295
 800ed5c:	601a      	str	r2, [r3, #0]
 800ed5e:	4b11      	ldr	r3, [pc, #68]	; (800eda4 <vTaskStartScheduler+0xc0>)
 800ed60:	2201      	movs	r2, #1
 800ed62:	601a      	str	r2, [r3, #0]
 800ed64:	4b10      	ldr	r3, [pc, #64]	; (800eda8 <vTaskStartScheduler+0xc4>)
 800ed66:	2200      	movs	r2, #0
 800ed68:	601a      	str	r2, [r3, #0]
 800ed6a:	f001 f8a1 	bl	800feb0 <xPortStartScheduler>
 800ed6e:	e00d      	b.n	800ed8c <vTaskStartScheduler+0xa8>
 800ed70:	697b      	ldr	r3, [r7, #20]
 800ed72:	f1b3 3fff 	cmp.w	r3, #4294967295
 800ed76:	d109      	bne.n	800ed8c <vTaskStartScheduler+0xa8>
 800ed78:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ed7c:	f383 8811 	msr	BASEPRI, r3
 800ed80:	f3bf 8f6f 	isb	sy
 800ed84:	f3bf 8f4f 	dsb	sy
 800ed88:	60fb      	str	r3, [r7, #12]
 800ed8a:	e7fe      	b.n	800ed8a <vTaskStartScheduler+0xa6>
 800ed8c:	bf00      	nop
 800ed8e:	3718      	adds	r7, #24
 800ed90:	46bd      	mov	sp, r7
 800ed92:	bd80      	pop	{r7, pc}
 800ed94:	080162d4 	.word	0x080162d4
 800ed98:	0800f3ad 	.word	0x0800f3ad
 800ed9c:	20006c24 	.word	0x20006c24
 800eda0:	20006c20 	.word	0x20006c20
 800eda4:	20006c0c 	.word	0x20006c0c
 800eda8:	20006c04 	.word	0x20006c04

0800edac <vTaskSuspendAll>:
 800edac:	b480      	push	{r7}
 800edae:	af00      	add	r7, sp, #0
 800edb0:	4b04      	ldr	r3, [pc, #16]	; (800edc4 <vTaskSuspendAll+0x18>)
 800edb2:	681b      	ldr	r3, [r3, #0]
 800edb4:	3301      	adds	r3, #1
 800edb6:	4a03      	ldr	r2, [pc, #12]	; (800edc4 <vTaskSuspendAll+0x18>)
 800edb8:	6013      	str	r3, [r2, #0]
 800edba:	bf00      	nop
 800edbc:	46bd      	mov	sp, r7
 800edbe:	f85d 7b04 	ldr.w	r7, [sp], #4
 800edc2:	4770      	bx	lr
 800edc4:	20006c28 	.word	0x20006c28

0800edc8 <xTaskResumeAll>:
 800edc8:	b580      	push	{r7, lr}
 800edca:	b084      	sub	sp, #16
 800edcc:	af00      	add	r7, sp, #0
 800edce:	2300      	movs	r3, #0
 800edd0:	60fb      	str	r3, [r7, #12]
 800edd2:	2300      	movs	r3, #0
 800edd4:	60bb      	str	r3, [r7, #8]
 800edd6:	4b41      	ldr	r3, [pc, #260]	; (800eedc <xTaskResumeAll+0x114>)
 800edd8:	681b      	ldr	r3, [r3, #0]
 800edda:	2b00      	cmp	r3, #0
 800eddc:	d109      	bne.n	800edf2 <xTaskResumeAll+0x2a>
 800edde:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ede2:	f383 8811 	msr	BASEPRI, r3
 800ede6:	f3bf 8f6f 	isb	sy
 800edea:	f3bf 8f4f 	dsb	sy
 800edee:	603b      	str	r3, [r7, #0]
 800edf0:	e7fe      	b.n	800edf0 <xTaskResumeAll+0x28>
 800edf2:	f001 f8fb 	bl	800ffec <vPortEnterCritical>
 800edf6:	4b39      	ldr	r3, [pc, #228]	; (800eedc <xTaskResumeAll+0x114>)
 800edf8:	681b      	ldr	r3, [r3, #0]
 800edfa:	3b01      	subs	r3, #1
 800edfc:	4a37      	ldr	r2, [pc, #220]	; (800eedc <xTaskResumeAll+0x114>)
 800edfe:	6013      	str	r3, [r2, #0]
 800ee00:	4b36      	ldr	r3, [pc, #216]	; (800eedc <xTaskResumeAll+0x114>)
 800ee02:	681b      	ldr	r3, [r3, #0]
 800ee04:	2b00      	cmp	r3, #0
 800ee06:	d162      	bne.n	800eece <xTaskResumeAll+0x106>
 800ee08:	4b35      	ldr	r3, [pc, #212]	; (800eee0 <xTaskResumeAll+0x118>)
 800ee0a:	681b      	ldr	r3, [r3, #0]
 800ee0c:	2b00      	cmp	r3, #0
 800ee0e:	d05e      	beq.n	800eece <xTaskResumeAll+0x106>
 800ee10:	e02f      	b.n	800ee72 <xTaskResumeAll+0xaa>
 800ee12:	4b34      	ldr	r3, [pc, #208]	; (800eee4 <xTaskResumeAll+0x11c>)
 800ee14:	68db      	ldr	r3, [r3, #12]
 800ee16:	68db      	ldr	r3, [r3, #12]
 800ee18:	60fb      	str	r3, [r7, #12]
 800ee1a:	68fb      	ldr	r3, [r7, #12]
 800ee1c:	3318      	adds	r3, #24
 800ee1e:	4618      	mov	r0, r3
 800ee20:	f7ff f890 	bl	800df44 <uxListRemove>
 800ee24:	68fb      	ldr	r3, [r7, #12]
 800ee26:	3304      	adds	r3, #4
 800ee28:	4618      	mov	r0, r3
 800ee2a:	f7ff f88b 	bl	800df44 <uxListRemove>
 800ee2e:	68fb      	ldr	r3, [r7, #12]
 800ee30:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ee32:	4b2d      	ldr	r3, [pc, #180]	; (800eee8 <xTaskResumeAll+0x120>)
 800ee34:	681b      	ldr	r3, [r3, #0]
 800ee36:	429a      	cmp	r2, r3
 800ee38:	d903      	bls.n	800ee42 <xTaskResumeAll+0x7a>
 800ee3a:	68fb      	ldr	r3, [r7, #12]
 800ee3c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee3e:	4a2a      	ldr	r2, [pc, #168]	; (800eee8 <xTaskResumeAll+0x120>)
 800ee40:	6013      	str	r3, [r2, #0]
 800ee42:	68fb      	ldr	r3, [r7, #12]
 800ee44:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ee46:	4613      	mov	r3, r2
 800ee48:	009b      	lsls	r3, r3, #2
 800ee4a:	4413      	add	r3, r2
 800ee4c:	009b      	lsls	r3, r3, #2
 800ee4e:	4a27      	ldr	r2, [pc, #156]	; (800eeec <xTaskResumeAll+0x124>)
 800ee50:	441a      	add	r2, r3
 800ee52:	68fb      	ldr	r3, [r7, #12]
 800ee54:	3304      	adds	r3, #4
 800ee56:	4619      	mov	r1, r3
 800ee58:	4610      	mov	r0, r2
 800ee5a:	f7ff f816 	bl	800de8a <vListInsertEnd>
 800ee5e:	68fb      	ldr	r3, [r7, #12]
 800ee60:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800ee62:	4b23      	ldr	r3, [pc, #140]	; (800eef0 <xTaskResumeAll+0x128>)
 800ee64:	681b      	ldr	r3, [r3, #0]
 800ee66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800ee68:	429a      	cmp	r2, r3
 800ee6a:	d302      	bcc.n	800ee72 <xTaskResumeAll+0xaa>
 800ee6c:	4b21      	ldr	r3, [pc, #132]	; (800eef4 <xTaskResumeAll+0x12c>)
 800ee6e:	2201      	movs	r2, #1
 800ee70:	601a      	str	r2, [r3, #0]
 800ee72:	4b1c      	ldr	r3, [pc, #112]	; (800eee4 <xTaskResumeAll+0x11c>)
 800ee74:	681b      	ldr	r3, [r3, #0]
 800ee76:	2b00      	cmp	r3, #0
 800ee78:	d1cb      	bne.n	800ee12 <xTaskResumeAll+0x4a>
 800ee7a:	68fb      	ldr	r3, [r7, #12]
 800ee7c:	2b00      	cmp	r3, #0
 800ee7e:	d001      	beq.n	800ee84 <xTaskResumeAll+0xbc>
 800ee80:	f000 fb46 	bl	800f510 <prvResetNextTaskUnblockTime>
 800ee84:	4b1c      	ldr	r3, [pc, #112]	; (800eef8 <xTaskResumeAll+0x130>)
 800ee86:	681b      	ldr	r3, [r3, #0]
 800ee88:	607b      	str	r3, [r7, #4]
 800ee8a:	687b      	ldr	r3, [r7, #4]
 800ee8c:	2b00      	cmp	r3, #0
 800ee8e:	d010      	beq.n	800eeb2 <xTaskResumeAll+0xea>
 800ee90:	f000 f846 	bl	800ef20 <xTaskIncrementTick>
 800ee94:	4603      	mov	r3, r0
 800ee96:	2b00      	cmp	r3, #0
 800ee98:	d002      	beq.n	800eea0 <xTaskResumeAll+0xd8>
 800ee9a:	4b16      	ldr	r3, [pc, #88]	; (800eef4 <xTaskResumeAll+0x12c>)
 800ee9c:	2201      	movs	r2, #1
 800ee9e:	601a      	str	r2, [r3, #0]
 800eea0:	687b      	ldr	r3, [r7, #4]
 800eea2:	3b01      	subs	r3, #1
 800eea4:	607b      	str	r3, [r7, #4]
 800eea6:	687b      	ldr	r3, [r7, #4]
 800eea8:	2b00      	cmp	r3, #0
 800eeaa:	d1f1      	bne.n	800ee90 <xTaskResumeAll+0xc8>
 800eeac:	4b12      	ldr	r3, [pc, #72]	; (800eef8 <xTaskResumeAll+0x130>)
 800eeae:	2200      	movs	r2, #0
 800eeb0:	601a      	str	r2, [r3, #0]
 800eeb2:	4b10      	ldr	r3, [pc, #64]	; (800eef4 <xTaskResumeAll+0x12c>)
 800eeb4:	681b      	ldr	r3, [r3, #0]
 800eeb6:	2b00      	cmp	r3, #0
 800eeb8:	d009      	beq.n	800eece <xTaskResumeAll+0x106>
 800eeba:	2301      	movs	r3, #1
 800eebc:	60bb      	str	r3, [r7, #8]
 800eebe:	4b0f      	ldr	r3, [pc, #60]	; (800eefc <xTaskResumeAll+0x134>)
 800eec0:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800eec4:	601a      	str	r2, [r3, #0]
 800eec6:	f3bf 8f4f 	dsb	sy
 800eeca:	f3bf 8f6f 	isb	sy
 800eece:	f001 f8bb 	bl	8010048 <vPortExitCritical>
 800eed2:	68bb      	ldr	r3, [r7, #8]
 800eed4:	4618      	mov	r0, r3
 800eed6:	3710      	adds	r7, #16
 800eed8:	46bd      	mov	sp, r7
 800eeda:	bd80      	pop	{r7, pc}
 800eedc:	20006c28 	.word	0x20006c28
 800eee0:	20006c00 	.word	0x20006c00
 800eee4:	20006bc0 	.word	0x20006bc0
 800eee8:	20006c08 	.word	0x20006c08
 800eeec:	20006730 	.word	0x20006730
 800eef0:	2000672c 	.word	0x2000672c
 800eef4:	20006c14 	.word	0x20006c14
 800eef8:	20006c10 	.word	0x20006c10
 800eefc:	e000ed04 	.word	0xe000ed04

0800ef00 <xTaskGetTickCount>:
 800ef00:	b480      	push	{r7}
 800ef02:	b083      	sub	sp, #12
 800ef04:	af00      	add	r7, sp, #0
 800ef06:	4b05      	ldr	r3, [pc, #20]	; (800ef1c <xTaskGetTickCount+0x1c>)
 800ef08:	681b      	ldr	r3, [r3, #0]
 800ef0a:	607b      	str	r3, [r7, #4]
 800ef0c:	687b      	ldr	r3, [r7, #4]
 800ef0e:	4618      	mov	r0, r3
 800ef10:	370c      	adds	r7, #12
 800ef12:	46bd      	mov	sp, r7
 800ef14:	f85d 7b04 	ldr.w	r7, [sp], #4
 800ef18:	4770      	bx	lr
 800ef1a:	bf00      	nop
 800ef1c:	20006c04 	.word	0x20006c04

0800ef20 <xTaskIncrementTick>:
 800ef20:	b580      	push	{r7, lr}
 800ef22:	b086      	sub	sp, #24
 800ef24:	af00      	add	r7, sp, #0
 800ef26:	2300      	movs	r3, #0
 800ef28:	617b      	str	r3, [r7, #20]
 800ef2a:	4b4e      	ldr	r3, [pc, #312]	; (800f064 <xTaskIncrementTick+0x144>)
 800ef2c:	681b      	ldr	r3, [r3, #0]
 800ef2e:	2b00      	cmp	r3, #0
 800ef30:	f040 8088 	bne.w	800f044 <xTaskIncrementTick+0x124>
 800ef34:	4b4c      	ldr	r3, [pc, #304]	; (800f068 <xTaskIncrementTick+0x148>)
 800ef36:	681b      	ldr	r3, [r3, #0]
 800ef38:	3301      	adds	r3, #1
 800ef3a:	613b      	str	r3, [r7, #16]
 800ef3c:	4a4a      	ldr	r2, [pc, #296]	; (800f068 <xTaskIncrementTick+0x148>)
 800ef3e:	693b      	ldr	r3, [r7, #16]
 800ef40:	6013      	str	r3, [r2, #0]
 800ef42:	693b      	ldr	r3, [r7, #16]
 800ef44:	2b00      	cmp	r3, #0
 800ef46:	d11f      	bne.n	800ef88 <xTaskIncrementTick+0x68>
 800ef48:	4b48      	ldr	r3, [pc, #288]	; (800f06c <xTaskIncrementTick+0x14c>)
 800ef4a:	681b      	ldr	r3, [r3, #0]
 800ef4c:	681b      	ldr	r3, [r3, #0]
 800ef4e:	2b00      	cmp	r3, #0
 800ef50:	d009      	beq.n	800ef66 <xTaskIncrementTick+0x46>
 800ef52:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ef56:	f383 8811 	msr	BASEPRI, r3
 800ef5a:	f3bf 8f6f 	isb	sy
 800ef5e:	f3bf 8f4f 	dsb	sy
 800ef62:	603b      	str	r3, [r7, #0]
 800ef64:	e7fe      	b.n	800ef64 <xTaskIncrementTick+0x44>
 800ef66:	4b41      	ldr	r3, [pc, #260]	; (800f06c <xTaskIncrementTick+0x14c>)
 800ef68:	681b      	ldr	r3, [r3, #0]
 800ef6a:	60fb      	str	r3, [r7, #12]
 800ef6c:	4b40      	ldr	r3, [pc, #256]	; (800f070 <xTaskIncrementTick+0x150>)
 800ef6e:	681b      	ldr	r3, [r3, #0]
 800ef70:	4a3e      	ldr	r2, [pc, #248]	; (800f06c <xTaskIncrementTick+0x14c>)
 800ef72:	6013      	str	r3, [r2, #0]
 800ef74:	4a3e      	ldr	r2, [pc, #248]	; (800f070 <xTaskIncrementTick+0x150>)
 800ef76:	68fb      	ldr	r3, [r7, #12]
 800ef78:	6013      	str	r3, [r2, #0]
 800ef7a:	4b3e      	ldr	r3, [pc, #248]	; (800f074 <xTaskIncrementTick+0x154>)
 800ef7c:	681b      	ldr	r3, [r3, #0]
 800ef7e:	3301      	adds	r3, #1
 800ef80:	4a3c      	ldr	r2, [pc, #240]	; (800f074 <xTaskIncrementTick+0x154>)
 800ef82:	6013      	str	r3, [r2, #0]
 800ef84:	f000 fac4 	bl	800f510 <prvResetNextTaskUnblockTime>
 800ef88:	4b3b      	ldr	r3, [pc, #236]	; (800f078 <xTaskIncrementTick+0x158>)
 800ef8a:	681b      	ldr	r3, [r3, #0]
 800ef8c:	693a      	ldr	r2, [r7, #16]
 800ef8e:	429a      	cmp	r2, r3
 800ef90:	d349      	bcc.n	800f026 <xTaskIncrementTick+0x106>
 800ef92:	4b36      	ldr	r3, [pc, #216]	; (800f06c <xTaskIncrementTick+0x14c>)
 800ef94:	681b      	ldr	r3, [r3, #0]
 800ef96:	681b      	ldr	r3, [r3, #0]
 800ef98:	2b00      	cmp	r3, #0
 800ef9a:	d104      	bne.n	800efa6 <xTaskIncrementTick+0x86>
 800ef9c:	4b36      	ldr	r3, [pc, #216]	; (800f078 <xTaskIncrementTick+0x158>)
 800ef9e:	f04f 32ff 	mov.w	r2, #4294967295
 800efa2:	601a      	str	r2, [r3, #0]
 800efa4:	e03f      	b.n	800f026 <xTaskIncrementTick+0x106>
 800efa6:	4b31      	ldr	r3, [pc, #196]	; (800f06c <xTaskIncrementTick+0x14c>)
 800efa8:	681b      	ldr	r3, [r3, #0]
 800efaa:	68db      	ldr	r3, [r3, #12]
 800efac:	68db      	ldr	r3, [r3, #12]
 800efae:	60bb      	str	r3, [r7, #8]
 800efb0:	68bb      	ldr	r3, [r7, #8]
 800efb2:	685b      	ldr	r3, [r3, #4]
 800efb4:	607b      	str	r3, [r7, #4]
 800efb6:	693a      	ldr	r2, [r7, #16]
 800efb8:	687b      	ldr	r3, [r7, #4]
 800efba:	429a      	cmp	r2, r3
 800efbc:	d203      	bcs.n	800efc6 <xTaskIncrementTick+0xa6>
 800efbe:	4a2e      	ldr	r2, [pc, #184]	; (800f078 <xTaskIncrementTick+0x158>)
 800efc0:	687b      	ldr	r3, [r7, #4]
 800efc2:	6013      	str	r3, [r2, #0]
 800efc4:	e02f      	b.n	800f026 <xTaskIncrementTick+0x106>
 800efc6:	68bb      	ldr	r3, [r7, #8]
 800efc8:	3304      	adds	r3, #4
 800efca:	4618      	mov	r0, r3
 800efcc:	f7fe ffba 	bl	800df44 <uxListRemove>
 800efd0:	68bb      	ldr	r3, [r7, #8]
 800efd2:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 800efd4:	2b00      	cmp	r3, #0
 800efd6:	d004      	beq.n	800efe2 <xTaskIncrementTick+0xc2>
 800efd8:	68bb      	ldr	r3, [r7, #8]
 800efda:	3318      	adds	r3, #24
 800efdc:	4618      	mov	r0, r3
 800efde:	f7fe ffb1 	bl	800df44 <uxListRemove>
 800efe2:	68bb      	ldr	r3, [r7, #8]
 800efe4:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800efe6:	4b25      	ldr	r3, [pc, #148]	; (800f07c <xTaskIncrementTick+0x15c>)
 800efe8:	681b      	ldr	r3, [r3, #0]
 800efea:	429a      	cmp	r2, r3
 800efec:	d903      	bls.n	800eff6 <xTaskIncrementTick+0xd6>
 800efee:	68bb      	ldr	r3, [r7, #8]
 800eff0:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800eff2:	4a22      	ldr	r2, [pc, #136]	; (800f07c <xTaskIncrementTick+0x15c>)
 800eff4:	6013      	str	r3, [r2, #0]
 800eff6:	68bb      	ldr	r3, [r7, #8]
 800eff8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800effa:	4613      	mov	r3, r2
 800effc:	009b      	lsls	r3, r3, #2
 800effe:	4413      	add	r3, r2
 800f000:	009b      	lsls	r3, r3, #2
 800f002:	4a1f      	ldr	r2, [pc, #124]	; (800f080 <xTaskIncrementTick+0x160>)
 800f004:	441a      	add	r2, r3
 800f006:	68bb      	ldr	r3, [r7, #8]
 800f008:	3304      	adds	r3, #4
 800f00a:	4619      	mov	r1, r3
 800f00c:	4610      	mov	r0, r2
 800f00e:	f7fe ff3c 	bl	800de8a <vListInsertEnd>
 800f012:	68bb      	ldr	r3, [r7, #8]
 800f014:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f016:	4b1b      	ldr	r3, [pc, #108]	; (800f084 <xTaskIncrementTick+0x164>)
 800f018:	681b      	ldr	r3, [r3, #0]
 800f01a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f01c:	429a      	cmp	r2, r3
 800f01e:	d3b8      	bcc.n	800ef92 <xTaskIncrementTick+0x72>
 800f020:	2301      	movs	r3, #1
 800f022:	617b      	str	r3, [r7, #20]
 800f024:	e7b5      	b.n	800ef92 <xTaskIncrementTick+0x72>
 800f026:	4b17      	ldr	r3, [pc, #92]	; (800f084 <xTaskIncrementTick+0x164>)
 800f028:	681b      	ldr	r3, [r3, #0]
 800f02a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f02c:	4914      	ldr	r1, [pc, #80]	; (800f080 <xTaskIncrementTick+0x160>)
 800f02e:	4613      	mov	r3, r2
 800f030:	009b      	lsls	r3, r3, #2
 800f032:	4413      	add	r3, r2
 800f034:	009b      	lsls	r3, r3, #2
 800f036:	440b      	add	r3, r1
 800f038:	681b      	ldr	r3, [r3, #0]
 800f03a:	2b01      	cmp	r3, #1
 800f03c:	d907      	bls.n	800f04e <xTaskIncrementTick+0x12e>
 800f03e:	2301      	movs	r3, #1
 800f040:	617b      	str	r3, [r7, #20]
 800f042:	e004      	b.n	800f04e <xTaskIncrementTick+0x12e>
 800f044:	4b10      	ldr	r3, [pc, #64]	; (800f088 <xTaskIncrementTick+0x168>)
 800f046:	681b      	ldr	r3, [r3, #0]
 800f048:	3301      	adds	r3, #1
 800f04a:	4a0f      	ldr	r2, [pc, #60]	; (800f088 <xTaskIncrementTick+0x168>)
 800f04c:	6013      	str	r3, [r2, #0]
 800f04e:	4b0f      	ldr	r3, [pc, #60]	; (800f08c <xTaskIncrementTick+0x16c>)
 800f050:	681b      	ldr	r3, [r3, #0]
 800f052:	2b00      	cmp	r3, #0
 800f054:	d001      	beq.n	800f05a <xTaskIncrementTick+0x13a>
 800f056:	2301      	movs	r3, #1
 800f058:	617b      	str	r3, [r7, #20]
 800f05a:	697b      	ldr	r3, [r7, #20]
 800f05c:	4618      	mov	r0, r3
 800f05e:	3718      	adds	r7, #24
 800f060:	46bd      	mov	sp, r7
 800f062:	bd80      	pop	{r7, pc}
 800f064:	20006c28 	.word	0x20006c28
 800f068:	20006c04 	.word	0x20006c04
 800f06c:	20006bb8 	.word	0x20006bb8
 800f070:	20006bbc 	.word	0x20006bbc
 800f074:	20006c18 	.word	0x20006c18
 800f078:	20006c20 	.word	0x20006c20
 800f07c:	20006c08 	.word	0x20006c08
 800f080:	20006730 	.word	0x20006730
 800f084:	2000672c 	.word	0x2000672c
 800f088:	20006c10 	.word	0x20006c10
 800f08c:	20006c14 	.word	0x20006c14

0800f090 <vTaskSwitchContext>:
 800f090:	b480      	push	{r7}
 800f092:	b085      	sub	sp, #20
 800f094:	af00      	add	r7, sp, #0
 800f096:	4b27      	ldr	r3, [pc, #156]	; (800f134 <vTaskSwitchContext+0xa4>)
 800f098:	681b      	ldr	r3, [r3, #0]
 800f09a:	2b00      	cmp	r3, #0
 800f09c:	d003      	beq.n	800f0a6 <vTaskSwitchContext+0x16>
 800f09e:	4b26      	ldr	r3, [pc, #152]	; (800f138 <vTaskSwitchContext+0xa8>)
 800f0a0:	2201      	movs	r2, #1
 800f0a2:	601a      	str	r2, [r3, #0]
 800f0a4:	e040      	b.n	800f128 <vTaskSwitchContext+0x98>
 800f0a6:	4b24      	ldr	r3, [pc, #144]	; (800f138 <vTaskSwitchContext+0xa8>)
 800f0a8:	2200      	movs	r2, #0
 800f0aa:	601a      	str	r2, [r3, #0]
 800f0ac:	4b23      	ldr	r3, [pc, #140]	; (800f13c <vTaskSwitchContext+0xac>)
 800f0ae:	681b      	ldr	r3, [r3, #0]
 800f0b0:	60fb      	str	r3, [r7, #12]
 800f0b2:	e00f      	b.n	800f0d4 <vTaskSwitchContext+0x44>
 800f0b4:	68fb      	ldr	r3, [r7, #12]
 800f0b6:	2b00      	cmp	r3, #0
 800f0b8:	d109      	bne.n	800f0ce <vTaskSwitchContext+0x3e>
 800f0ba:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f0be:	f383 8811 	msr	BASEPRI, r3
 800f0c2:	f3bf 8f6f 	isb	sy
 800f0c6:	f3bf 8f4f 	dsb	sy
 800f0ca:	607b      	str	r3, [r7, #4]
 800f0cc:	e7fe      	b.n	800f0cc <vTaskSwitchContext+0x3c>
 800f0ce:	68fb      	ldr	r3, [r7, #12]
 800f0d0:	3b01      	subs	r3, #1
 800f0d2:	60fb      	str	r3, [r7, #12]
 800f0d4:	491a      	ldr	r1, [pc, #104]	; (800f140 <vTaskSwitchContext+0xb0>)
 800f0d6:	68fa      	ldr	r2, [r7, #12]
 800f0d8:	4613      	mov	r3, r2
 800f0da:	009b      	lsls	r3, r3, #2
 800f0dc:	4413      	add	r3, r2
 800f0de:	009b      	lsls	r3, r3, #2
 800f0e0:	440b      	add	r3, r1
 800f0e2:	681b      	ldr	r3, [r3, #0]
 800f0e4:	2b00      	cmp	r3, #0
 800f0e6:	d0e5      	beq.n	800f0b4 <vTaskSwitchContext+0x24>
 800f0e8:	68fa      	ldr	r2, [r7, #12]
 800f0ea:	4613      	mov	r3, r2
 800f0ec:	009b      	lsls	r3, r3, #2
 800f0ee:	4413      	add	r3, r2
 800f0f0:	009b      	lsls	r3, r3, #2
 800f0f2:	4a13      	ldr	r2, [pc, #76]	; (800f140 <vTaskSwitchContext+0xb0>)
 800f0f4:	4413      	add	r3, r2
 800f0f6:	60bb      	str	r3, [r7, #8]
 800f0f8:	68bb      	ldr	r3, [r7, #8]
 800f0fa:	685b      	ldr	r3, [r3, #4]
 800f0fc:	685a      	ldr	r2, [r3, #4]
 800f0fe:	68bb      	ldr	r3, [r7, #8]
 800f100:	605a      	str	r2, [r3, #4]
 800f102:	68bb      	ldr	r3, [r7, #8]
 800f104:	685a      	ldr	r2, [r3, #4]
 800f106:	68bb      	ldr	r3, [r7, #8]
 800f108:	3308      	adds	r3, #8
 800f10a:	429a      	cmp	r2, r3
 800f10c:	d104      	bne.n	800f118 <vTaskSwitchContext+0x88>
 800f10e:	68bb      	ldr	r3, [r7, #8]
 800f110:	685b      	ldr	r3, [r3, #4]
 800f112:	685a      	ldr	r2, [r3, #4]
 800f114:	68bb      	ldr	r3, [r7, #8]
 800f116:	605a      	str	r2, [r3, #4]
 800f118:	68bb      	ldr	r3, [r7, #8]
 800f11a:	685b      	ldr	r3, [r3, #4]
 800f11c:	68db      	ldr	r3, [r3, #12]
 800f11e:	4a09      	ldr	r2, [pc, #36]	; (800f144 <vTaskSwitchContext+0xb4>)
 800f120:	6013      	str	r3, [r2, #0]
 800f122:	4a06      	ldr	r2, [pc, #24]	; (800f13c <vTaskSwitchContext+0xac>)
 800f124:	68fb      	ldr	r3, [r7, #12]
 800f126:	6013      	str	r3, [r2, #0]
 800f128:	bf00      	nop
 800f12a:	3714      	adds	r7, #20
 800f12c:	46bd      	mov	sp, r7
 800f12e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f132:	4770      	bx	lr
 800f134:	20006c28 	.word	0x20006c28
 800f138:	20006c14 	.word	0x20006c14
 800f13c:	20006c08 	.word	0x20006c08
 800f140:	20006730 	.word	0x20006730
 800f144:	2000672c 	.word	0x2000672c

0800f148 <vTaskPlaceOnEventList>:
 800f148:	b580      	push	{r7, lr}
 800f14a:	b084      	sub	sp, #16
 800f14c:	af00      	add	r7, sp, #0
 800f14e:	6078      	str	r0, [r7, #4]
 800f150:	6039      	str	r1, [r7, #0]
 800f152:	687b      	ldr	r3, [r7, #4]
 800f154:	2b00      	cmp	r3, #0
 800f156:	d109      	bne.n	800f16c <vTaskPlaceOnEventList+0x24>
 800f158:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f15c:	f383 8811 	msr	BASEPRI, r3
 800f160:	f3bf 8f6f 	isb	sy
 800f164:	f3bf 8f4f 	dsb	sy
 800f168:	60fb      	str	r3, [r7, #12]
 800f16a:	e7fe      	b.n	800f16a <vTaskPlaceOnEventList+0x22>
 800f16c:	4b07      	ldr	r3, [pc, #28]	; (800f18c <vTaskPlaceOnEventList+0x44>)
 800f16e:	681b      	ldr	r3, [r3, #0]
 800f170:	3318      	adds	r3, #24
 800f172:	4619      	mov	r1, r3
 800f174:	6878      	ldr	r0, [r7, #4]
 800f176:	f7fe feac 	bl	800ded2 <vListInsert>
 800f17a:	2101      	movs	r1, #1
 800f17c:	6838      	ldr	r0, [r7, #0]
 800f17e:	f000 fa71 	bl	800f664 <prvAddCurrentTaskToDelayedList>
 800f182:	bf00      	nop
 800f184:	3710      	adds	r7, #16
 800f186:	46bd      	mov	sp, r7
 800f188:	bd80      	pop	{r7, pc}
 800f18a:	bf00      	nop
 800f18c:	2000672c 	.word	0x2000672c

0800f190 <vTaskPlaceOnEventListRestricted>:
 800f190:	b580      	push	{r7, lr}
 800f192:	b086      	sub	sp, #24
 800f194:	af00      	add	r7, sp, #0
 800f196:	60f8      	str	r0, [r7, #12]
 800f198:	60b9      	str	r1, [r7, #8]
 800f19a:	607a      	str	r2, [r7, #4]
 800f19c:	68fb      	ldr	r3, [r7, #12]
 800f19e:	2b00      	cmp	r3, #0
 800f1a0:	d109      	bne.n	800f1b6 <vTaskPlaceOnEventListRestricted+0x26>
 800f1a2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1a6:	f383 8811 	msr	BASEPRI, r3
 800f1aa:	f3bf 8f6f 	isb	sy
 800f1ae:	f3bf 8f4f 	dsb	sy
 800f1b2:	617b      	str	r3, [r7, #20]
 800f1b4:	e7fe      	b.n	800f1b4 <vTaskPlaceOnEventListRestricted+0x24>
 800f1b6:	4b0a      	ldr	r3, [pc, #40]	; (800f1e0 <vTaskPlaceOnEventListRestricted+0x50>)
 800f1b8:	681b      	ldr	r3, [r3, #0]
 800f1ba:	3318      	adds	r3, #24
 800f1bc:	4619      	mov	r1, r3
 800f1be:	68f8      	ldr	r0, [r7, #12]
 800f1c0:	f7fe fe63 	bl	800de8a <vListInsertEnd>
 800f1c4:	687b      	ldr	r3, [r7, #4]
 800f1c6:	2b00      	cmp	r3, #0
 800f1c8:	d002      	beq.n	800f1d0 <vTaskPlaceOnEventListRestricted+0x40>
 800f1ca:	f04f 33ff 	mov.w	r3, #4294967295
 800f1ce:	60bb      	str	r3, [r7, #8]
 800f1d0:	6879      	ldr	r1, [r7, #4]
 800f1d2:	68b8      	ldr	r0, [r7, #8]
 800f1d4:	f000 fa46 	bl	800f664 <prvAddCurrentTaskToDelayedList>
 800f1d8:	bf00      	nop
 800f1da:	3718      	adds	r7, #24
 800f1dc:	46bd      	mov	sp, r7
 800f1de:	bd80      	pop	{r7, pc}
 800f1e0:	2000672c 	.word	0x2000672c

0800f1e4 <xTaskRemoveFromEventList>:
 800f1e4:	b580      	push	{r7, lr}
 800f1e6:	b086      	sub	sp, #24
 800f1e8:	af00      	add	r7, sp, #0
 800f1ea:	6078      	str	r0, [r7, #4]
 800f1ec:	687b      	ldr	r3, [r7, #4]
 800f1ee:	68db      	ldr	r3, [r3, #12]
 800f1f0:	68db      	ldr	r3, [r3, #12]
 800f1f2:	613b      	str	r3, [r7, #16]
 800f1f4:	693b      	ldr	r3, [r7, #16]
 800f1f6:	2b00      	cmp	r3, #0
 800f1f8:	d109      	bne.n	800f20e <xTaskRemoveFromEventList+0x2a>
 800f1fa:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f1fe:	f383 8811 	msr	BASEPRI, r3
 800f202:	f3bf 8f6f 	isb	sy
 800f206:	f3bf 8f4f 	dsb	sy
 800f20a:	60fb      	str	r3, [r7, #12]
 800f20c:	e7fe      	b.n	800f20c <xTaskRemoveFromEventList+0x28>
 800f20e:	693b      	ldr	r3, [r7, #16]
 800f210:	3318      	adds	r3, #24
 800f212:	4618      	mov	r0, r3
 800f214:	f7fe fe96 	bl	800df44 <uxListRemove>
 800f218:	4b1d      	ldr	r3, [pc, #116]	; (800f290 <xTaskRemoveFromEventList+0xac>)
 800f21a:	681b      	ldr	r3, [r3, #0]
 800f21c:	2b00      	cmp	r3, #0
 800f21e:	d11d      	bne.n	800f25c <xTaskRemoveFromEventList+0x78>
 800f220:	693b      	ldr	r3, [r7, #16]
 800f222:	3304      	adds	r3, #4
 800f224:	4618      	mov	r0, r3
 800f226:	f7fe fe8d 	bl	800df44 <uxListRemove>
 800f22a:	693b      	ldr	r3, [r7, #16]
 800f22c:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f22e:	4b19      	ldr	r3, [pc, #100]	; (800f294 <xTaskRemoveFromEventList+0xb0>)
 800f230:	681b      	ldr	r3, [r3, #0]
 800f232:	429a      	cmp	r2, r3
 800f234:	d903      	bls.n	800f23e <xTaskRemoveFromEventList+0x5a>
 800f236:	693b      	ldr	r3, [r7, #16]
 800f238:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f23a:	4a16      	ldr	r2, [pc, #88]	; (800f294 <xTaskRemoveFromEventList+0xb0>)
 800f23c:	6013      	str	r3, [r2, #0]
 800f23e:	693b      	ldr	r3, [r7, #16]
 800f240:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f242:	4613      	mov	r3, r2
 800f244:	009b      	lsls	r3, r3, #2
 800f246:	4413      	add	r3, r2
 800f248:	009b      	lsls	r3, r3, #2
 800f24a:	4a13      	ldr	r2, [pc, #76]	; (800f298 <xTaskRemoveFromEventList+0xb4>)
 800f24c:	441a      	add	r2, r3
 800f24e:	693b      	ldr	r3, [r7, #16]
 800f250:	3304      	adds	r3, #4
 800f252:	4619      	mov	r1, r3
 800f254:	4610      	mov	r0, r2
 800f256:	f7fe fe18 	bl	800de8a <vListInsertEnd>
 800f25a:	e005      	b.n	800f268 <xTaskRemoveFromEventList+0x84>
 800f25c:	693b      	ldr	r3, [r7, #16]
 800f25e:	3318      	adds	r3, #24
 800f260:	4619      	mov	r1, r3
 800f262:	480e      	ldr	r0, [pc, #56]	; (800f29c <xTaskRemoveFromEventList+0xb8>)
 800f264:	f7fe fe11 	bl	800de8a <vListInsertEnd>
 800f268:	693b      	ldr	r3, [r7, #16]
 800f26a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f26c:	4b0c      	ldr	r3, [pc, #48]	; (800f2a0 <xTaskRemoveFromEventList+0xbc>)
 800f26e:	681b      	ldr	r3, [r3, #0]
 800f270:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f272:	429a      	cmp	r2, r3
 800f274:	d905      	bls.n	800f282 <xTaskRemoveFromEventList+0x9e>
 800f276:	2301      	movs	r3, #1
 800f278:	617b      	str	r3, [r7, #20]
 800f27a:	4b0a      	ldr	r3, [pc, #40]	; (800f2a4 <xTaskRemoveFromEventList+0xc0>)
 800f27c:	2201      	movs	r2, #1
 800f27e:	601a      	str	r2, [r3, #0]
 800f280:	e001      	b.n	800f286 <xTaskRemoveFromEventList+0xa2>
 800f282:	2300      	movs	r3, #0
 800f284:	617b      	str	r3, [r7, #20]
 800f286:	697b      	ldr	r3, [r7, #20]
 800f288:	4618      	mov	r0, r3
 800f28a:	3718      	adds	r7, #24
 800f28c:	46bd      	mov	sp, r7
 800f28e:	bd80      	pop	{r7, pc}
 800f290:	20006c28 	.word	0x20006c28
 800f294:	20006c08 	.word	0x20006c08
 800f298:	20006730 	.word	0x20006730
 800f29c:	20006bc0 	.word	0x20006bc0
 800f2a0:	2000672c 	.word	0x2000672c
 800f2a4:	20006c14 	.word	0x20006c14

0800f2a8 <vTaskInternalSetTimeOutState>:
 800f2a8:	b480      	push	{r7}
 800f2aa:	b083      	sub	sp, #12
 800f2ac:	af00      	add	r7, sp, #0
 800f2ae:	6078      	str	r0, [r7, #4]
 800f2b0:	4b06      	ldr	r3, [pc, #24]	; (800f2cc <vTaskInternalSetTimeOutState+0x24>)
 800f2b2:	681a      	ldr	r2, [r3, #0]
 800f2b4:	687b      	ldr	r3, [r7, #4]
 800f2b6:	601a      	str	r2, [r3, #0]
 800f2b8:	4b05      	ldr	r3, [pc, #20]	; (800f2d0 <vTaskInternalSetTimeOutState+0x28>)
 800f2ba:	681a      	ldr	r2, [r3, #0]
 800f2bc:	687b      	ldr	r3, [r7, #4]
 800f2be:	605a      	str	r2, [r3, #4]
 800f2c0:	bf00      	nop
 800f2c2:	370c      	adds	r7, #12
 800f2c4:	46bd      	mov	sp, r7
 800f2c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f2ca:	4770      	bx	lr
 800f2cc:	20006c18 	.word	0x20006c18
 800f2d0:	20006c04 	.word	0x20006c04

0800f2d4 <xTaskCheckForTimeOut>:
 800f2d4:	b580      	push	{r7, lr}
 800f2d6:	b088      	sub	sp, #32
 800f2d8:	af00      	add	r7, sp, #0
 800f2da:	6078      	str	r0, [r7, #4]
 800f2dc:	6039      	str	r1, [r7, #0]
 800f2de:	687b      	ldr	r3, [r7, #4]
 800f2e0:	2b00      	cmp	r3, #0
 800f2e2:	d109      	bne.n	800f2f8 <xTaskCheckForTimeOut+0x24>
 800f2e4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f2e8:	f383 8811 	msr	BASEPRI, r3
 800f2ec:	f3bf 8f6f 	isb	sy
 800f2f0:	f3bf 8f4f 	dsb	sy
 800f2f4:	613b      	str	r3, [r7, #16]
 800f2f6:	e7fe      	b.n	800f2f6 <xTaskCheckForTimeOut+0x22>
 800f2f8:	683b      	ldr	r3, [r7, #0]
 800f2fa:	2b00      	cmp	r3, #0
 800f2fc:	d109      	bne.n	800f312 <xTaskCheckForTimeOut+0x3e>
 800f2fe:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f302:	f383 8811 	msr	BASEPRI, r3
 800f306:	f3bf 8f6f 	isb	sy
 800f30a:	f3bf 8f4f 	dsb	sy
 800f30e:	60fb      	str	r3, [r7, #12]
 800f310:	e7fe      	b.n	800f310 <xTaskCheckForTimeOut+0x3c>
 800f312:	f000 fe6b 	bl	800ffec <vPortEnterCritical>
 800f316:	4b1d      	ldr	r3, [pc, #116]	; (800f38c <xTaskCheckForTimeOut+0xb8>)
 800f318:	681b      	ldr	r3, [r3, #0]
 800f31a:	61bb      	str	r3, [r7, #24]
 800f31c:	687b      	ldr	r3, [r7, #4]
 800f31e:	685b      	ldr	r3, [r3, #4]
 800f320:	69ba      	ldr	r2, [r7, #24]
 800f322:	1ad3      	subs	r3, r2, r3
 800f324:	617b      	str	r3, [r7, #20]
 800f326:	683b      	ldr	r3, [r7, #0]
 800f328:	681b      	ldr	r3, [r3, #0]
 800f32a:	f1b3 3fff 	cmp.w	r3, #4294967295
 800f32e:	d102      	bne.n	800f336 <xTaskCheckForTimeOut+0x62>
 800f330:	2300      	movs	r3, #0
 800f332:	61fb      	str	r3, [r7, #28]
 800f334:	e023      	b.n	800f37e <xTaskCheckForTimeOut+0xaa>
 800f336:	687b      	ldr	r3, [r7, #4]
 800f338:	681a      	ldr	r2, [r3, #0]
 800f33a:	4b15      	ldr	r3, [pc, #84]	; (800f390 <xTaskCheckForTimeOut+0xbc>)
 800f33c:	681b      	ldr	r3, [r3, #0]
 800f33e:	429a      	cmp	r2, r3
 800f340:	d007      	beq.n	800f352 <xTaskCheckForTimeOut+0x7e>
 800f342:	687b      	ldr	r3, [r7, #4]
 800f344:	685b      	ldr	r3, [r3, #4]
 800f346:	69ba      	ldr	r2, [r7, #24]
 800f348:	429a      	cmp	r2, r3
 800f34a:	d302      	bcc.n	800f352 <xTaskCheckForTimeOut+0x7e>
 800f34c:	2301      	movs	r3, #1
 800f34e:	61fb      	str	r3, [r7, #28]
 800f350:	e015      	b.n	800f37e <xTaskCheckForTimeOut+0xaa>
 800f352:	683b      	ldr	r3, [r7, #0]
 800f354:	681b      	ldr	r3, [r3, #0]
 800f356:	697a      	ldr	r2, [r7, #20]
 800f358:	429a      	cmp	r2, r3
 800f35a:	d20b      	bcs.n	800f374 <xTaskCheckForTimeOut+0xa0>
 800f35c:	683b      	ldr	r3, [r7, #0]
 800f35e:	681a      	ldr	r2, [r3, #0]
 800f360:	697b      	ldr	r3, [r7, #20]
 800f362:	1ad2      	subs	r2, r2, r3
 800f364:	683b      	ldr	r3, [r7, #0]
 800f366:	601a      	str	r2, [r3, #0]
 800f368:	6878      	ldr	r0, [r7, #4]
 800f36a:	f7ff ff9d 	bl	800f2a8 <vTaskInternalSetTimeOutState>
 800f36e:	2300      	movs	r3, #0
 800f370:	61fb      	str	r3, [r7, #28]
 800f372:	e004      	b.n	800f37e <xTaskCheckForTimeOut+0xaa>
 800f374:	683b      	ldr	r3, [r7, #0]
 800f376:	2200      	movs	r2, #0
 800f378:	601a      	str	r2, [r3, #0]
 800f37a:	2301      	movs	r3, #1
 800f37c:	61fb      	str	r3, [r7, #28]
 800f37e:	f000 fe63 	bl	8010048 <vPortExitCritical>
 800f382:	69fb      	ldr	r3, [r7, #28]
 800f384:	4618      	mov	r0, r3
 800f386:	3720      	adds	r7, #32
 800f388:	46bd      	mov	sp, r7
 800f38a:	bd80      	pop	{r7, pc}
 800f38c:	20006c04 	.word	0x20006c04
 800f390:	20006c18 	.word	0x20006c18

0800f394 <vTaskMissedYield>:
 800f394:	b480      	push	{r7}
 800f396:	af00      	add	r7, sp, #0
 800f398:	4b03      	ldr	r3, [pc, #12]	; (800f3a8 <vTaskMissedYield+0x14>)
 800f39a:	2201      	movs	r2, #1
 800f39c:	601a      	str	r2, [r3, #0]
 800f39e:	bf00      	nop
 800f3a0:	46bd      	mov	sp, r7
 800f3a2:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f3a6:	4770      	bx	lr
 800f3a8:	20006c14 	.word	0x20006c14

0800f3ac <prvIdleTask>:
 800f3ac:	b580      	push	{r7, lr}
 800f3ae:	b082      	sub	sp, #8
 800f3b0:	af00      	add	r7, sp, #0
 800f3b2:	6078      	str	r0, [r7, #4]
 800f3b4:	f000 f852 	bl	800f45c <prvCheckTasksWaitingTermination>
 800f3b8:	4b06      	ldr	r3, [pc, #24]	; (800f3d4 <prvIdleTask+0x28>)
 800f3ba:	681b      	ldr	r3, [r3, #0]
 800f3bc:	2b01      	cmp	r3, #1
 800f3be:	d9f9      	bls.n	800f3b4 <prvIdleTask+0x8>
 800f3c0:	4b05      	ldr	r3, [pc, #20]	; (800f3d8 <prvIdleTask+0x2c>)
 800f3c2:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f3c6:	601a      	str	r2, [r3, #0]
 800f3c8:	f3bf 8f4f 	dsb	sy
 800f3cc:	f3bf 8f6f 	isb	sy
 800f3d0:	e7f0      	b.n	800f3b4 <prvIdleTask+0x8>
 800f3d2:	bf00      	nop
 800f3d4:	20006730 	.word	0x20006730
 800f3d8:	e000ed04 	.word	0xe000ed04

0800f3dc <prvInitialiseTaskLists>:
 800f3dc:	b580      	push	{r7, lr}
 800f3de:	b082      	sub	sp, #8
 800f3e0:	af00      	add	r7, sp, #0
 800f3e2:	2300      	movs	r3, #0
 800f3e4:	607b      	str	r3, [r7, #4]
 800f3e6:	e00c      	b.n	800f402 <prvInitialiseTaskLists+0x26>
 800f3e8:	687a      	ldr	r2, [r7, #4]
 800f3ea:	4613      	mov	r3, r2
 800f3ec:	009b      	lsls	r3, r3, #2
 800f3ee:	4413      	add	r3, r2
 800f3f0:	009b      	lsls	r3, r3, #2
 800f3f2:	4a12      	ldr	r2, [pc, #72]	; (800f43c <prvInitialiseTaskLists+0x60>)
 800f3f4:	4413      	add	r3, r2
 800f3f6:	4618      	mov	r0, r3
 800f3f8:	f7fe fd1a 	bl	800de30 <vListInitialise>
 800f3fc:	687b      	ldr	r3, [r7, #4]
 800f3fe:	3301      	adds	r3, #1
 800f400:	607b      	str	r3, [r7, #4]
 800f402:	687b      	ldr	r3, [r7, #4]
 800f404:	2b37      	cmp	r3, #55	; 0x37
 800f406:	d9ef      	bls.n	800f3e8 <prvInitialiseTaskLists+0xc>
 800f408:	480d      	ldr	r0, [pc, #52]	; (800f440 <prvInitialiseTaskLists+0x64>)
 800f40a:	f7fe fd11 	bl	800de30 <vListInitialise>
 800f40e:	480d      	ldr	r0, [pc, #52]	; (800f444 <prvInitialiseTaskLists+0x68>)
 800f410:	f7fe fd0e 	bl	800de30 <vListInitialise>
 800f414:	480c      	ldr	r0, [pc, #48]	; (800f448 <prvInitialiseTaskLists+0x6c>)
 800f416:	f7fe fd0b 	bl	800de30 <vListInitialise>
 800f41a:	480c      	ldr	r0, [pc, #48]	; (800f44c <prvInitialiseTaskLists+0x70>)
 800f41c:	f7fe fd08 	bl	800de30 <vListInitialise>
 800f420:	480b      	ldr	r0, [pc, #44]	; (800f450 <prvInitialiseTaskLists+0x74>)
 800f422:	f7fe fd05 	bl	800de30 <vListInitialise>
 800f426:	4b0b      	ldr	r3, [pc, #44]	; (800f454 <prvInitialiseTaskLists+0x78>)
 800f428:	4a05      	ldr	r2, [pc, #20]	; (800f440 <prvInitialiseTaskLists+0x64>)
 800f42a:	601a      	str	r2, [r3, #0]
 800f42c:	4b0a      	ldr	r3, [pc, #40]	; (800f458 <prvInitialiseTaskLists+0x7c>)
 800f42e:	4a05      	ldr	r2, [pc, #20]	; (800f444 <prvInitialiseTaskLists+0x68>)
 800f430:	601a      	str	r2, [r3, #0]
 800f432:	bf00      	nop
 800f434:	3708      	adds	r7, #8
 800f436:	46bd      	mov	sp, r7
 800f438:	bd80      	pop	{r7, pc}
 800f43a:	bf00      	nop
 800f43c:	20006730 	.word	0x20006730
 800f440:	20006b90 	.word	0x20006b90
 800f444:	20006ba4 	.word	0x20006ba4
 800f448:	20006bc0 	.word	0x20006bc0
 800f44c:	20006bd4 	.word	0x20006bd4
 800f450:	20006bec 	.word	0x20006bec
 800f454:	20006bb8 	.word	0x20006bb8
 800f458:	20006bbc 	.word	0x20006bbc

0800f45c <prvCheckTasksWaitingTermination>:
 800f45c:	b580      	push	{r7, lr}
 800f45e:	b082      	sub	sp, #8
 800f460:	af00      	add	r7, sp, #0
 800f462:	e019      	b.n	800f498 <prvCheckTasksWaitingTermination+0x3c>
 800f464:	f000 fdc2 	bl	800ffec <vPortEnterCritical>
 800f468:	4b0f      	ldr	r3, [pc, #60]	; (800f4a8 <prvCheckTasksWaitingTermination+0x4c>)
 800f46a:	68db      	ldr	r3, [r3, #12]
 800f46c:	68db      	ldr	r3, [r3, #12]
 800f46e:	607b      	str	r3, [r7, #4]
 800f470:	687b      	ldr	r3, [r7, #4]
 800f472:	3304      	adds	r3, #4
 800f474:	4618      	mov	r0, r3
 800f476:	f7fe fd65 	bl	800df44 <uxListRemove>
 800f47a:	4b0c      	ldr	r3, [pc, #48]	; (800f4ac <prvCheckTasksWaitingTermination+0x50>)
 800f47c:	681b      	ldr	r3, [r3, #0]
 800f47e:	3b01      	subs	r3, #1
 800f480:	4a0a      	ldr	r2, [pc, #40]	; (800f4ac <prvCheckTasksWaitingTermination+0x50>)
 800f482:	6013      	str	r3, [r2, #0]
 800f484:	4b0a      	ldr	r3, [pc, #40]	; (800f4b0 <prvCheckTasksWaitingTermination+0x54>)
 800f486:	681b      	ldr	r3, [r3, #0]
 800f488:	3b01      	subs	r3, #1
 800f48a:	4a09      	ldr	r2, [pc, #36]	; (800f4b0 <prvCheckTasksWaitingTermination+0x54>)
 800f48c:	6013      	str	r3, [r2, #0]
 800f48e:	f000 fddb 	bl	8010048 <vPortExitCritical>
 800f492:	6878      	ldr	r0, [r7, #4]
 800f494:	f000 f80e 	bl	800f4b4 <prvDeleteTCB>
 800f498:	4b05      	ldr	r3, [pc, #20]	; (800f4b0 <prvCheckTasksWaitingTermination+0x54>)
 800f49a:	681b      	ldr	r3, [r3, #0]
 800f49c:	2b00      	cmp	r3, #0
 800f49e:	d1e1      	bne.n	800f464 <prvCheckTasksWaitingTermination+0x8>
 800f4a0:	bf00      	nop
 800f4a2:	3708      	adds	r7, #8
 800f4a4:	46bd      	mov	sp, r7
 800f4a6:	bd80      	pop	{r7, pc}
 800f4a8:	20006bd4 	.word	0x20006bd4
 800f4ac:	20006c00 	.word	0x20006c00
 800f4b0:	20006be8 	.word	0x20006be8

0800f4b4 <prvDeleteTCB>:
 800f4b4:	b580      	push	{r7, lr}
 800f4b6:	b084      	sub	sp, #16
 800f4b8:	af00      	add	r7, sp, #0
 800f4ba:	6078      	str	r0, [r7, #4]
 800f4bc:	687b      	ldr	r3, [r7, #4]
 800f4be:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 800f4c2:	2b00      	cmp	r3, #0
 800f4c4:	d108      	bne.n	800f4d8 <prvDeleteTCB+0x24>
 800f4c6:	687b      	ldr	r3, [r7, #4]
 800f4c8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 800f4ca:	4618      	mov	r0, r3
 800f4cc:	f000 ff6a 	bl	80103a4 <vPortFree>
 800f4d0:	6878      	ldr	r0, [r7, #4]
 800f4d2:	f000 ff67 	bl	80103a4 <vPortFree>
 800f4d6:	e017      	b.n	800f508 <prvDeleteTCB+0x54>
 800f4d8:	687b      	ldr	r3, [r7, #4]
 800f4da:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 800f4de:	2b01      	cmp	r3, #1
 800f4e0:	d103      	bne.n	800f4ea <prvDeleteTCB+0x36>
 800f4e2:	6878      	ldr	r0, [r7, #4]
 800f4e4:	f000 ff5e 	bl	80103a4 <vPortFree>
 800f4e8:	e00e      	b.n	800f508 <prvDeleteTCB+0x54>
 800f4ea:	687b      	ldr	r3, [r7, #4]
 800f4ec:	f893 3059 	ldrb.w	r3, [r3, #89]	; 0x59
 800f4f0:	2b02      	cmp	r3, #2
 800f4f2:	d009      	beq.n	800f508 <prvDeleteTCB+0x54>
 800f4f4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f4f8:	f383 8811 	msr	BASEPRI, r3
 800f4fc:	f3bf 8f6f 	isb	sy
 800f500:	f3bf 8f4f 	dsb	sy
 800f504:	60fb      	str	r3, [r7, #12]
 800f506:	e7fe      	b.n	800f506 <prvDeleteTCB+0x52>
 800f508:	bf00      	nop
 800f50a:	3710      	adds	r7, #16
 800f50c:	46bd      	mov	sp, r7
 800f50e:	bd80      	pop	{r7, pc}

0800f510 <prvResetNextTaskUnblockTime>:
 800f510:	b480      	push	{r7}
 800f512:	b083      	sub	sp, #12
 800f514:	af00      	add	r7, sp, #0
 800f516:	4b0c      	ldr	r3, [pc, #48]	; (800f548 <prvResetNextTaskUnblockTime+0x38>)
 800f518:	681b      	ldr	r3, [r3, #0]
 800f51a:	681b      	ldr	r3, [r3, #0]
 800f51c:	2b00      	cmp	r3, #0
 800f51e:	d104      	bne.n	800f52a <prvResetNextTaskUnblockTime+0x1a>
 800f520:	4b0a      	ldr	r3, [pc, #40]	; (800f54c <prvResetNextTaskUnblockTime+0x3c>)
 800f522:	f04f 32ff 	mov.w	r2, #4294967295
 800f526:	601a      	str	r2, [r3, #0]
 800f528:	e008      	b.n	800f53c <prvResetNextTaskUnblockTime+0x2c>
 800f52a:	4b07      	ldr	r3, [pc, #28]	; (800f548 <prvResetNextTaskUnblockTime+0x38>)
 800f52c:	681b      	ldr	r3, [r3, #0]
 800f52e:	68db      	ldr	r3, [r3, #12]
 800f530:	68db      	ldr	r3, [r3, #12]
 800f532:	607b      	str	r3, [r7, #4]
 800f534:	687b      	ldr	r3, [r7, #4]
 800f536:	685b      	ldr	r3, [r3, #4]
 800f538:	4a04      	ldr	r2, [pc, #16]	; (800f54c <prvResetNextTaskUnblockTime+0x3c>)
 800f53a:	6013      	str	r3, [r2, #0]
 800f53c:	bf00      	nop
 800f53e:	370c      	adds	r7, #12
 800f540:	46bd      	mov	sp, r7
 800f542:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f546:	4770      	bx	lr
 800f548:	20006bb8 	.word	0x20006bb8
 800f54c:	20006c20 	.word	0x20006c20

0800f550 <xTaskGetSchedulerState>:
 800f550:	b480      	push	{r7}
 800f552:	b083      	sub	sp, #12
 800f554:	af00      	add	r7, sp, #0
 800f556:	4b0b      	ldr	r3, [pc, #44]	; (800f584 <xTaskGetSchedulerState+0x34>)
 800f558:	681b      	ldr	r3, [r3, #0]
 800f55a:	2b00      	cmp	r3, #0
 800f55c:	d102      	bne.n	800f564 <xTaskGetSchedulerState+0x14>
 800f55e:	2301      	movs	r3, #1
 800f560:	607b      	str	r3, [r7, #4]
 800f562:	e008      	b.n	800f576 <xTaskGetSchedulerState+0x26>
 800f564:	4b08      	ldr	r3, [pc, #32]	; (800f588 <xTaskGetSchedulerState+0x38>)
 800f566:	681b      	ldr	r3, [r3, #0]
 800f568:	2b00      	cmp	r3, #0
 800f56a:	d102      	bne.n	800f572 <xTaskGetSchedulerState+0x22>
 800f56c:	2302      	movs	r3, #2
 800f56e:	607b      	str	r3, [r7, #4]
 800f570:	e001      	b.n	800f576 <xTaskGetSchedulerState+0x26>
 800f572:	2300      	movs	r3, #0
 800f574:	607b      	str	r3, [r7, #4]
 800f576:	687b      	ldr	r3, [r7, #4]
 800f578:	4618      	mov	r0, r3
 800f57a:	370c      	adds	r7, #12
 800f57c:	46bd      	mov	sp, r7
 800f57e:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f582:	4770      	bx	lr
 800f584:	20006c0c 	.word	0x20006c0c
 800f588:	20006c28 	.word	0x20006c28

0800f58c <xTaskPriorityDisinherit>:
 800f58c:	b580      	push	{r7, lr}
 800f58e:	b086      	sub	sp, #24
 800f590:	af00      	add	r7, sp, #0
 800f592:	6078      	str	r0, [r7, #4]
 800f594:	687b      	ldr	r3, [r7, #4]
 800f596:	613b      	str	r3, [r7, #16]
 800f598:	2300      	movs	r3, #0
 800f59a:	617b      	str	r3, [r7, #20]
 800f59c:	687b      	ldr	r3, [r7, #4]
 800f59e:	2b00      	cmp	r3, #0
 800f5a0:	d054      	beq.n	800f64c <xTaskPriorityDisinherit+0xc0>
 800f5a2:	4b2d      	ldr	r3, [pc, #180]	; (800f658 <xTaskPriorityDisinherit+0xcc>)
 800f5a4:	681b      	ldr	r3, [r3, #0]
 800f5a6:	693a      	ldr	r2, [r7, #16]
 800f5a8:	429a      	cmp	r2, r3
 800f5aa:	d009      	beq.n	800f5c0 <xTaskPriorityDisinherit+0x34>
 800f5ac:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5b0:	f383 8811 	msr	BASEPRI, r3
 800f5b4:	f3bf 8f6f 	isb	sy
 800f5b8:	f3bf 8f4f 	dsb	sy
 800f5bc:	60fb      	str	r3, [r7, #12]
 800f5be:	e7fe      	b.n	800f5be <xTaskPriorityDisinherit+0x32>
 800f5c0:	693b      	ldr	r3, [r7, #16]
 800f5c2:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f5c4:	2b00      	cmp	r3, #0
 800f5c6:	d109      	bne.n	800f5dc <xTaskPriorityDisinherit+0x50>
 800f5c8:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f5cc:	f383 8811 	msr	BASEPRI, r3
 800f5d0:	f3bf 8f6f 	isb	sy
 800f5d4:	f3bf 8f4f 	dsb	sy
 800f5d8:	60bb      	str	r3, [r7, #8]
 800f5da:	e7fe      	b.n	800f5da <xTaskPriorityDisinherit+0x4e>
 800f5dc:	693b      	ldr	r3, [r7, #16]
 800f5de:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f5e0:	1e5a      	subs	r2, r3, #1
 800f5e2:	693b      	ldr	r3, [r7, #16]
 800f5e4:	651a      	str	r2, [r3, #80]	; 0x50
 800f5e6:	693b      	ldr	r3, [r7, #16]
 800f5e8:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f5ea:	693b      	ldr	r3, [r7, #16]
 800f5ec:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 800f5ee:	429a      	cmp	r2, r3
 800f5f0:	d02c      	beq.n	800f64c <xTaskPriorityDisinherit+0xc0>
 800f5f2:	693b      	ldr	r3, [r7, #16]
 800f5f4:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 800f5f6:	2b00      	cmp	r3, #0
 800f5f8:	d128      	bne.n	800f64c <xTaskPriorityDisinherit+0xc0>
 800f5fa:	693b      	ldr	r3, [r7, #16]
 800f5fc:	3304      	adds	r3, #4
 800f5fe:	4618      	mov	r0, r3
 800f600:	f7fe fca0 	bl	800df44 <uxListRemove>
 800f604:	693b      	ldr	r3, [r7, #16]
 800f606:	6cda      	ldr	r2, [r3, #76]	; 0x4c
 800f608:	693b      	ldr	r3, [r7, #16]
 800f60a:	62da      	str	r2, [r3, #44]	; 0x2c
 800f60c:	693b      	ldr	r3, [r7, #16]
 800f60e:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f610:	f1c3 0238 	rsb	r2, r3, #56	; 0x38
 800f614:	693b      	ldr	r3, [r7, #16]
 800f616:	619a      	str	r2, [r3, #24]
 800f618:	693b      	ldr	r3, [r7, #16]
 800f61a:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f61c:	4b0f      	ldr	r3, [pc, #60]	; (800f65c <xTaskPriorityDisinherit+0xd0>)
 800f61e:	681b      	ldr	r3, [r3, #0]
 800f620:	429a      	cmp	r2, r3
 800f622:	d903      	bls.n	800f62c <xTaskPriorityDisinherit+0xa0>
 800f624:	693b      	ldr	r3, [r7, #16]
 800f626:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 800f628:	4a0c      	ldr	r2, [pc, #48]	; (800f65c <xTaskPriorityDisinherit+0xd0>)
 800f62a:	6013      	str	r3, [r2, #0]
 800f62c:	693b      	ldr	r3, [r7, #16]
 800f62e:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 800f630:	4613      	mov	r3, r2
 800f632:	009b      	lsls	r3, r3, #2
 800f634:	4413      	add	r3, r2
 800f636:	009b      	lsls	r3, r3, #2
 800f638:	4a09      	ldr	r2, [pc, #36]	; (800f660 <xTaskPriorityDisinherit+0xd4>)
 800f63a:	441a      	add	r2, r3
 800f63c:	693b      	ldr	r3, [r7, #16]
 800f63e:	3304      	adds	r3, #4
 800f640:	4619      	mov	r1, r3
 800f642:	4610      	mov	r0, r2
 800f644:	f7fe fc21 	bl	800de8a <vListInsertEnd>
 800f648:	2301      	movs	r3, #1
 800f64a:	617b      	str	r3, [r7, #20]
 800f64c:	697b      	ldr	r3, [r7, #20]
 800f64e:	4618      	mov	r0, r3
 800f650:	3718      	adds	r7, #24
 800f652:	46bd      	mov	sp, r7
 800f654:	bd80      	pop	{r7, pc}
 800f656:	bf00      	nop
 800f658:	2000672c 	.word	0x2000672c
 800f65c:	20006c08 	.word	0x20006c08
 800f660:	20006730 	.word	0x20006730

0800f664 <prvAddCurrentTaskToDelayedList>:
 800f664:	b580      	push	{r7, lr}
 800f666:	b084      	sub	sp, #16
 800f668:	af00      	add	r7, sp, #0
 800f66a:	6078      	str	r0, [r7, #4]
 800f66c:	6039      	str	r1, [r7, #0]
 800f66e:	4b21      	ldr	r3, [pc, #132]	; (800f6f4 <prvAddCurrentTaskToDelayedList+0x90>)
 800f670:	681b      	ldr	r3, [r3, #0]
 800f672:	60fb      	str	r3, [r7, #12]
 800f674:	4b20      	ldr	r3, [pc, #128]	; (800f6f8 <prvAddCurrentTaskToDelayedList+0x94>)
 800f676:	681b      	ldr	r3, [r3, #0]
 800f678:	3304      	adds	r3, #4
 800f67a:	4618      	mov	r0, r3
 800f67c:	f7fe fc62 	bl	800df44 <uxListRemove>
 800f680:	687b      	ldr	r3, [r7, #4]
 800f682:	f1b3 3fff 	cmp.w	r3, #4294967295
 800f686:	d10a      	bne.n	800f69e <prvAddCurrentTaskToDelayedList+0x3a>
 800f688:	683b      	ldr	r3, [r7, #0]
 800f68a:	2b00      	cmp	r3, #0
 800f68c:	d007      	beq.n	800f69e <prvAddCurrentTaskToDelayedList+0x3a>
 800f68e:	4b1a      	ldr	r3, [pc, #104]	; (800f6f8 <prvAddCurrentTaskToDelayedList+0x94>)
 800f690:	681b      	ldr	r3, [r3, #0]
 800f692:	3304      	adds	r3, #4
 800f694:	4619      	mov	r1, r3
 800f696:	4819      	ldr	r0, [pc, #100]	; (800f6fc <prvAddCurrentTaskToDelayedList+0x98>)
 800f698:	f7fe fbf7 	bl	800de8a <vListInsertEnd>
 800f69c:	e026      	b.n	800f6ec <prvAddCurrentTaskToDelayedList+0x88>
 800f69e:	68fa      	ldr	r2, [r7, #12]
 800f6a0:	687b      	ldr	r3, [r7, #4]
 800f6a2:	4413      	add	r3, r2
 800f6a4:	60bb      	str	r3, [r7, #8]
 800f6a6:	4b14      	ldr	r3, [pc, #80]	; (800f6f8 <prvAddCurrentTaskToDelayedList+0x94>)
 800f6a8:	681b      	ldr	r3, [r3, #0]
 800f6aa:	68ba      	ldr	r2, [r7, #8]
 800f6ac:	605a      	str	r2, [r3, #4]
 800f6ae:	68ba      	ldr	r2, [r7, #8]
 800f6b0:	68fb      	ldr	r3, [r7, #12]
 800f6b2:	429a      	cmp	r2, r3
 800f6b4:	d209      	bcs.n	800f6ca <prvAddCurrentTaskToDelayedList+0x66>
 800f6b6:	4b12      	ldr	r3, [pc, #72]	; (800f700 <prvAddCurrentTaskToDelayedList+0x9c>)
 800f6b8:	681a      	ldr	r2, [r3, #0]
 800f6ba:	4b0f      	ldr	r3, [pc, #60]	; (800f6f8 <prvAddCurrentTaskToDelayedList+0x94>)
 800f6bc:	681b      	ldr	r3, [r3, #0]
 800f6be:	3304      	adds	r3, #4
 800f6c0:	4619      	mov	r1, r3
 800f6c2:	4610      	mov	r0, r2
 800f6c4:	f7fe fc05 	bl	800ded2 <vListInsert>
 800f6c8:	e010      	b.n	800f6ec <prvAddCurrentTaskToDelayedList+0x88>
 800f6ca:	4b0e      	ldr	r3, [pc, #56]	; (800f704 <prvAddCurrentTaskToDelayedList+0xa0>)
 800f6cc:	681a      	ldr	r2, [r3, #0]
 800f6ce:	4b0a      	ldr	r3, [pc, #40]	; (800f6f8 <prvAddCurrentTaskToDelayedList+0x94>)
 800f6d0:	681b      	ldr	r3, [r3, #0]
 800f6d2:	3304      	adds	r3, #4
 800f6d4:	4619      	mov	r1, r3
 800f6d6:	4610      	mov	r0, r2
 800f6d8:	f7fe fbfb 	bl	800ded2 <vListInsert>
 800f6dc:	4b0a      	ldr	r3, [pc, #40]	; (800f708 <prvAddCurrentTaskToDelayedList+0xa4>)
 800f6de:	681b      	ldr	r3, [r3, #0]
 800f6e0:	68ba      	ldr	r2, [r7, #8]
 800f6e2:	429a      	cmp	r2, r3
 800f6e4:	d202      	bcs.n	800f6ec <prvAddCurrentTaskToDelayedList+0x88>
 800f6e6:	4a08      	ldr	r2, [pc, #32]	; (800f708 <prvAddCurrentTaskToDelayedList+0xa4>)
 800f6e8:	68bb      	ldr	r3, [r7, #8]
 800f6ea:	6013      	str	r3, [r2, #0]
 800f6ec:	bf00      	nop
 800f6ee:	3710      	adds	r7, #16
 800f6f0:	46bd      	mov	sp, r7
 800f6f2:	bd80      	pop	{r7, pc}
 800f6f4:	20006c04 	.word	0x20006c04
 800f6f8:	2000672c 	.word	0x2000672c
 800f6fc:	20006bec 	.word	0x20006bec
 800f700:	20006bbc 	.word	0x20006bbc
 800f704:	20006bb8 	.word	0x20006bb8
 800f708:	20006c20 	.word	0x20006c20

0800f70c <xTimerCreateTimerTask>:
 800f70c:	b580      	push	{r7, lr}
 800f70e:	b08a      	sub	sp, #40	; 0x28
 800f710:	af04      	add	r7, sp, #16
 800f712:	2300      	movs	r3, #0
 800f714:	617b      	str	r3, [r7, #20]
 800f716:	f000 faff 	bl	800fd18 <prvCheckForValidListAndQueue>
 800f71a:	4b1c      	ldr	r3, [pc, #112]	; (800f78c <xTimerCreateTimerTask+0x80>)
 800f71c:	681b      	ldr	r3, [r3, #0]
 800f71e:	2b00      	cmp	r3, #0
 800f720:	d021      	beq.n	800f766 <xTimerCreateTimerTask+0x5a>
 800f722:	2300      	movs	r3, #0
 800f724:	60fb      	str	r3, [r7, #12]
 800f726:	2300      	movs	r3, #0
 800f728:	60bb      	str	r3, [r7, #8]
 800f72a:	1d3a      	adds	r2, r7, #4
 800f72c:	f107 0108 	add.w	r1, r7, #8
 800f730:	f107 030c 	add.w	r3, r7, #12
 800f734:	4618      	mov	r0, r3
 800f736:	f7fe fb61 	bl	800ddfc <vApplicationGetTimerTaskMemory>
 800f73a:	6879      	ldr	r1, [r7, #4]
 800f73c:	68bb      	ldr	r3, [r7, #8]
 800f73e:	68fa      	ldr	r2, [r7, #12]
 800f740:	9202      	str	r2, [sp, #8]
 800f742:	9301      	str	r3, [sp, #4]
 800f744:	2302      	movs	r3, #2
 800f746:	9300      	str	r3, [sp, #0]
 800f748:	2300      	movs	r3, #0
 800f74a:	460a      	mov	r2, r1
 800f74c:	4910      	ldr	r1, [pc, #64]	; (800f790 <xTimerCreateTimerTask+0x84>)
 800f74e:	4811      	ldr	r0, [pc, #68]	; (800f794 <xTimerCreateTimerTask+0x88>)
 800f750:	f7ff f8f6 	bl	800e940 <xTaskCreateStatic>
 800f754:	4602      	mov	r2, r0
 800f756:	4b10      	ldr	r3, [pc, #64]	; (800f798 <xTimerCreateTimerTask+0x8c>)
 800f758:	601a      	str	r2, [r3, #0]
 800f75a:	4b0f      	ldr	r3, [pc, #60]	; (800f798 <xTimerCreateTimerTask+0x8c>)
 800f75c:	681b      	ldr	r3, [r3, #0]
 800f75e:	2b00      	cmp	r3, #0
 800f760:	d001      	beq.n	800f766 <xTimerCreateTimerTask+0x5a>
 800f762:	2301      	movs	r3, #1
 800f764:	617b      	str	r3, [r7, #20]
 800f766:	697b      	ldr	r3, [r7, #20]
 800f768:	2b00      	cmp	r3, #0
 800f76a:	d109      	bne.n	800f780 <xTimerCreateTimerTask+0x74>
 800f76c:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f770:	f383 8811 	msr	BASEPRI, r3
 800f774:	f3bf 8f6f 	isb	sy
 800f778:	f3bf 8f4f 	dsb	sy
 800f77c:	613b      	str	r3, [r7, #16]
 800f77e:	e7fe      	b.n	800f77e <xTimerCreateTimerTask+0x72>
 800f780:	697b      	ldr	r3, [r7, #20]
 800f782:	4618      	mov	r0, r3
 800f784:	3718      	adds	r7, #24
 800f786:	46bd      	mov	sp, r7
 800f788:	bd80      	pop	{r7, pc}
 800f78a:	bf00      	nop
 800f78c:	20006c5c 	.word	0x20006c5c
 800f790:	080162dc 	.word	0x080162dc
 800f794:	0800f8cd 	.word	0x0800f8cd
 800f798:	20006c60 	.word	0x20006c60

0800f79c <xTimerGenericCommand>:
 800f79c:	b580      	push	{r7, lr}
 800f79e:	b08a      	sub	sp, #40	; 0x28
 800f7a0:	af00      	add	r7, sp, #0
 800f7a2:	60f8      	str	r0, [r7, #12]
 800f7a4:	60b9      	str	r1, [r7, #8]
 800f7a6:	607a      	str	r2, [r7, #4]
 800f7a8:	603b      	str	r3, [r7, #0]
 800f7aa:	2300      	movs	r3, #0
 800f7ac:	627b      	str	r3, [r7, #36]	; 0x24
 800f7ae:	68fb      	ldr	r3, [r7, #12]
 800f7b0:	2b00      	cmp	r3, #0
 800f7b2:	d109      	bne.n	800f7c8 <xTimerGenericCommand+0x2c>
 800f7b4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f7b8:	f383 8811 	msr	BASEPRI, r3
 800f7bc:	f3bf 8f6f 	isb	sy
 800f7c0:	f3bf 8f4f 	dsb	sy
 800f7c4:	623b      	str	r3, [r7, #32]
 800f7c6:	e7fe      	b.n	800f7c6 <xTimerGenericCommand+0x2a>
 800f7c8:	4b19      	ldr	r3, [pc, #100]	; (800f830 <xTimerGenericCommand+0x94>)
 800f7ca:	681b      	ldr	r3, [r3, #0]
 800f7cc:	2b00      	cmp	r3, #0
 800f7ce:	d02a      	beq.n	800f826 <xTimerGenericCommand+0x8a>
 800f7d0:	68bb      	ldr	r3, [r7, #8]
 800f7d2:	613b      	str	r3, [r7, #16]
 800f7d4:	687b      	ldr	r3, [r7, #4]
 800f7d6:	617b      	str	r3, [r7, #20]
 800f7d8:	68fb      	ldr	r3, [r7, #12]
 800f7da:	61bb      	str	r3, [r7, #24]
 800f7dc:	68bb      	ldr	r3, [r7, #8]
 800f7de:	2b05      	cmp	r3, #5
 800f7e0:	dc18      	bgt.n	800f814 <xTimerGenericCommand+0x78>
 800f7e2:	f7ff feb5 	bl	800f550 <xTaskGetSchedulerState>
 800f7e6:	4603      	mov	r3, r0
 800f7e8:	2b02      	cmp	r3, #2
 800f7ea:	d109      	bne.n	800f800 <xTimerGenericCommand+0x64>
 800f7ec:	4b10      	ldr	r3, [pc, #64]	; (800f830 <xTimerGenericCommand+0x94>)
 800f7ee:	6818      	ldr	r0, [r3, #0]
 800f7f0:	f107 0110 	add.w	r1, r7, #16
 800f7f4:	2300      	movs	r3, #0
 800f7f6:	6b3a      	ldr	r2, [r7, #48]	; 0x30
 800f7f8:	f7fe fccc 	bl	800e194 <xQueueGenericSend>
 800f7fc:	6278      	str	r0, [r7, #36]	; 0x24
 800f7fe:	e012      	b.n	800f826 <xTimerGenericCommand+0x8a>
 800f800:	4b0b      	ldr	r3, [pc, #44]	; (800f830 <xTimerGenericCommand+0x94>)
 800f802:	6818      	ldr	r0, [r3, #0]
 800f804:	f107 0110 	add.w	r1, r7, #16
 800f808:	2300      	movs	r3, #0
 800f80a:	2200      	movs	r2, #0
 800f80c:	f7fe fcc2 	bl	800e194 <xQueueGenericSend>
 800f810:	6278      	str	r0, [r7, #36]	; 0x24
 800f812:	e008      	b.n	800f826 <xTimerGenericCommand+0x8a>
 800f814:	4b06      	ldr	r3, [pc, #24]	; (800f830 <xTimerGenericCommand+0x94>)
 800f816:	6818      	ldr	r0, [r3, #0]
 800f818:	f107 0110 	add.w	r1, r7, #16
 800f81c:	2300      	movs	r3, #0
 800f81e:	683a      	ldr	r2, [r7, #0]
 800f820:	f7fe fdb2 	bl	800e388 <xQueueGenericSendFromISR>
 800f824:	6278      	str	r0, [r7, #36]	; 0x24
 800f826:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800f828:	4618      	mov	r0, r3
 800f82a:	3728      	adds	r7, #40	; 0x28
 800f82c:	46bd      	mov	sp, r7
 800f82e:	bd80      	pop	{r7, pc}
 800f830:	20006c5c 	.word	0x20006c5c

0800f834 <prvProcessExpiredTimer>:
 800f834:	b580      	push	{r7, lr}
 800f836:	b088      	sub	sp, #32
 800f838:	af02      	add	r7, sp, #8
 800f83a:	6078      	str	r0, [r7, #4]
 800f83c:	6039      	str	r1, [r7, #0]
 800f83e:	4b22      	ldr	r3, [pc, #136]	; (800f8c8 <prvProcessExpiredTimer+0x94>)
 800f840:	681b      	ldr	r3, [r3, #0]
 800f842:	68db      	ldr	r3, [r3, #12]
 800f844:	68db      	ldr	r3, [r3, #12]
 800f846:	617b      	str	r3, [r7, #20]
 800f848:	697b      	ldr	r3, [r7, #20]
 800f84a:	3304      	adds	r3, #4
 800f84c:	4618      	mov	r0, r3
 800f84e:	f7fe fb79 	bl	800df44 <uxListRemove>
 800f852:	697b      	ldr	r3, [r7, #20]
 800f854:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800f858:	f003 0304 	and.w	r3, r3, #4
 800f85c:	2b00      	cmp	r3, #0
 800f85e:	d021      	beq.n	800f8a4 <prvProcessExpiredTimer+0x70>
 800f860:	697b      	ldr	r3, [r7, #20]
 800f862:	699a      	ldr	r2, [r3, #24]
 800f864:	687b      	ldr	r3, [r7, #4]
 800f866:	18d1      	adds	r1, r2, r3
 800f868:	687b      	ldr	r3, [r7, #4]
 800f86a:	683a      	ldr	r2, [r7, #0]
 800f86c:	6978      	ldr	r0, [r7, #20]
 800f86e:	f000 f8d1 	bl	800fa14 <prvInsertTimerInActiveList>
 800f872:	4603      	mov	r3, r0
 800f874:	2b00      	cmp	r3, #0
 800f876:	d01e      	beq.n	800f8b6 <prvProcessExpiredTimer+0x82>
 800f878:	2300      	movs	r3, #0
 800f87a:	9300      	str	r3, [sp, #0]
 800f87c:	2300      	movs	r3, #0
 800f87e:	687a      	ldr	r2, [r7, #4]
 800f880:	2100      	movs	r1, #0
 800f882:	6978      	ldr	r0, [r7, #20]
 800f884:	f7ff ff8a 	bl	800f79c <xTimerGenericCommand>
 800f888:	6138      	str	r0, [r7, #16]
 800f88a:	693b      	ldr	r3, [r7, #16]
 800f88c:	2b00      	cmp	r3, #0
 800f88e:	d112      	bne.n	800f8b6 <prvProcessExpiredTimer+0x82>
 800f890:	f04f 0350 	mov.w	r3, #80	; 0x50
 800f894:	f383 8811 	msr	BASEPRI, r3
 800f898:	f3bf 8f6f 	isb	sy
 800f89c:	f3bf 8f4f 	dsb	sy
 800f8a0:	60fb      	str	r3, [r7, #12]
 800f8a2:	e7fe      	b.n	800f8a2 <prvProcessExpiredTimer+0x6e>
 800f8a4:	697b      	ldr	r3, [r7, #20]
 800f8a6:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800f8aa:	f023 0301 	bic.w	r3, r3, #1
 800f8ae:	b2da      	uxtb	r2, r3
 800f8b0:	697b      	ldr	r3, [r7, #20]
 800f8b2:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800f8b6:	697b      	ldr	r3, [r7, #20]
 800f8b8:	6a1b      	ldr	r3, [r3, #32]
 800f8ba:	6978      	ldr	r0, [r7, #20]
 800f8bc:	4798      	blx	r3
 800f8be:	bf00      	nop
 800f8c0:	3718      	adds	r7, #24
 800f8c2:	46bd      	mov	sp, r7
 800f8c4:	bd80      	pop	{r7, pc}
 800f8c6:	bf00      	nop
 800f8c8:	20006c54 	.word	0x20006c54

0800f8cc <prvTimerTask>:
 800f8cc:	b580      	push	{r7, lr}
 800f8ce:	b084      	sub	sp, #16
 800f8d0:	af00      	add	r7, sp, #0
 800f8d2:	6078      	str	r0, [r7, #4]
 800f8d4:	f107 0308 	add.w	r3, r7, #8
 800f8d8:	4618      	mov	r0, r3
 800f8da:	f000 f857 	bl	800f98c <prvGetNextExpireTime>
 800f8de:	60f8      	str	r0, [r7, #12]
 800f8e0:	68bb      	ldr	r3, [r7, #8]
 800f8e2:	4619      	mov	r1, r3
 800f8e4:	68f8      	ldr	r0, [r7, #12]
 800f8e6:	f000 f803 	bl	800f8f0 <prvProcessTimerOrBlockTask>
 800f8ea:	f000 f8d5 	bl	800fa98 <prvProcessReceivedCommands>
 800f8ee:	e7f1      	b.n	800f8d4 <prvTimerTask+0x8>

0800f8f0 <prvProcessTimerOrBlockTask>:
 800f8f0:	b580      	push	{r7, lr}
 800f8f2:	b084      	sub	sp, #16
 800f8f4:	af00      	add	r7, sp, #0
 800f8f6:	6078      	str	r0, [r7, #4]
 800f8f8:	6039      	str	r1, [r7, #0]
 800f8fa:	f7ff fa57 	bl	800edac <vTaskSuspendAll>
 800f8fe:	f107 0308 	add.w	r3, r7, #8
 800f902:	4618      	mov	r0, r3
 800f904:	f000 f866 	bl	800f9d4 <prvSampleTimeNow>
 800f908:	60f8      	str	r0, [r7, #12]
 800f90a:	68bb      	ldr	r3, [r7, #8]
 800f90c:	2b00      	cmp	r3, #0
 800f90e:	d130      	bne.n	800f972 <prvProcessTimerOrBlockTask+0x82>
 800f910:	683b      	ldr	r3, [r7, #0]
 800f912:	2b00      	cmp	r3, #0
 800f914:	d10a      	bne.n	800f92c <prvProcessTimerOrBlockTask+0x3c>
 800f916:	687a      	ldr	r2, [r7, #4]
 800f918:	68fb      	ldr	r3, [r7, #12]
 800f91a:	429a      	cmp	r2, r3
 800f91c:	d806      	bhi.n	800f92c <prvProcessTimerOrBlockTask+0x3c>
 800f91e:	f7ff fa53 	bl	800edc8 <xTaskResumeAll>
 800f922:	68f9      	ldr	r1, [r7, #12]
 800f924:	6878      	ldr	r0, [r7, #4]
 800f926:	f7ff ff85 	bl	800f834 <prvProcessExpiredTimer>
 800f92a:	e024      	b.n	800f976 <prvProcessTimerOrBlockTask+0x86>
 800f92c:	683b      	ldr	r3, [r7, #0]
 800f92e:	2b00      	cmp	r3, #0
 800f930:	d008      	beq.n	800f944 <prvProcessTimerOrBlockTask+0x54>
 800f932:	4b13      	ldr	r3, [pc, #76]	; (800f980 <prvProcessTimerOrBlockTask+0x90>)
 800f934:	681b      	ldr	r3, [r3, #0]
 800f936:	681b      	ldr	r3, [r3, #0]
 800f938:	2b00      	cmp	r3, #0
 800f93a:	d101      	bne.n	800f940 <prvProcessTimerOrBlockTask+0x50>
 800f93c:	2301      	movs	r3, #1
 800f93e:	e000      	b.n	800f942 <prvProcessTimerOrBlockTask+0x52>
 800f940:	2300      	movs	r3, #0
 800f942:	603b      	str	r3, [r7, #0]
 800f944:	4b0f      	ldr	r3, [pc, #60]	; (800f984 <prvProcessTimerOrBlockTask+0x94>)
 800f946:	6818      	ldr	r0, [r3, #0]
 800f948:	687a      	ldr	r2, [r7, #4]
 800f94a:	68fb      	ldr	r3, [r7, #12]
 800f94c:	1ad3      	subs	r3, r2, r3
 800f94e:	683a      	ldr	r2, [r7, #0]
 800f950:	4619      	mov	r1, r3
 800f952:	f7fe ffc1 	bl	800e8d8 <vQueueWaitForMessageRestricted>
 800f956:	f7ff fa37 	bl	800edc8 <xTaskResumeAll>
 800f95a:	4603      	mov	r3, r0
 800f95c:	2b00      	cmp	r3, #0
 800f95e:	d10a      	bne.n	800f976 <prvProcessTimerOrBlockTask+0x86>
 800f960:	4b09      	ldr	r3, [pc, #36]	; (800f988 <prvProcessTimerOrBlockTask+0x98>)
 800f962:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 800f966:	601a      	str	r2, [r3, #0]
 800f968:	f3bf 8f4f 	dsb	sy
 800f96c:	f3bf 8f6f 	isb	sy
 800f970:	e001      	b.n	800f976 <prvProcessTimerOrBlockTask+0x86>
 800f972:	f7ff fa29 	bl	800edc8 <xTaskResumeAll>
 800f976:	bf00      	nop
 800f978:	3710      	adds	r7, #16
 800f97a:	46bd      	mov	sp, r7
 800f97c:	bd80      	pop	{r7, pc}
 800f97e:	bf00      	nop
 800f980:	20006c58 	.word	0x20006c58
 800f984:	20006c5c 	.word	0x20006c5c
 800f988:	e000ed04 	.word	0xe000ed04

0800f98c <prvGetNextExpireTime>:
 800f98c:	b480      	push	{r7}
 800f98e:	b085      	sub	sp, #20
 800f990:	af00      	add	r7, sp, #0
 800f992:	6078      	str	r0, [r7, #4]
 800f994:	4b0e      	ldr	r3, [pc, #56]	; (800f9d0 <prvGetNextExpireTime+0x44>)
 800f996:	681b      	ldr	r3, [r3, #0]
 800f998:	681b      	ldr	r3, [r3, #0]
 800f99a:	2b00      	cmp	r3, #0
 800f99c:	d101      	bne.n	800f9a2 <prvGetNextExpireTime+0x16>
 800f99e:	2201      	movs	r2, #1
 800f9a0:	e000      	b.n	800f9a4 <prvGetNextExpireTime+0x18>
 800f9a2:	2200      	movs	r2, #0
 800f9a4:	687b      	ldr	r3, [r7, #4]
 800f9a6:	601a      	str	r2, [r3, #0]
 800f9a8:	687b      	ldr	r3, [r7, #4]
 800f9aa:	681b      	ldr	r3, [r3, #0]
 800f9ac:	2b00      	cmp	r3, #0
 800f9ae:	d105      	bne.n	800f9bc <prvGetNextExpireTime+0x30>
 800f9b0:	4b07      	ldr	r3, [pc, #28]	; (800f9d0 <prvGetNextExpireTime+0x44>)
 800f9b2:	681b      	ldr	r3, [r3, #0]
 800f9b4:	68db      	ldr	r3, [r3, #12]
 800f9b6:	681b      	ldr	r3, [r3, #0]
 800f9b8:	60fb      	str	r3, [r7, #12]
 800f9ba:	e001      	b.n	800f9c0 <prvGetNextExpireTime+0x34>
 800f9bc:	2300      	movs	r3, #0
 800f9be:	60fb      	str	r3, [r7, #12]
 800f9c0:	68fb      	ldr	r3, [r7, #12]
 800f9c2:	4618      	mov	r0, r3
 800f9c4:	3714      	adds	r7, #20
 800f9c6:	46bd      	mov	sp, r7
 800f9c8:	f85d 7b04 	ldr.w	r7, [sp], #4
 800f9cc:	4770      	bx	lr
 800f9ce:	bf00      	nop
 800f9d0:	20006c54 	.word	0x20006c54

0800f9d4 <prvSampleTimeNow>:
 800f9d4:	b580      	push	{r7, lr}
 800f9d6:	b084      	sub	sp, #16
 800f9d8:	af00      	add	r7, sp, #0
 800f9da:	6078      	str	r0, [r7, #4]
 800f9dc:	f7ff fa90 	bl	800ef00 <xTaskGetTickCount>
 800f9e0:	60f8      	str	r0, [r7, #12]
 800f9e2:	4b0b      	ldr	r3, [pc, #44]	; (800fa10 <prvSampleTimeNow+0x3c>)
 800f9e4:	681b      	ldr	r3, [r3, #0]
 800f9e6:	68fa      	ldr	r2, [r7, #12]
 800f9e8:	429a      	cmp	r2, r3
 800f9ea:	d205      	bcs.n	800f9f8 <prvSampleTimeNow+0x24>
 800f9ec:	f000 f930 	bl	800fc50 <prvSwitchTimerLists>
 800f9f0:	687b      	ldr	r3, [r7, #4]
 800f9f2:	2201      	movs	r2, #1
 800f9f4:	601a      	str	r2, [r3, #0]
 800f9f6:	e002      	b.n	800f9fe <prvSampleTimeNow+0x2a>
 800f9f8:	687b      	ldr	r3, [r7, #4]
 800f9fa:	2200      	movs	r2, #0
 800f9fc:	601a      	str	r2, [r3, #0]
 800f9fe:	4a04      	ldr	r2, [pc, #16]	; (800fa10 <prvSampleTimeNow+0x3c>)
 800fa00:	68fb      	ldr	r3, [r7, #12]
 800fa02:	6013      	str	r3, [r2, #0]
 800fa04:	68fb      	ldr	r3, [r7, #12]
 800fa06:	4618      	mov	r0, r3
 800fa08:	3710      	adds	r7, #16
 800fa0a:	46bd      	mov	sp, r7
 800fa0c:	bd80      	pop	{r7, pc}
 800fa0e:	bf00      	nop
 800fa10:	20006c64 	.word	0x20006c64

0800fa14 <prvInsertTimerInActiveList>:
 800fa14:	b580      	push	{r7, lr}
 800fa16:	b086      	sub	sp, #24
 800fa18:	af00      	add	r7, sp, #0
 800fa1a:	60f8      	str	r0, [r7, #12]
 800fa1c:	60b9      	str	r1, [r7, #8]
 800fa1e:	607a      	str	r2, [r7, #4]
 800fa20:	603b      	str	r3, [r7, #0]
 800fa22:	2300      	movs	r3, #0
 800fa24:	617b      	str	r3, [r7, #20]
 800fa26:	68fb      	ldr	r3, [r7, #12]
 800fa28:	68ba      	ldr	r2, [r7, #8]
 800fa2a:	605a      	str	r2, [r3, #4]
 800fa2c:	68fb      	ldr	r3, [r7, #12]
 800fa2e:	68fa      	ldr	r2, [r7, #12]
 800fa30:	611a      	str	r2, [r3, #16]
 800fa32:	68ba      	ldr	r2, [r7, #8]
 800fa34:	687b      	ldr	r3, [r7, #4]
 800fa36:	429a      	cmp	r2, r3
 800fa38:	d812      	bhi.n	800fa60 <prvInsertTimerInActiveList+0x4c>
 800fa3a:	687a      	ldr	r2, [r7, #4]
 800fa3c:	683b      	ldr	r3, [r7, #0]
 800fa3e:	1ad2      	subs	r2, r2, r3
 800fa40:	68fb      	ldr	r3, [r7, #12]
 800fa42:	699b      	ldr	r3, [r3, #24]
 800fa44:	429a      	cmp	r2, r3
 800fa46:	d302      	bcc.n	800fa4e <prvInsertTimerInActiveList+0x3a>
 800fa48:	2301      	movs	r3, #1
 800fa4a:	617b      	str	r3, [r7, #20]
 800fa4c:	e01b      	b.n	800fa86 <prvInsertTimerInActiveList+0x72>
 800fa4e:	4b10      	ldr	r3, [pc, #64]	; (800fa90 <prvInsertTimerInActiveList+0x7c>)
 800fa50:	681a      	ldr	r2, [r3, #0]
 800fa52:	68fb      	ldr	r3, [r7, #12]
 800fa54:	3304      	adds	r3, #4
 800fa56:	4619      	mov	r1, r3
 800fa58:	4610      	mov	r0, r2
 800fa5a:	f7fe fa3a 	bl	800ded2 <vListInsert>
 800fa5e:	e012      	b.n	800fa86 <prvInsertTimerInActiveList+0x72>
 800fa60:	687a      	ldr	r2, [r7, #4]
 800fa62:	683b      	ldr	r3, [r7, #0]
 800fa64:	429a      	cmp	r2, r3
 800fa66:	d206      	bcs.n	800fa76 <prvInsertTimerInActiveList+0x62>
 800fa68:	68ba      	ldr	r2, [r7, #8]
 800fa6a:	683b      	ldr	r3, [r7, #0]
 800fa6c:	429a      	cmp	r2, r3
 800fa6e:	d302      	bcc.n	800fa76 <prvInsertTimerInActiveList+0x62>
 800fa70:	2301      	movs	r3, #1
 800fa72:	617b      	str	r3, [r7, #20]
 800fa74:	e007      	b.n	800fa86 <prvInsertTimerInActiveList+0x72>
 800fa76:	4b07      	ldr	r3, [pc, #28]	; (800fa94 <prvInsertTimerInActiveList+0x80>)
 800fa78:	681a      	ldr	r2, [r3, #0]
 800fa7a:	68fb      	ldr	r3, [r7, #12]
 800fa7c:	3304      	adds	r3, #4
 800fa7e:	4619      	mov	r1, r3
 800fa80:	4610      	mov	r0, r2
 800fa82:	f7fe fa26 	bl	800ded2 <vListInsert>
 800fa86:	697b      	ldr	r3, [r7, #20]
 800fa88:	4618      	mov	r0, r3
 800fa8a:	3718      	adds	r7, #24
 800fa8c:	46bd      	mov	sp, r7
 800fa8e:	bd80      	pop	{r7, pc}
 800fa90:	20006c58 	.word	0x20006c58
 800fa94:	20006c54 	.word	0x20006c54

0800fa98 <prvProcessReceivedCommands>:
 800fa98:	b580      	push	{r7, lr}
 800fa9a:	b08e      	sub	sp, #56	; 0x38
 800fa9c:	af02      	add	r7, sp, #8
 800fa9e:	e0c6      	b.n	800fc2e <prvProcessReceivedCommands+0x196>
 800faa0:	687b      	ldr	r3, [r7, #4]
 800faa2:	2b00      	cmp	r3, #0
 800faa4:	da17      	bge.n	800fad6 <prvProcessReceivedCommands+0x3e>
 800faa6:	1d3b      	adds	r3, r7, #4
 800faa8:	3304      	adds	r3, #4
 800faaa:	62fb      	str	r3, [r7, #44]	; 0x2c
 800faac:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800faae:	2b00      	cmp	r3, #0
 800fab0:	d109      	bne.n	800fac6 <prvProcessReceivedCommands+0x2e>
 800fab2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fab6:	f383 8811 	msr	BASEPRI, r3
 800faba:	f3bf 8f6f 	isb	sy
 800fabe:	f3bf 8f4f 	dsb	sy
 800fac2:	61fb      	str	r3, [r7, #28]
 800fac4:	e7fe      	b.n	800fac4 <prvProcessReceivedCommands+0x2c>
 800fac6:	6afb      	ldr	r3, [r7, #44]	; 0x2c
 800fac8:	681b      	ldr	r3, [r3, #0]
 800faca:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800facc:	6850      	ldr	r0, [r2, #4]
 800face:	6afa      	ldr	r2, [r7, #44]	; 0x2c
 800fad0:	6892      	ldr	r2, [r2, #8]
 800fad2:	4611      	mov	r1, r2
 800fad4:	4798      	blx	r3
 800fad6:	687b      	ldr	r3, [r7, #4]
 800fad8:	2b00      	cmp	r3, #0
 800fada:	f2c0 80a7 	blt.w	800fc2c <prvProcessReceivedCommands+0x194>
 800fade:	68fb      	ldr	r3, [r7, #12]
 800fae0:	62bb      	str	r3, [r7, #40]	; 0x28
 800fae2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fae4:	695b      	ldr	r3, [r3, #20]
 800fae6:	2b00      	cmp	r3, #0
 800fae8:	d004      	beq.n	800faf4 <prvProcessReceivedCommands+0x5c>
 800faea:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800faec:	3304      	adds	r3, #4
 800faee:	4618      	mov	r0, r3
 800faf0:	f7fe fa28 	bl	800df44 <uxListRemove>
 800faf4:	463b      	mov	r3, r7
 800faf6:	4618      	mov	r0, r3
 800faf8:	f7ff ff6c 	bl	800f9d4 <prvSampleTimeNow>
 800fafc:	6278      	str	r0, [r7, #36]	; 0x24
 800fafe:	687b      	ldr	r3, [r7, #4]
 800fb00:	2b09      	cmp	r3, #9
 800fb02:	f200 8094 	bhi.w	800fc2e <prvProcessReceivedCommands+0x196>
 800fb06:	a201      	add	r2, pc, #4	; (adr r2, 800fb0c <prvProcessReceivedCommands+0x74>)
 800fb08:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 800fb0c:	0800fb35 	.word	0x0800fb35
 800fb10:	0800fb35 	.word	0x0800fb35
 800fb14:	0800fb35 	.word	0x0800fb35
 800fb18:	0800fba7 	.word	0x0800fba7
 800fb1c:	0800fbbb 	.word	0x0800fbbb
 800fb20:	0800fc03 	.word	0x0800fc03
 800fb24:	0800fb35 	.word	0x0800fb35
 800fb28:	0800fb35 	.word	0x0800fb35
 800fb2c:	0800fba7 	.word	0x0800fba7
 800fb30:	0800fbbb 	.word	0x0800fbbb
 800fb34:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fb36:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800fb3a:	f043 0301 	orr.w	r3, r3, #1
 800fb3e:	b2da      	uxtb	r2, r3
 800fb40:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fb42:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800fb46:	68ba      	ldr	r2, [r7, #8]
 800fb48:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fb4a:	699b      	ldr	r3, [r3, #24]
 800fb4c:	18d1      	adds	r1, r2, r3
 800fb4e:	68bb      	ldr	r3, [r7, #8]
 800fb50:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800fb52:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800fb54:	f7ff ff5e 	bl	800fa14 <prvInsertTimerInActiveList>
 800fb58:	4603      	mov	r3, r0
 800fb5a:	2b00      	cmp	r3, #0
 800fb5c:	d067      	beq.n	800fc2e <prvProcessReceivedCommands+0x196>
 800fb5e:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fb60:	6a1b      	ldr	r3, [r3, #32]
 800fb62:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800fb64:	4798      	blx	r3
 800fb66:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fb68:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800fb6c:	f003 0304 	and.w	r3, r3, #4
 800fb70:	2b00      	cmp	r3, #0
 800fb72:	d05c      	beq.n	800fc2e <prvProcessReceivedCommands+0x196>
 800fb74:	68ba      	ldr	r2, [r7, #8]
 800fb76:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fb78:	699b      	ldr	r3, [r3, #24]
 800fb7a:	441a      	add	r2, r3
 800fb7c:	2300      	movs	r3, #0
 800fb7e:	9300      	str	r3, [sp, #0]
 800fb80:	2300      	movs	r3, #0
 800fb82:	2100      	movs	r1, #0
 800fb84:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800fb86:	f7ff fe09 	bl	800f79c <xTimerGenericCommand>
 800fb8a:	6238      	str	r0, [r7, #32]
 800fb8c:	6a3b      	ldr	r3, [r7, #32]
 800fb8e:	2b00      	cmp	r3, #0
 800fb90:	d14d      	bne.n	800fc2e <prvProcessReceivedCommands+0x196>
 800fb92:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fb96:	f383 8811 	msr	BASEPRI, r3
 800fb9a:	f3bf 8f6f 	isb	sy
 800fb9e:	f3bf 8f4f 	dsb	sy
 800fba2:	61bb      	str	r3, [r7, #24]
 800fba4:	e7fe      	b.n	800fba4 <prvProcessReceivedCommands+0x10c>
 800fba6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fba8:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800fbac:	f023 0301 	bic.w	r3, r3, #1
 800fbb0:	b2da      	uxtb	r2, r3
 800fbb2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fbb4:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800fbb8:	e039      	b.n	800fc2e <prvProcessReceivedCommands+0x196>
 800fbba:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fbbc:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800fbc0:	f043 0301 	orr.w	r3, r3, #1
 800fbc4:	b2da      	uxtb	r2, r3
 800fbc6:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fbc8:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800fbcc:	68ba      	ldr	r2, [r7, #8]
 800fbce:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fbd0:	619a      	str	r2, [r3, #24]
 800fbd2:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fbd4:	699b      	ldr	r3, [r3, #24]
 800fbd6:	2b00      	cmp	r3, #0
 800fbd8:	d109      	bne.n	800fbee <prvProcessReceivedCommands+0x156>
 800fbda:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fbde:	f383 8811 	msr	BASEPRI, r3
 800fbe2:	f3bf 8f6f 	isb	sy
 800fbe6:	f3bf 8f4f 	dsb	sy
 800fbea:	617b      	str	r3, [r7, #20]
 800fbec:	e7fe      	b.n	800fbec <prvProcessReceivedCommands+0x154>
 800fbee:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fbf0:	699a      	ldr	r2, [r3, #24]
 800fbf2:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fbf4:	18d1      	adds	r1, r2, r3
 800fbf6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 800fbf8:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 800fbfa:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800fbfc:	f7ff ff0a 	bl	800fa14 <prvInsertTimerInActiveList>
 800fc00:	e015      	b.n	800fc2e <prvProcessReceivedCommands+0x196>
 800fc02:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fc04:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800fc08:	f003 0302 	and.w	r3, r3, #2
 800fc0c:	2b00      	cmp	r3, #0
 800fc0e:	d103      	bne.n	800fc18 <prvProcessReceivedCommands+0x180>
 800fc10:	6ab8      	ldr	r0, [r7, #40]	; 0x28
 800fc12:	f000 fbc7 	bl	80103a4 <vPortFree>
 800fc16:	e00a      	b.n	800fc2e <prvProcessReceivedCommands+0x196>
 800fc18:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fc1a:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800fc1e:	f023 0301 	bic.w	r3, r3, #1
 800fc22:	b2da      	uxtb	r2, r3
 800fc24:	6abb      	ldr	r3, [r7, #40]	; 0x28
 800fc26:	f883 2028 	strb.w	r2, [r3, #40]	; 0x28
 800fc2a:	e000      	b.n	800fc2e <prvProcessReceivedCommands+0x196>
 800fc2c:	bf00      	nop
 800fc2e:	4b07      	ldr	r3, [pc, #28]	; (800fc4c <prvProcessReceivedCommands+0x1b4>)
 800fc30:	681b      	ldr	r3, [r3, #0]
 800fc32:	1d39      	adds	r1, r7, #4
 800fc34:	2200      	movs	r2, #0
 800fc36:	4618      	mov	r0, r3
 800fc38:	f7fe fc3a 	bl	800e4b0 <xQueueReceive>
 800fc3c:	4603      	mov	r3, r0
 800fc3e:	2b00      	cmp	r3, #0
 800fc40:	f47f af2e 	bne.w	800faa0 <prvProcessReceivedCommands+0x8>
 800fc44:	bf00      	nop
 800fc46:	3730      	adds	r7, #48	; 0x30
 800fc48:	46bd      	mov	sp, r7
 800fc4a:	bd80      	pop	{r7, pc}
 800fc4c:	20006c5c 	.word	0x20006c5c

0800fc50 <prvSwitchTimerLists>:
 800fc50:	b580      	push	{r7, lr}
 800fc52:	b088      	sub	sp, #32
 800fc54:	af02      	add	r7, sp, #8
 800fc56:	e047      	b.n	800fce8 <prvSwitchTimerLists+0x98>
 800fc58:	4b2d      	ldr	r3, [pc, #180]	; (800fd10 <prvSwitchTimerLists+0xc0>)
 800fc5a:	681b      	ldr	r3, [r3, #0]
 800fc5c:	68db      	ldr	r3, [r3, #12]
 800fc5e:	681b      	ldr	r3, [r3, #0]
 800fc60:	613b      	str	r3, [r7, #16]
 800fc62:	4b2b      	ldr	r3, [pc, #172]	; (800fd10 <prvSwitchTimerLists+0xc0>)
 800fc64:	681b      	ldr	r3, [r3, #0]
 800fc66:	68db      	ldr	r3, [r3, #12]
 800fc68:	68db      	ldr	r3, [r3, #12]
 800fc6a:	60fb      	str	r3, [r7, #12]
 800fc6c:	68fb      	ldr	r3, [r7, #12]
 800fc6e:	3304      	adds	r3, #4
 800fc70:	4618      	mov	r0, r3
 800fc72:	f7fe f967 	bl	800df44 <uxListRemove>
 800fc76:	68fb      	ldr	r3, [r7, #12]
 800fc78:	6a1b      	ldr	r3, [r3, #32]
 800fc7a:	68f8      	ldr	r0, [r7, #12]
 800fc7c:	4798      	blx	r3
 800fc7e:	68fb      	ldr	r3, [r7, #12]
 800fc80:	f893 3028 	ldrb.w	r3, [r3, #40]	; 0x28
 800fc84:	f003 0304 	and.w	r3, r3, #4
 800fc88:	2b00      	cmp	r3, #0
 800fc8a:	d02d      	beq.n	800fce8 <prvSwitchTimerLists+0x98>
 800fc8c:	68fb      	ldr	r3, [r7, #12]
 800fc8e:	699b      	ldr	r3, [r3, #24]
 800fc90:	693a      	ldr	r2, [r7, #16]
 800fc92:	4413      	add	r3, r2
 800fc94:	60bb      	str	r3, [r7, #8]
 800fc96:	68ba      	ldr	r2, [r7, #8]
 800fc98:	693b      	ldr	r3, [r7, #16]
 800fc9a:	429a      	cmp	r2, r3
 800fc9c:	d90e      	bls.n	800fcbc <prvSwitchTimerLists+0x6c>
 800fc9e:	68fb      	ldr	r3, [r7, #12]
 800fca0:	68ba      	ldr	r2, [r7, #8]
 800fca2:	605a      	str	r2, [r3, #4]
 800fca4:	68fb      	ldr	r3, [r7, #12]
 800fca6:	68fa      	ldr	r2, [r7, #12]
 800fca8:	611a      	str	r2, [r3, #16]
 800fcaa:	4b19      	ldr	r3, [pc, #100]	; (800fd10 <prvSwitchTimerLists+0xc0>)
 800fcac:	681a      	ldr	r2, [r3, #0]
 800fcae:	68fb      	ldr	r3, [r7, #12]
 800fcb0:	3304      	adds	r3, #4
 800fcb2:	4619      	mov	r1, r3
 800fcb4:	4610      	mov	r0, r2
 800fcb6:	f7fe f90c 	bl	800ded2 <vListInsert>
 800fcba:	e015      	b.n	800fce8 <prvSwitchTimerLists+0x98>
 800fcbc:	2300      	movs	r3, #0
 800fcbe:	9300      	str	r3, [sp, #0]
 800fcc0:	2300      	movs	r3, #0
 800fcc2:	693a      	ldr	r2, [r7, #16]
 800fcc4:	2100      	movs	r1, #0
 800fcc6:	68f8      	ldr	r0, [r7, #12]
 800fcc8:	f7ff fd68 	bl	800f79c <xTimerGenericCommand>
 800fccc:	6078      	str	r0, [r7, #4]
 800fcce:	687b      	ldr	r3, [r7, #4]
 800fcd0:	2b00      	cmp	r3, #0
 800fcd2:	d109      	bne.n	800fce8 <prvSwitchTimerLists+0x98>
 800fcd4:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fcd8:	f383 8811 	msr	BASEPRI, r3
 800fcdc:	f3bf 8f6f 	isb	sy
 800fce0:	f3bf 8f4f 	dsb	sy
 800fce4:	603b      	str	r3, [r7, #0]
 800fce6:	e7fe      	b.n	800fce6 <prvSwitchTimerLists+0x96>
 800fce8:	4b09      	ldr	r3, [pc, #36]	; (800fd10 <prvSwitchTimerLists+0xc0>)
 800fcea:	681b      	ldr	r3, [r3, #0]
 800fcec:	681b      	ldr	r3, [r3, #0]
 800fcee:	2b00      	cmp	r3, #0
 800fcf0:	d1b2      	bne.n	800fc58 <prvSwitchTimerLists+0x8>
 800fcf2:	4b07      	ldr	r3, [pc, #28]	; (800fd10 <prvSwitchTimerLists+0xc0>)
 800fcf4:	681b      	ldr	r3, [r3, #0]
 800fcf6:	617b      	str	r3, [r7, #20]
 800fcf8:	4b06      	ldr	r3, [pc, #24]	; (800fd14 <prvSwitchTimerLists+0xc4>)
 800fcfa:	681b      	ldr	r3, [r3, #0]
 800fcfc:	4a04      	ldr	r2, [pc, #16]	; (800fd10 <prvSwitchTimerLists+0xc0>)
 800fcfe:	6013      	str	r3, [r2, #0]
 800fd00:	4a04      	ldr	r2, [pc, #16]	; (800fd14 <prvSwitchTimerLists+0xc4>)
 800fd02:	697b      	ldr	r3, [r7, #20]
 800fd04:	6013      	str	r3, [r2, #0]
 800fd06:	bf00      	nop
 800fd08:	3718      	adds	r7, #24
 800fd0a:	46bd      	mov	sp, r7
 800fd0c:	bd80      	pop	{r7, pc}
 800fd0e:	bf00      	nop
 800fd10:	20006c54 	.word	0x20006c54
 800fd14:	20006c58 	.word	0x20006c58

0800fd18 <prvCheckForValidListAndQueue>:
 800fd18:	b580      	push	{r7, lr}
 800fd1a:	b082      	sub	sp, #8
 800fd1c:	af02      	add	r7, sp, #8
 800fd1e:	f000 f965 	bl	800ffec <vPortEnterCritical>
 800fd22:	4b15      	ldr	r3, [pc, #84]	; (800fd78 <prvCheckForValidListAndQueue+0x60>)
 800fd24:	681b      	ldr	r3, [r3, #0]
 800fd26:	2b00      	cmp	r3, #0
 800fd28:	d120      	bne.n	800fd6c <prvCheckForValidListAndQueue+0x54>
 800fd2a:	4814      	ldr	r0, [pc, #80]	; (800fd7c <prvCheckForValidListAndQueue+0x64>)
 800fd2c:	f7fe f880 	bl	800de30 <vListInitialise>
 800fd30:	4813      	ldr	r0, [pc, #76]	; (800fd80 <prvCheckForValidListAndQueue+0x68>)
 800fd32:	f7fe f87d 	bl	800de30 <vListInitialise>
 800fd36:	4b13      	ldr	r3, [pc, #76]	; (800fd84 <prvCheckForValidListAndQueue+0x6c>)
 800fd38:	4a10      	ldr	r2, [pc, #64]	; (800fd7c <prvCheckForValidListAndQueue+0x64>)
 800fd3a:	601a      	str	r2, [r3, #0]
 800fd3c:	4b12      	ldr	r3, [pc, #72]	; (800fd88 <prvCheckForValidListAndQueue+0x70>)
 800fd3e:	4a10      	ldr	r2, [pc, #64]	; (800fd80 <prvCheckForValidListAndQueue+0x68>)
 800fd40:	601a      	str	r2, [r3, #0]
 800fd42:	2300      	movs	r3, #0
 800fd44:	9300      	str	r3, [sp, #0]
 800fd46:	4b11      	ldr	r3, [pc, #68]	; (800fd8c <prvCheckForValidListAndQueue+0x74>)
 800fd48:	4a11      	ldr	r2, [pc, #68]	; (800fd90 <prvCheckForValidListAndQueue+0x78>)
 800fd4a:	2110      	movs	r1, #16
 800fd4c:	200a      	movs	r0, #10
 800fd4e:	f7fe f98b 	bl	800e068 <xQueueGenericCreateStatic>
 800fd52:	4602      	mov	r2, r0
 800fd54:	4b08      	ldr	r3, [pc, #32]	; (800fd78 <prvCheckForValidListAndQueue+0x60>)
 800fd56:	601a      	str	r2, [r3, #0]
 800fd58:	4b07      	ldr	r3, [pc, #28]	; (800fd78 <prvCheckForValidListAndQueue+0x60>)
 800fd5a:	681b      	ldr	r3, [r3, #0]
 800fd5c:	2b00      	cmp	r3, #0
 800fd5e:	d005      	beq.n	800fd6c <prvCheckForValidListAndQueue+0x54>
 800fd60:	4b05      	ldr	r3, [pc, #20]	; (800fd78 <prvCheckForValidListAndQueue+0x60>)
 800fd62:	681b      	ldr	r3, [r3, #0]
 800fd64:	490b      	ldr	r1, [pc, #44]	; (800fd94 <prvCheckForValidListAndQueue+0x7c>)
 800fd66:	4618      	mov	r0, r3
 800fd68:	f7fe fd8e 	bl	800e888 <vQueueAddToRegistry>
 800fd6c:	f000 f96c 	bl	8010048 <vPortExitCritical>
 800fd70:	bf00      	nop
 800fd72:	46bd      	mov	sp, r7
 800fd74:	bd80      	pop	{r7, pc}
 800fd76:	bf00      	nop
 800fd78:	20006c5c 	.word	0x20006c5c
 800fd7c:	20006c2c 	.word	0x20006c2c
 800fd80:	20006c40 	.word	0x20006c40
 800fd84:	20006c54 	.word	0x20006c54
 800fd88:	20006c58 	.word	0x20006c58
 800fd8c:	20006d08 	.word	0x20006d08
 800fd90:	20006c68 	.word	0x20006c68
 800fd94:	080162e4 	.word	0x080162e4

0800fd98 <pxPortInitialiseStack>:
 800fd98:	b480      	push	{r7}
 800fd9a:	b085      	sub	sp, #20
 800fd9c:	af00      	add	r7, sp, #0
 800fd9e:	60f8      	str	r0, [r7, #12]
 800fda0:	60b9      	str	r1, [r7, #8]
 800fda2:	607a      	str	r2, [r7, #4]
 800fda4:	68fb      	ldr	r3, [r7, #12]
 800fda6:	3b04      	subs	r3, #4
 800fda8:	60fb      	str	r3, [r7, #12]
 800fdaa:	68fb      	ldr	r3, [r7, #12]
 800fdac:	f04f 7280 	mov.w	r2, #16777216	; 0x1000000
 800fdb0:	601a      	str	r2, [r3, #0]
 800fdb2:	68fb      	ldr	r3, [r7, #12]
 800fdb4:	3b04      	subs	r3, #4
 800fdb6:	60fb      	str	r3, [r7, #12]
 800fdb8:	68bb      	ldr	r3, [r7, #8]
 800fdba:	f023 0201 	bic.w	r2, r3, #1
 800fdbe:	68fb      	ldr	r3, [r7, #12]
 800fdc0:	601a      	str	r2, [r3, #0]
 800fdc2:	68fb      	ldr	r3, [r7, #12]
 800fdc4:	3b04      	subs	r3, #4
 800fdc6:	60fb      	str	r3, [r7, #12]
 800fdc8:	4a0c      	ldr	r2, [pc, #48]	; (800fdfc <pxPortInitialiseStack+0x64>)
 800fdca:	68fb      	ldr	r3, [r7, #12]
 800fdcc:	601a      	str	r2, [r3, #0]
 800fdce:	68fb      	ldr	r3, [r7, #12]
 800fdd0:	3b14      	subs	r3, #20
 800fdd2:	60fb      	str	r3, [r7, #12]
 800fdd4:	687a      	ldr	r2, [r7, #4]
 800fdd6:	68fb      	ldr	r3, [r7, #12]
 800fdd8:	601a      	str	r2, [r3, #0]
 800fdda:	68fb      	ldr	r3, [r7, #12]
 800fddc:	3b04      	subs	r3, #4
 800fdde:	60fb      	str	r3, [r7, #12]
 800fde0:	68fb      	ldr	r3, [r7, #12]
 800fde2:	f06f 0202 	mvn.w	r2, #2
 800fde6:	601a      	str	r2, [r3, #0]
 800fde8:	68fb      	ldr	r3, [r7, #12]
 800fdea:	3b20      	subs	r3, #32
 800fdec:	60fb      	str	r3, [r7, #12]
 800fdee:	68fb      	ldr	r3, [r7, #12]
 800fdf0:	4618      	mov	r0, r3
 800fdf2:	3714      	adds	r7, #20
 800fdf4:	46bd      	mov	sp, r7
 800fdf6:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fdfa:	4770      	bx	lr
 800fdfc:	0800fe01 	.word	0x0800fe01

0800fe00 <prvTaskExitError>:
 800fe00:	b480      	push	{r7}
 800fe02:	b085      	sub	sp, #20
 800fe04:	af00      	add	r7, sp, #0
 800fe06:	2300      	movs	r3, #0
 800fe08:	607b      	str	r3, [r7, #4]
 800fe0a:	4b11      	ldr	r3, [pc, #68]	; (800fe50 <prvTaskExitError+0x50>)
 800fe0c:	681b      	ldr	r3, [r3, #0]
 800fe0e:	f1b3 3fff 	cmp.w	r3, #4294967295
 800fe12:	d009      	beq.n	800fe28 <prvTaskExitError+0x28>
 800fe14:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe18:	f383 8811 	msr	BASEPRI, r3
 800fe1c:	f3bf 8f6f 	isb	sy
 800fe20:	f3bf 8f4f 	dsb	sy
 800fe24:	60fb      	str	r3, [r7, #12]
 800fe26:	e7fe      	b.n	800fe26 <prvTaskExitError+0x26>
 800fe28:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fe2c:	f383 8811 	msr	BASEPRI, r3
 800fe30:	f3bf 8f6f 	isb	sy
 800fe34:	f3bf 8f4f 	dsb	sy
 800fe38:	60bb      	str	r3, [r7, #8]
 800fe3a:	bf00      	nop
 800fe3c:	687b      	ldr	r3, [r7, #4]
 800fe3e:	2b00      	cmp	r3, #0
 800fe40:	d0fc      	beq.n	800fe3c <prvTaskExitError+0x3c>
 800fe42:	bf00      	nop
 800fe44:	3714      	adds	r7, #20
 800fe46:	46bd      	mov	sp, r7
 800fe48:	f85d 7b04 	ldr.w	r7, [sp], #4
 800fe4c:	4770      	bx	lr
 800fe4e:	bf00      	nop
 800fe50:	20000018 	.word	0x20000018
	...

0800fe60 <SVC_Handler>:
 800fe60:	4b07      	ldr	r3, [pc, #28]	; (800fe80 <pxCurrentTCBConst2>)
 800fe62:	6819      	ldr	r1, [r3, #0]
 800fe64:	6808      	ldr	r0, [r1, #0]
 800fe66:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 800fe6a:	f380 8809 	msr	PSP, r0
 800fe6e:	f3bf 8f6f 	isb	sy
 800fe72:	f04f 0000 	mov.w	r0, #0
 800fe76:	f380 8811 	msr	BASEPRI, r0
 800fe7a:	4770      	bx	lr
 800fe7c:	f3af 8000 	nop.w

0800fe80 <pxCurrentTCBConst2>:
 800fe80:	2000672c 	.word	0x2000672c
 800fe84:	bf00      	nop
 800fe86:	bf00      	nop

0800fe88 <prvPortStartFirstTask>:
 800fe88:	4808      	ldr	r0, [pc, #32]	; (800feac <prvPortStartFirstTask+0x24>)
 800fe8a:	6800      	ldr	r0, [r0, #0]
 800fe8c:	6800      	ldr	r0, [r0, #0]
 800fe8e:	f380 8808 	msr	MSP, r0
 800fe92:	f04f 0000 	mov.w	r0, #0
 800fe96:	f380 8814 	msr	CONTROL, r0
 800fe9a:	b662      	cpsie	i
 800fe9c:	b661      	cpsie	f
 800fe9e:	f3bf 8f4f 	dsb	sy
 800fea2:	f3bf 8f6f 	isb	sy
 800fea6:	df00      	svc	0
 800fea8:	bf00      	nop
 800feaa:	bf00      	nop
 800feac:	e000ed08 	.word	0xe000ed08

0800feb0 <xPortStartScheduler>:
 800feb0:	b580      	push	{r7, lr}
 800feb2:	b086      	sub	sp, #24
 800feb4:	af00      	add	r7, sp, #0
 800feb6:	4b44      	ldr	r3, [pc, #272]	; (800ffc8 <xPortStartScheduler+0x118>)
 800feb8:	681b      	ldr	r3, [r3, #0]
 800feba:	4a44      	ldr	r2, [pc, #272]	; (800ffcc <xPortStartScheduler+0x11c>)
 800febc:	4293      	cmp	r3, r2
 800febe:	d109      	bne.n	800fed4 <xPortStartScheduler+0x24>
 800fec0:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fec4:	f383 8811 	msr	BASEPRI, r3
 800fec8:	f3bf 8f6f 	isb	sy
 800fecc:	f3bf 8f4f 	dsb	sy
 800fed0:	613b      	str	r3, [r7, #16]
 800fed2:	e7fe      	b.n	800fed2 <xPortStartScheduler+0x22>
 800fed4:	4b3c      	ldr	r3, [pc, #240]	; (800ffc8 <xPortStartScheduler+0x118>)
 800fed6:	681b      	ldr	r3, [r3, #0]
 800fed8:	4a3d      	ldr	r2, [pc, #244]	; (800ffd0 <xPortStartScheduler+0x120>)
 800feda:	4293      	cmp	r3, r2
 800fedc:	d109      	bne.n	800fef2 <xPortStartScheduler+0x42>
 800fede:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fee2:	f383 8811 	msr	BASEPRI, r3
 800fee6:	f3bf 8f6f 	isb	sy
 800feea:	f3bf 8f4f 	dsb	sy
 800feee:	60fb      	str	r3, [r7, #12]
 800fef0:	e7fe      	b.n	800fef0 <xPortStartScheduler+0x40>
 800fef2:	4b38      	ldr	r3, [pc, #224]	; (800ffd4 <xPortStartScheduler+0x124>)
 800fef4:	617b      	str	r3, [r7, #20]
 800fef6:	697b      	ldr	r3, [r7, #20]
 800fef8:	781b      	ldrb	r3, [r3, #0]
 800fefa:	b2db      	uxtb	r3, r3
 800fefc:	607b      	str	r3, [r7, #4]
 800fefe:	697b      	ldr	r3, [r7, #20]
 800ff00:	22ff      	movs	r2, #255	; 0xff
 800ff02:	701a      	strb	r2, [r3, #0]
 800ff04:	697b      	ldr	r3, [r7, #20]
 800ff06:	781b      	ldrb	r3, [r3, #0]
 800ff08:	b2db      	uxtb	r3, r3
 800ff0a:	70fb      	strb	r3, [r7, #3]
 800ff0c:	78fb      	ldrb	r3, [r7, #3]
 800ff0e:	b2db      	uxtb	r3, r3
 800ff10:	f003 0350 	and.w	r3, r3, #80	; 0x50
 800ff14:	b2da      	uxtb	r2, r3
 800ff16:	4b30      	ldr	r3, [pc, #192]	; (800ffd8 <xPortStartScheduler+0x128>)
 800ff18:	701a      	strb	r2, [r3, #0]
 800ff1a:	4b30      	ldr	r3, [pc, #192]	; (800ffdc <xPortStartScheduler+0x12c>)
 800ff1c:	2207      	movs	r2, #7
 800ff1e:	601a      	str	r2, [r3, #0]
 800ff20:	e009      	b.n	800ff36 <xPortStartScheduler+0x86>
 800ff22:	4b2e      	ldr	r3, [pc, #184]	; (800ffdc <xPortStartScheduler+0x12c>)
 800ff24:	681b      	ldr	r3, [r3, #0]
 800ff26:	3b01      	subs	r3, #1
 800ff28:	4a2c      	ldr	r2, [pc, #176]	; (800ffdc <xPortStartScheduler+0x12c>)
 800ff2a:	6013      	str	r3, [r2, #0]
 800ff2c:	78fb      	ldrb	r3, [r7, #3]
 800ff2e:	b2db      	uxtb	r3, r3
 800ff30:	005b      	lsls	r3, r3, #1
 800ff32:	b2db      	uxtb	r3, r3
 800ff34:	70fb      	strb	r3, [r7, #3]
 800ff36:	78fb      	ldrb	r3, [r7, #3]
 800ff38:	b2db      	uxtb	r3, r3
 800ff3a:	f003 0380 	and.w	r3, r3, #128	; 0x80
 800ff3e:	2b80      	cmp	r3, #128	; 0x80
 800ff40:	d0ef      	beq.n	800ff22 <xPortStartScheduler+0x72>
 800ff42:	4b26      	ldr	r3, [pc, #152]	; (800ffdc <xPortStartScheduler+0x12c>)
 800ff44:	681b      	ldr	r3, [r3, #0]
 800ff46:	f1c3 0307 	rsb	r3, r3, #7
 800ff4a:	2b04      	cmp	r3, #4
 800ff4c:	d009      	beq.n	800ff62 <xPortStartScheduler+0xb2>
 800ff4e:	f04f 0350 	mov.w	r3, #80	; 0x50
 800ff52:	f383 8811 	msr	BASEPRI, r3
 800ff56:	f3bf 8f6f 	isb	sy
 800ff5a:	f3bf 8f4f 	dsb	sy
 800ff5e:	60bb      	str	r3, [r7, #8]
 800ff60:	e7fe      	b.n	800ff60 <xPortStartScheduler+0xb0>
 800ff62:	4b1e      	ldr	r3, [pc, #120]	; (800ffdc <xPortStartScheduler+0x12c>)
 800ff64:	681b      	ldr	r3, [r3, #0]
 800ff66:	021b      	lsls	r3, r3, #8
 800ff68:	4a1c      	ldr	r2, [pc, #112]	; (800ffdc <xPortStartScheduler+0x12c>)
 800ff6a:	6013      	str	r3, [r2, #0]
 800ff6c:	4b1b      	ldr	r3, [pc, #108]	; (800ffdc <xPortStartScheduler+0x12c>)
 800ff6e:	681b      	ldr	r3, [r3, #0]
 800ff70:	f403 63e0 	and.w	r3, r3, #1792	; 0x700
 800ff74:	4a19      	ldr	r2, [pc, #100]	; (800ffdc <xPortStartScheduler+0x12c>)
 800ff76:	6013      	str	r3, [r2, #0]
 800ff78:	687b      	ldr	r3, [r7, #4]
 800ff7a:	b2da      	uxtb	r2, r3
 800ff7c:	697b      	ldr	r3, [r7, #20]
 800ff7e:	701a      	strb	r2, [r3, #0]
 800ff80:	4b17      	ldr	r3, [pc, #92]	; (800ffe0 <xPortStartScheduler+0x130>)
 800ff82:	681b      	ldr	r3, [r3, #0]
 800ff84:	4a16      	ldr	r2, [pc, #88]	; (800ffe0 <xPortStartScheduler+0x130>)
 800ff86:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 800ff8a:	6013      	str	r3, [r2, #0]
 800ff8c:	4b14      	ldr	r3, [pc, #80]	; (800ffe0 <xPortStartScheduler+0x130>)
 800ff8e:	681b      	ldr	r3, [r3, #0]
 800ff90:	4a13      	ldr	r2, [pc, #76]	; (800ffe0 <xPortStartScheduler+0x130>)
 800ff92:	f043 4370 	orr.w	r3, r3, #4026531840	; 0xf0000000
 800ff96:	6013      	str	r3, [r2, #0]
 800ff98:	f000 f8d6 	bl	8010148 <vPortSetupTimerInterrupt>
 800ff9c:	4b11      	ldr	r3, [pc, #68]	; (800ffe4 <xPortStartScheduler+0x134>)
 800ff9e:	2200      	movs	r2, #0
 800ffa0:	601a      	str	r2, [r3, #0]
 800ffa2:	f000 f8f5 	bl	8010190 <vPortEnableVFP>
 800ffa6:	4b10      	ldr	r3, [pc, #64]	; (800ffe8 <xPortStartScheduler+0x138>)
 800ffa8:	681b      	ldr	r3, [r3, #0]
 800ffaa:	4a0f      	ldr	r2, [pc, #60]	; (800ffe8 <xPortStartScheduler+0x138>)
 800ffac:	f043 4340 	orr.w	r3, r3, #3221225472	; 0xc0000000
 800ffb0:	6013      	str	r3, [r2, #0]
 800ffb2:	f7ff ff69 	bl	800fe88 <prvPortStartFirstTask>
 800ffb6:	f7ff f86b 	bl	800f090 <vTaskSwitchContext>
 800ffba:	f7ff ff21 	bl	800fe00 <prvTaskExitError>
 800ffbe:	2300      	movs	r3, #0
 800ffc0:	4618      	mov	r0, r3
 800ffc2:	3718      	adds	r7, #24
 800ffc4:	46bd      	mov	sp, r7
 800ffc6:	bd80      	pop	{r7, pc}
 800ffc8:	e000ed00 	.word	0xe000ed00
 800ffcc:	410fc271 	.word	0x410fc271
 800ffd0:	410fc270 	.word	0x410fc270
 800ffd4:	e000e400 	.word	0xe000e400
 800ffd8:	20006d58 	.word	0x20006d58
 800ffdc:	20006d5c 	.word	0x20006d5c
 800ffe0:	e000ed20 	.word	0xe000ed20
 800ffe4:	20000018 	.word	0x20000018
 800ffe8:	e000ef34 	.word	0xe000ef34

0800ffec <vPortEnterCritical>:
 800ffec:	b480      	push	{r7}
 800ffee:	b083      	sub	sp, #12
 800fff0:	af00      	add	r7, sp, #0
 800fff2:	f04f 0350 	mov.w	r3, #80	; 0x50
 800fff6:	f383 8811 	msr	BASEPRI, r3
 800fffa:	f3bf 8f6f 	isb	sy
 800fffe:	f3bf 8f4f 	dsb	sy
 8010002:	607b      	str	r3, [r7, #4]
 8010004:	4b0e      	ldr	r3, [pc, #56]	; (8010040 <vPortEnterCritical+0x54>)
 8010006:	681b      	ldr	r3, [r3, #0]
 8010008:	3301      	adds	r3, #1
 801000a:	4a0d      	ldr	r2, [pc, #52]	; (8010040 <vPortEnterCritical+0x54>)
 801000c:	6013      	str	r3, [r2, #0]
 801000e:	4b0c      	ldr	r3, [pc, #48]	; (8010040 <vPortEnterCritical+0x54>)
 8010010:	681b      	ldr	r3, [r3, #0]
 8010012:	2b01      	cmp	r3, #1
 8010014:	d10e      	bne.n	8010034 <vPortEnterCritical+0x48>
 8010016:	4b0b      	ldr	r3, [pc, #44]	; (8010044 <vPortEnterCritical+0x58>)
 8010018:	681b      	ldr	r3, [r3, #0]
 801001a:	b2db      	uxtb	r3, r3
 801001c:	2b00      	cmp	r3, #0
 801001e:	d009      	beq.n	8010034 <vPortEnterCritical+0x48>
 8010020:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010024:	f383 8811 	msr	BASEPRI, r3
 8010028:	f3bf 8f6f 	isb	sy
 801002c:	f3bf 8f4f 	dsb	sy
 8010030:	603b      	str	r3, [r7, #0]
 8010032:	e7fe      	b.n	8010032 <vPortEnterCritical+0x46>
 8010034:	bf00      	nop
 8010036:	370c      	adds	r7, #12
 8010038:	46bd      	mov	sp, r7
 801003a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801003e:	4770      	bx	lr
 8010040:	20000018 	.word	0x20000018
 8010044:	e000ed04 	.word	0xe000ed04

08010048 <vPortExitCritical>:
 8010048:	b480      	push	{r7}
 801004a:	b083      	sub	sp, #12
 801004c:	af00      	add	r7, sp, #0
 801004e:	4b11      	ldr	r3, [pc, #68]	; (8010094 <vPortExitCritical+0x4c>)
 8010050:	681b      	ldr	r3, [r3, #0]
 8010052:	2b00      	cmp	r3, #0
 8010054:	d109      	bne.n	801006a <vPortExitCritical+0x22>
 8010056:	f04f 0350 	mov.w	r3, #80	; 0x50
 801005a:	f383 8811 	msr	BASEPRI, r3
 801005e:	f3bf 8f6f 	isb	sy
 8010062:	f3bf 8f4f 	dsb	sy
 8010066:	607b      	str	r3, [r7, #4]
 8010068:	e7fe      	b.n	8010068 <vPortExitCritical+0x20>
 801006a:	4b0a      	ldr	r3, [pc, #40]	; (8010094 <vPortExitCritical+0x4c>)
 801006c:	681b      	ldr	r3, [r3, #0]
 801006e:	3b01      	subs	r3, #1
 8010070:	4a08      	ldr	r2, [pc, #32]	; (8010094 <vPortExitCritical+0x4c>)
 8010072:	6013      	str	r3, [r2, #0]
 8010074:	4b07      	ldr	r3, [pc, #28]	; (8010094 <vPortExitCritical+0x4c>)
 8010076:	681b      	ldr	r3, [r3, #0]
 8010078:	2b00      	cmp	r3, #0
 801007a:	d104      	bne.n	8010086 <vPortExitCritical+0x3e>
 801007c:	2300      	movs	r3, #0
 801007e:	603b      	str	r3, [r7, #0]
 8010080:	683b      	ldr	r3, [r7, #0]
 8010082:	f383 8811 	msr	BASEPRI, r3
 8010086:	bf00      	nop
 8010088:	370c      	adds	r7, #12
 801008a:	46bd      	mov	sp, r7
 801008c:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010090:	4770      	bx	lr
 8010092:	bf00      	nop
 8010094:	20000018 	.word	0x20000018
	...

080100a0 <PendSV_Handler>:
 80100a0:	f3ef 8009 	mrs	r0, PSP
 80100a4:	f3bf 8f6f 	isb	sy
 80100a8:	4b15      	ldr	r3, [pc, #84]	; (8010100 <pxCurrentTCBConst>)
 80100aa:	681a      	ldr	r2, [r3, #0]
 80100ac:	f01e 0f10 	tst.w	lr, #16
 80100b0:	bf08      	it	eq
 80100b2:	ed20 8a10 	vstmdbeq	r0!, {s16-s31}
 80100b6:	e920 4ff0 	stmdb	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100ba:	6010      	str	r0, [r2, #0]
 80100bc:	e92d 0009 	stmdb	sp!, {r0, r3}
 80100c0:	f04f 0050 	mov.w	r0, #80	; 0x50
 80100c4:	f380 8811 	msr	BASEPRI, r0
 80100c8:	f3bf 8f4f 	dsb	sy
 80100cc:	f3bf 8f6f 	isb	sy
 80100d0:	f7fe ffde 	bl	800f090 <vTaskSwitchContext>
 80100d4:	f04f 0000 	mov.w	r0, #0
 80100d8:	f380 8811 	msr	BASEPRI, r0
 80100dc:	bc09      	pop	{r0, r3}
 80100de:	6819      	ldr	r1, [r3, #0]
 80100e0:	6808      	ldr	r0, [r1, #0]
 80100e2:	e8b0 4ff0 	ldmia.w	r0!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80100e6:	f01e 0f10 	tst.w	lr, #16
 80100ea:	bf08      	it	eq
 80100ec:	ecb0 8a10 	vldmiaeq	r0!, {s16-s31}
 80100f0:	f380 8809 	msr	PSP, r0
 80100f4:	f3bf 8f6f 	isb	sy
 80100f8:	4770      	bx	lr
 80100fa:	bf00      	nop
 80100fc:	f3af 8000 	nop.w

08010100 <pxCurrentTCBConst>:
 8010100:	2000672c 	.word	0x2000672c
 8010104:	bf00      	nop
 8010106:	bf00      	nop

08010108 <SysTick_Handler>:
 8010108:	b580      	push	{r7, lr}
 801010a:	b082      	sub	sp, #8
 801010c:	af00      	add	r7, sp, #0
 801010e:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010112:	f383 8811 	msr	BASEPRI, r3
 8010116:	f3bf 8f6f 	isb	sy
 801011a:	f3bf 8f4f 	dsb	sy
 801011e:	607b      	str	r3, [r7, #4]
 8010120:	f7fe fefe 	bl	800ef20 <xTaskIncrementTick>
 8010124:	4603      	mov	r3, r0
 8010126:	2b00      	cmp	r3, #0
 8010128:	d003      	beq.n	8010132 <SysTick_Handler+0x2a>
 801012a:	4b06      	ldr	r3, [pc, #24]	; (8010144 <SysTick_Handler+0x3c>)
 801012c:	f04f 5280 	mov.w	r2, #268435456	; 0x10000000
 8010130:	601a      	str	r2, [r3, #0]
 8010132:	2300      	movs	r3, #0
 8010134:	603b      	str	r3, [r7, #0]
 8010136:	683b      	ldr	r3, [r7, #0]
 8010138:	f383 8811 	msr	BASEPRI, r3
 801013c:	bf00      	nop
 801013e:	3708      	adds	r7, #8
 8010140:	46bd      	mov	sp, r7
 8010142:	bd80      	pop	{r7, pc}
 8010144:	e000ed04 	.word	0xe000ed04

08010148 <vPortSetupTimerInterrupt>:
 8010148:	b480      	push	{r7}
 801014a:	af00      	add	r7, sp, #0
 801014c:	4b0b      	ldr	r3, [pc, #44]	; (801017c <vPortSetupTimerInterrupt+0x34>)
 801014e:	2200      	movs	r2, #0
 8010150:	601a      	str	r2, [r3, #0]
 8010152:	4b0b      	ldr	r3, [pc, #44]	; (8010180 <vPortSetupTimerInterrupt+0x38>)
 8010154:	2200      	movs	r2, #0
 8010156:	601a      	str	r2, [r3, #0]
 8010158:	4b0a      	ldr	r3, [pc, #40]	; (8010184 <vPortSetupTimerInterrupt+0x3c>)
 801015a:	681b      	ldr	r3, [r3, #0]
 801015c:	4a0a      	ldr	r2, [pc, #40]	; (8010188 <vPortSetupTimerInterrupt+0x40>)
 801015e:	fba2 2303 	umull	r2, r3, r2, r3
 8010162:	099b      	lsrs	r3, r3, #6
 8010164:	4a09      	ldr	r2, [pc, #36]	; (801018c <vPortSetupTimerInterrupt+0x44>)
 8010166:	3b01      	subs	r3, #1
 8010168:	6013      	str	r3, [r2, #0]
 801016a:	4b04      	ldr	r3, [pc, #16]	; (801017c <vPortSetupTimerInterrupt+0x34>)
 801016c:	2207      	movs	r2, #7
 801016e:	601a      	str	r2, [r3, #0]
 8010170:	bf00      	nop
 8010172:	46bd      	mov	sp, r7
 8010174:	f85d 7b04 	ldr.w	r7, [sp], #4
 8010178:	4770      	bx	lr
 801017a:	bf00      	nop
 801017c:	e000e010 	.word	0xe000e010
 8010180:	e000e018 	.word	0xe000e018
 8010184:	2000000c 	.word	0x2000000c
 8010188:	10624dd3 	.word	0x10624dd3
 801018c:	e000e014 	.word	0xe000e014

08010190 <vPortEnableVFP>:
 8010190:	f8df 000c 	ldr.w	r0, [pc, #12]	; 80101a0 <vPortEnableVFP+0x10>
 8010194:	6801      	ldr	r1, [r0, #0]
 8010196:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 801019a:	6001      	str	r1, [r0, #0]
 801019c:	4770      	bx	lr
 801019e:	bf00      	nop
 80101a0:	e000ed88 	.word	0xe000ed88

080101a4 <vPortValidateInterruptPriority>:
 80101a4:	b480      	push	{r7}
 80101a6:	b085      	sub	sp, #20
 80101a8:	af00      	add	r7, sp, #0
 80101aa:	f3ef 8305 	mrs	r3, IPSR
 80101ae:	60fb      	str	r3, [r7, #12]
 80101b0:	68fb      	ldr	r3, [r7, #12]
 80101b2:	2b0f      	cmp	r3, #15
 80101b4:	d913      	bls.n	80101de <vPortValidateInterruptPriority+0x3a>
 80101b6:	4a16      	ldr	r2, [pc, #88]	; (8010210 <vPortValidateInterruptPriority+0x6c>)
 80101b8:	68fb      	ldr	r3, [r7, #12]
 80101ba:	4413      	add	r3, r2
 80101bc:	781b      	ldrb	r3, [r3, #0]
 80101be:	72fb      	strb	r3, [r7, #11]
 80101c0:	4b14      	ldr	r3, [pc, #80]	; (8010214 <vPortValidateInterruptPriority+0x70>)
 80101c2:	781b      	ldrb	r3, [r3, #0]
 80101c4:	7afa      	ldrb	r2, [r7, #11]
 80101c6:	429a      	cmp	r2, r3
 80101c8:	d209      	bcs.n	80101de <vPortValidateInterruptPriority+0x3a>
 80101ca:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101ce:	f383 8811 	msr	BASEPRI, r3
 80101d2:	f3bf 8f6f 	isb	sy
 80101d6:	f3bf 8f4f 	dsb	sy
 80101da:	607b      	str	r3, [r7, #4]
 80101dc:	e7fe      	b.n	80101dc <vPortValidateInterruptPriority+0x38>
 80101de:	4b0e      	ldr	r3, [pc, #56]	; (8010218 <vPortValidateInterruptPriority+0x74>)
 80101e0:	681b      	ldr	r3, [r3, #0]
 80101e2:	f403 62e0 	and.w	r2, r3, #1792	; 0x700
 80101e6:	4b0d      	ldr	r3, [pc, #52]	; (801021c <vPortValidateInterruptPriority+0x78>)
 80101e8:	681b      	ldr	r3, [r3, #0]
 80101ea:	429a      	cmp	r2, r3
 80101ec:	d909      	bls.n	8010202 <vPortValidateInterruptPriority+0x5e>
 80101ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80101f2:	f383 8811 	msr	BASEPRI, r3
 80101f6:	f3bf 8f6f 	isb	sy
 80101fa:	f3bf 8f4f 	dsb	sy
 80101fe:	603b      	str	r3, [r7, #0]
 8010200:	e7fe      	b.n	8010200 <vPortValidateInterruptPriority+0x5c>
 8010202:	bf00      	nop
 8010204:	3714      	adds	r7, #20
 8010206:	46bd      	mov	sp, r7
 8010208:	f85d 7b04 	ldr.w	r7, [sp], #4
 801020c:	4770      	bx	lr
 801020e:	bf00      	nop
 8010210:	e000e3f0 	.word	0xe000e3f0
 8010214:	20006d58 	.word	0x20006d58
 8010218:	e000ed0c 	.word	0xe000ed0c
 801021c:	20006d5c 	.word	0x20006d5c

08010220 <pvPortMalloc>:
 8010220:	b580      	push	{r7, lr}
 8010222:	b08a      	sub	sp, #40	; 0x28
 8010224:	af00      	add	r7, sp, #0
 8010226:	6078      	str	r0, [r7, #4]
 8010228:	2300      	movs	r3, #0
 801022a:	61fb      	str	r3, [r7, #28]
 801022c:	f7fe fdbe 	bl	800edac <vTaskSuspendAll>
 8010230:	4b57      	ldr	r3, [pc, #348]	; (8010390 <pvPortMalloc+0x170>)
 8010232:	681b      	ldr	r3, [r3, #0]
 8010234:	2b00      	cmp	r3, #0
 8010236:	d101      	bne.n	801023c <pvPortMalloc+0x1c>
 8010238:	f000 f90c 	bl	8010454 <prvHeapInit>
 801023c:	4b55      	ldr	r3, [pc, #340]	; (8010394 <pvPortMalloc+0x174>)
 801023e:	681a      	ldr	r2, [r3, #0]
 8010240:	687b      	ldr	r3, [r7, #4]
 8010242:	4013      	ands	r3, r2
 8010244:	2b00      	cmp	r3, #0
 8010246:	f040 808c 	bne.w	8010362 <pvPortMalloc+0x142>
 801024a:	687b      	ldr	r3, [r7, #4]
 801024c:	2b00      	cmp	r3, #0
 801024e:	d01c      	beq.n	801028a <pvPortMalloc+0x6a>
 8010250:	2208      	movs	r2, #8
 8010252:	687b      	ldr	r3, [r7, #4]
 8010254:	4413      	add	r3, r2
 8010256:	607b      	str	r3, [r7, #4]
 8010258:	687b      	ldr	r3, [r7, #4]
 801025a:	f003 0307 	and.w	r3, r3, #7
 801025e:	2b00      	cmp	r3, #0
 8010260:	d013      	beq.n	801028a <pvPortMalloc+0x6a>
 8010262:	687b      	ldr	r3, [r7, #4]
 8010264:	f023 0307 	bic.w	r3, r3, #7
 8010268:	3308      	adds	r3, #8
 801026a:	607b      	str	r3, [r7, #4]
 801026c:	687b      	ldr	r3, [r7, #4]
 801026e:	f003 0307 	and.w	r3, r3, #7
 8010272:	2b00      	cmp	r3, #0
 8010274:	d009      	beq.n	801028a <pvPortMalloc+0x6a>
 8010276:	f04f 0350 	mov.w	r3, #80	; 0x50
 801027a:	f383 8811 	msr	BASEPRI, r3
 801027e:	f3bf 8f6f 	isb	sy
 8010282:	f3bf 8f4f 	dsb	sy
 8010286:	617b      	str	r3, [r7, #20]
 8010288:	e7fe      	b.n	8010288 <pvPortMalloc+0x68>
 801028a:	687b      	ldr	r3, [r7, #4]
 801028c:	2b00      	cmp	r3, #0
 801028e:	d068      	beq.n	8010362 <pvPortMalloc+0x142>
 8010290:	4b41      	ldr	r3, [pc, #260]	; (8010398 <pvPortMalloc+0x178>)
 8010292:	681b      	ldr	r3, [r3, #0]
 8010294:	687a      	ldr	r2, [r7, #4]
 8010296:	429a      	cmp	r2, r3
 8010298:	d863      	bhi.n	8010362 <pvPortMalloc+0x142>
 801029a:	4b40      	ldr	r3, [pc, #256]	; (801039c <pvPortMalloc+0x17c>)
 801029c:	623b      	str	r3, [r7, #32]
 801029e:	4b3f      	ldr	r3, [pc, #252]	; (801039c <pvPortMalloc+0x17c>)
 80102a0:	681b      	ldr	r3, [r3, #0]
 80102a2:	627b      	str	r3, [r7, #36]	; 0x24
 80102a4:	e004      	b.n	80102b0 <pvPortMalloc+0x90>
 80102a6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80102a8:	623b      	str	r3, [r7, #32]
 80102aa:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80102ac:	681b      	ldr	r3, [r3, #0]
 80102ae:	627b      	str	r3, [r7, #36]	; 0x24
 80102b0:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80102b2:	685b      	ldr	r3, [r3, #4]
 80102b4:	687a      	ldr	r2, [r7, #4]
 80102b6:	429a      	cmp	r2, r3
 80102b8:	d903      	bls.n	80102c2 <pvPortMalloc+0xa2>
 80102ba:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80102bc:	681b      	ldr	r3, [r3, #0]
 80102be:	2b00      	cmp	r3, #0
 80102c0:	d1f1      	bne.n	80102a6 <pvPortMalloc+0x86>
 80102c2:	4b33      	ldr	r3, [pc, #204]	; (8010390 <pvPortMalloc+0x170>)
 80102c4:	681b      	ldr	r3, [r3, #0]
 80102c6:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80102c8:	429a      	cmp	r2, r3
 80102ca:	d04a      	beq.n	8010362 <pvPortMalloc+0x142>
 80102cc:	6a3b      	ldr	r3, [r7, #32]
 80102ce:	681b      	ldr	r3, [r3, #0]
 80102d0:	2208      	movs	r2, #8
 80102d2:	4413      	add	r3, r2
 80102d4:	61fb      	str	r3, [r7, #28]
 80102d6:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80102d8:	681a      	ldr	r2, [r3, #0]
 80102da:	6a3b      	ldr	r3, [r7, #32]
 80102dc:	601a      	str	r2, [r3, #0]
 80102de:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 80102e0:	685a      	ldr	r2, [r3, #4]
 80102e2:	687b      	ldr	r3, [r7, #4]
 80102e4:	1ad2      	subs	r2, r2, r3
 80102e6:	2308      	movs	r3, #8
 80102e8:	005b      	lsls	r3, r3, #1
 80102ea:	429a      	cmp	r2, r3
 80102ec:	d91e      	bls.n	801032c <pvPortMalloc+0x10c>
 80102ee:	6a7a      	ldr	r2, [r7, #36]	; 0x24
 80102f0:	687b      	ldr	r3, [r7, #4]
 80102f2:	4413      	add	r3, r2
 80102f4:	61bb      	str	r3, [r7, #24]
 80102f6:	69bb      	ldr	r3, [r7, #24]
 80102f8:	f003 0307 	and.w	r3, r3, #7
 80102fc:	2b00      	cmp	r3, #0
 80102fe:	d009      	beq.n	8010314 <pvPortMalloc+0xf4>
 8010300:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010304:	f383 8811 	msr	BASEPRI, r3
 8010308:	f3bf 8f6f 	isb	sy
 801030c:	f3bf 8f4f 	dsb	sy
 8010310:	613b      	str	r3, [r7, #16]
 8010312:	e7fe      	b.n	8010312 <pvPortMalloc+0xf2>
 8010314:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010316:	685a      	ldr	r2, [r3, #4]
 8010318:	687b      	ldr	r3, [r7, #4]
 801031a:	1ad2      	subs	r2, r2, r3
 801031c:	69bb      	ldr	r3, [r7, #24]
 801031e:	605a      	str	r2, [r3, #4]
 8010320:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010322:	687a      	ldr	r2, [r7, #4]
 8010324:	605a      	str	r2, [r3, #4]
 8010326:	69b8      	ldr	r0, [r7, #24]
 8010328:	f000 f8f6 	bl	8010518 <prvInsertBlockIntoFreeList>
 801032c:	4b1a      	ldr	r3, [pc, #104]	; (8010398 <pvPortMalloc+0x178>)
 801032e:	681a      	ldr	r2, [r3, #0]
 8010330:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010332:	685b      	ldr	r3, [r3, #4]
 8010334:	1ad3      	subs	r3, r2, r3
 8010336:	4a18      	ldr	r2, [pc, #96]	; (8010398 <pvPortMalloc+0x178>)
 8010338:	6013      	str	r3, [r2, #0]
 801033a:	4b17      	ldr	r3, [pc, #92]	; (8010398 <pvPortMalloc+0x178>)
 801033c:	681a      	ldr	r2, [r3, #0]
 801033e:	4b18      	ldr	r3, [pc, #96]	; (80103a0 <pvPortMalloc+0x180>)
 8010340:	681b      	ldr	r3, [r3, #0]
 8010342:	429a      	cmp	r2, r3
 8010344:	d203      	bcs.n	801034e <pvPortMalloc+0x12e>
 8010346:	4b14      	ldr	r3, [pc, #80]	; (8010398 <pvPortMalloc+0x178>)
 8010348:	681b      	ldr	r3, [r3, #0]
 801034a:	4a15      	ldr	r2, [pc, #84]	; (80103a0 <pvPortMalloc+0x180>)
 801034c:	6013      	str	r3, [r2, #0]
 801034e:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 8010350:	685a      	ldr	r2, [r3, #4]
 8010352:	4b10      	ldr	r3, [pc, #64]	; (8010394 <pvPortMalloc+0x174>)
 8010354:	681b      	ldr	r3, [r3, #0]
 8010356:	431a      	orrs	r2, r3
 8010358:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801035a:	605a      	str	r2, [r3, #4]
 801035c:	6a7b      	ldr	r3, [r7, #36]	; 0x24
 801035e:	2200      	movs	r2, #0
 8010360:	601a      	str	r2, [r3, #0]
 8010362:	f7fe fd31 	bl	800edc8 <xTaskResumeAll>
 8010366:	69fb      	ldr	r3, [r7, #28]
 8010368:	f003 0307 	and.w	r3, r3, #7
 801036c:	2b00      	cmp	r3, #0
 801036e:	d009      	beq.n	8010384 <pvPortMalloc+0x164>
 8010370:	f04f 0350 	mov.w	r3, #80	; 0x50
 8010374:	f383 8811 	msr	BASEPRI, r3
 8010378:	f3bf 8f6f 	isb	sy
 801037c:	f3bf 8f4f 	dsb	sy
 8010380:	60fb      	str	r3, [r7, #12]
 8010382:	e7fe      	b.n	8010382 <pvPortMalloc+0x162>
 8010384:	69fb      	ldr	r3, [r7, #28]
 8010386:	4618      	mov	r0, r3
 8010388:	3728      	adds	r7, #40	; 0x28
 801038a:	46bd      	mov	sp, r7
 801038c:	bd80      	pop	{r7, pc}
 801038e:	bf00      	nop
 8010390:	200079e8 	.word	0x200079e8
 8010394:	200079f4 	.word	0x200079f4
 8010398:	200079ec 	.word	0x200079ec
 801039c:	200079e0 	.word	0x200079e0
 80103a0:	200079f0 	.word	0x200079f0

080103a4 <vPortFree>:
 80103a4:	b580      	push	{r7, lr}
 80103a6:	b086      	sub	sp, #24
 80103a8:	af00      	add	r7, sp, #0
 80103aa:	6078      	str	r0, [r7, #4]
 80103ac:	687b      	ldr	r3, [r7, #4]
 80103ae:	617b      	str	r3, [r7, #20]
 80103b0:	687b      	ldr	r3, [r7, #4]
 80103b2:	2b00      	cmp	r3, #0
 80103b4:	d046      	beq.n	8010444 <vPortFree+0xa0>
 80103b6:	2308      	movs	r3, #8
 80103b8:	425b      	negs	r3, r3
 80103ba:	697a      	ldr	r2, [r7, #20]
 80103bc:	4413      	add	r3, r2
 80103be:	617b      	str	r3, [r7, #20]
 80103c0:	697b      	ldr	r3, [r7, #20]
 80103c2:	613b      	str	r3, [r7, #16]
 80103c4:	693b      	ldr	r3, [r7, #16]
 80103c6:	685a      	ldr	r2, [r3, #4]
 80103c8:	4b20      	ldr	r3, [pc, #128]	; (801044c <vPortFree+0xa8>)
 80103ca:	681b      	ldr	r3, [r3, #0]
 80103cc:	4013      	ands	r3, r2
 80103ce:	2b00      	cmp	r3, #0
 80103d0:	d109      	bne.n	80103e6 <vPortFree+0x42>
 80103d2:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103d6:	f383 8811 	msr	BASEPRI, r3
 80103da:	f3bf 8f6f 	isb	sy
 80103de:	f3bf 8f4f 	dsb	sy
 80103e2:	60fb      	str	r3, [r7, #12]
 80103e4:	e7fe      	b.n	80103e4 <vPortFree+0x40>
 80103e6:	693b      	ldr	r3, [r7, #16]
 80103e8:	681b      	ldr	r3, [r3, #0]
 80103ea:	2b00      	cmp	r3, #0
 80103ec:	d009      	beq.n	8010402 <vPortFree+0x5e>
 80103ee:	f04f 0350 	mov.w	r3, #80	; 0x50
 80103f2:	f383 8811 	msr	BASEPRI, r3
 80103f6:	f3bf 8f6f 	isb	sy
 80103fa:	f3bf 8f4f 	dsb	sy
 80103fe:	60bb      	str	r3, [r7, #8]
 8010400:	e7fe      	b.n	8010400 <vPortFree+0x5c>
 8010402:	693b      	ldr	r3, [r7, #16]
 8010404:	685a      	ldr	r2, [r3, #4]
 8010406:	4b11      	ldr	r3, [pc, #68]	; (801044c <vPortFree+0xa8>)
 8010408:	681b      	ldr	r3, [r3, #0]
 801040a:	4013      	ands	r3, r2
 801040c:	2b00      	cmp	r3, #0
 801040e:	d019      	beq.n	8010444 <vPortFree+0xa0>
 8010410:	693b      	ldr	r3, [r7, #16]
 8010412:	681b      	ldr	r3, [r3, #0]
 8010414:	2b00      	cmp	r3, #0
 8010416:	d115      	bne.n	8010444 <vPortFree+0xa0>
 8010418:	693b      	ldr	r3, [r7, #16]
 801041a:	685a      	ldr	r2, [r3, #4]
 801041c:	4b0b      	ldr	r3, [pc, #44]	; (801044c <vPortFree+0xa8>)
 801041e:	681b      	ldr	r3, [r3, #0]
 8010420:	43db      	mvns	r3, r3
 8010422:	401a      	ands	r2, r3
 8010424:	693b      	ldr	r3, [r7, #16]
 8010426:	605a      	str	r2, [r3, #4]
 8010428:	f7fe fcc0 	bl	800edac <vTaskSuspendAll>
 801042c:	693b      	ldr	r3, [r7, #16]
 801042e:	685a      	ldr	r2, [r3, #4]
 8010430:	4b07      	ldr	r3, [pc, #28]	; (8010450 <vPortFree+0xac>)
 8010432:	681b      	ldr	r3, [r3, #0]
 8010434:	4413      	add	r3, r2
 8010436:	4a06      	ldr	r2, [pc, #24]	; (8010450 <vPortFree+0xac>)
 8010438:	6013      	str	r3, [r2, #0]
 801043a:	6938      	ldr	r0, [r7, #16]
 801043c:	f000 f86c 	bl	8010518 <prvInsertBlockIntoFreeList>
 8010440:	f7fe fcc2 	bl	800edc8 <xTaskResumeAll>
 8010444:	bf00      	nop
 8010446:	3718      	adds	r7, #24
 8010448:	46bd      	mov	sp, r7
 801044a:	bd80      	pop	{r7, pc}
 801044c:	200079f4 	.word	0x200079f4
 8010450:	200079ec 	.word	0x200079ec

08010454 <prvHeapInit>:
 8010454:	b480      	push	{r7}
 8010456:	b085      	sub	sp, #20
 8010458:	af00      	add	r7, sp, #0
 801045a:	f44f 6348 	mov.w	r3, #3200	; 0xc80
 801045e:	60bb      	str	r3, [r7, #8]
 8010460:	4b27      	ldr	r3, [pc, #156]	; (8010500 <prvHeapInit+0xac>)
 8010462:	60fb      	str	r3, [r7, #12]
 8010464:	68fb      	ldr	r3, [r7, #12]
 8010466:	f003 0307 	and.w	r3, r3, #7
 801046a:	2b00      	cmp	r3, #0
 801046c:	d00c      	beq.n	8010488 <prvHeapInit+0x34>
 801046e:	68fb      	ldr	r3, [r7, #12]
 8010470:	3307      	adds	r3, #7
 8010472:	60fb      	str	r3, [r7, #12]
 8010474:	68fb      	ldr	r3, [r7, #12]
 8010476:	f023 0307 	bic.w	r3, r3, #7
 801047a:	60fb      	str	r3, [r7, #12]
 801047c:	68ba      	ldr	r2, [r7, #8]
 801047e:	68fb      	ldr	r3, [r7, #12]
 8010480:	1ad3      	subs	r3, r2, r3
 8010482:	4a1f      	ldr	r2, [pc, #124]	; (8010500 <prvHeapInit+0xac>)
 8010484:	4413      	add	r3, r2
 8010486:	60bb      	str	r3, [r7, #8]
 8010488:	68fb      	ldr	r3, [r7, #12]
 801048a:	607b      	str	r3, [r7, #4]
 801048c:	4a1d      	ldr	r2, [pc, #116]	; (8010504 <prvHeapInit+0xb0>)
 801048e:	687b      	ldr	r3, [r7, #4]
 8010490:	6013      	str	r3, [r2, #0]
 8010492:	4b1c      	ldr	r3, [pc, #112]	; (8010504 <prvHeapInit+0xb0>)
 8010494:	2200      	movs	r2, #0
 8010496:	605a      	str	r2, [r3, #4]
 8010498:	687b      	ldr	r3, [r7, #4]
 801049a:	68ba      	ldr	r2, [r7, #8]
 801049c:	4413      	add	r3, r2
 801049e:	60fb      	str	r3, [r7, #12]
 80104a0:	2208      	movs	r2, #8
 80104a2:	68fb      	ldr	r3, [r7, #12]
 80104a4:	1a9b      	subs	r3, r3, r2
 80104a6:	60fb      	str	r3, [r7, #12]
 80104a8:	68fb      	ldr	r3, [r7, #12]
 80104aa:	f023 0307 	bic.w	r3, r3, #7
 80104ae:	60fb      	str	r3, [r7, #12]
 80104b0:	68fb      	ldr	r3, [r7, #12]
 80104b2:	4a15      	ldr	r2, [pc, #84]	; (8010508 <prvHeapInit+0xb4>)
 80104b4:	6013      	str	r3, [r2, #0]
 80104b6:	4b14      	ldr	r3, [pc, #80]	; (8010508 <prvHeapInit+0xb4>)
 80104b8:	681b      	ldr	r3, [r3, #0]
 80104ba:	2200      	movs	r2, #0
 80104bc:	605a      	str	r2, [r3, #4]
 80104be:	4b12      	ldr	r3, [pc, #72]	; (8010508 <prvHeapInit+0xb4>)
 80104c0:	681b      	ldr	r3, [r3, #0]
 80104c2:	2200      	movs	r2, #0
 80104c4:	601a      	str	r2, [r3, #0]
 80104c6:	687b      	ldr	r3, [r7, #4]
 80104c8:	603b      	str	r3, [r7, #0]
 80104ca:	683b      	ldr	r3, [r7, #0]
 80104cc:	68fa      	ldr	r2, [r7, #12]
 80104ce:	1ad2      	subs	r2, r2, r3
 80104d0:	683b      	ldr	r3, [r7, #0]
 80104d2:	605a      	str	r2, [r3, #4]
 80104d4:	4b0c      	ldr	r3, [pc, #48]	; (8010508 <prvHeapInit+0xb4>)
 80104d6:	681a      	ldr	r2, [r3, #0]
 80104d8:	683b      	ldr	r3, [r7, #0]
 80104da:	601a      	str	r2, [r3, #0]
 80104dc:	683b      	ldr	r3, [r7, #0]
 80104de:	685b      	ldr	r3, [r3, #4]
 80104e0:	4a0a      	ldr	r2, [pc, #40]	; (801050c <prvHeapInit+0xb8>)
 80104e2:	6013      	str	r3, [r2, #0]
 80104e4:	683b      	ldr	r3, [r7, #0]
 80104e6:	685b      	ldr	r3, [r3, #4]
 80104e8:	4a09      	ldr	r2, [pc, #36]	; (8010510 <prvHeapInit+0xbc>)
 80104ea:	6013      	str	r3, [r2, #0]
 80104ec:	4b09      	ldr	r3, [pc, #36]	; (8010514 <prvHeapInit+0xc0>)
 80104ee:	f04f 4200 	mov.w	r2, #2147483648	; 0x80000000
 80104f2:	601a      	str	r2, [r3, #0]
 80104f4:	bf00      	nop
 80104f6:	3714      	adds	r7, #20
 80104f8:	46bd      	mov	sp, r7
 80104fa:	f85d 7b04 	ldr.w	r7, [sp], #4
 80104fe:	4770      	bx	lr
 8010500:	20006d60 	.word	0x20006d60
 8010504:	200079e0 	.word	0x200079e0
 8010508:	200079e8 	.word	0x200079e8
 801050c:	200079f0 	.word	0x200079f0
 8010510:	200079ec 	.word	0x200079ec
 8010514:	200079f4 	.word	0x200079f4

08010518 <prvInsertBlockIntoFreeList>:
 8010518:	b480      	push	{r7}
 801051a:	b085      	sub	sp, #20
 801051c:	af00      	add	r7, sp, #0
 801051e:	6078      	str	r0, [r7, #4]
 8010520:	4b28      	ldr	r3, [pc, #160]	; (80105c4 <prvInsertBlockIntoFreeList+0xac>)
 8010522:	60fb      	str	r3, [r7, #12]
 8010524:	e002      	b.n	801052c <prvInsertBlockIntoFreeList+0x14>
 8010526:	68fb      	ldr	r3, [r7, #12]
 8010528:	681b      	ldr	r3, [r3, #0]
 801052a:	60fb      	str	r3, [r7, #12]
 801052c:	68fb      	ldr	r3, [r7, #12]
 801052e:	681b      	ldr	r3, [r3, #0]
 8010530:	687a      	ldr	r2, [r7, #4]
 8010532:	429a      	cmp	r2, r3
 8010534:	d8f7      	bhi.n	8010526 <prvInsertBlockIntoFreeList+0xe>
 8010536:	68fb      	ldr	r3, [r7, #12]
 8010538:	60bb      	str	r3, [r7, #8]
 801053a:	68fb      	ldr	r3, [r7, #12]
 801053c:	685b      	ldr	r3, [r3, #4]
 801053e:	68ba      	ldr	r2, [r7, #8]
 8010540:	4413      	add	r3, r2
 8010542:	687a      	ldr	r2, [r7, #4]
 8010544:	429a      	cmp	r2, r3
 8010546:	d108      	bne.n	801055a <prvInsertBlockIntoFreeList+0x42>
 8010548:	68fb      	ldr	r3, [r7, #12]
 801054a:	685a      	ldr	r2, [r3, #4]
 801054c:	687b      	ldr	r3, [r7, #4]
 801054e:	685b      	ldr	r3, [r3, #4]
 8010550:	441a      	add	r2, r3
 8010552:	68fb      	ldr	r3, [r7, #12]
 8010554:	605a      	str	r2, [r3, #4]
 8010556:	68fb      	ldr	r3, [r7, #12]
 8010558:	607b      	str	r3, [r7, #4]
 801055a:	687b      	ldr	r3, [r7, #4]
 801055c:	60bb      	str	r3, [r7, #8]
 801055e:	687b      	ldr	r3, [r7, #4]
 8010560:	685b      	ldr	r3, [r3, #4]
 8010562:	68ba      	ldr	r2, [r7, #8]
 8010564:	441a      	add	r2, r3
 8010566:	68fb      	ldr	r3, [r7, #12]
 8010568:	681b      	ldr	r3, [r3, #0]
 801056a:	429a      	cmp	r2, r3
 801056c:	d118      	bne.n	80105a0 <prvInsertBlockIntoFreeList+0x88>
 801056e:	68fb      	ldr	r3, [r7, #12]
 8010570:	681a      	ldr	r2, [r3, #0]
 8010572:	4b15      	ldr	r3, [pc, #84]	; (80105c8 <prvInsertBlockIntoFreeList+0xb0>)
 8010574:	681b      	ldr	r3, [r3, #0]
 8010576:	429a      	cmp	r2, r3
 8010578:	d00d      	beq.n	8010596 <prvInsertBlockIntoFreeList+0x7e>
 801057a:	687b      	ldr	r3, [r7, #4]
 801057c:	685a      	ldr	r2, [r3, #4]
 801057e:	68fb      	ldr	r3, [r7, #12]
 8010580:	681b      	ldr	r3, [r3, #0]
 8010582:	685b      	ldr	r3, [r3, #4]
 8010584:	441a      	add	r2, r3
 8010586:	687b      	ldr	r3, [r7, #4]
 8010588:	605a      	str	r2, [r3, #4]
 801058a:	68fb      	ldr	r3, [r7, #12]
 801058c:	681b      	ldr	r3, [r3, #0]
 801058e:	681a      	ldr	r2, [r3, #0]
 8010590:	687b      	ldr	r3, [r7, #4]
 8010592:	601a      	str	r2, [r3, #0]
 8010594:	e008      	b.n	80105a8 <prvInsertBlockIntoFreeList+0x90>
 8010596:	4b0c      	ldr	r3, [pc, #48]	; (80105c8 <prvInsertBlockIntoFreeList+0xb0>)
 8010598:	681a      	ldr	r2, [r3, #0]
 801059a:	687b      	ldr	r3, [r7, #4]
 801059c:	601a      	str	r2, [r3, #0]
 801059e:	e003      	b.n	80105a8 <prvInsertBlockIntoFreeList+0x90>
 80105a0:	68fb      	ldr	r3, [r7, #12]
 80105a2:	681a      	ldr	r2, [r3, #0]
 80105a4:	687b      	ldr	r3, [r7, #4]
 80105a6:	601a      	str	r2, [r3, #0]
 80105a8:	68fa      	ldr	r2, [r7, #12]
 80105aa:	687b      	ldr	r3, [r7, #4]
 80105ac:	429a      	cmp	r2, r3
 80105ae:	d002      	beq.n	80105b6 <prvInsertBlockIntoFreeList+0x9e>
 80105b0:	68fb      	ldr	r3, [r7, #12]
 80105b2:	687a      	ldr	r2, [r7, #4]
 80105b4:	601a      	str	r2, [r3, #0]
 80105b6:	bf00      	nop
 80105b8:	3714      	adds	r7, #20
 80105ba:	46bd      	mov	sp, r7
 80105bc:	f85d 7b04 	ldr.w	r7, [sp], #4
 80105c0:	4770      	bx	lr
 80105c2:	bf00      	nop
 80105c4:	200079e0 	.word	0x200079e0
 80105c8:	200079e8 	.word	0x200079e8

080105cc <atof>:
 80105cc:	2100      	movs	r1, #0
 80105ce:	f000 be77 	b.w	80112c0 <strtod>
	...

080105d4 <__errno>:
 80105d4:	4b01      	ldr	r3, [pc, #4]	; (80105dc <__errno+0x8>)
 80105d6:	6818      	ldr	r0, [r3, #0]
 80105d8:	4770      	bx	lr
 80105da:	bf00      	nop
 80105dc:	2000001c 	.word	0x2000001c

080105e0 <__libc_init_array>:
 80105e0:	b570      	push	{r4, r5, r6, lr}
 80105e2:	4e0d      	ldr	r6, [pc, #52]	; (8010618 <__libc_init_array+0x38>)
 80105e4:	4c0d      	ldr	r4, [pc, #52]	; (801061c <__libc_init_array+0x3c>)
 80105e6:	1ba4      	subs	r4, r4, r6
 80105e8:	10a4      	asrs	r4, r4, #2
 80105ea:	2500      	movs	r5, #0
 80105ec:	42a5      	cmp	r5, r4
 80105ee:	d109      	bne.n	8010604 <__libc_init_array+0x24>
 80105f0:	4e0b      	ldr	r6, [pc, #44]	; (8010620 <__libc_init_array+0x40>)
 80105f2:	4c0c      	ldr	r4, [pc, #48]	; (8010624 <__libc_init_array+0x44>)
 80105f4:	f005 fd8c 	bl	8016110 <_init>
 80105f8:	1ba4      	subs	r4, r4, r6
 80105fa:	10a4      	asrs	r4, r4, #2
 80105fc:	2500      	movs	r5, #0
 80105fe:	42a5      	cmp	r5, r4
 8010600:	d105      	bne.n	801060e <__libc_init_array+0x2e>
 8010602:	bd70      	pop	{r4, r5, r6, pc}
 8010604:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8010608:	4798      	blx	r3
 801060a:	3501      	adds	r5, #1
 801060c:	e7ee      	b.n	80105ec <__libc_init_array+0xc>
 801060e:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 8010612:	4798      	blx	r3
 8010614:	3501      	adds	r5, #1
 8010616:	e7f2      	b.n	80105fe <__libc_init_array+0x1e>
 8010618:	08016c30 	.word	0x08016c30
 801061c:	08016c30 	.word	0x08016c30
 8010620:	08016c30 	.word	0x08016c30
 8010624:	08016c34 	.word	0x08016c34

08010628 <memcpy>:
 8010628:	b510      	push	{r4, lr}
 801062a:	1e43      	subs	r3, r0, #1
 801062c:	440a      	add	r2, r1
 801062e:	4291      	cmp	r1, r2
 8010630:	d100      	bne.n	8010634 <memcpy+0xc>
 8010632:	bd10      	pop	{r4, pc}
 8010634:	f811 4b01 	ldrb.w	r4, [r1], #1
 8010638:	f803 4f01 	strb.w	r4, [r3, #1]!
 801063c:	e7f7      	b.n	801062e <memcpy+0x6>

0801063e <memset>:
 801063e:	4402      	add	r2, r0
 8010640:	4603      	mov	r3, r0
 8010642:	4293      	cmp	r3, r2
 8010644:	d100      	bne.n	8010648 <memset+0xa>
 8010646:	4770      	bx	lr
 8010648:	f803 1b01 	strb.w	r1, [r3], #1
 801064c:	e7f9      	b.n	8010642 <memset+0x4>

0801064e <strncmp>:
 801064e:	b510      	push	{r4, lr}
 8010650:	b16a      	cbz	r2, 801066e <strncmp+0x20>
 8010652:	3901      	subs	r1, #1
 8010654:	1884      	adds	r4, r0, r2
 8010656:	f810 3b01 	ldrb.w	r3, [r0], #1
 801065a:	f811 2f01 	ldrb.w	r2, [r1, #1]!
 801065e:	4293      	cmp	r3, r2
 8010660:	d103      	bne.n	801066a <strncmp+0x1c>
 8010662:	42a0      	cmp	r0, r4
 8010664:	d001      	beq.n	801066a <strncmp+0x1c>
 8010666:	2b00      	cmp	r3, #0
 8010668:	d1f5      	bne.n	8010656 <strncmp+0x8>
 801066a:	1a98      	subs	r0, r3, r2
 801066c:	bd10      	pop	{r4, pc}
 801066e:	4610      	mov	r0, r2
 8010670:	e7fc      	b.n	801066c <strncmp+0x1e>

08010672 <strncpy>:
 8010672:	b570      	push	{r4, r5, r6, lr}
 8010674:	3901      	subs	r1, #1
 8010676:	4604      	mov	r4, r0
 8010678:	b902      	cbnz	r2, 801067c <strncpy+0xa>
 801067a:	bd70      	pop	{r4, r5, r6, pc}
 801067c:	4623      	mov	r3, r4
 801067e:	f811 5f01 	ldrb.w	r5, [r1, #1]!
 8010682:	f803 5b01 	strb.w	r5, [r3], #1
 8010686:	1e56      	subs	r6, r2, #1
 8010688:	b92d      	cbnz	r5, 8010696 <strncpy+0x24>
 801068a:	4414      	add	r4, r2
 801068c:	42a3      	cmp	r3, r4
 801068e:	d0f4      	beq.n	801067a <strncpy+0x8>
 8010690:	f803 5b01 	strb.w	r5, [r3], #1
 8010694:	e7fa      	b.n	801068c <strncpy+0x1a>
 8010696:	461c      	mov	r4, r3
 8010698:	4632      	mov	r2, r6
 801069a:	e7ed      	b.n	8010678 <strncpy+0x6>

0801069c <sulp>:
 801069c:	b570      	push	{r4, r5, r6, lr}
 801069e:	4604      	mov	r4, r0
 80106a0:	460d      	mov	r5, r1
 80106a2:	ec45 4b10 	vmov	d0, r4, r5
 80106a6:	4616      	mov	r6, r2
 80106a8:	f001 fc24 	bl	8011ef4 <__ulp>
 80106ac:	ec51 0b10 	vmov	r0, r1, d0
 80106b0:	b17e      	cbz	r6, 80106d2 <sulp+0x36>
 80106b2:	f3c5 530a 	ubfx	r3, r5, #20, #11
 80106b6:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 80106ba:	2b00      	cmp	r3, #0
 80106bc:	dd09      	ble.n	80106d2 <sulp+0x36>
 80106be:	051b      	lsls	r3, r3, #20
 80106c0:	f103 557f 	add.w	r5, r3, #1069547520	; 0x3fc00000
 80106c4:	2400      	movs	r4, #0
 80106c6:	f505 1540 	add.w	r5, r5, #3145728	; 0x300000
 80106ca:	4622      	mov	r2, r4
 80106cc:	462b      	mov	r3, r5
 80106ce:	f7ef ff65 	bl	800059c <__aeabi_dmul>
 80106d2:	bd70      	pop	{r4, r5, r6, pc}
 80106d4:	0000      	movs	r0, r0
	...

080106d8 <_strtod_l>:
 80106d8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80106dc:	461f      	mov	r7, r3
 80106de:	b0a1      	sub	sp, #132	; 0x84
 80106e0:	2300      	movs	r3, #0
 80106e2:	4681      	mov	r9, r0
 80106e4:	4638      	mov	r0, r7
 80106e6:	460e      	mov	r6, r1
 80106e8:	9217      	str	r2, [sp, #92]	; 0x5c
 80106ea:	931c      	str	r3, [sp, #112]	; 0x70
 80106ec:	f001 f922 	bl	8011934 <__localeconv_l>
 80106f0:	4680      	mov	r8, r0
 80106f2:	6800      	ldr	r0, [r0, #0]
 80106f4:	f7ef fd8e 	bl	8000214 <strlen>
 80106f8:	f04f 0a00 	mov.w	sl, #0
 80106fc:	4604      	mov	r4, r0
 80106fe:	f04f 0b00 	mov.w	fp, #0
 8010702:	961b      	str	r6, [sp, #108]	; 0x6c
 8010704:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8010706:	781a      	ldrb	r2, [r3, #0]
 8010708:	2a0d      	cmp	r2, #13
 801070a:	d832      	bhi.n	8010772 <_strtod_l+0x9a>
 801070c:	2a09      	cmp	r2, #9
 801070e:	d236      	bcs.n	801077e <_strtod_l+0xa6>
 8010710:	2a00      	cmp	r2, #0
 8010712:	d03e      	beq.n	8010792 <_strtod_l+0xba>
 8010714:	2300      	movs	r3, #0
 8010716:	930d      	str	r3, [sp, #52]	; 0x34
 8010718:	9d1b      	ldr	r5, [sp, #108]	; 0x6c
 801071a:	782b      	ldrb	r3, [r5, #0]
 801071c:	2b30      	cmp	r3, #48	; 0x30
 801071e:	f040 80ac 	bne.w	801087a <_strtod_l+0x1a2>
 8010722:	786b      	ldrb	r3, [r5, #1]
 8010724:	2b58      	cmp	r3, #88	; 0x58
 8010726:	d001      	beq.n	801072c <_strtod_l+0x54>
 8010728:	2b78      	cmp	r3, #120	; 0x78
 801072a:	d167      	bne.n	80107fc <_strtod_l+0x124>
 801072c:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 801072e:	9301      	str	r3, [sp, #4]
 8010730:	ab1c      	add	r3, sp, #112	; 0x70
 8010732:	9300      	str	r3, [sp, #0]
 8010734:	9702      	str	r7, [sp, #8]
 8010736:	ab1d      	add	r3, sp, #116	; 0x74
 8010738:	4a88      	ldr	r2, [pc, #544]	; (801095c <_strtod_l+0x284>)
 801073a:	a91b      	add	r1, sp, #108	; 0x6c
 801073c:	4648      	mov	r0, r9
 801073e:	f000 fe22 	bl	8011386 <__gethex>
 8010742:	f010 0407 	ands.w	r4, r0, #7
 8010746:	4606      	mov	r6, r0
 8010748:	d005      	beq.n	8010756 <_strtod_l+0x7e>
 801074a:	2c06      	cmp	r4, #6
 801074c:	d12b      	bne.n	80107a6 <_strtod_l+0xce>
 801074e:	3501      	adds	r5, #1
 8010750:	2300      	movs	r3, #0
 8010752:	951b      	str	r5, [sp, #108]	; 0x6c
 8010754:	930d      	str	r3, [sp, #52]	; 0x34
 8010756:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8010758:	2b00      	cmp	r3, #0
 801075a:	f040 859a 	bne.w	8011292 <_strtod_l+0xbba>
 801075e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8010760:	b1e3      	cbz	r3, 801079c <_strtod_l+0xc4>
 8010762:	4652      	mov	r2, sl
 8010764:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 8010768:	ec43 2b10 	vmov	d0, r2, r3
 801076c:	b021      	add	sp, #132	; 0x84
 801076e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8010772:	2a2b      	cmp	r2, #43	; 0x2b
 8010774:	d015      	beq.n	80107a2 <_strtod_l+0xca>
 8010776:	2a2d      	cmp	r2, #45	; 0x2d
 8010778:	d004      	beq.n	8010784 <_strtod_l+0xac>
 801077a:	2a20      	cmp	r2, #32
 801077c:	d1ca      	bne.n	8010714 <_strtod_l+0x3c>
 801077e:	3301      	adds	r3, #1
 8010780:	931b      	str	r3, [sp, #108]	; 0x6c
 8010782:	e7bf      	b.n	8010704 <_strtod_l+0x2c>
 8010784:	2201      	movs	r2, #1
 8010786:	920d      	str	r2, [sp, #52]	; 0x34
 8010788:	1c5a      	adds	r2, r3, #1
 801078a:	921b      	str	r2, [sp, #108]	; 0x6c
 801078c:	785b      	ldrb	r3, [r3, #1]
 801078e:	2b00      	cmp	r3, #0
 8010790:	d1c2      	bne.n	8010718 <_strtod_l+0x40>
 8010792:	9b17      	ldr	r3, [sp, #92]	; 0x5c
 8010794:	961b      	str	r6, [sp, #108]	; 0x6c
 8010796:	2b00      	cmp	r3, #0
 8010798:	f040 8579 	bne.w	801128e <_strtod_l+0xbb6>
 801079c:	4652      	mov	r2, sl
 801079e:	465b      	mov	r3, fp
 80107a0:	e7e2      	b.n	8010768 <_strtod_l+0x90>
 80107a2:	2200      	movs	r2, #0
 80107a4:	e7ef      	b.n	8010786 <_strtod_l+0xae>
 80107a6:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 80107a8:	b13a      	cbz	r2, 80107ba <_strtod_l+0xe2>
 80107aa:	2135      	movs	r1, #53	; 0x35
 80107ac:	a81e      	add	r0, sp, #120	; 0x78
 80107ae:	f001 fc99 	bl	80120e4 <__copybits>
 80107b2:	991c      	ldr	r1, [sp, #112]	; 0x70
 80107b4:	4648      	mov	r0, r9
 80107b6:	f001 f905 	bl	80119c4 <_Bfree>
 80107ba:	3c01      	subs	r4, #1
 80107bc:	2c04      	cmp	r4, #4
 80107be:	d806      	bhi.n	80107ce <_strtod_l+0xf6>
 80107c0:	e8df f004 	tbb	[pc, r4]
 80107c4:	1714030a 	.word	0x1714030a
 80107c8:	0a          	.byte	0x0a
 80107c9:	00          	.byte	0x00
 80107ca:	e9dd ab1e 	ldrd	sl, fp, [sp, #120]	; 0x78
 80107ce:	0730      	lsls	r0, r6, #28
 80107d0:	d5c1      	bpl.n	8010756 <_strtod_l+0x7e>
 80107d2:	f04b 4b00 	orr.w	fp, fp, #2147483648	; 0x80000000
 80107d6:	e7be      	b.n	8010756 <_strtod_l+0x7e>
 80107d8:	e9dd a31e 	ldrd	sl, r3, [sp, #120]	; 0x78
 80107dc:	9a1d      	ldr	r2, [sp, #116]	; 0x74
 80107de:	f423 1380 	bic.w	r3, r3, #1048576	; 0x100000
 80107e2:	f202 4233 	addw	r2, r2, #1075	; 0x433
 80107e6:	ea43 5b02 	orr.w	fp, r3, r2, lsl #20
 80107ea:	e7f0      	b.n	80107ce <_strtod_l+0xf6>
 80107ec:	f8df b170 	ldr.w	fp, [pc, #368]	; 8010960 <_strtod_l+0x288>
 80107f0:	e7ed      	b.n	80107ce <_strtod_l+0xf6>
 80107f2:	f06f 4b00 	mvn.w	fp, #2147483648	; 0x80000000
 80107f6:	f04f 3aff 	mov.w	sl, #4294967295
 80107fa:	e7e8      	b.n	80107ce <_strtod_l+0xf6>
 80107fc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80107fe:	1c5a      	adds	r2, r3, #1
 8010800:	921b      	str	r2, [sp, #108]	; 0x6c
 8010802:	785b      	ldrb	r3, [r3, #1]
 8010804:	2b30      	cmp	r3, #48	; 0x30
 8010806:	d0f9      	beq.n	80107fc <_strtod_l+0x124>
 8010808:	2b00      	cmp	r3, #0
 801080a:	d0a4      	beq.n	8010756 <_strtod_l+0x7e>
 801080c:	2301      	movs	r3, #1
 801080e:	2500      	movs	r5, #0
 8010810:	9306      	str	r3, [sp, #24]
 8010812:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8010814:	9308      	str	r3, [sp, #32]
 8010816:	9507      	str	r5, [sp, #28]
 8010818:	9505      	str	r5, [sp, #20]
 801081a:	220a      	movs	r2, #10
 801081c:	981b      	ldr	r0, [sp, #108]	; 0x6c
 801081e:	7807      	ldrb	r7, [r0, #0]
 8010820:	f1a7 0330 	sub.w	r3, r7, #48	; 0x30
 8010824:	b2d9      	uxtb	r1, r3
 8010826:	2909      	cmp	r1, #9
 8010828:	d929      	bls.n	801087e <_strtod_l+0x1a6>
 801082a:	4622      	mov	r2, r4
 801082c:	f8d8 1000 	ldr.w	r1, [r8]
 8010830:	f7ff ff0d 	bl	801064e <strncmp>
 8010834:	2800      	cmp	r0, #0
 8010836:	d031      	beq.n	801089c <_strtod_l+0x1c4>
 8010838:	2000      	movs	r0, #0
 801083a:	9c05      	ldr	r4, [sp, #20]
 801083c:	9004      	str	r0, [sp, #16]
 801083e:	463b      	mov	r3, r7
 8010840:	4602      	mov	r2, r0
 8010842:	2b65      	cmp	r3, #101	; 0x65
 8010844:	d001      	beq.n	801084a <_strtod_l+0x172>
 8010846:	2b45      	cmp	r3, #69	; 0x45
 8010848:	d114      	bne.n	8010874 <_strtod_l+0x19c>
 801084a:	b924      	cbnz	r4, 8010856 <_strtod_l+0x17e>
 801084c:	b910      	cbnz	r0, 8010854 <_strtod_l+0x17c>
 801084e:	9b06      	ldr	r3, [sp, #24]
 8010850:	2b00      	cmp	r3, #0
 8010852:	d09e      	beq.n	8010792 <_strtod_l+0xba>
 8010854:	2400      	movs	r4, #0
 8010856:	9e1b      	ldr	r6, [sp, #108]	; 0x6c
 8010858:	1c73      	adds	r3, r6, #1
 801085a:	931b      	str	r3, [sp, #108]	; 0x6c
 801085c:	7873      	ldrb	r3, [r6, #1]
 801085e:	2b2b      	cmp	r3, #43	; 0x2b
 8010860:	d078      	beq.n	8010954 <_strtod_l+0x27c>
 8010862:	2b2d      	cmp	r3, #45	; 0x2d
 8010864:	d070      	beq.n	8010948 <_strtod_l+0x270>
 8010866:	f04f 0c00 	mov.w	ip, #0
 801086a:	f1a3 0730 	sub.w	r7, r3, #48	; 0x30
 801086e:	2f09      	cmp	r7, #9
 8010870:	d97c      	bls.n	801096c <_strtod_l+0x294>
 8010872:	961b      	str	r6, [sp, #108]	; 0x6c
 8010874:	f04f 0e00 	mov.w	lr, #0
 8010878:	e09a      	b.n	80109b0 <_strtod_l+0x2d8>
 801087a:	2300      	movs	r3, #0
 801087c:	e7c7      	b.n	801080e <_strtod_l+0x136>
 801087e:	9905      	ldr	r1, [sp, #20]
 8010880:	2908      	cmp	r1, #8
 8010882:	bfdd      	ittte	le
 8010884:	9907      	ldrle	r1, [sp, #28]
 8010886:	fb02 3301 	mlale	r3, r2, r1, r3
 801088a:	9307      	strle	r3, [sp, #28]
 801088c:	fb02 3505 	mlagt	r5, r2, r5, r3
 8010890:	9b05      	ldr	r3, [sp, #20]
 8010892:	3001      	adds	r0, #1
 8010894:	3301      	adds	r3, #1
 8010896:	9305      	str	r3, [sp, #20]
 8010898:	901b      	str	r0, [sp, #108]	; 0x6c
 801089a:	e7bf      	b.n	801081c <_strtod_l+0x144>
 801089c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 801089e:	191a      	adds	r2, r3, r4
 80108a0:	921b      	str	r2, [sp, #108]	; 0x6c
 80108a2:	9a05      	ldr	r2, [sp, #20]
 80108a4:	5d1b      	ldrb	r3, [r3, r4]
 80108a6:	2a00      	cmp	r2, #0
 80108a8:	d037      	beq.n	801091a <_strtod_l+0x242>
 80108aa:	9c05      	ldr	r4, [sp, #20]
 80108ac:	4602      	mov	r2, r0
 80108ae:	f1a3 0130 	sub.w	r1, r3, #48	; 0x30
 80108b2:	2909      	cmp	r1, #9
 80108b4:	d913      	bls.n	80108de <_strtod_l+0x206>
 80108b6:	2101      	movs	r1, #1
 80108b8:	9104      	str	r1, [sp, #16]
 80108ba:	e7c2      	b.n	8010842 <_strtod_l+0x16a>
 80108bc:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80108be:	1c5a      	adds	r2, r3, #1
 80108c0:	921b      	str	r2, [sp, #108]	; 0x6c
 80108c2:	785b      	ldrb	r3, [r3, #1]
 80108c4:	3001      	adds	r0, #1
 80108c6:	2b30      	cmp	r3, #48	; 0x30
 80108c8:	d0f8      	beq.n	80108bc <_strtod_l+0x1e4>
 80108ca:	f1a3 0231 	sub.w	r2, r3, #49	; 0x31
 80108ce:	2a08      	cmp	r2, #8
 80108d0:	f200 84e4 	bhi.w	801129c <_strtod_l+0xbc4>
 80108d4:	9a1b      	ldr	r2, [sp, #108]	; 0x6c
 80108d6:	9208      	str	r2, [sp, #32]
 80108d8:	4602      	mov	r2, r0
 80108da:	2000      	movs	r0, #0
 80108dc:	4604      	mov	r4, r0
 80108de:	f1b3 0e30 	subs.w	lr, r3, #48	; 0x30
 80108e2:	f100 0101 	add.w	r1, r0, #1
 80108e6:	d012      	beq.n	801090e <_strtod_l+0x236>
 80108e8:	440a      	add	r2, r1
 80108ea:	eb00 0c04 	add.w	ip, r0, r4
 80108ee:	4621      	mov	r1, r4
 80108f0:	270a      	movs	r7, #10
 80108f2:	458c      	cmp	ip, r1
 80108f4:	d113      	bne.n	801091e <_strtod_l+0x246>
 80108f6:	1821      	adds	r1, r4, r0
 80108f8:	2908      	cmp	r1, #8
 80108fa:	f104 0401 	add.w	r4, r4, #1
 80108fe:	4404      	add	r4, r0
 8010900:	dc19      	bgt.n	8010936 <_strtod_l+0x25e>
 8010902:	9b07      	ldr	r3, [sp, #28]
 8010904:	210a      	movs	r1, #10
 8010906:	fb01 e303 	mla	r3, r1, r3, lr
 801090a:	9307      	str	r3, [sp, #28]
 801090c:	2100      	movs	r1, #0
 801090e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8010910:	1c58      	adds	r0, r3, #1
 8010912:	901b      	str	r0, [sp, #108]	; 0x6c
 8010914:	785b      	ldrb	r3, [r3, #1]
 8010916:	4608      	mov	r0, r1
 8010918:	e7c9      	b.n	80108ae <_strtod_l+0x1d6>
 801091a:	9805      	ldr	r0, [sp, #20]
 801091c:	e7d3      	b.n	80108c6 <_strtod_l+0x1ee>
 801091e:	2908      	cmp	r1, #8
 8010920:	f101 0101 	add.w	r1, r1, #1
 8010924:	dc03      	bgt.n	801092e <_strtod_l+0x256>
 8010926:	9b07      	ldr	r3, [sp, #28]
 8010928:	437b      	muls	r3, r7
 801092a:	9307      	str	r3, [sp, #28]
 801092c:	e7e1      	b.n	80108f2 <_strtod_l+0x21a>
 801092e:	2910      	cmp	r1, #16
 8010930:	bfd8      	it	le
 8010932:	437d      	mulle	r5, r7
 8010934:	e7dd      	b.n	80108f2 <_strtod_l+0x21a>
 8010936:	2c10      	cmp	r4, #16
 8010938:	bfdc      	itt	le
 801093a:	210a      	movle	r1, #10
 801093c:	fb01 e505 	mlale	r5, r1, r5, lr
 8010940:	e7e4      	b.n	801090c <_strtod_l+0x234>
 8010942:	2301      	movs	r3, #1
 8010944:	9304      	str	r3, [sp, #16]
 8010946:	e781      	b.n	801084c <_strtod_l+0x174>
 8010948:	f04f 0c01 	mov.w	ip, #1
 801094c:	1cb3      	adds	r3, r6, #2
 801094e:	931b      	str	r3, [sp, #108]	; 0x6c
 8010950:	78b3      	ldrb	r3, [r6, #2]
 8010952:	e78a      	b.n	801086a <_strtod_l+0x192>
 8010954:	f04f 0c00 	mov.w	ip, #0
 8010958:	e7f8      	b.n	801094c <_strtod_l+0x274>
 801095a:	bf00      	nop
 801095c:	080163ac 	.word	0x080163ac
 8010960:	7ff00000 	.word	0x7ff00000
 8010964:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8010966:	1c5f      	adds	r7, r3, #1
 8010968:	971b      	str	r7, [sp, #108]	; 0x6c
 801096a:	785b      	ldrb	r3, [r3, #1]
 801096c:	2b30      	cmp	r3, #48	; 0x30
 801096e:	d0f9      	beq.n	8010964 <_strtod_l+0x28c>
 8010970:	f1a3 0731 	sub.w	r7, r3, #49	; 0x31
 8010974:	2f08      	cmp	r7, #8
 8010976:	f63f af7d 	bhi.w	8010874 <_strtod_l+0x19c>
 801097a:	f1a3 0e30 	sub.w	lr, r3, #48	; 0x30
 801097e:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8010980:	930a      	str	r3, [sp, #40]	; 0x28
 8010982:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8010984:	1c5f      	adds	r7, r3, #1
 8010986:	971b      	str	r7, [sp, #108]	; 0x6c
 8010988:	785b      	ldrb	r3, [r3, #1]
 801098a:	f1a3 0830 	sub.w	r8, r3, #48	; 0x30
 801098e:	f1b8 0f09 	cmp.w	r8, #9
 8010992:	d937      	bls.n	8010a04 <_strtod_l+0x32c>
 8010994:	990a      	ldr	r1, [sp, #40]	; 0x28
 8010996:	1a7f      	subs	r7, r7, r1
 8010998:	2f08      	cmp	r7, #8
 801099a:	f644 671f 	movw	r7, #19999	; 0x4e1f
 801099e:	dc37      	bgt.n	8010a10 <_strtod_l+0x338>
 80109a0:	45be      	cmp	lr, r7
 80109a2:	bfa8      	it	ge
 80109a4:	46be      	movge	lr, r7
 80109a6:	f1bc 0f00 	cmp.w	ip, #0
 80109aa:	d001      	beq.n	80109b0 <_strtod_l+0x2d8>
 80109ac:	f1ce 0e00 	rsb	lr, lr, #0
 80109b0:	2c00      	cmp	r4, #0
 80109b2:	d151      	bne.n	8010a58 <_strtod_l+0x380>
 80109b4:	2800      	cmp	r0, #0
 80109b6:	f47f aece 	bne.w	8010756 <_strtod_l+0x7e>
 80109ba:	9a06      	ldr	r2, [sp, #24]
 80109bc:	2a00      	cmp	r2, #0
 80109be:	f47f aeca 	bne.w	8010756 <_strtod_l+0x7e>
 80109c2:	9a04      	ldr	r2, [sp, #16]
 80109c4:	2a00      	cmp	r2, #0
 80109c6:	f47f aee4 	bne.w	8010792 <_strtod_l+0xba>
 80109ca:	2b4e      	cmp	r3, #78	; 0x4e
 80109cc:	d027      	beq.n	8010a1e <_strtod_l+0x346>
 80109ce:	dc21      	bgt.n	8010a14 <_strtod_l+0x33c>
 80109d0:	2b49      	cmp	r3, #73	; 0x49
 80109d2:	f47f aede 	bne.w	8010792 <_strtod_l+0xba>
 80109d6:	49a0      	ldr	r1, [pc, #640]	; (8010c58 <_strtod_l+0x580>)
 80109d8:	a81b      	add	r0, sp, #108	; 0x6c
 80109da:	f000 ff07 	bl	80117ec <__match>
 80109de:	2800      	cmp	r0, #0
 80109e0:	f43f aed7 	beq.w	8010792 <_strtod_l+0xba>
 80109e4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80109e6:	499d      	ldr	r1, [pc, #628]	; (8010c5c <_strtod_l+0x584>)
 80109e8:	3b01      	subs	r3, #1
 80109ea:	a81b      	add	r0, sp, #108	; 0x6c
 80109ec:	931b      	str	r3, [sp, #108]	; 0x6c
 80109ee:	f000 fefd 	bl	80117ec <__match>
 80109f2:	b910      	cbnz	r0, 80109fa <_strtod_l+0x322>
 80109f4:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 80109f6:	3301      	adds	r3, #1
 80109f8:	931b      	str	r3, [sp, #108]	; 0x6c
 80109fa:	f8df b274 	ldr.w	fp, [pc, #628]	; 8010c70 <_strtod_l+0x598>
 80109fe:	f04f 0a00 	mov.w	sl, #0
 8010a02:	e6a8      	b.n	8010756 <_strtod_l+0x7e>
 8010a04:	210a      	movs	r1, #10
 8010a06:	fb01 3e0e 	mla	lr, r1, lr, r3
 8010a0a:	f1ae 0e30 	sub.w	lr, lr, #48	; 0x30
 8010a0e:	e7b8      	b.n	8010982 <_strtod_l+0x2aa>
 8010a10:	46be      	mov	lr, r7
 8010a12:	e7c8      	b.n	80109a6 <_strtod_l+0x2ce>
 8010a14:	2b69      	cmp	r3, #105	; 0x69
 8010a16:	d0de      	beq.n	80109d6 <_strtod_l+0x2fe>
 8010a18:	2b6e      	cmp	r3, #110	; 0x6e
 8010a1a:	f47f aeba 	bne.w	8010792 <_strtod_l+0xba>
 8010a1e:	4990      	ldr	r1, [pc, #576]	; (8010c60 <_strtod_l+0x588>)
 8010a20:	a81b      	add	r0, sp, #108	; 0x6c
 8010a22:	f000 fee3 	bl	80117ec <__match>
 8010a26:	2800      	cmp	r0, #0
 8010a28:	f43f aeb3 	beq.w	8010792 <_strtod_l+0xba>
 8010a2c:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8010a2e:	781b      	ldrb	r3, [r3, #0]
 8010a30:	2b28      	cmp	r3, #40	; 0x28
 8010a32:	d10e      	bne.n	8010a52 <_strtod_l+0x37a>
 8010a34:	aa1e      	add	r2, sp, #120	; 0x78
 8010a36:	498b      	ldr	r1, [pc, #556]	; (8010c64 <_strtod_l+0x58c>)
 8010a38:	a81b      	add	r0, sp, #108	; 0x6c
 8010a3a:	f000 feeb 	bl	8011814 <__hexnan>
 8010a3e:	2805      	cmp	r0, #5
 8010a40:	d107      	bne.n	8010a52 <_strtod_l+0x37a>
 8010a42:	9b1f      	ldr	r3, [sp, #124]	; 0x7c
 8010a44:	f8dd a078 	ldr.w	sl, [sp, #120]	; 0x78
 8010a48:	f043 4bff 	orr.w	fp, r3, #2139095040	; 0x7f800000
 8010a4c:	f44b 0be0 	orr.w	fp, fp, #7340032	; 0x700000
 8010a50:	e681      	b.n	8010756 <_strtod_l+0x7e>
 8010a52:	f8df b224 	ldr.w	fp, [pc, #548]	; 8010c78 <_strtod_l+0x5a0>
 8010a56:	e7d2      	b.n	80109fe <_strtod_l+0x326>
 8010a58:	ebae 0302 	sub.w	r3, lr, r2
 8010a5c:	9306      	str	r3, [sp, #24]
 8010a5e:	9b05      	ldr	r3, [sp, #20]
 8010a60:	9807      	ldr	r0, [sp, #28]
 8010a62:	2b00      	cmp	r3, #0
 8010a64:	bf08      	it	eq
 8010a66:	4623      	moveq	r3, r4
 8010a68:	2c10      	cmp	r4, #16
 8010a6a:	9305      	str	r3, [sp, #20]
 8010a6c:	46a0      	mov	r8, r4
 8010a6e:	bfa8      	it	ge
 8010a70:	f04f 0810 	movge.w	r8, #16
 8010a74:	f7ef fd18 	bl	80004a8 <__aeabi_ui2d>
 8010a78:	2c09      	cmp	r4, #9
 8010a7a:	4682      	mov	sl, r0
 8010a7c:	468b      	mov	fp, r1
 8010a7e:	dc13      	bgt.n	8010aa8 <_strtod_l+0x3d0>
 8010a80:	9b06      	ldr	r3, [sp, #24]
 8010a82:	2b00      	cmp	r3, #0
 8010a84:	f43f ae67 	beq.w	8010756 <_strtod_l+0x7e>
 8010a88:	9b06      	ldr	r3, [sp, #24]
 8010a8a:	dd7a      	ble.n	8010b82 <_strtod_l+0x4aa>
 8010a8c:	2b16      	cmp	r3, #22
 8010a8e:	dc61      	bgt.n	8010b54 <_strtod_l+0x47c>
 8010a90:	4a75      	ldr	r2, [pc, #468]	; (8010c68 <_strtod_l+0x590>)
 8010a92:	eb02 0ec3 	add.w	lr, r2, r3, lsl #3
 8010a96:	e9de 0100 	ldrd	r0, r1, [lr]
 8010a9a:	4652      	mov	r2, sl
 8010a9c:	465b      	mov	r3, fp
 8010a9e:	f7ef fd7d 	bl	800059c <__aeabi_dmul>
 8010aa2:	4682      	mov	sl, r0
 8010aa4:	468b      	mov	fp, r1
 8010aa6:	e656      	b.n	8010756 <_strtod_l+0x7e>
 8010aa8:	4b6f      	ldr	r3, [pc, #444]	; (8010c68 <_strtod_l+0x590>)
 8010aaa:	eb03 03c8 	add.w	r3, r3, r8, lsl #3
 8010aae:	e953 2312 	ldrd	r2, r3, [r3, #-72]	; 0x48
 8010ab2:	f7ef fd73 	bl	800059c <__aeabi_dmul>
 8010ab6:	4606      	mov	r6, r0
 8010ab8:	4628      	mov	r0, r5
 8010aba:	460f      	mov	r7, r1
 8010abc:	f7ef fcf4 	bl	80004a8 <__aeabi_ui2d>
 8010ac0:	4602      	mov	r2, r0
 8010ac2:	460b      	mov	r3, r1
 8010ac4:	4630      	mov	r0, r6
 8010ac6:	4639      	mov	r1, r7
 8010ac8:	f7ef fbb2 	bl	8000230 <__adddf3>
 8010acc:	2c0f      	cmp	r4, #15
 8010ace:	4682      	mov	sl, r0
 8010ad0:	468b      	mov	fp, r1
 8010ad2:	ddd5      	ble.n	8010a80 <_strtod_l+0x3a8>
 8010ad4:	9b06      	ldr	r3, [sp, #24]
 8010ad6:	eba4 0808 	sub.w	r8, r4, r8
 8010ada:	4498      	add	r8, r3
 8010adc:	f1b8 0f00 	cmp.w	r8, #0
 8010ae0:	f340 8096 	ble.w	8010c10 <_strtod_l+0x538>
 8010ae4:	f018 030f 	ands.w	r3, r8, #15
 8010ae8:	d00a      	beq.n	8010b00 <_strtod_l+0x428>
 8010aea:	495f      	ldr	r1, [pc, #380]	; (8010c68 <_strtod_l+0x590>)
 8010aec:	eb01 01c3 	add.w	r1, r1, r3, lsl #3
 8010af0:	4652      	mov	r2, sl
 8010af2:	465b      	mov	r3, fp
 8010af4:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010af8:	f7ef fd50 	bl	800059c <__aeabi_dmul>
 8010afc:	4682      	mov	sl, r0
 8010afe:	468b      	mov	fp, r1
 8010b00:	f038 080f 	bics.w	r8, r8, #15
 8010b04:	d073      	beq.n	8010bee <_strtod_l+0x516>
 8010b06:	f5b8 7f9a 	cmp.w	r8, #308	; 0x134
 8010b0a:	dd47      	ble.n	8010b9c <_strtod_l+0x4c4>
 8010b0c:	2400      	movs	r4, #0
 8010b0e:	46a0      	mov	r8, r4
 8010b10:	9407      	str	r4, [sp, #28]
 8010b12:	9405      	str	r4, [sp, #20]
 8010b14:	2322      	movs	r3, #34	; 0x22
 8010b16:	f8df b158 	ldr.w	fp, [pc, #344]	; 8010c70 <_strtod_l+0x598>
 8010b1a:	f8c9 3000 	str.w	r3, [r9]
 8010b1e:	f04f 0a00 	mov.w	sl, #0
 8010b22:	9b07      	ldr	r3, [sp, #28]
 8010b24:	2b00      	cmp	r3, #0
 8010b26:	f43f ae16 	beq.w	8010756 <_strtod_l+0x7e>
 8010b2a:	991c      	ldr	r1, [sp, #112]	; 0x70
 8010b2c:	4648      	mov	r0, r9
 8010b2e:	f000 ff49 	bl	80119c4 <_Bfree>
 8010b32:	9905      	ldr	r1, [sp, #20]
 8010b34:	4648      	mov	r0, r9
 8010b36:	f000 ff45 	bl	80119c4 <_Bfree>
 8010b3a:	4641      	mov	r1, r8
 8010b3c:	4648      	mov	r0, r9
 8010b3e:	f000 ff41 	bl	80119c4 <_Bfree>
 8010b42:	9907      	ldr	r1, [sp, #28]
 8010b44:	4648      	mov	r0, r9
 8010b46:	f000 ff3d 	bl	80119c4 <_Bfree>
 8010b4a:	4621      	mov	r1, r4
 8010b4c:	4648      	mov	r0, r9
 8010b4e:	f000 ff39 	bl	80119c4 <_Bfree>
 8010b52:	e600      	b.n	8010756 <_strtod_l+0x7e>
 8010b54:	9a06      	ldr	r2, [sp, #24]
 8010b56:	f1c4 0325 	rsb	r3, r4, #37	; 0x25
 8010b5a:	4293      	cmp	r3, r2
 8010b5c:	dbba      	blt.n	8010ad4 <_strtod_l+0x3fc>
 8010b5e:	4d42      	ldr	r5, [pc, #264]	; (8010c68 <_strtod_l+0x590>)
 8010b60:	f1c4 040f 	rsb	r4, r4, #15
 8010b64:	eb05 01c4 	add.w	r1, r5, r4, lsl #3
 8010b68:	4652      	mov	r2, sl
 8010b6a:	465b      	mov	r3, fp
 8010b6c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8010b70:	f7ef fd14 	bl	800059c <__aeabi_dmul>
 8010b74:	9b06      	ldr	r3, [sp, #24]
 8010b76:	1b1c      	subs	r4, r3, r4
 8010b78:	eb05 05c4 	add.w	r5, r5, r4, lsl #3
 8010b7c:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010b80:	e78d      	b.n	8010a9e <_strtod_l+0x3c6>
 8010b82:	f113 0f16 	cmn.w	r3, #22
 8010b86:	dba5      	blt.n	8010ad4 <_strtod_l+0x3fc>
 8010b88:	4a37      	ldr	r2, [pc, #220]	; (8010c68 <_strtod_l+0x590>)
 8010b8a:	eba2 02c3 	sub.w	r2, r2, r3, lsl #3
 8010b8e:	e9d2 2300 	ldrd	r2, r3, [r2]
 8010b92:	4650      	mov	r0, sl
 8010b94:	4659      	mov	r1, fp
 8010b96:	f7ef fe2b 	bl	80007f0 <__aeabi_ddiv>
 8010b9a:	e782      	b.n	8010aa2 <_strtod_l+0x3ca>
 8010b9c:	2300      	movs	r3, #0
 8010b9e:	4e33      	ldr	r6, [pc, #204]	; (8010c6c <_strtod_l+0x594>)
 8010ba0:	ea4f 1828 	mov.w	r8, r8, asr #4
 8010ba4:	4650      	mov	r0, sl
 8010ba6:	4659      	mov	r1, fp
 8010ba8:	461d      	mov	r5, r3
 8010baa:	f1b8 0f01 	cmp.w	r8, #1
 8010bae:	dc21      	bgt.n	8010bf4 <_strtod_l+0x51c>
 8010bb0:	b10b      	cbz	r3, 8010bb6 <_strtod_l+0x4de>
 8010bb2:	4682      	mov	sl, r0
 8010bb4:	468b      	mov	fp, r1
 8010bb6:	4b2d      	ldr	r3, [pc, #180]	; (8010c6c <_strtod_l+0x594>)
 8010bb8:	f1ab 7b54 	sub.w	fp, fp, #55574528	; 0x3500000
 8010bbc:	eb03 05c5 	add.w	r5, r3, r5, lsl #3
 8010bc0:	4652      	mov	r2, sl
 8010bc2:	465b      	mov	r3, fp
 8010bc4:	e9d5 0100 	ldrd	r0, r1, [r5]
 8010bc8:	f7ef fce8 	bl	800059c <__aeabi_dmul>
 8010bcc:	4b28      	ldr	r3, [pc, #160]	; (8010c70 <_strtod_l+0x598>)
 8010bce:	460a      	mov	r2, r1
 8010bd0:	400b      	ands	r3, r1
 8010bd2:	4928      	ldr	r1, [pc, #160]	; (8010c74 <_strtod_l+0x59c>)
 8010bd4:	428b      	cmp	r3, r1
 8010bd6:	4682      	mov	sl, r0
 8010bd8:	d898      	bhi.n	8010b0c <_strtod_l+0x434>
 8010bda:	f5a1 1180 	sub.w	r1, r1, #1048576	; 0x100000
 8010bde:	428b      	cmp	r3, r1
 8010be0:	bf86      	itte	hi
 8010be2:	f8df b098 	ldrhi.w	fp, [pc, #152]	; 8010c7c <_strtod_l+0x5a4>
 8010be6:	f04f 3aff 	movhi.w	sl, #4294967295
 8010bea:	f102 7b54 	addls.w	fp, r2, #55574528	; 0x3500000
 8010bee:	2300      	movs	r3, #0
 8010bf0:	9304      	str	r3, [sp, #16]
 8010bf2:	e077      	b.n	8010ce4 <_strtod_l+0x60c>
 8010bf4:	f018 0f01 	tst.w	r8, #1
 8010bf8:	d006      	beq.n	8010c08 <_strtod_l+0x530>
 8010bfa:	eb06 03c5 	add.w	r3, r6, r5, lsl #3
 8010bfe:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010c02:	f7ef fccb 	bl	800059c <__aeabi_dmul>
 8010c06:	2301      	movs	r3, #1
 8010c08:	3501      	adds	r5, #1
 8010c0a:	ea4f 0868 	mov.w	r8, r8, asr #1
 8010c0e:	e7cc      	b.n	8010baa <_strtod_l+0x4d2>
 8010c10:	d0ed      	beq.n	8010bee <_strtod_l+0x516>
 8010c12:	f1c8 0800 	rsb	r8, r8, #0
 8010c16:	f018 020f 	ands.w	r2, r8, #15
 8010c1a:	d00a      	beq.n	8010c32 <_strtod_l+0x55a>
 8010c1c:	4b12      	ldr	r3, [pc, #72]	; (8010c68 <_strtod_l+0x590>)
 8010c1e:	eb03 03c2 	add.w	r3, r3, r2, lsl #3
 8010c22:	4650      	mov	r0, sl
 8010c24:	4659      	mov	r1, fp
 8010c26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8010c2a:	f7ef fde1 	bl	80007f0 <__aeabi_ddiv>
 8010c2e:	4682      	mov	sl, r0
 8010c30:	468b      	mov	fp, r1
 8010c32:	ea5f 1828 	movs.w	r8, r8, asr #4
 8010c36:	d0da      	beq.n	8010bee <_strtod_l+0x516>
 8010c38:	f1b8 0f1f 	cmp.w	r8, #31
 8010c3c:	dd20      	ble.n	8010c80 <_strtod_l+0x5a8>
 8010c3e:	2400      	movs	r4, #0
 8010c40:	46a0      	mov	r8, r4
 8010c42:	9407      	str	r4, [sp, #28]
 8010c44:	9405      	str	r4, [sp, #20]
 8010c46:	2322      	movs	r3, #34	; 0x22
 8010c48:	f04f 0a00 	mov.w	sl, #0
 8010c4c:	f04f 0b00 	mov.w	fp, #0
 8010c50:	f8c9 3000 	str.w	r3, [r9]
 8010c54:	e765      	b.n	8010b22 <_strtod_l+0x44a>
 8010c56:	bf00      	nop
 8010c58:	080163a0 	.word	0x080163a0
 8010c5c:	080163a3 	.word	0x080163a3
 8010c60:	080163a9 	.word	0x080163a9
 8010c64:	080163c0 	.word	0x080163c0
 8010c68:	08016438 	.word	0x08016438
 8010c6c:	08016410 	.word	0x08016410
 8010c70:	7ff00000 	.word	0x7ff00000
 8010c74:	7ca00000 	.word	0x7ca00000
 8010c78:	fff80000 	.word	0xfff80000
 8010c7c:	7fefffff 	.word	0x7fefffff
 8010c80:	f018 0310 	ands.w	r3, r8, #16
 8010c84:	bf18      	it	ne
 8010c86:	236a      	movne	r3, #106	; 0x6a
 8010c88:	4da0      	ldr	r5, [pc, #640]	; (8010f0c <_strtod_l+0x834>)
 8010c8a:	9304      	str	r3, [sp, #16]
 8010c8c:	4650      	mov	r0, sl
 8010c8e:	4659      	mov	r1, fp
 8010c90:	2300      	movs	r3, #0
 8010c92:	f1b8 0f00 	cmp.w	r8, #0
 8010c96:	f300 810a 	bgt.w	8010eae <_strtod_l+0x7d6>
 8010c9a:	b10b      	cbz	r3, 8010ca0 <_strtod_l+0x5c8>
 8010c9c:	4682      	mov	sl, r0
 8010c9e:	468b      	mov	fp, r1
 8010ca0:	9b04      	ldr	r3, [sp, #16]
 8010ca2:	b1bb      	cbz	r3, 8010cd4 <_strtod_l+0x5fc>
 8010ca4:	f3cb 530a 	ubfx	r3, fp, #20, #11
 8010ca8:	f1c3 036b 	rsb	r3, r3, #107	; 0x6b
 8010cac:	2b00      	cmp	r3, #0
 8010cae:	4659      	mov	r1, fp
 8010cb0:	dd10      	ble.n	8010cd4 <_strtod_l+0x5fc>
 8010cb2:	2b1f      	cmp	r3, #31
 8010cb4:	f340 8107 	ble.w	8010ec6 <_strtod_l+0x7ee>
 8010cb8:	2b34      	cmp	r3, #52	; 0x34
 8010cba:	bfde      	ittt	le
 8010cbc:	3b20      	suble	r3, #32
 8010cbe:	f04f 32ff 	movle.w	r2, #4294967295
 8010cc2:	fa02 f303 	lslle.w	r3, r2, r3
 8010cc6:	f04f 0a00 	mov.w	sl, #0
 8010cca:	bfcc      	ite	gt
 8010ccc:	f04f 7b5c 	movgt.w	fp, #57671680	; 0x3700000
 8010cd0:	ea03 0b01 	andle.w	fp, r3, r1
 8010cd4:	2200      	movs	r2, #0
 8010cd6:	2300      	movs	r3, #0
 8010cd8:	4650      	mov	r0, sl
 8010cda:	4659      	mov	r1, fp
 8010cdc:	f7ef fec6 	bl	8000a6c <__aeabi_dcmpeq>
 8010ce0:	2800      	cmp	r0, #0
 8010ce2:	d1ac      	bne.n	8010c3e <_strtod_l+0x566>
 8010ce4:	9b07      	ldr	r3, [sp, #28]
 8010ce6:	9300      	str	r3, [sp, #0]
 8010ce8:	9a05      	ldr	r2, [sp, #20]
 8010cea:	9908      	ldr	r1, [sp, #32]
 8010cec:	4623      	mov	r3, r4
 8010cee:	4648      	mov	r0, r9
 8010cf0:	f000 feba 	bl	8011a68 <__s2b>
 8010cf4:	9007      	str	r0, [sp, #28]
 8010cf6:	2800      	cmp	r0, #0
 8010cf8:	f43f af08 	beq.w	8010b0c <_strtod_l+0x434>
 8010cfc:	9a06      	ldr	r2, [sp, #24]
 8010cfe:	9b06      	ldr	r3, [sp, #24]
 8010d00:	2a00      	cmp	r2, #0
 8010d02:	f1c3 0300 	rsb	r3, r3, #0
 8010d06:	bfa8      	it	ge
 8010d08:	2300      	movge	r3, #0
 8010d0a:	930e      	str	r3, [sp, #56]	; 0x38
 8010d0c:	2400      	movs	r4, #0
 8010d0e:	ea22 73e2 	bic.w	r3, r2, r2, asr #31
 8010d12:	9316      	str	r3, [sp, #88]	; 0x58
 8010d14:	46a0      	mov	r8, r4
 8010d16:	9b07      	ldr	r3, [sp, #28]
 8010d18:	4648      	mov	r0, r9
 8010d1a:	6859      	ldr	r1, [r3, #4]
 8010d1c:	f000 fe1e 	bl	801195c <_Balloc>
 8010d20:	9005      	str	r0, [sp, #20]
 8010d22:	2800      	cmp	r0, #0
 8010d24:	f43f aef6 	beq.w	8010b14 <_strtod_l+0x43c>
 8010d28:	9b07      	ldr	r3, [sp, #28]
 8010d2a:	691a      	ldr	r2, [r3, #16]
 8010d2c:	3202      	adds	r2, #2
 8010d2e:	f103 010c 	add.w	r1, r3, #12
 8010d32:	0092      	lsls	r2, r2, #2
 8010d34:	300c      	adds	r0, #12
 8010d36:	f7ff fc77 	bl	8010628 <memcpy>
 8010d3a:	aa1e      	add	r2, sp, #120	; 0x78
 8010d3c:	a91d      	add	r1, sp, #116	; 0x74
 8010d3e:	ec4b ab10 	vmov	d0, sl, fp
 8010d42:	4648      	mov	r0, r9
 8010d44:	e9cd ab08 	strd	sl, fp, [sp, #32]
 8010d48:	f001 f94a 	bl	8011fe0 <__d2b>
 8010d4c:	901c      	str	r0, [sp, #112]	; 0x70
 8010d4e:	2800      	cmp	r0, #0
 8010d50:	f43f aee0 	beq.w	8010b14 <_strtod_l+0x43c>
 8010d54:	2101      	movs	r1, #1
 8010d56:	4648      	mov	r0, r9
 8010d58:	f000 ff12 	bl	8011b80 <__i2b>
 8010d5c:	4680      	mov	r8, r0
 8010d5e:	2800      	cmp	r0, #0
 8010d60:	f43f aed8 	beq.w	8010b14 <_strtod_l+0x43c>
 8010d64:	9e1d      	ldr	r6, [sp, #116]	; 0x74
 8010d66:	9a1e      	ldr	r2, [sp, #120]	; 0x78
 8010d68:	2e00      	cmp	r6, #0
 8010d6a:	bfab      	itete	ge
 8010d6c:	9b0e      	ldrge	r3, [sp, #56]	; 0x38
 8010d6e:	9b16      	ldrlt	r3, [sp, #88]	; 0x58
 8010d70:	9d16      	ldrge	r5, [sp, #88]	; 0x58
 8010d72:	9f0e      	ldrlt	r7, [sp, #56]	; 0x38
 8010d74:	bfac      	ite	ge
 8010d76:	18f7      	addge	r7, r6, r3
 8010d78:	1b9d      	sublt	r5, r3, r6
 8010d7a:	9b04      	ldr	r3, [sp, #16]
 8010d7c:	1af6      	subs	r6, r6, r3
 8010d7e:	4416      	add	r6, r2
 8010d80:	4b63      	ldr	r3, [pc, #396]	; (8010f10 <_strtod_l+0x838>)
 8010d82:	3e01      	subs	r6, #1
 8010d84:	429e      	cmp	r6, r3
 8010d86:	f1c2 0236 	rsb	r2, r2, #54	; 0x36
 8010d8a:	f280 80af 	bge.w	8010eec <_strtod_l+0x814>
 8010d8e:	1b9b      	subs	r3, r3, r6
 8010d90:	2b1f      	cmp	r3, #31
 8010d92:	eba2 0203 	sub.w	r2, r2, r3
 8010d96:	f04f 0101 	mov.w	r1, #1
 8010d9a:	f300 809b 	bgt.w	8010ed4 <_strtod_l+0x7fc>
 8010d9e:	fa01 f303 	lsl.w	r3, r1, r3
 8010da2:	930f      	str	r3, [sp, #60]	; 0x3c
 8010da4:	2300      	movs	r3, #0
 8010da6:	930a      	str	r3, [sp, #40]	; 0x28
 8010da8:	18be      	adds	r6, r7, r2
 8010daa:	9b04      	ldr	r3, [sp, #16]
 8010dac:	42b7      	cmp	r7, r6
 8010dae:	4415      	add	r5, r2
 8010db0:	441d      	add	r5, r3
 8010db2:	463b      	mov	r3, r7
 8010db4:	bfa8      	it	ge
 8010db6:	4633      	movge	r3, r6
 8010db8:	42ab      	cmp	r3, r5
 8010dba:	bfa8      	it	ge
 8010dbc:	462b      	movge	r3, r5
 8010dbe:	2b00      	cmp	r3, #0
 8010dc0:	bfc2      	ittt	gt
 8010dc2:	1af6      	subgt	r6, r6, r3
 8010dc4:	1aed      	subgt	r5, r5, r3
 8010dc6:	1aff      	subgt	r7, r7, r3
 8010dc8:	9b0e      	ldr	r3, [sp, #56]	; 0x38
 8010dca:	b1bb      	cbz	r3, 8010dfc <_strtod_l+0x724>
 8010dcc:	4641      	mov	r1, r8
 8010dce:	461a      	mov	r2, r3
 8010dd0:	4648      	mov	r0, r9
 8010dd2:	f000 ff75 	bl	8011cc0 <__pow5mult>
 8010dd6:	4680      	mov	r8, r0
 8010dd8:	2800      	cmp	r0, #0
 8010dda:	f43f ae9b 	beq.w	8010b14 <_strtod_l+0x43c>
 8010dde:	4601      	mov	r1, r0
 8010de0:	9a1c      	ldr	r2, [sp, #112]	; 0x70
 8010de2:	4648      	mov	r0, r9
 8010de4:	f000 fed5 	bl	8011b92 <__multiply>
 8010de8:	900c      	str	r0, [sp, #48]	; 0x30
 8010dea:	2800      	cmp	r0, #0
 8010dec:	f43f ae92 	beq.w	8010b14 <_strtod_l+0x43c>
 8010df0:	991c      	ldr	r1, [sp, #112]	; 0x70
 8010df2:	4648      	mov	r0, r9
 8010df4:	f000 fde6 	bl	80119c4 <_Bfree>
 8010df8:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010dfa:	931c      	str	r3, [sp, #112]	; 0x70
 8010dfc:	2e00      	cmp	r6, #0
 8010dfe:	dc7a      	bgt.n	8010ef6 <_strtod_l+0x81e>
 8010e00:	9b06      	ldr	r3, [sp, #24]
 8010e02:	2b00      	cmp	r3, #0
 8010e04:	dd08      	ble.n	8010e18 <_strtod_l+0x740>
 8010e06:	9a16      	ldr	r2, [sp, #88]	; 0x58
 8010e08:	9905      	ldr	r1, [sp, #20]
 8010e0a:	4648      	mov	r0, r9
 8010e0c:	f000 ff58 	bl	8011cc0 <__pow5mult>
 8010e10:	9005      	str	r0, [sp, #20]
 8010e12:	2800      	cmp	r0, #0
 8010e14:	f43f ae7e 	beq.w	8010b14 <_strtod_l+0x43c>
 8010e18:	2d00      	cmp	r5, #0
 8010e1a:	dd08      	ble.n	8010e2e <_strtod_l+0x756>
 8010e1c:	462a      	mov	r2, r5
 8010e1e:	9905      	ldr	r1, [sp, #20]
 8010e20:	4648      	mov	r0, r9
 8010e22:	f000 ff9b 	bl	8011d5c <__lshift>
 8010e26:	9005      	str	r0, [sp, #20]
 8010e28:	2800      	cmp	r0, #0
 8010e2a:	f43f ae73 	beq.w	8010b14 <_strtod_l+0x43c>
 8010e2e:	2f00      	cmp	r7, #0
 8010e30:	dd08      	ble.n	8010e44 <_strtod_l+0x76c>
 8010e32:	4641      	mov	r1, r8
 8010e34:	463a      	mov	r2, r7
 8010e36:	4648      	mov	r0, r9
 8010e38:	f000 ff90 	bl	8011d5c <__lshift>
 8010e3c:	4680      	mov	r8, r0
 8010e3e:	2800      	cmp	r0, #0
 8010e40:	f43f ae68 	beq.w	8010b14 <_strtod_l+0x43c>
 8010e44:	9a05      	ldr	r2, [sp, #20]
 8010e46:	991c      	ldr	r1, [sp, #112]	; 0x70
 8010e48:	4648      	mov	r0, r9
 8010e4a:	f000 fff5 	bl	8011e38 <__mdiff>
 8010e4e:	4604      	mov	r4, r0
 8010e50:	2800      	cmp	r0, #0
 8010e52:	f43f ae5f 	beq.w	8010b14 <_strtod_l+0x43c>
 8010e56:	68c3      	ldr	r3, [r0, #12]
 8010e58:	930c      	str	r3, [sp, #48]	; 0x30
 8010e5a:	2300      	movs	r3, #0
 8010e5c:	60c3      	str	r3, [r0, #12]
 8010e5e:	4641      	mov	r1, r8
 8010e60:	f000 ffd0 	bl	8011e04 <__mcmp>
 8010e64:	2800      	cmp	r0, #0
 8010e66:	da55      	bge.n	8010f14 <_strtod_l+0x83c>
 8010e68:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010e6a:	b9e3      	cbnz	r3, 8010ea6 <_strtod_l+0x7ce>
 8010e6c:	f1ba 0f00 	cmp.w	sl, #0
 8010e70:	d119      	bne.n	8010ea6 <_strtod_l+0x7ce>
 8010e72:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8010e76:	b9b3      	cbnz	r3, 8010ea6 <_strtod_l+0x7ce>
 8010e78:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 8010e7c:	0d1b      	lsrs	r3, r3, #20
 8010e7e:	051b      	lsls	r3, r3, #20
 8010e80:	f1b3 6fd6 	cmp.w	r3, #112197632	; 0x6b00000
 8010e84:	d90f      	bls.n	8010ea6 <_strtod_l+0x7ce>
 8010e86:	6963      	ldr	r3, [r4, #20]
 8010e88:	b913      	cbnz	r3, 8010e90 <_strtod_l+0x7b8>
 8010e8a:	6923      	ldr	r3, [r4, #16]
 8010e8c:	2b01      	cmp	r3, #1
 8010e8e:	dd0a      	ble.n	8010ea6 <_strtod_l+0x7ce>
 8010e90:	4621      	mov	r1, r4
 8010e92:	2201      	movs	r2, #1
 8010e94:	4648      	mov	r0, r9
 8010e96:	f000 ff61 	bl	8011d5c <__lshift>
 8010e9a:	4641      	mov	r1, r8
 8010e9c:	4604      	mov	r4, r0
 8010e9e:	f000 ffb1 	bl	8011e04 <__mcmp>
 8010ea2:	2800      	cmp	r0, #0
 8010ea4:	dc67      	bgt.n	8010f76 <_strtod_l+0x89e>
 8010ea6:	9b04      	ldr	r3, [sp, #16]
 8010ea8:	2b00      	cmp	r3, #0
 8010eaa:	d171      	bne.n	8010f90 <_strtod_l+0x8b8>
 8010eac:	e63d      	b.n	8010b2a <_strtod_l+0x452>
 8010eae:	f018 0f01 	tst.w	r8, #1
 8010eb2:	d004      	beq.n	8010ebe <_strtod_l+0x7e6>
 8010eb4:	e9d5 2300 	ldrd	r2, r3, [r5]
 8010eb8:	f7ef fb70 	bl	800059c <__aeabi_dmul>
 8010ebc:	2301      	movs	r3, #1
 8010ebe:	ea4f 0868 	mov.w	r8, r8, asr #1
 8010ec2:	3508      	adds	r5, #8
 8010ec4:	e6e5      	b.n	8010c92 <_strtod_l+0x5ba>
 8010ec6:	f04f 32ff 	mov.w	r2, #4294967295
 8010eca:	fa02 f303 	lsl.w	r3, r2, r3
 8010ece:	ea03 0a0a 	and.w	sl, r3, sl
 8010ed2:	e6ff      	b.n	8010cd4 <_strtod_l+0x5fc>
 8010ed4:	f1c6 467f 	rsb	r6, r6, #4278190080	; 0xff000000
 8010ed8:	f506 067f 	add.w	r6, r6, #16711680	; 0xff0000
 8010edc:	f506 467b 	add.w	r6, r6, #64256	; 0xfb00
 8010ee0:	36e2      	adds	r6, #226	; 0xe2
 8010ee2:	fa01 f306 	lsl.w	r3, r1, r6
 8010ee6:	930a      	str	r3, [sp, #40]	; 0x28
 8010ee8:	910f      	str	r1, [sp, #60]	; 0x3c
 8010eea:	e75d      	b.n	8010da8 <_strtod_l+0x6d0>
 8010eec:	2300      	movs	r3, #0
 8010eee:	930a      	str	r3, [sp, #40]	; 0x28
 8010ef0:	2301      	movs	r3, #1
 8010ef2:	930f      	str	r3, [sp, #60]	; 0x3c
 8010ef4:	e758      	b.n	8010da8 <_strtod_l+0x6d0>
 8010ef6:	4632      	mov	r2, r6
 8010ef8:	991c      	ldr	r1, [sp, #112]	; 0x70
 8010efa:	4648      	mov	r0, r9
 8010efc:	f000 ff2e 	bl	8011d5c <__lshift>
 8010f00:	901c      	str	r0, [sp, #112]	; 0x70
 8010f02:	2800      	cmp	r0, #0
 8010f04:	f47f af7c 	bne.w	8010e00 <_strtod_l+0x728>
 8010f08:	e604      	b.n	8010b14 <_strtod_l+0x43c>
 8010f0a:	bf00      	nop
 8010f0c:	080163d8 	.word	0x080163d8
 8010f10:	fffffc02 	.word	0xfffffc02
 8010f14:	465d      	mov	r5, fp
 8010f16:	f040 8086 	bne.w	8011026 <_strtod_l+0x94e>
 8010f1a:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8010f1c:	f3cb 0313 	ubfx	r3, fp, #0, #20
 8010f20:	b32a      	cbz	r2, 8010f6e <_strtod_l+0x896>
 8010f22:	4aaf      	ldr	r2, [pc, #700]	; (80111e0 <_strtod_l+0xb08>)
 8010f24:	4293      	cmp	r3, r2
 8010f26:	d153      	bne.n	8010fd0 <_strtod_l+0x8f8>
 8010f28:	9b04      	ldr	r3, [sp, #16]
 8010f2a:	4650      	mov	r0, sl
 8010f2c:	b1d3      	cbz	r3, 8010f64 <_strtod_l+0x88c>
 8010f2e:	4aad      	ldr	r2, [pc, #692]	; (80111e4 <_strtod_l+0xb0c>)
 8010f30:	402a      	ands	r2, r5
 8010f32:	f1b2 6fd4 	cmp.w	r2, #111149056	; 0x6a00000
 8010f36:	f04f 31ff 	mov.w	r1, #4294967295
 8010f3a:	d816      	bhi.n	8010f6a <_strtod_l+0x892>
 8010f3c:	0d12      	lsrs	r2, r2, #20
 8010f3e:	f1c2 036b 	rsb	r3, r2, #107	; 0x6b
 8010f42:	fa01 f303 	lsl.w	r3, r1, r3
 8010f46:	4298      	cmp	r0, r3
 8010f48:	d142      	bne.n	8010fd0 <_strtod_l+0x8f8>
 8010f4a:	4ba7      	ldr	r3, [pc, #668]	; (80111e8 <_strtod_l+0xb10>)
 8010f4c:	429d      	cmp	r5, r3
 8010f4e:	d102      	bne.n	8010f56 <_strtod_l+0x87e>
 8010f50:	3001      	adds	r0, #1
 8010f52:	f43f addf 	beq.w	8010b14 <_strtod_l+0x43c>
 8010f56:	4ba3      	ldr	r3, [pc, #652]	; (80111e4 <_strtod_l+0xb0c>)
 8010f58:	402b      	ands	r3, r5
 8010f5a:	f503 1b80 	add.w	fp, r3, #1048576	; 0x100000
 8010f5e:	f04f 0a00 	mov.w	sl, #0
 8010f62:	e7a0      	b.n	8010ea6 <_strtod_l+0x7ce>
 8010f64:	f04f 33ff 	mov.w	r3, #4294967295
 8010f68:	e7ed      	b.n	8010f46 <_strtod_l+0x86e>
 8010f6a:	460b      	mov	r3, r1
 8010f6c:	e7eb      	b.n	8010f46 <_strtod_l+0x86e>
 8010f6e:	bb7b      	cbnz	r3, 8010fd0 <_strtod_l+0x8f8>
 8010f70:	f1ba 0f00 	cmp.w	sl, #0
 8010f74:	d12c      	bne.n	8010fd0 <_strtod_l+0x8f8>
 8010f76:	9904      	ldr	r1, [sp, #16]
 8010f78:	4a9a      	ldr	r2, [pc, #616]	; (80111e4 <_strtod_l+0xb0c>)
 8010f7a:	465b      	mov	r3, fp
 8010f7c:	b1f1      	cbz	r1, 8010fbc <_strtod_l+0x8e4>
 8010f7e:	ea02 010b 	and.w	r1, r2, fp
 8010f82:	f1b1 6fd6 	cmp.w	r1, #112197632	; 0x6b00000
 8010f86:	dc19      	bgt.n	8010fbc <_strtod_l+0x8e4>
 8010f88:	f1b1 7f5c 	cmp.w	r1, #57671680	; 0x3700000
 8010f8c:	f77f ae5b 	ble.w	8010c46 <_strtod_l+0x56e>
 8010f90:	4a96      	ldr	r2, [pc, #600]	; (80111ec <_strtod_l+0xb14>)
 8010f92:	2300      	movs	r3, #0
 8010f94:	e9cd 3214 	strd	r3, r2, [sp, #80]	; 0x50
 8010f98:	4650      	mov	r0, sl
 8010f9a:	4659      	mov	r1, fp
 8010f9c:	e9dd 2314 	ldrd	r2, r3, [sp, #80]	; 0x50
 8010fa0:	f7ef fafc 	bl	800059c <__aeabi_dmul>
 8010fa4:	4682      	mov	sl, r0
 8010fa6:	468b      	mov	fp, r1
 8010fa8:	2900      	cmp	r1, #0
 8010faa:	f47f adbe 	bne.w	8010b2a <_strtod_l+0x452>
 8010fae:	2800      	cmp	r0, #0
 8010fb0:	f47f adbb 	bne.w	8010b2a <_strtod_l+0x452>
 8010fb4:	2322      	movs	r3, #34	; 0x22
 8010fb6:	f8c9 3000 	str.w	r3, [r9]
 8010fba:	e5b6      	b.n	8010b2a <_strtod_l+0x452>
 8010fbc:	4013      	ands	r3, r2
 8010fbe:	f5a3 1380 	sub.w	r3, r3, #1048576	; 0x100000
 8010fc2:	ea6f 5b13 	mvn.w	fp, r3, lsr #20
 8010fc6:	ea6f 5b0b 	mvn.w	fp, fp, lsl #20
 8010fca:	f04f 3aff 	mov.w	sl, #4294967295
 8010fce:	e76a      	b.n	8010ea6 <_strtod_l+0x7ce>
 8010fd0:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8010fd2:	b193      	cbz	r3, 8010ffa <_strtod_l+0x922>
 8010fd4:	422b      	tst	r3, r5
 8010fd6:	f43f af66 	beq.w	8010ea6 <_strtod_l+0x7ce>
 8010fda:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8010fdc:	9a04      	ldr	r2, [sp, #16]
 8010fde:	4650      	mov	r0, sl
 8010fe0:	4659      	mov	r1, fp
 8010fe2:	b173      	cbz	r3, 8011002 <_strtod_l+0x92a>
 8010fe4:	f7ff fb5a 	bl	801069c <sulp>
 8010fe8:	4602      	mov	r2, r0
 8010fea:	460b      	mov	r3, r1
 8010fec:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 8010ff0:	f7ef f91e 	bl	8000230 <__adddf3>
 8010ff4:	4682      	mov	sl, r0
 8010ff6:	468b      	mov	fp, r1
 8010ff8:	e755      	b.n	8010ea6 <_strtod_l+0x7ce>
 8010ffa:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 8010ffc:	ea13 0f0a 	tst.w	r3, sl
 8011000:	e7e9      	b.n	8010fd6 <_strtod_l+0x8fe>
 8011002:	f7ff fb4b 	bl	801069c <sulp>
 8011006:	4602      	mov	r2, r0
 8011008:	460b      	mov	r3, r1
 801100a:	e9dd 0108 	ldrd	r0, r1, [sp, #32]
 801100e:	f7ef f90d 	bl	800022c <__aeabi_dsub>
 8011012:	2200      	movs	r2, #0
 8011014:	2300      	movs	r3, #0
 8011016:	4682      	mov	sl, r0
 8011018:	468b      	mov	fp, r1
 801101a:	f7ef fd27 	bl	8000a6c <__aeabi_dcmpeq>
 801101e:	2800      	cmp	r0, #0
 8011020:	f47f ae11 	bne.w	8010c46 <_strtod_l+0x56e>
 8011024:	e73f      	b.n	8010ea6 <_strtod_l+0x7ce>
 8011026:	4641      	mov	r1, r8
 8011028:	4620      	mov	r0, r4
 801102a:	f001 f828 	bl	801207e <__ratio>
 801102e:	ec57 6b10 	vmov	r6, r7, d0
 8011032:	2200      	movs	r2, #0
 8011034:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 8011038:	ee10 0a10 	vmov	r0, s0
 801103c:	4639      	mov	r1, r7
 801103e:	f7ef fd29 	bl	8000a94 <__aeabi_dcmple>
 8011042:	2800      	cmp	r0, #0
 8011044:	d077      	beq.n	8011136 <_strtod_l+0xa5e>
 8011046:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011048:	2b00      	cmp	r3, #0
 801104a:	d04a      	beq.n	80110e2 <_strtod_l+0xa0a>
 801104c:	4b68      	ldr	r3, [pc, #416]	; (80111f0 <_strtod_l+0xb18>)
 801104e:	2200      	movs	r2, #0
 8011050:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 8011054:	4f66      	ldr	r7, [pc, #408]	; (80111f0 <_strtod_l+0xb18>)
 8011056:	2600      	movs	r6, #0
 8011058:	4b62      	ldr	r3, [pc, #392]	; (80111e4 <_strtod_l+0xb0c>)
 801105a:	402b      	ands	r3, r5
 801105c:	930f      	str	r3, [sp, #60]	; 0x3c
 801105e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011060:	4b64      	ldr	r3, [pc, #400]	; (80111f4 <_strtod_l+0xb1c>)
 8011062:	429a      	cmp	r2, r3
 8011064:	f040 80ce 	bne.w	8011204 <_strtod_l+0xb2c>
 8011068:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 801106c:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8011070:	f1a5 7b54 	sub.w	fp, r5, #55574528	; 0x3500000
 8011074:	ec4b ab10 	vmov	d0, sl, fp
 8011078:	e9cd 2314 	strd	r2, r3, [sp, #80]	; 0x50
 801107c:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8011080:	f000 ff38 	bl	8011ef4 <__ulp>
 8011084:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 8011088:	ec53 2b10 	vmov	r2, r3, d0
 801108c:	f7ef fa86 	bl	800059c <__aeabi_dmul>
 8011090:	4652      	mov	r2, sl
 8011092:	465b      	mov	r3, fp
 8011094:	f7ef f8cc 	bl	8000230 <__adddf3>
 8011098:	460b      	mov	r3, r1
 801109a:	4952      	ldr	r1, [pc, #328]	; (80111e4 <_strtod_l+0xb0c>)
 801109c:	4a56      	ldr	r2, [pc, #344]	; (80111f8 <_strtod_l+0xb20>)
 801109e:	4019      	ands	r1, r3
 80110a0:	4291      	cmp	r1, r2
 80110a2:	4682      	mov	sl, r0
 80110a4:	d95b      	bls.n	801115e <_strtod_l+0xa86>
 80110a6:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80110a8:	f102 7254 	add.w	r2, r2, #55574528	; 0x3500000
 80110ac:	4293      	cmp	r3, r2
 80110ae:	d103      	bne.n	80110b8 <_strtod_l+0x9e0>
 80110b0:	9b08      	ldr	r3, [sp, #32]
 80110b2:	3301      	adds	r3, #1
 80110b4:	f43f ad2e 	beq.w	8010b14 <_strtod_l+0x43c>
 80110b8:	f8df b12c 	ldr.w	fp, [pc, #300]	; 80111e8 <_strtod_l+0xb10>
 80110bc:	f04f 3aff 	mov.w	sl, #4294967295
 80110c0:	991c      	ldr	r1, [sp, #112]	; 0x70
 80110c2:	4648      	mov	r0, r9
 80110c4:	f000 fc7e 	bl	80119c4 <_Bfree>
 80110c8:	9905      	ldr	r1, [sp, #20]
 80110ca:	4648      	mov	r0, r9
 80110cc:	f000 fc7a 	bl	80119c4 <_Bfree>
 80110d0:	4641      	mov	r1, r8
 80110d2:	4648      	mov	r0, r9
 80110d4:	f000 fc76 	bl	80119c4 <_Bfree>
 80110d8:	4621      	mov	r1, r4
 80110da:	4648      	mov	r0, r9
 80110dc:	f000 fc72 	bl	80119c4 <_Bfree>
 80110e0:	e619      	b.n	8010d16 <_strtod_l+0x63e>
 80110e2:	f1ba 0f00 	cmp.w	sl, #0
 80110e6:	d11a      	bne.n	801111e <_strtod_l+0xa46>
 80110e8:	f3cb 0313 	ubfx	r3, fp, #0, #20
 80110ec:	b9eb      	cbnz	r3, 801112a <_strtod_l+0xa52>
 80110ee:	2200      	movs	r2, #0
 80110f0:	4b3f      	ldr	r3, [pc, #252]	; (80111f0 <_strtod_l+0xb18>)
 80110f2:	4630      	mov	r0, r6
 80110f4:	4639      	mov	r1, r7
 80110f6:	f7ef fcc3 	bl	8000a80 <__aeabi_dcmplt>
 80110fa:	b9c8      	cbnz	r0, 8011130 <_strtod_l+0xa58>
 80110fc:	4630      	mov	r0, r6
 80110fe:	4639      	mov	r1, r7
 8011100:	2200      	movs	r2, #0
 8011102:	4b3e      	ldr	r3, [pc, #248]	; (80111fc <_strtod_l+0xb24>)
 8011104:	f7ef fa4a 	bl	800059c <__aeabi_dmul>
 8011108:	4606      	mov	r6, r0
 801110a:	460f      	mov	r7, r1
 801110c:	f107 4300 	add.w	r3, r7, #2147483648	; 0x80000000
 8011110:	9618      	str	r6, [sp, #96]	; 0x60
 8011112:	9319      	str	r3, [sp, #100]	; 0x64
 8011114:	e9dd 2318 	ldrd	r2, r3, [sp, #96]	; 0x60
 8011118:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 801111c:	e79c      	b.n	8011058 <_strtod_l+0x980>
 801111e:	f1ba 0f01 	cmp.w	sl, #1
 8011122:	d102      	bne.n	801112a <_strtod_l+0xa52>
 8011124:	2d00      	cmp	r5, #0
 8011126:	f43f ad8e 	beq.w	8010c46 <_strtod_l+0x56e>
 801112a:	2200      	movs	r2, #0
 801112c:	4b34      	ldr	r3, [pc, #208]	; (8011200 <_strtod_l+0xb28>)
 801112e:	e78f      	b.n	8011050 <_strtod_l+0x978>
 8011130:	2600      	movs	r6, #0
 8011132:	4f32      	ldr	r7, [pc, #200]	; (80111fc <_strtod_l+0xb24>)
 8011134:	e7ea      	b.n	801110c <_strtod_l+0xa34>
 8011136:	4b31      	ldr	r3, [pc, #196]	; (80111fc <_strtod_l+0xb24>)
 8011138:	4630      	mov	r0, r6
 801113a:	4639      	mov	r1, r7
 801113c:	2200      	movs	r2, #0
 801113e:	f7ef fa2d 	bl	800059c <__aeabi_dmul>
 8011142:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011144:	4606      	mov	r6, r0
 8011146:	460f      	mov	r7, r1
 8011148:	b933      	cbnz	r3, 8011158 <_strtod_l+0xa80>
 801114a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 801114e:	9010      	str	r0, [sp, #64]	; 0x40
 8011150:	9311      	str	r3, [sp, #68]	; 0x44
 8011152:	e9dd 2310 	ldrd	r2, r3, [sp, #64]	; 0x40
 8011156:	e7df      	b.n	8011118 <_strtod_l+0xa40>
 8011158:	e9cd 6710 	strd	r6, r7, [sp, #64]	; 0x40
 801115c:	e7f9      	b.n	8011152 <_strtod_l+0xa7a>
 801115e:	f103 7b54 	add.w	fp, r3, #55574528	; 0x3500000
 8011162:	9b04      	ldr	r3, [sp, #16]
 8011164:	2b00      	cmp	r3, #0
 8011166:	d1ab      	bne.n	80110c0 <_strtod_l+0x9e8>
 8011168:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 801116c:	0d1b      	lsrs	r3, r3, #20
 801116e:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 8011170:	051b      	lsls	r3, r3, #20
 8011172:	429a      	cmp	r2, r3
 8011174:	465d      	mov	r5, fp
 8011176:	d1a3      	bne.n	80110c0 <_strtod_l+0x9e8>
 8011178:	4639      	mov	r1, r7
 801117a:	4630      	mov	r0, r6
 801117c:	f7ef fcbe 	bl	8000afc <__aeabi_d2iz>
 8011180:	f7ef f9a2 	bl	80004c8 <__aeabi_i2d>
 8011184:	460b      	mov	r3, r1
 8011186:	4602      	mov	r2, r0
 8011188:	4639      	mov	r1, r7
 801118a:	4630      	mov	r0, r6
 801118c:	f7ef f84e 	bl	800022c <__aeabi_dsub>
 8011190:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011192:	4606      	mov	r6, r0
 8011194:	460f      	mov	r7, r1
 8011196:	b933      	cbnz	r3, 80111a6 <_strtod_l+0xace>
 8011198:	f1ba 0f00 	cmp.w	sl, #0
 801119c:	d103      	bne.n	80111a6 <_strtod_l+0xace>
 801119e:	f3cb 0513 	ubfx	r5, fp, #0, #20
 80111a2:	2d00      	cmp	r5, #0
 80111a4:	d06d      	beq.n	8011282 <_strtod_l+0xbaa>
 80111a6:	a30a      	add	r3, pc, #40	; (adr r3, 80111d0 <_strtod_l+0xaf8>)
 80111a8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80111ac:	4630      	mov	r0, r6
 80111ae:	4639      	mov	r1, r7
 80111b0:	f7ef fc66 	bl	8000a80 <__aeabi_dcmplt>
 80111b4:	2800      	cmp	r0, #0
 80111b6:	f47f acb8 	bne.w	8010b2a <_strtod_l+0x452>
 80111ba:	a307      	add	r3, pc, #28	; (adr r3, 80111d8 <_strtod_l+0xb00>)
 80111bc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80111c0:	4630      	mov	r0, r6
 80111c2:	4639      	mov	r1, r7
 80111c4:	f7ef fc7a 	bl	8000abc <__aeabi_dcmpgt>
 80111c8:	2800      	cmp	r0, #0
 80111ca:	f43f af79 	beq.w	80110c0 <_strtod_l+0x9e8>
 80111ce:	e4ac      	b.n	8010b2a <_strtod_l+0x452>
 80111d0:	94a03595 	.word	0x94a03595
 80111d4:	3fdfffff 	.word	0x3fdfffff
 80111d8:	35afe535 	.word	0x35afe535
 80111dc:	3fe00000 	.word	0x3fe00000
 80111e0:	000fffff 	.word	0x000fffff
 80111e4:	7ff00000 	.word	0x7ff00000
 80111e8:	7fefffff 	.word	0x7fefffff
 80111ec:	39500000 	.word	0x39500000
 80111f0:	3ff00000 	.word	0x3ff00000
 80111f4:	7fe00000 	.word	0x7fe00000
 80111f8:	7c9fffff 	.word	0x7c9fffff
 80111fc:	3fe00000 	.word	0x3fe00000
 8011200:	bff00000 	.word	0xbff00000
 8011204:	9b04      	ldr	r3, [sp, #16]
 8011206:	b333      	cbz	r3, 8011256 <_strtod_l+0xb7e>
 8011208:	9b0f      	ldr	r3, [sp, #60]	; 0x3c
 801120a:	f1b3 6fd4 	cmp.w	r3, #111149056	; 0x6a00000
 801120e:	d822      	bhi.n	8011256 <_strtod_l+0xb7e>
 8011210:	a327      	add	r3, pc, #156	; (adr r3, 80112b0 <_strtod_l+0xbd8>)
 8011212:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011216:	4630      	mov	r0, r6
 8011218:	4639      	mov	r1, r7
 801121a:	f7ef fc3b 	bl	8000a94 <__aeabi_dcmple>
 801121e:	b1a0      	cbz	r0, 801124a <_strtod_l+0xb72>
 8011220:	4639      	mov	r1, r7
 8011222:	4630      	mov	r0, r6
 8011224:	f7ef fc92 	bl	8000b4c <__aeabi_d2uiz>
 8011228:	2800      	cmp	r0, #0
 801122a:	bf08      	it	eq
 801122c:	2001      	moveq	r0, #1
 801122e:	f7ef f93b 	bl	80004a8 <__aeabi_ui2d>
 8011232:	9b0c      	ldr	r3, [sp, #48]	; 0x30
 8011234:	4606      	mov	r6, r0
 8011236:	460f      	mov	r7, r1
 8011238:	bb03      	cbnz	r3, 801127c <_strtod_l+0xba4>
 801123a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 801123e:	9012      	str	r0, [sp, #72]	; 0x48
 8011240:	9313      	str	r3, [sp, #76]	; 0x4c
 8011242:	e9dd 2312 	ldrd	r2, r3, [sp, #72]	; 0x48
 8011246:	e9cd 230a 	strd	r2, r3, [sp, #40]	; 0x28
 801124a:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 801124c:	9a0f      	ldr	r2, [sp, #60]	; 0x3c
 801124e:	f103 63d6 	add.w	r3, r3, #112197632	; 0x6b00000
 8011252:	1a9b      	subs	r3, r3, r2
 8011254:	930b      	str	r3, [sp, #44]	; 0x2c
 8011256:	ed9d 0b08 	vldr	d0, [sp, #32]
 801125a:	e9dd ab0a 	ldrd	sl, fp, [sp, #40]	; 0x28
 801125e:	f000 fe49 	bl	8011ef4 <__ulp>
 8011262:	4650      	mov	r0, sl
 8011264:	ec53 2b10 	vmov	r2, r3, d0
 8011268:	4659      	mov	r1, fp
 801126a:	f7ef f997 	bl	800059c <__aeabi_dmul>
 801126e:	e9dd 2308 	ldrd	r2, r3, [sp, #32]
 8011272:	f7ee ffdd 	bl	8000230 <__adddf3>
 8011276:	4682      	mov	sl, r0
 8011278:	468b      	mov	fp, r1
 801127a:	e772      	b.n	8011162 <_strtod_l+0xa8a>
 801127c:	e9cd 6712 	strd	r6, r7, [sp, #72]	; 0x48
 8011280:	e7df      	b.n	8011242 <_strtod_l+0xb6a>
 8011282:	a30d      	add	r3, pc, #52	; (adr r3, 80112b8 <_strtod_l+0xbe0>)
 8011284:	e9d3 2300 	ldrd	r2, r3, [r3]
 8011288:	f7ef fbfa 	bl	8000a80 <__aeabi_dcmplt>
 801128c:	e79c      	b.n	80111c8 <_strtod_l+0xaf0>
 801128e:	2300      	movs	r3, #0
 8011290:	930d      	str	r3, [sp, #52]	; 0x34
 8011292:	9a17      	ldr	r2, [sp, #92]	; 0x5c
 8011294:	9b1b      	ldr	r3, [sp, #108]	; 0x6c
 8011296:	6013      	str	r3, [r2, #0]
 8011298:	f7ff ba61 	b.w	801075e <_strtod_l+0x86>
 801129c:	2b65      	cmp	r3, #101	; 0x65
 801129e:	f04f 0200 	mov.w	r2, #0
 80112a2:	f43f ab4e 	beq.w	8010942 <_strtod_l+0x26a>
 80112a6:	2101      	movs	r1, #1
 80112a8:	4614      	mov	r4, r2
 80112aa:	9104      	str	r1, [sp, #16]
 80112ac:	f7ff bacb 	b.w	8010846 <_strtod_l+0x16e>
 80112b0:	ffc00000 	.word	0xffc00000
 80112b4:	41dfffff 	.word	0x41dfffff
 80112b8:	94a03595 	.word	0x94a03595
 80112bc:	3fcfffff 	.word	0x3fcfffff

080112c0 <strtod>:
 80112c0:	4b07      	ldr	r3, [pc, #28]	; (80112e0 <strtod+0x20>)
 80112c2:	4a08      	ldr	r2, [pc, #32]	; (80112e4 <strtod+0x24>)
 80112c4:	b410      	push	{r4}
 80112c6:	681c      	ldr	r4, [r3, #0]
 80112c8:	6a23      	ldr	r3, [r4, #32]
 80112ca:	2b00      	cmp	r3, #0
 80112cc:	bf08      	it	eq
 80112ce:	4613      	moveq	r3, r2
 80112d0:	460a      	mov	r2, r1
 80112d2:	4601      	mov	r1, r0
 80112d4:	4620      	mov	r0, r4
 80112d6:	f85d 4b04 	ldr.w	r4, [sp], #4
 80112da:	f7ff b9fd 	b.w	80106d8 <_strtod_l>
 80112de:	bf00      	nop
 80112e0:	2000001c 	.word	0x2000001c
 80112e4:	20000080 	.word	0x20000080

080112e8 <rshift>:
 80112e8:	b5f0      	push	{r4, r5, r6, r7, lr}
 80112ea:	6906      	ldr	r6, [r0, #16]
 80112ec:	114b      	asrs	r3, r1, #5
 80112ee:	429e      	cmp	r6, r3
 80112f0:	f100 0414 	add.w	r4, r0, #20
 80112f4:	dd30      	ble.n	8011358 <rshift+0x70>
 80112f6:	f011 011f 	ands.w	r1, r1, #31
 80112fa:	eb04 0686 	add.w	r6, r4, r6, lsl #2
 80112fe:	eb04 0283 	add.w	r2, r4, r3, lsl #2
 8011302:	d108      	bne.n	8011316 <rshift+0x2e>
 8011304:	4621      	mov	r1, r4
 8011306:	42b2      	cmp	r2, r6
 8011308:	460b      	mov	r3, r1
 801130a:	d211      	bcs.n	8011330 <rshift+0x48>
 801130c:	f852 3b04 	ldr.w	r3, [r2], #4
 8011310:	f841 3b04 	str.w	r3, [r1], #4
 8011314:	e7f7      	b.n	8011306 <rshift+0x1e>
 8011316:	f854 5023 	ldr.w	r5, [r4, r3, lsl #2]
 801131a:	f1c1 0c20 	rsb	ip, r1, #32
 801131e:	40cd      	lsrs	r5, r1
 8011320:	3204      	adds	r2, #4
 8011322:	4623      	mov	r3, r4
 8011324:	42b2      	cmp	r2, r6
 8011326:	4617      	mov	r7, r2
 8011328:	d30c      	bcc.n	8011344 <rshift+0x5c>
 801132a:	601d      	str	r5, [r3, #0]
 801132c:	b105      	cbz	r5, 8011330 <rshift+0x48>
 801132e:	3304      	adds	r3, #4
 8011330:	1b1a      	subs	r2, r3, r4
 8011332:	42a3      	cmp	r3, r4
 8011334:	ea4f 02a2 	mov.w	r2, r2, asr #2
 8011338:	bf08      	it	eq
 801133a:	2300      	moveq	r3, #0
 801133c:	6102      	str	r2, [r0, #16]
 801133e:	bf08      	it	eq
 8011340:	6143      	streq	r3, [r0, #20]
 8011342:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8011344:	683f      	ldr	r7, [r7, #0]
 8011346:	fa07 f70c 	lsl.w	r7, r7, ip
 801134a:	433d      	orrs	r5, r7
 801134c:	f843 5b04 	str.w	r5, [r3], #4
 8011350:	f852 5b04 	ldr.w	r5, [r2], #4
 8011354:	40cd      	lsrs	r5, r1
 8011356:	e7e5      	b.n	8011324 <rshift+0x3c>
 8011358:	4623      	mov	r3, r4
 801135a:	e7e9      	b.n	8011330 <rshift+0x48>

0801135c <__hexdig_fun>:
 801135c:	f1a0 0330 	sub.w	r3, r0, #48	; 0x30
 8011360:	2b09      	cmp	r3, #9
 8011362:	d802      	bhi.n	801136a <__hexdig_fun+0xe>
 8011364:	3820      	subs	r0, #32
 8011366:	b2c0      	uxtb	r0, r0
 8011368:	4770      	bx	lr
 801136a:	f1a0 0361 	sub.w	r3, r0, #97	; 0x61
 801136e:	2b05      	cmp	r3, #5
 8011370:	d801      	bhi.n	8011376 <__hexdig_fun+0x1a>
 8011372:	3847      	subs	r0, #71	; 0x47
 8011374:	e7f7      	b.n	8011366 <__hexdig_fun+0xa>
 8011376:	f1a0 0341 	sub.w	r3, r0, #65	; 0x41
 801137a:	2b05      	cmp	r3, #5
 801137c:	d801      	bhi.n	8011382 <__hexdig_fun+0x26>
 801137e:	3827      	subs	r0, #39	; 0x27
 8011380:	e7f1      	b.n	8011366 <__hexdig_fun+0xa>
 8011382:	2000      	movs	r0, #0
 8011384:	4770      	bx	lr

08011386 <__gethex>:
 8011386:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801138a:	b08b      	sub	sp, #44	; 0x2c
 801138c:	468a      	mov	sl, r1
 801138e:	9002      	str	r0, [sp, #8]
 8011390:	9816      	ldr	r0, [sp, #88]	; 0x58
 8011392:	9306      	str	r3, [sp, #24]
 8011394:	4690      	mov	r8, r2
 8011396:	f000 facd 	bl	8011934 <__localeconv_l>
 801139a:	6803      	ldr	r3, [r0, #0]
 801139c:	9303      	str	r3, [sp, #12]
 801139e:	4618      	mov	r0, r3
 80113a0:	f7ee ff38 	bl	8000214 <strlen>
 80113a4:	9b03      	ldr	r3, [sp, #12]
 80113a6:	9001      	str	r0, [sp, #4]
 80113a8:	4403      	add	r3, r0
 80113aa:	f04f 0b00 	mov.w	fp, #0
 80113ae:	f813 3c01 	ldrb.w	r3, [r3, #-1]
 80113b2:	9307      	str	r3, [sp, #28]
 80113b4:	f8da 3000 	ldr.w	r3, [sl]
 80113b8:	3302      	adds	r3, #2
 80113ba:	461f      	mov	r7, r3
 80113bc:	f813 0b01 	ldrb.w	r0, [r3], #1
 80113c0:	2830      	cmp	r0, #48	; 0x30
 80113c2:	d06c      	beq.n	801149e <__gethex+0x118>
 80113c4:	f7ff ffca 	bl	801135c <__hexdig_fun>
 80113c8:	4604      	mov	r4, r0
 80113ca:	2800      	cmp	r0, #0
 80113cc:	d16a      	bne.n	80114a4 <__gethex+0x11e>
 80113ce:	9a01      	ldr	r2, [sp, #4]
 80113d0:	9903      	ldr	r1, [sp, #12]
 80113d2:	4638      	mov	r0, r7
 80113d4:	f7ff f93b 	bl	801064e <strncmp>
 80113d8:	2800      	cmp	r0, #0
 80113da:	d166      	bne.n	80114aa <__gethex+0x124>
 80113dc:	9b01      	ldr	r3, [sp, #4]
 80113de:	5cf8      	ldrb	r0, [r7, r3]
 80113e0:	18fe      	adds	r6, r7, r3
 80113e2:	f7ff ffbb 	bl	801135c <__hexdig_fun>
 80113e6:	2800      	cmp	r0, #0
 80113e8:	d062      	beq.n	80114b0 <__gethex+0x12a>
 80113ea:	4633      	mov	r3, r6
 80113ec:	7818      	ldrb	r0, [r3, #0]
 80113ee:	2830      	cmp	r0, #48	; 0x30
 80113f0:	461f      	mov	r7, r3
 80113f2:	f103 0301 	add.w	r3, r3, #1
 80113f6:	d0f9      	beq.n	80113ec <__gethex+0x66>
 80113f8:	f7ff ffb0 	bl	801135c <__hexdig_fun>
 80113fc:	fab0 f580 	clz	r5, r0
 8011400:	096d      	lsrs	r5, r5, #5
 8011402:	4634      	mov	r4, r6
 8011404:	f04f 0b01 	mov.w	fp, #1
 8011408:	463a      	mov	r2, r7
 801140a:	4616      	mov	r6, r2
 801140c:	3201      	adds	r2, #1
 801140e:	7830      	ldrb	r0, [r6, #0]
 8011410:	f7ff ffa4 	bl	801135c <__hexdig_fun>
 8011414:	2800      	cmp	r0, #0
 8011416:	d1f8      	bne.n	801140a <__gethex+0x84>
 8011418:	9a01      	ldr	r2, [sp, #4]
 801141a:	9903      	ldr	r1, [sp, #12]
 801141c:	4630      	mov	r0, r6
 801141e:	f7ff f916 	bl	801064e <strncmp>
 8011422:	b950      	cbnz	r0, 801143a <__gethex+0xb4>
 8011424:	b954      	cbnz	r4, 801143c <__gethex+0xb6>
 8011426:	9b01      	ldr	r3, [sp, #4]
 8011428:	18f4      	adds	r4, r6, r3
 801142a:	4622      	mov	r2, r4
 801142c:	4616      	mov	r6, r2
 801142e:	3201      	adds	r2, #1
 8011430:	7830      	ldrb	r0, [r6, #0]
 8011432:	f7ff ff93 	bl	801135c <__hexdig_fun>
 8011436:	2800      	cmp	r0, #0
 8011438:	d1f8      	bne.n	801142c <__gethex+0xa6>
 801143a:	b10c      	cbz	r4, 8011440 <__gethex+0xba>
 801143c:	1ba4      	subs	r4, r4, r6
 801143e:	00a4      	lsls	r4, r4, #2
 8011440:	7833      	ldrb	r3, [r6, #0]
 8011442:	2b50      	cmp	r3, #80	; 0x50
 8011444:	d001      	beq.n	801144a <__gethex+0xc4>
 8011446:	2b70      	cmp	r3, #112	; 0x70
 8011448:	d140      	bne.n	80114cc <__gethex+0x146>
 801144a:	7873      	ldrb	r3, [r6, #1]
 801144c:	2b2b      	cmp	r3, #43	; 0x2b
 801144e:	d031      	beq.n	80114b4 <__gethex+0x12e>
 8011450:	2b2d      	cmp	r3, #45	; 0x2d
 8011452:	d033      	beq.n	80114bc <__gethex+0x136>
 8011454:	1c71      	adds	r1, r6, #1
 8011456:	f04f 0900 	mov.w	r9, #0
 801145a:	7808      	ldrb	r0, [r1, #0]
 801145c:	f7ff ff7e 	bl	801135c <__hexdig_fun>
 8011460:	1e43      	subs	r3, r0, #1
 8011462:	b2db      	uxtb	r3, r3
 8011464:	2b18      	cmp	r3, #24
 8011466:	d831      	bhi.n	80114cc <__gethex+0x146>
 8011468:	f1a0 0210 	sub.w	r2, r0, #16
 801146c:	f811 0f01 	ldrb.w	r0, [r1, #1]!
 8011470:	f7ff ff74 	bl	801135c <__hexdig_fun>
 8011474:	1e43      	subs	r3, r0, #1
 8011476:	b2db      	uxtb	r3, r3
 8011478:	2b18      	cmp	r3, #24
 801147a:	d922      	bls.n	80114c2 <__gethex+0x13c>
 801147c:	f1b9 0f00 	cmp.w	r9, #0
 8011480:	d000      	beq.n	8011484 <__gethex+0xfe>
 8011482:	4252      	negs	r2, r2
 8011484:	4414      	add	r4, r2
 8011486:	f8ca 1000 	str.w	r1, [sl]
 801148a:	b30d      	cbz	r5, 80114d0 <__gethex+0x14a>
 801148c:	f1bb 0f00 	cmp.w	fp, #0
 8011490:	bf0c      	ite	eq
 8011492:	2706      	moveq	r7, #6
 8011494:	2700      	movne	r7, #0
 8011496:	4638      	mov	r0, r7
 8011498:	b00b      	add	sp, #44	; 0x2c
 801149a:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801149e:	f10b 0b01 	add.w	fp, fp, #1
 80114a2:	e78a      	b.n	80113ba <__gethex+0x34>
 80114a4:	2500      	movs	r5, #0
 80114a6:	462c      	mov	r4, r5
 80114a8:	e7ae      	b.n	8011408 <__gethex+0x82>
 80114aa:	463e      	mov	r6, r7
 80114ac:	2501      	movs	r5, #1
 80114ae:	e7c7      	b.n	8011440 <__gethex+0xba>
 80114b0:	4604      	mov	r4, r0
 80114b2:	e7fb      	b.n	80114ac <__gethex+0x126>
 80114b4:	f04f 0900 	mov.w	r9, #0
 80114b8:	1cb1      	adds	r1, r6, #2
 80114ba:	e7ce      	b.n	801145a <__gethex+0xd4>
 80114bc:	f04f 0901 	mov.w	r9, #1
 80114c0:	e7fa      	b.n	80114b8 <__gethex+0x132>
 80114c2:	230a      	movs	r3, #10
 80114c4:	fb03 0202 	mla	r2, r3, r2, r0
 80114c8:	3a10      	subs	r2, #16
 80114ca:	e7cf      	b.n	801146c <__gethex+0xe6>
 80114cc:	4631      	mov	r1, r6
 80114ce:	e7da      	b.n	8011486 <__gethex+0x100>
 80114d0:	1bf3      	subs	r3, r6, r7
 80114d2:	3b01      	subs	r3, #1
 80114d4:	4629      	mov	r1, r5
 80114d6:	2b07      	cmp	r3, #7
 80114d8:	dc49      	bgt.n	801156e <__gethex+0x1e8>
 80114da:	9802      	ldr	r0, [sp, #8]
 80114dc:	f000 fa3e 	bl	801195c <_Balloc>
 80114e0:	9b01      	ldr	r3, [sp, #4]
 80114e2:	f100 0914 	add.w	r9, r0, #20
 80114e6:	f04f 0b00 	mov.w	fp, #0
 80114ea:	f1c3 0301 	rsb	r3, r3, #1
 80114ee:	4605      	mov	r5, r0
 80114f0:	f8cd 9010 	str.w	r9, [sp, #16]
 80114f4:	46da      	mov	sl, fp
 80114f6:	9308      	str	r3, [sp, #32]
 80114f8:	42b7      	cmp	r7, r6
 80114fa:	d33b      	bcc.n	8011574 <__gethex+0x1ee>
 80114fc:	9804      	ldr	r0, [sp, #16]
 80114fe:	f840 ab04 	str.w	sl, [r0], #4
 8011502:	eba0 0009 	sub.w	r0, r0, r9
 8011506:	1080      	asrs	r0, r0, #2
 8011508:	6128      	str	r0, [r5, #16]
 801150a:	0147      	lsls	r7, r0, #5
 801150c:	4650      	mov	r0, sl
 801150e:	f000 fae9 	bl	8011ae4 <__hi0bits>
 8011512:	f8d8 6000 	ldr.w	r6, [r8]
 8011516:	1a3f      	subs	r7, r7, r0
 8011518:	42b7      	cmp	r7, r6
 801151a:	dd64      	ble.n	80115e6 <__gethex+0x260>
 801151c:	1bbf      	subs	r7, r7, r6
 801151e:	4639      	mov	r1, r7
 8011520:	4628      	mov	r0, r5
 8011522:	f000 fdf9 	bl	8012118 <__any_on>
 8011526:	4682      	mov	sl, r0
 8011528:	b178      	cbz	r0, 801154a <__gethex+0x1c4>
 801152a:	1e7b      	subs	r3, r7, #1
 801152c:	1159      	asrs	r1, r3, #5
 801152e:	f003 021f 	and.w	r2, r3, #31
 8011532:	f04f 0a01 	mov.w	sl, #1
 8011536:	f859 1021 	ldr.w	r1, [r9, r1, lsl #2]
 801153a:	fa0a f202 	lsl.w	r2, sl, r2
 801153e:	420a      	tst	r2, r1
 8011540:	d003      	beq.n	801154a <__gethex+0x1c4>
 8011542:	4553      	cmp	r3, sl
 8011544:	dc46      	bgt.n	80115d4 <__gethex+0x24e>
 8011546:	f04f 0a02 	mov.w	sl, #2
 801154a:	4639      	mov	r1, r7
 801154c:	4628      	mov	r0, r5
 801154e:	f7ff fecb 	bl	80112e8 <rshift>
 8011552:	443c      	add	r4, r7
 8011554:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8011558:	42a3      	cmp	r3, r4
 801155a:	da52      	bge.n	8011602 <__gethex+0x27c>
 801155c:	4629      	mov	r1, r5
 801155e:	9802      	ldr	r0, [sp, #8]
 8011560:	f000 fa30 	bl	80119c4 <_Bfree>
 8011564:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011566:	2300      	movs	r3, #0
 8011568:	6013      	str	r3, [r2, #0]
 801156a:	27a3      	movs	r7, #163	; 0xa3
 801156c:	e793      	b.n	8011496 <__gethex+0x110>
 801156e:	3101      	adds	r1, #1
 8011570:	105b      	asrs	r3, r3, #1
 8011572:	e7b0      	b.n	80114d6 <__gethex+0x150>
 8011574:	1e73      	subs	r3, r6, #1
 8011576:	9305      	str	r3, [sp, #20]
 8011578:	9a07      	ldr	r2, [sp, #28]
 801157a:	f816 3c01 	ldrb.w	r3, [r6, #-1]
 801157e:	4293      	cmp	r3, r2
 8011580:	d018      	beq.n	80115b4 <__gethex+0x22e>
 8011582:	f1bb 0f20 	cmp.w	fp, #32
 8011586:	d107      	bne.n	8011598 <__gethex+0x212>
 8011588:	9b04      	ldr	r3, [sp, #16]
 801158a:	f8c3 a000 	str.w	sl, [r3]
 801158e:	3304      	adds	r3, #4
 8011590:	f04f 0a00 	mov.w	sl, #0
 8011594:	9304      	str	r3, [sp, #16]
 8011596:	46d3      	mov	fp, sl
 8011598:	f816 0c01 	ldrb.w	r0, [r6, #-1]
 801159c:	f7ff fede 	bl	801135c <__hexdig_fun>
 80115a0:	f000 000f 	and.w	r0, r0, #15
 80115a4:	fa00 f00b 	lsl.w	r0, r0, fp
 80115a8:	ea4a 0a00 	orr.w	sl, sl, r0
 80115ac:	f10b 0b04 	add.w	fp, fp, #4
 80115b0:	9b05      	ldr	r3, [sp, #20]
 80115b2:	e00d      	b.n	80115d0 <__gethex+0x24a>
 80115b4:	9b05      	ldr	r3, [sp, #20]
 80115b6:	9a08      	ldr	r2, [sp, #32]
 80115b8:	4413      	add	r3, r2
 80115ba:	42bb      	cmp	r3, r7
 80115bc:	d3e1      	bcc.n	8011582 <__gethex+0x1fc>
 80115be:	4618      	mov	r0, r3
 80115c0:	9a01      	ldr	r2, [sp, #4]
 80115c2:	9903      	ldr	r1, [sp, #12]
 80115c4:	9309      	str	r3, [sp, #36]	; 0x24
 80115c6:	f7ff f842 	bl	801064e <strncmp>
 80115ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80115cc:	2800      	cmp	r0, #0
 80115ce:	d1d8      	bne.n	8011582 <__gethex+0x1fc>
 80115d0:	461e      	mov	r6, r3
 80115d2:	e791      	b.n	80114f8 <__gethex+0x172>
 80115d4:	1eb9      	subs	r1, r7, #2
 80115d6:	4628      	mov	r0, r5
 80115d8:	f000 fd9e 	bl	8012118 <__any_on>
 80115dc:	2800      	cmp	r0, #0
 80115de:	d0b2      	beq.n	8011546 <__gethex+0x1c0>
 80115e0:	f04f 0a03 	mov.w	sl, #3
 80115e4:	e7b1      	b.n	801154a <__gethex+0x1c4>
 80115e6:	da09      	bge.n	80115fc <__gethex+0x276>
 80115e8:	1bf7      	subs	r7, r6, r7
 80115ea:	4629      	mov	r1, r5
 80115ec:	463a      	mov	r2, r7
 80115ee:	9802      	ldr	r0, [sp, #8]
 80115f0:	f000 fbb4 	bl	8011d5c <__lshift>
 80115f4:	1be4      	subs	r4, r4, r7
 80115f6:	4605      	mov	r5, r0
 80115f8:	f100 0914 	add.w	r9, r0, #20
 80115fc:	f04f 0a00 	mov.w	sl, #0
 8011600:	e7a8      	b.n	8011554 <__gethex+0x1ce>
 8011602:	f8d8 0004 	ldr.w	r0, [r8, #4]
 8011606:	42a0      	cmp	r0, r4
 8011608:	dd6a      	ble.n	80116e0 <__gethex+0x35a>
 801160a:	1b04      	subs	r4, r0, r4
 801160c:	42a6      	cmp	r6, r4
 801160e:	dc2e      	bgt.n	801166e <__gethex+0x2e8>
 8011610:	f8d8 300c 	ldr.w	r3, [r8, #12]
 8011614:	2b02      	cmp	r3, #2
 8011616:	d022      	beq.n	801165e <__gethex+0x2d8>
 8011618:	2b03      	cmp	r3, #3
 801161a:	d024      	beq.n	8011666 <__gethex+0x2e0>
 801161c:	2b01      	cmp	r3, #1
 801161e:	d115      	bne.n	801164c <__gethex+0x2c6>
 8011620:	42a6      	cmp	r6, r4
 8011622:	d113      	bne.n	801164c <__gethex+0x2c6>
 8011624:	2e01      	cmp	r6, #1
 8011626:	dc0b      	bgt.n	8011640 <__gethex+0x2ba>
 8011628:	9a06      	ldr	r2, [sp, #24]
 801162a:	f8d8 3004 	ldr.w	r3, [r8, #4]
 801162e:	6013      	str	r3, [r2, #0]
 8011630:	2301      	movs	r3, #1
 8011632:	612b      	str	r3, [r5, #16]
 8011634:	f8c9 3000 	str.w	r3, [r9]
 8011638:	9b14      	ldr	r3, [sp, #80]	; 0x50
 801163a:	2762      	movs	r7, #98	; 0x62
 801163c:	601d      	str	r5, [r3, #0]
 801163e:	e72a      	b.n	8011496 <__gethex+0x110>
 8011640:	1e71      	subs	r1, r6, #1
 8011642:	4628      	mov	r0, r5
 8011644:	f000 fd68 	bl	8012118 <__any_on>
 8011648:	2800      	cmp	r0, #0
 801164a:	d1ed      	bne.n	8011628 <__gethex+0x2a2>
 801164c:	4629      	mov	r1, r5
 801164e:	9802      	ldr	r0, [sp, #8]
 8011650:	f000 f9b8 	bl	80119c4 <_Bfree>
 8011654:	9a14      	ldr	r2, [sp, #80]	; 0x50
 8011656:	2300      	movs	r3, #0
 8011658:	6013      	str	r3, [r2, #0]
 801165a:	2750      	movs	r7, #80	; 0x50
 801165c:	e71b      	b.n	8011496 <__gethex+0x110>
 801165e:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8011660:	2b00      	cmp	r3, #0
 8011662:	d0e1      	beq.n	8011628 <__gethex+0x2a2>
 8011664:	e7f2      	b.n	801164c <__gethex+0x2c6>
 8011666:	9b15      	ldr	r3, [sp, #84]	; 0x54
 8011668:	2b00      	cmp	r3, #0
 801166a:	d1dd      	bne.n	8011628 <__gethex+0x2a2>
 801166c:	e7ee      	b.n	801164c <__gethex+0x2c6>
 801166e:	1e67      	subs	r7, r4, #1
 8011670:	f1ba 0f00 	cmp.w	sl, #0
 8011674:	d131      	bne.n	80116da <__gethex+0x354>
 8011676:	b127      	cbz	r7, 8011682 <__gethex+0x2fc>
 8011678:	4639      	mov	r1, r7
 801167a:	4628      	mov	r0, r5
 801167c:	f000 fd4c 	bl	8012118 <__any_on>
 8011680:	4682      	mov	sl, r0
 8011682:	117a      	asrs	r2, r7, #5
 8011684:	2301      	movs	r3, #1
 8011686:	f007 071f 	and.w	r7, r7, #31
 801168a:	fa03 f707 	lsl.w	r7, r3, r7
 801168e:	f859 3022 	ldr.w	r3, [r9, r2, lsl #2]
 8011692:	4621      	mov	r1, r4
 8011694:	421f      	tst	r7, r3
 8011696:	4628      	mov	r0, r5
 8011698:	bf18      	it	ne
 801169a:	f04a 0a02 	orrne.w	sl, sl, #2
 801169e:	1b36      	subs	r6, r6, r4
 80116a0:	f7ff fe22 	bl	80112e8 <rshift>
 80116a4:	f8d8 4004 	ldr.w	r4, [r8, #4]
 80116a8:	2702      	movs	r7, #2
 80116aa:	f1ba 0f00 	cmp.w	sl, #0
 80116ae:	d048      	beq.n	8011742 <__gethex+0x3bc>
 80116b0:	f8d8 300c 	ldr.w	r3, [r8, #12]
 80116b4:	2b02      	cmp	r3, #2
 80116b6:	d015      	beq.n	80116e4 <__gethex+0x35e>
 80116b8:	2b03      	cmp	r3, #3
 80116ba:	d017      	beq.n	80116ec <__gethex+0x366>
 80116bc:	2b01      	cmp	r3, #1
 80116be:	d109      	bne.n	80116d4 <__gethex+0x34e>
 80116c0:	f01a 0f02 	tst.w	sl, #2
 80116c4:	d006      	beq.n	80116d4 <__gethex+0x34e>
 80116c6:	f8d9 3000 	ldr.w	r3, [r9]
 80116ca:	ea4a 0a03 	orr.w	sl, sl, r3
 80116ce:	f01a 0f01 	tst.w	sl, #1
 80116d2:	d10e      	bne.n	80116f2 <__gethex+0x36c>
 80116d4:	f047 0710 	orr.w	r7, r7, #16
 80116d8:	e033      	b.n	8011742 <__gethex+0x3bc>
 80116da:	f04f 0a01 	mov.w	sl, #1
 80116de:	e7d0      	b.n	8011682 <__gethex+0x2fc>
 80116e0:	2701      	movs	r7, #1
 80116e2:	e7e2      	b.n	80116aa <__gethex+0x324>
 80116e4:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80116e6:	f1c3 0301 	rsb	r3, r3, #1
 80116ea:	9315      	str	r3, [sp, #84]	; 0x54
 80116ec:	9b15      	ldr	r3, [sp, #84]	; 0x54
 80116ee:	2b00      	cmp	r3, #0
 80116f0:	d0f0      	beq.n	80116d4 <__gethex+0x34e>
 80116f2:	f8d5 9010 	ldr.w	r9, [r5, #16]
 80116f6:	f105 0314 	add.w	r3, r5, #20
 80116fa:	ea4f 0a89 	mov.w	sl, r9, lsl #2
 80116fe:	eb03 010a 	add.w	r1, r3, sl
 8011702:	f04f 0c00 	mov.w	ip, #0
 8011706:	4618      	mov	r0, r3
 8011708:	f853 2b04 	ldr.w	r2, [r3], #4
 801170c:	f1b2 3fff 	cmp.w	r2, #4294967295
 8011710:	d01c      	beq.n	801174c <__gethex+0x3c6>
 8011712:	3201      	adds	r2, #1
 8011714:	6002      	str	r2, [r0, #0]
 8011716:	2f02      	cmp	r7, #2
 8011718:	f105 0314 	add.w	r3, r5, #20
 801171c:	d138      	bne.n	8011790 <__gethex+0x40a>
 801171e:	f8d8 2000 	ldr.w	r2, [r8]
 8011722:	3a01      	subs	r2, #1
 8011724:	42b2      	cmp	r2, r6
 8011726:	d10a      	bne.n	801173e <__gethex+0x3b8>
 8011728:	1171      	asrs	r1, r6, #5
 801172a:	2201      	movs	r2, #1
 801172c:	f006 061f 	and.w	r6, r6, #31
 8011730:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 8011734:	fa02 f606 	lsl.w	r6, r2, r6
 8011738:	421e      	tst	r6, r3
 801173a:	bf18      	it	ne
 801173c:	4617      	movne	r7, r2
 801173e:	f047 0720 	orr.w	r7, r7, #32
 8011742:	9b14      	ldr	r3, [sp, #80]	; 0x50
 8011744:	601d      	str	r5, [r3, #0]
 8011746:	9b06      	ldr	r3, [sp, #24]
 8011748:	601c      	str	r4, [r3, #0]
 801174a:	e6a4      	b.n	8011496 <__gethex+0x110>
 801174c:	4299      	cmp	r1, r3
 801174e:	f843 cc04 	str.w	ip, [r3, #-4]
 8011752:	d8d8      	bhi.n	8011706 <__gethex+0x380>
 8011754:	68ab      	ldr	r3, [r5, #8]
 8011756:	4599      	cmp	r9, r3
 8011758:	db12      	blt.n	8011780 <__gethex+0x3fa>
 801175a:	6869      	ldr	r1, [r5, #4]
 801175c:	9802      	ldr	r0, [sp, #8]
 801175e:	3101      	adds	r1, #1
 8011760:	f000 f8fc 	bl	801195c <_Balloc>
 8011764:	692a      	ldr	r2, [r5, #16]
 8011766:	3202      	adds	r2, #2
 8011768:	f105 010c 	add.w	r1, r5, #12
 801176c:	4683      	mov	fp, r0
 801176e:	0092      	lsls	r2, r2, #2
 8011770:	300c      	adds	r0, #12
 8011772:	f7fe ff59 	bl	8010628 <memcpy>
 8011776:	4629      	mov	r1, r5
 8011778:	9802      	ldr	r0, [sp, #8]
 801177a:	f000 f923 	bl	80119c4 <_Bfree>
 801177e:	465d      	mov	r5, fp
 8011780:	692b      	ldr	r3, [r5, #16]
 8011782:	1c5a      	adds	r2, r3, #1
 8011784:	eb05 0383 	add.w	r3, r5, r3, lsl #2
 8011788:	612a      	str	r2, [r5, #16]
 801178a:	2201      	movs	r2, #1
 801178c:	615a      	str	r2, [r3, #20]
 801178e:	e7c2      	b.n	8011716 <__gethex+0x390>
 8011790:	692a      	ldr	r2, [r5, #16]
 8011792:	454a      	cmp	r2, r9
 8011794:	dd0b      	ble.n	80117ae <__gethex+0x428>
 8011796:	2101      	movs	r1, #1
 8011798:	4628      	mov	r0, r5
 801179a:	f7ff fda5 	bl	80112e8 <rshift>
 801179e:	f8d8 3008 	ldr.w	r3, [r8, #8]
 80117a2:	3401      	adds	r4, #1
 80117a4:	42a3      	cmp	r3, r4
 80117a6:	f6ff aed9 	blt.w	801155c <__gethex+0x1d6>
 80117aa:	2701      	movs	r7, #1
 80117ac:	e7c7      	b.n	801173e <__gethex+0x3b8>
 80117ae:	f016 061f 	ands.w	r6, r6, #31
 80117b2:	d0fa      	beq.n	80117aa <__gethex+0x424>
 80117b4:	449a      	add	sl, r3
 80117b6:	f1c6 0620 	rsb	r6, r6, #32
 80117ba:	f85a 0c04 	ldr.w	r0, [sl, #-4]
 80117be:	f000 f991 	bl	8011ae4 <__hi0bits>
 80117c2:	42b0      	cmp	r0, r6
 80117c4:	dbe7      	blt.n	8011796 <__gethex+0x410>
 80117c6:	e7f0      	b.n	80117aa <__gethex+0x424>

080117c8 <L_shift>:
 80117c8:	f1c2 0208 	rsb	r2, r2, #8
 80117cc:	0092      	lsls	r2, r2, #2
 80117ce:	b570      	push	{r4, r5, r6, lr}
 80117d0:	f1c2 0620 	rsb	r6, r2, #32
 80117d4:	6843      	ldr	r3, [r0, #4]
 80117d6:	6804      	ldr	r4, [r0, #0]
 80117d8:	fa03 f506 	lsl.w	r5, r3, r6
 80117dc:	432c      	orrs	r4, r5
 80117de:	40d3      	lsrs	r3, r2
 80117e0:	6004      	str	r4, [r0, #0]
 80117e2:	f840 3f04 	str.w	r3, [r0, #4]!
 80117e6:	4288      	cmp	r0, r1
 80117e8:	d3f4      	bcc.n	80117d4 <L_shift+0xc>
 80117ea:	bd70      	pop	{r4, r5, r6, pc}

080117ec <__match>:
 80117ec:	b530      	push	{r4, r5, lr}
 80117ee:	6803      	ldr	r3, [r0, #0]
 80117f0:	3301      	adds	r3, #1
 80117f2:	f811 4b01 	ldrb.w	r4, [r1], #1
 80117f6:	b914      	cbnz	r4, 80117fe <__match+0x12>
 80117f8:	6003      	str	r3, [r0, #0]
 80117fa:	2001      	movs	r0, #1
 80117fc:	bd30      	pop	{r4, r5, pc}
 80117fe:	f813 2b01 	ldrb.w	r2, [r3], #1
 8011802:	f1a2 0541 	sub.w	r5, r2, #65	; 0x41
 8011806:	2d19      	cmp	r5, #25
 8011808:	bf98      	it	ls
 801180a:	3220      	addls	r2, #32
 801180c:	42a2      	cmp	r2, r4
 801180e:	d0f0      	beq.n	80117f2 <__match+0x6>
 8011810:	2000      	movs	r0, #0
 8011812:	e7f3      	b.n	80117fc <__match+0x10>

08011814 <__hexnan>:
 8011814:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011818:	680b      	ldr	r3, [r1, #0]
 801181a:	6801      	ldr	r1, [r0, #0]
 801181c:	115f      	asrs	r7, r3, #5
 801181e:	eb02 0787 	add.w	r7, r2, r7, lsl #2
 8011822:	f013 031f 	ands.w	r3, r3, #31
 8011826:	b087      	sub	sp, #28
 8011828:	bf18      	it	ne
 801182a:	3704      	addne	r7, #4
 801182c:	2500      	movs	r5, #0
 801182e:	1f3e      	subs	r6, r7, #4
 8011830:	4682      	mov	sl, r0
 8011832:	4690      	mov	r8, r2
 8011834:	9301      	str	r3, [sp, #4]
 8011836:	f847 5c04 	str.w	r5, [r7, #-4]
 801183a:	46b1      	mov	r9, r6
 801183c:	4634      	mov	r4, r6
 801183e:	9502      	str	r5, [sp, #8]
 8011840:	46ab      	mov	fp, r5
 8011842:	784a      	ldrb	r2, [r1, #1]
 8011844:	1c4b      	adds	r3, r1, #1
 8011846:	9303      	str	r3, [sp, #12]
 8011848:	b342      	cbz	r2, 801189c <__hexnan+0x88>
 801184a:	4610      	mov	r0, r2
 801184c:	9105      	str	r1, [sp, #20]
 801184e:	9204      	str	r2, [sp, #16]
 8011850:	f7ff fd84 	bl	801135c <__hexdig_fun>
 8011854:	2800      	cmp	r0, #0
 8011856:	d143      	bne.n	80118e0 <__hexnan+0xcc>
 8011858:	9a04      	ldr	r2, [sp, #16]
 801185a:	9905      	ldr	r1, [sp, #20]
 801185c:	2a20      	cmp	r2, #32
 801185e:	d818      	bhi.n	8011892 <__hexnan+0x7e>
 8011860:	9b02      	ldr	r3, [sp, #8]
 8011862:	459b      	cmp	fp, r3
 8011864:	dd13      	ble.n	801188e <__hexnan+0x7a>
 8011866:	454c      	cmp	r4, r9
 8011868:	d206      	bcs.n	8011878 <__hexnan+0x64>
 801186a:	2d07      	cmp	r5, #7
 801186c:	dc04      	bgt.n	8011878 <__hexnan+0x64>
 801186e:	462a      	mov	r2, r5
 8011870:	4649      	mov	r1, r9
 8011872:	4620      	mov	r0, r4
 8011874:	f7ff ffa8 	bl	80117c8 <L_shift>
 8011878:	4544      	cmp	r4, r8
 801187a:	d944      	bls.n	8011906 <__hexnan+0xf2>
 801187c:	2300      	movs	r3, #0
 801187e:	f1a4 0904 	sub.w	r9, r4, #4
 8011882:	f844 3c04 	str.w	r3, [r4, #-4]
 8011886:	f8cd b008 	str.w	fp, [sp, #8]
 801188a:	464c      	mov	r4, r9
 801188c:	461d      	mov	r5, r3
 801188e:	9903      	ldr	r1, [sp, #12]
 8011890:	e7d7      	b.n	8011842 <__hexnan+0x2e>
 8011892:	2a29      	cmp	r2, #41	; 0x29
 8011894:	d14a      	bne.n	801192c <__hexnan+0x118>
 8011896:	3102      	adds	r1, #2
 8011898:	f8ca 1000 	str.w	r1, [sl]
 801189c:	f1bb 0f00 	cmp.w	fp, #0
 80118a0:	d044      	beq.n	801192c <__hexnan+0x118>
 80118a2:	454c      	cmp	r4, r9
 80118a4:	d206      	bcs.n	80118b4 <__hexnan+0xa0>
 80118a6:	2d07      	cmp	r5, #7
 80118a8:	dc04      	bgt.n	80118b4 <__hexnan+0xa0>
 80118aa:	462a      	mov	r2, r5
 80118ac:	4649      	mov	r1, r9
 80118ae:	4620      	mov	r0, r4
 80118b0:	f7ff ff8a 	bl	80117c8 <L_shift>
 80118b4:	4544      	cmp	r4, r8
 80118b6:	d928      	bls.n	801190a <__hexnan+0xf6>
 80118b8:	4643      	mov	r3, r8
 80118ba:	f854 2b04 	ldr.w	r2, [r4], #4
 80118be:	f843 2b04 	str.w	r2, [r3], #4
 80118c2:	42a6      	cmp	r6, r4
 80118c4:	d2f9      	bcs.n	80118ba <__hexnan+0xa6>
 80118c6:	2200      	movs	r2, #0
 80118c8:	f843 2b04 	str.w	r2, [r3], #4
 80118cc:	429e      	cmp	r6, r3
 80118ce:	d2fb      	bcs.n	80118c8 <__hexnan+0xb4>
 80118d0:	6833      	ldr	r3, [r6, #0]
 80118d2:	b91b      	cbnz	r3, 80118dc <__hexnan+0xc8>
 80118d4:	4546      	cmp	r6, r8
 80118d6:	d127      	bne.n	8011928 <__hexnan+0x114>
 80118d8:	2301      	movs	r3, #1
 80118da:	6033      	str	r3, [r6, #0]
 80118dc:	2005      	movs	r0, #5
 80118de:	e026      	b.n	801192e <__hexnan+0x11a>
 80118e0:	3501      	adds	r5, #1
 80118e2:	2d08      	cmp	r5, #8
 80118e4:	f10b 0b01 	add.w	fp, fp, #1
 80118e8:	dd06      	ble.n	80118f8 <__hexnan+0xe4>
 80118ea:	4544      	cmp	r4, r8
 80118ec:	d9cf      	bls.n	801188e <__hexnan+0x7a>
 80118ee:	2300      	movs	r3, #0
 80118f0:	f844 3c04 	str.w	r3, [r4, #-4]
 80118f4:	2501      	movs	r5, #1
 80118f6:	3c04      	subs	r4, #4
 80118f8:	6822      	ldr	r2, [r4, #0]
 80118fa:	f000 000f 	and.w	r0, r0, #15
 80118fe:	ea40 1002 	orr.w	r0, r0, r2, lsl #4
 8011902:	6020      	str	r0, [r4, #0]
 8011904:	e7c3      	b.n	801188e <__hexnan+0x7a>
 8011906:	2508      	movs	r5, #8
 8011908:	e7c1      	b.n	801188e <__hexnan+0x7a>
 801190a:	9b01      	ldr	r3, [sp, #4]
 801190c:	2b00      	cmp	r3, #0
 801190e:	d0df      	beq.n	80118d0 <__hexnan+0xbc>
 8011910:	f04f 32ff 	mov.w	r2, #4294967295
 8011914:	f1c3 0320 	rsb	r3, r3, #32
 8011918:	fa22 f303 	lsr.w	r3, r2, r3
 801191c:	f857 2c04 	ldr.w	r2, [r7, #-4]
 8011920:	401a      	ands	r2, r3
 8011922:	f847 2c04 	str.w	r2, [r7, #-4]
 8011926:	e7d3      	b.n	80118d0 <__hexnan+0xbc>
 8011928:	3e04      	subs	r6, #4
 801192a:	e7d1      	b.n	80118d0 <__hexnan+0xbc>
 801192c:	2004      	movs	r0, #4
 801192e:	b007      	add	sp, #28
 8011930:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

08011934 <__localeconv_l>:
 8011934:	30f0      	adds	r0, #240	; 0xf0
 8011936:	4770      	bx	lr

08011938 <__ascii_mbtowc>:
 8011938:	b082      	sub	sp, #8
 801193a:	b901      	cbnz	r1, 801193e <__ascii_mbtowc+0x6>
 801193c:	a901      	add	r1, sp, #4
 801193e:	b142      	cbz	r2, 8011952 <__ascii_mbtowc+0x1a>
 8011940:	b14b      	cbz	r3, 8011956 <__ascii_mbtowc+0x1e>
 8011942:	7813      	ldrb	r3, [r2, #0]
 8011944:	600b      	str	r3, [r1, #0]
 8011946:	7812      	ldrb	r2, [r2, #0]
 8011948:	1c10      	adds	r0, r2, #0
 801194a:	bf18      	it	ne
 801194c:	2001      	movne	r0, #1
 801194e:	b002      	add	sp, #8
 8011950:	4770      	bx	lr
 8011952:	4610      	mov	r0, r2
 8011954:	e7fb      	b.n	801194e <__ascii_mbtowc+0x16>
 8011956:	f06f 0001 	mvn.w	r0, #1
 801195a:	e7f8      	b.n	801194e <__ascii_mbtowc+0x16>

0801195c <_Balloc>:
 801195c:	b570      	push	{r4, r5, r6, lr}
 801195e:	6a45      	ldr	r5, [r0, #36]	; 0x24
 8011960:	4604      	mov	r4, r0
 8011962:	460e      	mov	r6, r1
 8011964:	b93d      	cbnz	r5, 8011976 <_Balloc+0x1a>
 8011966:	2010      	movs	r0, #16
 8011968:	f000 fc84 	bl	8012274 <malloc>
 801196c:	6260      	str	r0, [r4, #36]	; 0x24
 801196e:	e9c0 5501 	strd	r5, r5, [r0, #4]
 8011972:	6005      	str	r5, [r0, #0]
 8011974:	60c5      	str	r5, [r0, #12]
 8011976:	6a65      	ldr	r5, [r4, #36]	; 0x24
 8011978:	68eb      	ldr	r3, [r5, #12]
 801197a:	b183      	cbz	r3, 801199e <_Balloc+0x42>
 801197c:	6a63      	ldr	r3, [r4, #36]	; 0x24
 801197e:	68db      	ldr	r3, [r3, #12]
 8011980:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8011984:	b9b8      	cbnz	r0, 80119b6 <_Balloc+0x5a>
 8011986:	2101      	movs	r1, #1
 8011988:	fa01 f506 	lsl.w	r5, r1, r6
 801198c:	1d6a      	adds	r2, r5, #5
 801198e:	0092      	lsls	r2, r2, #2
 8011990:	4620      	mov	r0, r4
 8011992:	f000 fbe2 	bl	801215a <_calloc_r>
 8011996:	b160      	cbz	r0, 80119b2 <_Balloc+0x56>
 8011998:	e9c0 6501 	strd	r6, r5, [r0, #4]
 801199c:	e00e      	b.n	80119bc <_Balloc+0x60>
 801199e:	2221      	movs	r2, #33	; 0x21
 80119a0:	2104      	movs	r1, #4
 80119a2:	4620      	mov	r0, r4
 80119a4:	f000 fbd9 	bl	801215a <_calloc_r>
 80119a8:	6a63      	ldr	r3, [r4, #36]	; 0x24
 80119aa:	60e8      	str	r0, [r5, #12]
 80119ac:	68db      	ldr	r3, [r3, #12]
 80119ae:	2b00      	cmp	r3, #0
 80119b0:	d1e4      	bne.n	801197c <_Balloc+0x20>
 80119b2:	2000      	movs	r0, #0
 80119b4:	bd70      	pop	{r4, r5, r6, pc}
 80119b6:	6802      	ldr	r2, [r0, #0]
 80119b8:	f843 2026 	str.w	r2, [r3, r6, lsl #2]
 80119bc:	2300      	movs	r3, #0
 80119be:	e9c0 3303 	strd	r3, r3, [r0, #12]
 80119c2:	e7f7      	b.n	80119b4 <_Balloc+0x58>

080119c4 <_Bfree>:
 80119c4:	b570      	push	{r4, r5, r6, lr}
 80119c6:	6a44      	ldr	r4, [r0, #36]	; 0x24
 80119c8:	4606      	mov	r6, r0
 80119ca:	460d      	mov	r5, r1
 80119cc:	b93c      	cbnz	r4, 80119de <_Bfree+0x1a>
 80119ce:	2010      	movs	r0, #16
 80119d0:	f000 fc50 	bl	8012274 <malloc>
 80119d4:	6270      	str	r0, [r6, #36]	; 0x24
 80119d6:	e9c0 4401 	strd	r4, r4, [r0, #4]
 80119da:	6004      	str	r4, [r0, #0]
 80119dc:	60c4      	str	r4, [r0, #12]
 80119de:	b13d      	cbz	r5, 80119f0 <_Bfree+0x2c>
 80119e0:	6a73      	ldr	r3, [r6, #36]	; 0x24
 80119e2:	686a      	ldr	r2, [r5, #4]
 80119e4:	68db      	ldr	r3, [r3, #12]
 80119e6:	f853 1022 	ldr.w	r1, [r3, r2, lsl #2]
 80119ea:	6029      	str	r1, [r5, #0]
 80119ec:	f843 5022 	str.w	r5, [r3, r2, lsl #2]
 80119f0:	bd70      	pop	{r4, r5, r6, pc}

080119f2 <__multadd>:
 80119f2:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 80119f6:	690d      	ldr	r5, [r1, #16]
 80119f8:	461f      	mov	r7, r3
 80119fa:	4606      	mov	r6, r0
 80119fc:	460c      	mov	r4, r1
 80119fe:	f101 0c14 	add.w	ip, r1, #20
 8011a02:	2300      	movs	r3, #0
 8011a04:	f8dc 0000 	ldr.w	r0, [ip]
 8011a08:	b281      	uxth	r1, r0
 8011a0a:	fb02 7101 	mla	r1, r2, r1, r7
 8011a0e:	0c0f      	lsrs	r7, r1, #16
 8011a10:	0c00      	lsrs	r0, r0, #16
 8011a12:	fb02 7000 	mla	r0, r2, r0, r7
 8011a16:	b289      	uxth	r1, r1
 8011a18:	3301      	adds	r3, #1
 8011a1a:	eb01 4100 	add.w	r1, r1, r0, lsl #16
 8011a1e:	429d      	cmp	r5, r3
 8011a20:	ea4f 4710 	mov.w	r7, r0, lsr #16
 8011a24:	f84c 1b04 	str.w	r1, [ip], #4
 8011a28:	dcec      	bgt.n	8011a04 <__multadd+0x12>
 8011a2a:	b1d7      	cbz	r7, 8011a62 <__multadd+0x70>
 8011a2c:	68a3      	ldr	r3, [r4, #8]
 8011a2e:	42ab      	cmp	r3, r5
 8011a30:	dc12      	bgt.n	8011a58 <__multadd+0x66>
 8011a32:	6861      	ldr	r1, [r4, #4]
 8011a34:	4630      	mov	r0, r6
 8011a36:	3101      	adds	r1, #1
 8011a38:	f7ff ff90 	bl	801195c <_Balloc>
 8011a3c:	6922      	ldr	r2, [r4, #16]
 8011a3e:	3202      	adds	r2, #2
 8011a40:	f104 010c 	add.w	r1, r4, #12
 8011a44:	4680      	mov	r8, r0
 8011a46:	0092      	lsls	r2, r2, #2
 8011a48:	300c      	adds	r0, #12
 8011a4a:	f7fe fded 	bl	8010628 <memcpy>
 8011a4e:	4621      	mov	r1, r4
 8011a50:	4630      	mov	r0, r6
 8011a52:	f7ff ffb7 	bl	80119c4 <_Bfree>
 8011a56:	4644      	mov	r4, r8
 8011a58:	eb04 0385 	add.w	r3, r4, r5, lsl #2
 8011a5c:	3501      	adds	r5, #1
 8011a5e:	615f      	str	r7, [r3, #20]
 8011a60:	6125      	str	r5, [r4, #16]
 8011a62:	4620      	mov	r0, r4
 8011a64:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}

08011a68 <__s2b>:
 8011a68:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011a6c:	460c      	mov	r4, r1
 8011a6e:	4615      	mov	r5, r2
 8011a70:	461f      	mov	r7, r3
 8011a72:	2209      	movs	r2, #9
 8011a74:	3308      	adds	r3, #8
 8011a76:	4606      	mov	r6, r0
 8011a78:	fb93 f3f2 	sdiv	r3, r3, r2
 8011a7c:	2100      	movs	r1, #0
 8011a7e:	2201      	movs	r2, #1
 8011a80:	429a      	cmp	r2, r3
 8011a82:	db20      	blt.n	8011ac6 <__s2b+0x5e>
 8011a84:	4630      	mov	r0, r6
 8011a86:	f7ff ff69 	bl	801195c <_Balloc>
 8011a8a:	9b08      	ldr	r3, [sp, #32]
 8011a8c:	6143      	str	r3, [r0, #20]
 8011a8e:	2d09      	cmp	r5, #9
 8011a90:	f04f 0301 	mov.w	r3, #1
 8011a94:	6103      	str	r3, [r0, #16]
 8011a96:	dd19      	ble.n	8011acc <__s2b+0x64>
 8011a98:	f104 0809 	add.w	r8, r4, #9
 8011a9c:	46c1      	mov	r9, r8
 8011a9e:	442c      	add	r4, r5
 8011aa0:	f819 3b01 	ldrb.w	r3, [r9], #1
 8011aa4:	4601      	mov	r1, r0
 8011aa6:	3b30      	subs	r3, #48	; 0x30
 8011aa8:	220a      	movs	r2, #10
 8011aaa:	4630      	mov	r0, r6
 8011aac:	f7ff ffa1 	bl	80119f2 <__multadd>
 8011ab0:	45a1      	cmp	r9, r4
 8011ab2:	d1f5      	bne.n	8011aa0 <__s2b+0x38>
 8011ab4:	eb08 0405 	add.w	r4, r8, r5
 8011ab8:	3c08      	subs	r4, #8
 8011aba:	1b2d      	subs	r5, r5, r4
 8011abc:	1963      	adds	r3, r4, r5
 8011abe:	42bb      	cmp	r3, r7
 8011ac0:	db07      	blt.n	8011ad2 <__s2b+0x6a>
 8011ac2:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011ac6:	0052      	lsls	r2, r2, #1
 8011ac8:	3101      	adds	r1, #1
 8011aca:	e7d9      	b.n	8011a80 <__s2b+0x18>
 8011acc:	340a      	adds	r4, #10
 8011ace:	2509      	movs	r5, #9
 8011ad0:	e7f3      	b.n	8011aba <__s2b+0x52>
 8011ad2:	f814 3b01 	ldrb.w	r3, [r4], #1
 8011ad6:	4601      	mov	r1, r0
 8011ad8:	3b30      	subs	r3, #48	; 0x30
 8011ada:	220a      	movs	r2, #10
 8011adc:	4630      	mov	r0, r6
 8011ade:	f7ff ff88 	bl	80119f2 <__multadd>
 8011ae2:	e7eb      	b.n	8011abc <__s2b+0x54>

08011ae4 <__hi0bits>:
 8011ae4:	0c02      	lsrs	r2, r0, #16
 8011ae6:	0412      	lsls	r2, r2, #16
 8011ae8:	4603      	mov	r3, r0
 8011aea:	b9b2      	cbnz	r2, 8011b1a <__hi0bits+0x36>
 8011aec:	0403      	lsls	r3, r0, #16
 8011aee:	2010      	movs	r0, #16
 8011af0:	f013 4f7f 	tst.w	r3, #4278190080	; 0xff000000
 8011af4:	bf04      	itt	eq
 8011af6:	021b      	lsleq	r3, r3, #8
 8011af8:	3008      	addeq	r0, #8
 8011afa:	f013 4f70 	tst.w	r3, #4026531840	; 0xf0000000
 8011afe:	bf04      	itt	eq
 8011b00:	011b      	lsleq	r3, r3, #4
 8011b02:	3004      	addeq	r0, #4
 8011b04:	f013 4f40 	tst.w	r3, #3221225472	; 0xc0000000
 8011b08:	bf04      	itt	eq
 8011b0a:	009b      	lsleq	r3, r3, #2
 8011b0c:	3002      	addeq	r0, #2
 8011b0e:	2b00      	cmp	r3, #0
 8011b10:	db06      	blt.n	8011b20 <__hi0bits+0x3c>
 8011b12:	005b      	lsls	r3, r3, #1
 8011b14:	d503      	bpl.n	8011b1e <__hi0bits+0x3a>
 8011b16:	3001      	adds	r0, #1
 8011b18:	4770      	bx	lr
 8011b1a:	2000      	movs	r0, #0
 8011b1c:	e7e8      	b.n	8011af0 <__hi0bits+0xc>
 8011b1e:	2020      	movs	r0, #32
 8011b20:	4770      	bx	lr

08011b22 <__lo0bits>:
 8011b22:	6803      	ldr	r3, [r0, #0]
 8011b24:	f013 0207 	ands.w	r2, r3, #7
 8011b28:	4601      	mov	r1, r0
 8011b2a:	d00b      	beq.n	8011b44 <__lo0bits+0x22>
 8011b2c:	07da      	lsls	r2, r3, #31
 8011b2e:	d423      	bmi.n	8011b78 <__lo0bits+0x56>
 8011b30:	0798      	lsls	r0, r3, #30
 8011b32:	bf49      	itett	mi
 8011b34:	085b      	lsrmi	r3, r3, #1
 8011b36:	089b      	lsrpl	r3, r3, #2
 8011b38:	2001      	movmi	r0, #1
 8011b3a:	600b      	strmi	r3, [r1, #0]
 8011b3c:	bf5c      	itt	pl
 8011b3e:	600b      	strpl	r3, [r1, #0]
 8011b40:	2002      	movpl	r0, #2
 8011b42:	4770      	bx	lr
 8011b44:	b298      	uxth	r0, r3
 8011b46:	b9a8      	cbnz	r0, 8011b74 <__lo0bits+0x52>
 8011b48:	0c1b      	lsrs	r3, r3, #16
 8011b4a:	2010      	movs	r0, #16
 8011b4c:	f013 0fff 	tst.w	r3, #255	; 0xff
 8011b50:	bf04      	itt	eq
 8011b52:	0a1b      	lsreq	r3, r3, #8
 8011b54:	3008      	addeq	r0, #8
 8011b56:	071a      	lsls	r2, r3, #28
 8011b58:	bf04      	itt	eq
 8011b5a:	091b      	lsreq	r3, r3, #4
 8011b5c:	3004      	addeq	r0, #4
 8011b5e:	079a      	lsls	r2, r3, #30
 8011b60:	bf04      	itt	eq
 8011b62:	089b      	lsreq	r3, r3, #2
 8011b64:	3002      	addeq	r0, #2
 8011b66:	07da      	lsls	r2, r3, #31
 8011b68:	d402      	bmi.n	8011b70 <__lo0bits+0x4e>
 8011b6a:	085b      	lsrs	r3, r3, #1
 8011b6c:	d006      	beq.n	8011b7c <__lo0bits+0x5a>
 8011b6e:	3001      	adds	r0, #1
 8011b70:	600b      	str	r3, [r1, #0]
 8011b72:	4770      	bx	lr
 8011b74:	4610      	mov	r0, r2
 8011b76:	e7e9      	b.n	8011b4c <__lo0bits+0x2a>
 8011b78:	2000      	movs	r0, #0
 8011b7a:	4770      	bx	lr
 8011b7c:	2020      	movs	r0, #32
 8011b7e:	4770      	bx	lr

08011b80 <__i2b>:
 8011b80:	b510      	push	{r4, lr}
 8011b82:	460c      	mov	r4, r1
 8011b84:	2101      	movs	r1, #1
 8011b86:	f7ff fee9 	bl	801195c <_Balloc>
 8011b8a:	2201      	movs	r2, #1
 8011b8c:	6144      	str	r4, [r0, #20]
 8011b8e:	6102      	str	r2, [r0, #16]
 8011b90:	bd10      	pop	{r4, pc}

08011b92 <__multiply>:
 8011b92:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8011b96:	4614      	mov	r4, r2
 8011b98:	690a      	ldr	r2, [r1, #16]
 8011b9a:	6923      	ldr	r3, [r4, #16]
 8011b9c:	429a      	cmp	r2, r3
 8011b9e:	bfb8      	it	lt
 8011ba0:	460b      	movlt	r3, r1
 8011ba2:	4688      	mov	r8, r1
 8011ba4:	bfbc      	itt	lt
 8011ba6:	46a0      	movlt	r8, r4
 8011ba8:	461c      	movlt	r4, r3
 8011baa:	f8d8 7010 	ldr.w	r7, [r8, #16]
 8011bae:	f8d4 9010 	ldr.w	r9, [r4, #16]
 8011bb2:	f8d8 3008 	ldr.w	r3, [r8, #8]
 8011bb6:	f8d8 1004 	ldr.w	r1, [r8, #4]
 8011bba:	eb07 0609 	add.w	r6, r7, r9
 8011bbe:	42b3      	cmp	r3, r6
 8011bc0:	bfb8      	it	lt
 8011bc2:	3101      	addlt	r1, #1
 8011bc4:	f7ff feca 	bl	801195c <_Balloc>
 8011bc8:	f100 0514 	add.w	r5, r0, #20
 8011bcc:	eb05 0e86 	add.w	lr, r5, r6, lsl #2
 8011bd0:	462b      	mov	r3, r5
 8011bd2:	2200      	movs	r2, #0
 8011bd4:	4573      	cmp	r3, lr
 8011bd6:	d316      	bcc.n	8011c06 <__multiply+0x74>
 8011bd8:	f104 0214 	add.w	r2, r4, #20
 8011bdc:	f108 0114 	add.w	r1, r8, #20
 8011be0:	eb02 0389 	add.w	r3, r2, r9, lsl #2
 8011be4:	eb01 0787 	add.w	r7, r1, r7, lsl #2
 8011be8:	9300      	str	r3, [sp, #0]
 8011bea:	9b00      	ldr	r3, [sp, #0]
 8011bec:	9201      	str	r2, [sp, #4]
 8011bee:	4293      	cmp	r3, r2
 8011bf0:	d80c      	bhi.n	8011c0c <__multiply+0x7a>
 8011bf2:	2e00      	cmp	r6, #0
 8011bf4:	dd03      	ble.n	8011bfe <__multiply+0x6c>
 8011bf6:	f85e 3d04 	ldr.w	r3, [lr, #-4]!
 8011bfa:	2b00      	cmp	r3, #0
 8011bfc:	d05d      	beq.n	8011cba <__multiply+0x128>
 8011bfe:	6106      	str	r6, [r0, #16]
 8011c00:	b003      	add	sp, #12
 8011c02:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8011c06:	f843 2b04 	str.w	r2, [r3], #4
 8011c0a:	e7e3      	b.n	8011bd4 <__multiply+0x42>
 8011c0c:	f8b2 b000 	ldrh.w	fp, [r2]
 8011c10:	f1bb 0f00 	cmp.w	fp, #0
 8011c14:	d023      	beq.n	8011c5e <__multiply+0xcc>
 8011c16:	4689      	mov	r9, r1
 8011c18:	46ac      	mov	ip, r5
 8011c1a:	f04f 0800 	mov.w	r8, #0
 8011c1e:	f859 4b04 	ldr.w	r4, [r9], #4
 8011c22:	f8dc a000 	ldr.w	sl, [ip]
 8011c26:	b2a3      	uxth	r3, r4
 8011c28:	fa1f fa8a 	uxth.w	sl, sl
 8011c2c:	fb0b a303 	mla	r3, fp, r3, sl
 8011c30:	ea4f 4a14 	mov.w	sl, r4, lsr #16
 8011c34:	f8dc 4000 	ldr.w	r4, [ip]
 8011c38:	4443      	add	r3, r8
 8011c3a:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8011c3e:	fb0b 840a 	mla	r4, fp, sl, r8
 8011c42:	eb04 4413 	add.w	r4, r4, r3, lsr #16
 8011c46:	46e2      	mov	sl, ip
 8011c48:	b29b      	uxth	r3, r3
 8011c4a:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8011c4e:	454f      	cmp	r7, r9
 8011c50:	ea4f 4814 	mov.w	r8, r4, lsr #16
 8011c54:	f84a 3b04 	str.w	r3, [sl], #4
 8011c58:	d82b      	bhi.n	8011cb2 <__multiply+0x120>
 8011c5a:	f8cc 8004 	str.w	r8, [ip, #4]
 8011c5e:	9b01      	ldr	r3, [sp, #4]
 8011c60:	f8b3 a002 	ldrh.w	sl, [r3, #2]
 8011c64:	3204      	adds	r2, #4
 8011c66:	f1ba 0f00 	cmp.w	sl, #0
 8011c6a:	d020      	beq.n	8011cae <__multiply+0x11c>
 8011c6c:	682b      	ldr	r3, [r5, #0]
 8011c6e:	4689      	mov	r9, r1
 8011c70:	46a8      	mov	r8, r5
 8011c72:	f04f 0b00 	mov.w	fp, #0
 8011c76:	f8b9 c000 	ldrh.w	ip, [r9]
 8011c7a:	f8b8 4002 	ldrh.w	r4, [r8, #2]
 8011c7e:	fb0a 440c 	mla	r4, sl, ip, r4
 8011c82:	445c      	add	r4, fp
 8011c84:	46c4      	mov	ip, r8
 8011c86:	b29b      	uxth	r3, r3
 8011c88:	ea43 4304 	orr.w	r3, r3, r4, lsl #16
 8011c8c:	f84c 3b04 	str.w	r3, [ip], #4
 8011c90:	f859 3b04 	ldr.w	r3, [r9], #4
 8011c94:	f8b8 b004 	ldrh.w	fp, [r8, #4]
 8011c98:	0c1b      	lsrs	r3, r3, #16
 8011c9a:	fb0a b303 	mla	r3, sl, r3, fp
 8011c9e:	eb03 4314 	add.w	r3, r3, r4, lsr #16
 8011ca2:	454f      	cmp	r7, r9
 8011ca4:	ea4f 4b13 	mov.w	fp, r3, lsr #16
 8011ca8:	d805      	bhi.n	8011cb6 <__multiply+0x124>
 8011caa:	f8c8 3004 	str.w	r3, [r8, #4]
 8011cae:	3504      	adds	r5, #4
 8011cb0:	e79b      	b.n	8011bea <__multiply+0x58>
 8011cb2:	46d4      	mov	ip, sl
 8011cb4:	e7b3      	b.n	8011c1e <__multiply+0x8c>
 8011cb6:	46e0      	mov	r8, ip
 8011cb8:	e7dd      	b.n	8011c76 <__multiply+0xe4>
 8011cba:	3e01      	subs	r6, #1
 8011cbc:	e799      	b.n	8011bf2 <__multiply+0x60>
	...

08011cc0 <__pow5mult>:
 8011cc0:	e92d 43f8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, lr}
 8011cc4:	4615      	mov	r5, r2
 8011cc6:	f012 0203 	ands.w	r2, r2, #3
 8011cca:	4606      	mov	r6, r0
 8011ccc:	460f      	mov	r7, r1
 8011cce:	d007      	beq.n	8011ce0 <__pow5mult+0x20>
 8011cd0:	3a01      	subs	r2, #1
 8011cd2:	4c21      	ldr	r4, [pc, #132]	; (8011d58 <__pow5mult+0x98>)
 8011cd4:	2300      	movs	r3, #0
 8011cd6:	f854 2022 	ldr.w	r2, [r4, r2, lsl #2]
 8011cda:	f7ff fe8a 	bl	80119f2 <__multadd>
 8011cde:	4607      	mov	r7, r0
 8011ce0:	10ad      	asrs	r5, r5, #2
 8011ce2:	d035      	beq.n	8011d50 <__pow5mult+0x90>
 8011ce4:	6a74      	ldr	r4, [r6, #36]	; 0x24
 8011ce6:	b93c      	cbnz	r4, 8011cf8 <__pow5mult+0x38>
 8011ce8:	2010      	movs	r0, #16
 8011cea:	f000 fac3 	bl	8012274 <malloc>
 8011cee:	6270      	str	r0, [r6, #36]	; 0x24
 8011cf0:	e9c0 4401 	strd	r4, r4, [r0, #4]
 8011cf4:	6004      	str	r4, [r0, #0]
 8011cf6:	60c4      	str	r4, [r0, #12]
 8011cf8:	f8d6 8024 	ldr.w	r8, [r6, #36]	; 0x24
 8011cfc:	f8d8 4008 	ldr.w	r4, [r8, #8]
 8011d00:	b94c      	cbnz	r4, 8011d16 <__pow5mult+0x56>
 8011d02:	f240 2171 	movw	r1, #625	; 0x271
 8011d06:	4630      	mov	r0, r6
 8011d08:	f7ff ff3a 	bl	8011b80 <__i2b>
 8011d0c:	2300      	movs	r3, #0
 8011d0e:	f8c8 0008 	str.w	r0, [r8, #8]
 8011d12:	4604      	mov	r4, r0
 8011d14:	6003      	str	r3, [r0, #0]
 8011d16:	f04f 0800 	mov.w	r8, #0
 8011d1a:	07eb      	lsls	r3, r5, #31
 8011d1c:	d50a      	bpl.n	8011d34 <__pow5mult+0x74>
 8011d1e:	4639      	mov	r1, r7
 8011d20:	4622      	mov	r2, r4
 8011d22:	4630      	mov	r0, r6
 8011d24:	f7ff ff35 	bl	8011b92 <__multiply>
 8011d28:	4639      	mov	r1, r7
 8011d2a:	4681      	mov	r9, r0
 8011d2c:	4630      	mov	r0, r6
 8011d2e:	f7ff fe49 	bl	80119c4 <_Bfree>
 8011d32:	464f      	mov	r7, r9
 8011d34:	106d      	asrs	r5, r5, #1
 8011d36:	d00b      	beq.n	8011d50 <__pow5mult+0x90>
 8011d38:	6820      	ldr	r0, [r4, #0]
 8011d3a:	b938      	cbnz	r0, 8011d4c <__pow5mult+0x8c>
 8011d3c:	4622      	mov	r2, r4
 8011d3e:	4621      	mov	r1, r4
 8011d40:	4630      	mov	r0, r6
 8011d42:	f7ff ff26 	bl	8011b92 <__multiply>
 8011d46:	6020      	str	r0, [r4, #0]
 8011d48:	f8c0 8000 	str.w	r8, [r0]
 8011d4c:	4604      	mov	r4, r0
 8011d4e:	e7e4      	b.n	8011d1a <__pow5mult+0x5a>
 8011d50:	4638      	mov	r0, r7
 8011d52:	e8bd 83f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, pc}
 8011d56:	bf00      	nop
 8011d58:	08016500 	.word	0x08016500

08011d5c <__lshift>:
 8011d5c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011d60:	460c      	mov	r4, r1
 8011d62:	ea4f 1a62 	mov.w	sl, r2, asr #5
 8011d66:	6923      	ldr	r3, [r4, #16]
 8011d68:	6849      	ldr	r1, [r1, #4]
 8011d6a:	eb0a 0903 	add.w	r9, sl, r3
 8011d6e:	68a3      	ldr	r3, [r4, #8]
 8011d70:	4607      	mov	r7, r0
 8011d72:	4616      	mov	r6, r2
 8011d74:	f109 0501 	add.w	r5, r9, #1
 8011d78:	42ab      	cmp	r3, r5
 8011d7a:	db32      	blt.n	8011de2 <__lshift+0x86>
 8011d7c:	4638      	mov	r0, r7
 8011d7e:	f7ff fded 	bl	801195c <_Balloc>
 8011d82:	2300      	movs	r3, #0
 8011d84:	4680      	mov	r8, r0
 8011d86:	f100 0114 	add.w	r1, r0, #20
 8011d8a:	461a      	mov	r2, r3
 8011d8c:	4553      	cmp	r3, sl
 8011d8e:	db2b      	blt.n	8011de8 <__lshift+0x8c>
 8011d90:	6920      	ldr	r0, [r4, #16]
 8011d92:	ea2a 7aea 	bic.w	sl, sl, sl, asr #31
 8011d96:	f104 0314 	add.w	r3, r4, #20
 8011d9a:	f016 021f 	ands.w	r2, r6, #31
 8011d9e:	eb01 018a 	add.w	r1, r1, sl, lsl #2
 8011da2:	eb03 0c80 	add.w	ip, r3, r0, lsl #2
 8011da6:	d025      	beq.n	8011df4 <__lshift+0x98>
 8011da8:	f1c2 0e20 	rsb	lr, r2, #32
 8011dac:	2000      	movs	r0, #0
 8011dae:	681e      	ldr	r6, [r3, #0]
 8011db0:	468a      	mov	sl, r1
 8011db2:	4096      	lsls	r6, r2
 8011db4:	4330      	orrs	r0, r6
 8011db6:	f84a 0b04 	str.w	r0, [sl], #4
 8011dba:	f853 0b04 	ldr.w	r0, [r3], #4
 8011dbe:	459c      	cmp	ip, r3
 8011dc0:	fa20 f00e 	lsr.w	r0, r0, lr
 8011dc4:	d814      	bhi.n	8011df0 <__lshift+0x94>
 8011dc6:	6048      	str	r0, [r1, #4]
 8011dc8:	b108      	cbz	r0, 8011dce <__lshift+0x72>
 8011dca:	f109 0502 	add.w	r5, r9, #2
 8011dce:	3d01      	subs	r5, #1
 8011dd0:	4638      	mov	r0, r7
 8011dd2:	f8c8 5010 	str.w	r5, [r8, #16]
 8011dd6:	4621      	mov	r1, r4
 8011dd8:	f7ff fdf4 	bl	80119c4 <_Bfree>
 8011ddc:	4640      	mov	r0, r8
 8011dde:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011de2:	3101      	adds	r1, #1
 8011de4:	005b      	lsls	r3, r3, #1
 8011de6:	e7c7      	b.n	8011d78 <__lshift+0x1c>
 8011de8:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8011dec:	3301      	adds	r3, #1
 8011dee:	e7cd      	b.n	8011d8c <__lshift+0x30>
 8011df0:	4651      	mov	r1, sl
 8011df2:	e7dc      	b.n	8011dae <__lshift+0x52>
 8011df4:	3904      	subs	r1, #4
 8011df6:	f853 2b04 	ldr.w	r2, [r3], #4
 8011dfa:	f841 2f04 	str.w	r2, [r1, #4]!
 8011dfe:	459c      	cmp	ip, r3
 8011e00:	d8f9      	bhi.n	8011df6 <__lshift+0x9a>
 8011e02:	e7e4      	b.n	8011dce <__lshift+0x72>

08011e04 <__mcmp>:
 8011e04:	6903      	ldr	r3, [r0, #16]
 8011e06:	690a      	ldr	r2, [r1, #16]
 8011e08:	1a9b      	subs	r3, r3, r2
 8011e0a:	b530      	push	{r4, r5, lr}
 8011e0c:	d10c      	bne.n	8011e28 <__mcmp+0x24>
 8011e0e:	0092      	lsls	r2, r2, #2
 8011e10:	3014      	adds	r0, #20
 8011e12:	3114      	adds	r1, #20
 8011e14:	1884      	adds	r4, r0, r2
 8011e16:	4411      	add	r1, r2
 8011e18:	f854 5d04 	ldr.w	r5, [r4, #-4]!
 8011e1c:	f851 2d04 	ldr.w	r2, [r1, #-4]!
 8011e20:	4295      	cmp	r5, r2
 8011e22:	d003      	beq.n	8011e2c <__mcmp+0x28>
 8011e24:	d305      	bcc.n	8011e32 <__mcmp+0x2e>
 8011e26:	2301      	movs	r3, #1
 8011e28:	4618      	mov	r0, r3
 8011e2a:	bd30      	pop	{r4, r5, pc}
 8011e2c:	42a0      	cmp	r0, r4
 8011e2e:	d3f3      	bcc.n	8011e18 <__mcmp+0x14>
 8011e30:	e7fa      	b.n	8011e28 <__mcmp+0x24>
 8011e32:	f04f 33ff 	mov.w	r3, #4294967295
 8011e36:	e7f7      	b.n	8011e28 <__mcmp+0x24>

08011e38 <__mdiff>:
 8011e38:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8011e3c:	460d      	mov	r5, r1
 8011e3e:	4607      	mov	r7, r0
 8011e40:	4611      	mov	r1, r2
 8011e42:	4628      	mov	r0, r5
 8011e44:	4614      	mov	r4, r2
 8011e46:	f7ff ffdd 	bl	8011e04 <__mcmp>
 8011e4a:	1e06      	subs	r6, r0, #0
 8011e4c:	d108      	bne.n	8011e60 <__mdiff+0x28>
 8011e4e:	4631      	mov	r1, r6
 8011e50:	4638      	mov	r0, r7
 8011e52:	f7ff fd83 	bl	801195c <_Balloc>
 8011e56:	2301      	movs	r3, #1
 8011e58:	e9c0 3604 	strd	r3, r6, [r0, #16]
 8011e5c:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8011e60:	bfa4      	itt	ge
 8011e62:	4623      	movge	r3, r4
 8011e64:	462c      	movge	r4, r5
 8011e66:	4638      	mov	r0, r7
 8011e68:	6861      	ldr	r1, [r4, #4]
 8011e6a:	bfa6      	itte	ge
 8011e6c:	461d      	movge	r5, r3
 8011e6e:	2600      	movge	r6, #0
 8011e70:	2601      	movlt	r6, #1
 8011e72:	f7ff fd73 	bl	801195c <_Balloc>
 8011e76:	692b      	ldr	r3, [r5, #16]
 8011e78:	60c6      	str	r6, [r0, #12]
 8011e7a:	6926      	ldr	r6, [r4, #16]
 8011e7c:	f105 0914 	add.w	r9, r5, #20
 8011e80:	f104 0214 	add.w	r2, r4, #20
 8011e84:	eb02 0786 	add.w	r7, r2, r6, lsl #2
 8011e88:	eb09 0883 	add.w	r8, r9, r3, lsl #2
 8011e8c:	f100 0514 	add.w	r5, r0, #20
 8011e90:	f04f 0e00 	mov.w	lr, #0
 8011e94:	f852 ab04 	ldr.w	sl, [r2], #4
 8011e98:	f859 4b04 	ldr.w	r4, [r9], #4
 8011e9c:	fa1e f18a 	uxtah	r1, lr, sl
 8011ea0:	b2a3      	uxth	r3, r4
 8011ea2:	1ac9      	subs	r1, r1, r3
 8011ea4:	0c23      	lsrs	r3, r4, #16
 8011ea6:	ebc3 431a 	rsb	r3, r3, sl, lsr #16
 8011eaa:	eb03 4321 	add.w	r3, r3, r1, asr #16
 8011eae:	b289      	uxth	r1, r1
 8011eb0:	ea4f 4e23 	mov.w	lr, r3, asr #16
 8011eb4:	45c8      	cmp	r8, r9
 8011eb6:	ea41 4303 	orr.w	r3, r1, r3, lsl #16
 8011eba:	4694      	mov	ip, r2
 8011ebc:	f845 3b04 	str.w	r3, [r5], #4
 8011ec0:	d8e8      	bhi.n	8011e94 <__mdiff+0x5c>
 8011ec2:	45bc      	cmp	ip, r7
 8011ec4:	d304      	bcc.n	8011ed0 <__mdiff+0x98>
 8011ec6:	f855 3d04 	ldr.w	r3, [r5, #-4]!
 8011eca:	b183      	cbz	r3, 8011eee <__mdiff+0xb6>
 8011ecc:	6106      	str	r6, [r0, #16]
 8011ece:	e7c5      	b.n	8011e5c <__mdiff+0x24>
 8011ed0:	f85c 1b04 	ldr.w	r1, [ip], #4
 8011ed4:	fa1e f381 	uxtah	r3, lr, r1
 8011ed8:	141a      	asrs	r2, r3, #16
 8011eda:	eb02 4211 	add.w	r2, r2, r1, lsr #16
 8011ede:	b29b      	uxth	r3, r3
 8011ee0:	ea43 4302 	orr.w	r3, r3, r2, lsl #16
 8011ee4:	ea4f 4e22 	mov.w	lr, r2, asr #16
 8011ee8:	f845 3b04 	str.w	r3, [r5], #4
 8011eec:	e7e9      	b.n	8011ec2 <__mdiff+0x8a>
 8011eee:	3e01      	subs	r6, #1
 8011ef0:	e7e9      	b.n	8011ec6 <__mdiff+0x8e>
	...

08011ef4 <__ulp>:
 8011ef4:	4b12      	ldr	r3, [pc, #72]	; (8011f40 <__ulp+0x4c>)
 8011ef6:	ee10 2a90 	vmov	r2, s1
 8011efa:	401a      	ands	r2, r3
 8011efc:	f1a2 7350 	sub.w	r3, r2, #54525952	; 0x3400000
 8011f00:	2b00      	cmp	r3, #0
 8011f02:	dd04      	ble.n	8011f0e <__ulp+0x1a>
 8011f04:	2000      	movs	r0, #0
 8011f06:	4619      	mov	r1, r3
 8011f08:	ec41 0b10 	vmov	d0, r0, r1
 8011f0c:	4770      	bx	lr
 8011f0e:	425b      	negs	r3, r3
 8011f10:	151b      	asrs	r3, r3, #20
 8011f12:	2b13      	cmp	r3, #19
 8011f14:	f04f 0000 	mov.w	r0, #0
 8011f18:	f04f 0100 	mov.w	r1, #0
 8011f1c:	dc04      	bgt.n	8011f28 <__ulp+0x34>
 8011f1e:	f44f 2200 	mov.w	r2, #524288	; 0x80000
 8011f22:	fa42 f103 	asr.w	r1, r2, r3
 8011f26:	e7ef      	b.n	8011f08 <__ulp+0x14>
 8011f28:	3b14      	subs	r3, #20
 8011f2a:	2b1e      	cmp	r3, #30
 8011f2c:	f04f 0201 	mov.w	r2, #1
 8011f30:	bfda      	itte	le
 8011f32:	f1c3 031f 	rsble	r3, r3, #31
 8011f36:	fa02 f303 	lslle.w	r3, r2, r3
 8011f3a:	4613      	movgt	r3, r2
 8011f3c:	4618      	mov	r0, r3
 8011f3e:	e7e3      	b.n	8011f08 <__ulp+0x14>
 8011f40:	7ff00000 	.word	0x7ff00000

08011f44 <__b2d>:
 8011f44:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8011f46:	6905      	ldr	r5, [r0, #16]
 8011f48:	f100 0714 	add.w	r7, r0, #20
 8011f4c:	eb07 0585 	add.w	r5, r7, r5, lsl #2
 8011f50:	1f2e      	subs	r6, r5, #4
 8011f52:	f855 4c04 	ldr.w	r4, [r5, #-4]
 8011f56:	4620      	mov	r0, r4
 8011f58:	f7ff fdc4 	bl	8011ae4 <__hi0bits>
 8011f5c:	f1c0 0320 	rsb	r3, r0, #32
 8011f60:	280a      	cmp	r0, #10
 8011f62:	600b      	str	r3, [r1, #0]
 8011f64:	f8df c074 	ldr.w	ip, [pc, #116]	; 8011fdc <__b2d+0x98>
 8011f68:	dc14      	bgt.n	8011f94 <__b2d+0x50>
 8011f6a:	f1c0 0e0b 	rsb	lr, r0, #11
 8011f6e:	fa24 f10e 	lsr.w	r1, r4, lr
 8011f72:	42b7      	cmp	r7, r6
 8011f74:	ea41 030c 	orr.w	r3, r1, ip
 8011f78:	bf34      	ite	cc
 8011f7a:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8011f7e:	2100      	movcs	r1, #0
 8011f80:	3015      	adds	r0, #21
 8011f82:	fa04 f000 	lsl.w	r0, r4, r0
 8011f86:	fa21 f10e 	lsr.w	r1, r1, lr
 8011f8a:	ea40 0201 	orr.w	r2, r0, r1
 8011f8e:	ec43 2b10 	vmov	d0, r2, r3
 8011f92:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 8011f94:	42b7      	cmp	r7, r6
 8011f96:	bf3a      	itte	cc
 8011f98:	f1a5 0608 	subcc.w	r6, r5, #8
 8011f9c:	f855 1c08 	ldrcc.w	r1, [r5, #-8]
 8011fa0:	2100      	movcs	r1, #0
 8011fa2:	380b      	subs	r0, #11
 8011fa4:	d015      	beq.n	8011fd2 <__b2d+0x8e>
 8011fa6:	4084      	lsls	r4, r0
 8011fa8:	f1c0 0520 	rsb	r5, r0, #32
 8011fac:	f044 547f 	orr.w	r4, r4, #1069547520	; 0x3fc00000
 8011fb0:	f444 1440 	orr.w	r4, r4, #3145728	; 0x300000
 8011fb4:	42be      	cmp	r6, r7
 8011fb6:	fa21 fc05 	lsr.w	ip, r1, r5
 8011fba:	ea44 030c 	orr.w	r3, r4, ip
 8011fbe:	bf8c      	ite	hi
 8011fc0:	f856 4c04 	ldrhi.w	r4, [r6, #-4]
 8011fc4:	2400      	movls	r4, #0
 8011fc6:	fa01 f000 	lsl.w	r0, r1, r0
 8011fca:	40ec      	lsrs	r4, r5
 8011fcc:	ea40 0204 	orr.w	r2, r0, r4
 8011fd0:	e7dd      	b.n	8011f8e <__b2d+0x4a>
 8011fd2:	ea44 030c 	orr.w	r3, r4, ip
 8011fd6:	460a      	mov	r2, r1
 8011fd8:	e7d9      	b.n	8011f8e <__b2d+0x4a>
 8011fda:	bf00      	nop
 8011fdc:	3ff00000 	.word	0x3ff00000

08011fe0 <__d2b>:
 8011fe0:	e92d 43f7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, lr}
 8011fe4:	460e      	mov	r6, r1
 8011fe6:	2101      	movs	r1, #1
 8011fe8:	ec59 8b10 	vmov	r8, r9, d0
 8011fec:	4615      	mov	r5, r2
 8011fee:	f7ff fcb5 	bl	801195c <_Balloc>
 8011ff2:	f3c9 540a 	ubfx	r4, r9, #20, #11
 8011ff6:	4607      	mov	r7, r0
 8011ff8:	f3c9 0313 	ubfx	r3, r9, #0, #20
 8011ffc:	bb34      	cbnz	r4, 801204c <__d2b+0x6c>
 8011ffe:	9301      	str	r3, [sp, #4]
 8012000:	f1b8 0300 	subs.w	r3, r8, #0
 8012004:	d027      	beq.n	8012056 <__d2b+0x76>
 8012006:	a802      	add	r0, sp, #8
 8012008:	f840 3d08 	str.w	r3, [r0, #-8]!
 801200c:	f7ff fd89 	bl	8011b22 <__lo0bits>
 8012010:	9900      	ldr	r1, [sp, #0]
 8012012:	b1f0      	cbz	r0, 8012052 <__d2b+0x72>
 8012014:	9a01      	ldr	r2, [sp, #4]
 8012016:	f1c0 0320 	rsb	r3, r0, #32
 801201a:	fa02 f303 	lsl.w	r3, r2, r3
 801201e:	430b      	orrs	r3, r1
 8012020:	40c2      	lsrs	r2, r0
 8012022:	617b      	str	r3, [r7, #20]
 8012024:	9201      	str	r2, [sp, #4]
 8012026:	9b01      	ldr	r3, [sp, #4]
 8012028:	61bb      	str	r3, [r7, #24]
 801202a:	2b00      	cmp	r3, #0
 801202c:	bf14      	ite	ne
 801202e:	2102      	movne	r1, #2
 8012030:	2101      	moveq	r1, #1
 8012032:	6139      	str	r1, [r7, #16]
 8012034:	b1c4      	cbz	r4, 8012068 <__d2b+0x88>
 8012036:	f2a4 4433 	subw	r4, r4, #1075	; 0x433
 801203a:	4404      	add	r4, r0
 801203c:	6034      	str	r4, [r6, #0]
 801203e:	f1c0 0035 	rsb	r0, r0, #53	; 0x35
 8012042:	6028      	str	r0, [r5, #0]
 8012044:	4638      	mov	r0, r7
 8012046:	b003      	add	sp, #12
 8012048:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801204c:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8012050:	e7d5      	b.n	8011ffe <__d2b+0x1e>
 8012052:	6179      	str	r1, [r7, #20]
 8012054:	e7e7      	b.n	8012026 <__d2b+0x46>
 8012056:	a801      	add	r0, sp, #4
 8012058:	f7ff fd63 	bl	8011b22 <__lo0bits>
 801205c:	9b01      	ldr	r3, [sp, #4]
 801205e:	617b      	str	r3, [r7, #20]
 8012060:	2101      	movs	r1, #1
 8012062:	6139      	str	r1, [r7, #16]
 8012064:	3020      	adds	r0, #32
 8012066:	e7e5      	b.n	8012034 <__d2b+0x54>
 8012068:	eb07 0381 	add.w	r3, r7, r1, lsl #2
 801206c:	f2a0 4032 	subw	r0, r0, #1074	; 0x432
 8012070:	6030      	str	r0, [r6, #0]
 8012072:	6918      	ldr	r0, [r3, #16]
 8012074:	f7ff fd36 	bl	8011ae4 <__hi0bits>
 8012078:	ebc0 1041 	rsb	r0, r0, r1, lsl #5
 801207c:	e7e1      	b.n	8012042 <__d2b+0x62>

0801207e <__ratio>:
 801207e:	e92d 4ff7 	stmdb	sp!, {r0, r1, r2, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012082:	4688      	mov	r8, r1
 8012084:	4669      	mov	r1, sp
 8012086:	4681      	mov	r9, r0
 8012088:	f7ff ff5c 	bl	8011f44 <__b2d>
 801208c:	a901      	add	r1, sp, #4
 801208e:	4640      	mov	r0, r8
 8012090:	ec57 6b10 	vmov	r6, r7, d0
 8012094:	f7ff ff56 	bl	8011f44 <__b2d>
 8012098:	f8d9 3010 	ldr.w	r3, [r9, #16]
 801209c:	f8d8 2010 	ldr.w	r2, [r8, #16]
 80120a0:	eba3 0c02 	sub.w	ip, r3, r2
 80120a4:	e9dd 3200 	ldrd	r3, r2, [sp]
 80120a8:	1a9b      	subs	r3, r3, r2
 80120aa:	eb03 134c 	add.w	r3, r3, ip, lsl #5
 80120ae:	ec5b ab10 	vmov	sl, fp, d0
 80120b2:	2b00      	cmp	r3, #0
 80120b4:	bfce      	itee	gt
 80120b6:	463a      	movgt	r2, r7
 80120b8:	ebc3 3303 	rsble	r3, r3, r3, lsl #12
 80120bc:	465a      	movle	r2, fp
 80120be:	4659      	mov	r1, fp
 80120c0:	463d      	mov	r5, r7
 80120c2:	bfd4      	ite	le
 80120c4:	eb02 5103 	addle.w	r1, r2, r3, lsl #20
 80120c8:	eb02 5503 	addgt.w	r5, r2, r3, lsl #20
 80120cc:	4630      	mov	r0, r6
 80120ce:	ee10 2a10 	vmov	r2, s0
 80120d2:	460b      	mov	r3, r1
 80120d4:	4629      	mov	r1, r5
 80120d6:	f7ee fb8b 	bl	80007f0 <__aeabi_ddiv>
 80120da:	ec41 0b10 	vmov	d0, r0, r1
 80120de:	b003      	add	sp, #12
 80120e0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}

080120e4 <__copybits>:
 80120e4:	3901      	subs	r1, #1
 80120e6:	b510      	push	{r4, lr}
 80120e8:	1149      	asrs	r1, r1, #5
 80120ea:	6914      	ldr	r4, [r2, #16]
 80120ec:	3101      	adds	r1, #1
 80120ee:	f102 0314 	add.w	r3, r2, #20
 80120f2:	eb00 0181 	add.w	r1, r0, r1, lsl #2
 80120f6:	eb03 0484 	add.w	r4, r3, r4, lsl #2
 80120fa:	42a3      	cmp	r3, r4
 80120fc:	4602      	mov	r2, r0
 80120fe:	d303      	bcc.n	8012108 <__copybits+0x24>
 8012100:	2300      	movs	r3, #0
 8012102:	428a      	cmp	r2, r1
 8012104:	d305      	bcc.n	8012112 <__copybits+0x2e>
 8012106:	bd10      	pop	{r4, pc}
 8012108:	f853 2b04 	ldr.w	r2, [r3], #4
 801210c:	f840 2b04 	str.w	r2, [r0], #4
 8012110:	e7f3      	b.n	80120fa <__copybits+0x16>
 8012112:	f842 3b04 	str.w	r3, [r2], #4
 8012116:	e7f4      	b.n	8012102 <__copybits+0x1e>

08012118 <__any_on>:
 8012118:	f100 0214 	add.w	r2, r0, #20
 801211c:	6900      	ldr	r0, [r0, #16]
 801211e:	114b      	asrs	r3, r1, #5
 8012120:	4298      	cmp	r0, r3
 8012122:	b510      	push	{r4, lr}
 8012124:	db11      	blt.n	801214a <__any_on+0x32>
 8012126:	dd0a      	ble.n	801213e <__any_on+0x26>
 8012128:	f011 011f 	ands.w	r1, r1, #31
 801212c:	d007      	beq.n	801213e <__any_on+0x26>
 801212e:	f852 4023 	ldr.w	r4, [r2, r3, lsl #2]
 8012132:	fa24 f001 	lsr.w	r0, r4, r1
 8012136:	fa00 f101 	lsl.w	r1, r0, r1
 801213a:	428c      	cmp	r4, r1
 801213c:	d10b      	bne.n	8012156 <__any_on+0x3e>
 801213e:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8012142:	4293      	cmp	r3, r2
 8012144:	d803      	bhi.n	801214e <__any_on+0x36>
 8012146:	2000      	movs	r0, #0
 8012148:	bd10      	pop	{r4, pc}
 801214a:	4603      	mov	r3, r0
 801214c:	e7f7      	b.n	801213e <__any_on+0x26>
 801214e:	f853 1d04 	ldr.w	r1, [r3, #-4]!
 8012152:	2900      	cmp	r1, #0
 8012154:	d0f5      	beq.n	8012142 <__any_on+0x2a>
 8012156:	2001      	movs	r0, #1
 8012158:	e7f6      	b.n	8012148 <__any_on+0x30>

0801215a <_calloc_r>:
 801215a:	b538      	push	{r3, r4, r5, lr}
 801215c:	fb02 f401 	mul.w	r4, r2, r1
 8012160:	4621      	mov	r1, r4
 8012162:	f000 f809 	bl	8012178 <_malloc_r>
 8012166:	4605      	mov	r5, r0
 8012168:	b118      	cbz	r0, 8012172 <_calloc_r+0x18>
 801216a:	4622      	mov	r2, r4
 801216c:	2100      	movs	r1, #0
 801216e:	f7fe fa66 	bl	801063e <memset>
 8012172:	4628      	mov	r0, r5
 8012174:	bd38      	pop	{r3, r4, r5, pc}
	...

08012178 <_malloc_r>:
 8012178:	b570      	push	{r4, r5, r6, lr}
 801217a:	1ccd      	adds	r5, r1, #3
 801217c:	f025 0503 	bic.w	r5, r5, #3
 8012180:	3508      	adds	r5, #8
 8012182:	2d0c      	cmp	r5, #12
 8012184:	bf38      	it	cc
 8012186:	250c      	movcc	r5, #12
 8012188:	2d00      	cmp	r5, #0
 801218a:	4606      	mov	r6, r0
 801218c:	db01      	blt.n	8012192 <_malloc_r+0x1a>
 801218e:	42a9      	cmp	r1, r5
 8012190:	d903      	bls.n	801219a <_malloc_r+0x22>
 8012192:	230c      	movs	r3, #12
 8012194:	6033      	str	r3, [r6, #0]
 8012196:	2000      	movs	r0, #0
 8012198:	bd70      	pop	{r4, r5, r6, pc}
 801219a:	f000 f873 	bl	8012284 <__malloc_lock>
 801219e:	4a21      	ldr	r2, [pc, #132]	; (8012224 <_malloc_r+0xac>)
 80121a0:	6814      	ldr	r4, [r2, #0]
 80121a2:	4621      	mov	r1, r4
 80121a4:	b991      	cbnz	r1, 80121cc <_malloc_r+0x54>
 80121a6:	4c20      	ldr	r4, [pc, #128]	; (8012228 <_malloc_r+0xb0>)
 80121a8:	6823      	ldr	r3, [r4, #0]
 80121aa:	b91b      	cbnz	r3, 80121b4 <_malloc_r+0x3c>
 80121ac:	4630      	mov	r0, r6
 80121ae:	f000 f83d 	bl	801222c <_sbrk_r>
 80121b2:	6020      	str	r0, [r4, #0]
 80121b4:	4629      	mov	r1, r5
 80121b6:	4630      	mov	r0, r6
 80121b8:	f000 f838 	bl	801222c <_sbrk_r>
 80121bc:	1c43      	adds	r3, r0, #1
 80121be:	d124      	bne.n	801220a <_malloc_r+0x92>
 80121c0:	230c      	movs	r3, #12
 80121c2:	6033      	str	r3, [r6, #0]
 80121c4:	4630      	mov	r0, r6
 80121c6:	f000 f85e 	bl	8012286 <__malloc_unlock>
 80121ca:	e7e4      	b.n	8012196 <_malloc_r+0x1e>
 80121cc:	680b      	ldr	r3, [r1, #0]
 80121ce:	1b5b      	subs	r3, r3, r5
 80121d0:	d418      	bmi.n	8012204 <_malloc_r+0x8c>
 80121d2:	2b0b      	cmp	r3, #11
 80121d4:	d90f      	bls.n	80121f6 <_malloc_r+0x7e>
 80121d6:	600b      	str	r3, [r1, #0]
 80121d8:	50cd      	str	r5, [r1, r3]
 80121da:	18cc      	adds	r4, r1, r3
 80121dc:	4630      	mov	r0, r6
 80121de:	f000 f852 	bl	8012286 <__malloc_unlock>
 80121e2:	f104 000b 	add.w	r0, r4, #11
 80121e6:	1d23      	adds	r3, r4, #4
 80121e8:	f020 0007 	bic.w	r0, r0, #7
 80121ec:	1ac3      	subs	r3, r0, r3
 80121ee:	d0d3      	beq.n	8012198 <_malloc_r+0x20>
 80121f0:	425a      	negs	r2, r3
 80121f2:	50e2      	str	r2, [r4, r3]
 80121f4:	e7d0      	b.n	8012198 <_malloc_r+0x20>
 80121f6:	428c      	cmp	r4, r1
 80121f8:	684b      	ldr	r3, [r1, #4]
 80121fa:	bf16      	itet	ne
 80121fc:	6063      	strne	r3, [r4, #4]
 80121fe:	6013      	streq	r3, [r2, #0]
 8012200:	460c      	movne	r4, r1
 8012202:	e7eb      	b.n	80121dc <_malloc_r+0x64>
 8012204:	460c      	mov	r4, r1
 8012206:	6849      	ldr	r1, [r1, #4]
 8012208:	e7cc      	b.n	80121a4 <_malloc_r+0x2c>
 801220a:	1cc4      	adds	r4, r0, #3
 801220c:	f024 0403 	bic.w	r4, r4, #3
 8012210:	42a0      	cmp	r0, r4
 8012212:	d005      	beq.n	8012220 <_malloc_r+0xa8>
 8012214:	1a21      	subs	r1, r4, r0
 8012216:	4630      	mov	r0, r6
 8012218:	f000 f808 	bl	801222c <_sbrk_r>
 801221c:	3001      	adds	r0, #1
 801221e:	d0cf      	beq.n	80121c0 <_malloc_r+0x48>
 8012220:	6025      	str	r5, [r4, #0]
 8012222:	e7db      	b.n	80121dc <_malloc_r+0x64>
 8012224:	200079f8 	.word	0x200079f8
 8012228:	200079fc 	.word	0x200079fc

0801222c <_sbrk_r>:
 801222c:	b538      	push	{r3, r4, r5, lr}
 801222e:	4c06      	ldr	r4, [pc, #24]	; (8012248 <_sbrk_r+0x1c>)
 8012230:	2300      	movs	r3, #0
 8012232:	4605      	mov	r5, r0
 8012234:	4608      	mov	r0, r1
 8012236:	6023      	str	r3, [r4, #0]
 8012238:	f7f5 fd6a 	bl	8007d10 <_sbrk>
 801223c:	1c43      	adds	r3, r0, #1
 801223e:	d102      	bne.n	8012246 <_sbrk_r+0x1a>
 8012240:	6823      	ldr	r3, [r4, #0]
 8012242:	b103      	cbz	r3, 8012246 <_sbrk_r+0x1a>
 8012244:	602b      	str	r3, [r5, #0]
 8012246:	bd38      	pop	{r3, r4, r5, pc}
 8012248:	2000b5e0 	.word	0x2000b5e0

0801224c <nanf>:
 801224c:	ed9f 0a01 	vldr	s0, [pc, #4]	; 8012254 <nanf+0x8>
 8012250:	4770      	bx	lr
 8012252:	bf00      	nop
 8012254:	7fc00000 	.word	0x7fc00000

08012258 <__ascii_wctomb>:
 8012258:	b149      	cbz	r1, 801226e <__ascii_wctomb+0x16>
 801225a:	2aff      	cmp	r2, #255	; 0xff
 801225c:	bf85      	ittet	hi
 801225e:	238a      	movhi	r3, #138	; 0x8a
 8012260:	6003      	strhi	r3, [r0, #0]
 8012262:	700a      	strbls	r2, [r1, #0]
 8012264:	f04f 30ff 	movhi.w	r0, #4294967295
 8012268:	bf98      	it	ls
 801226a:	2001      	movls	r0, #1
 801226c:	4770      	bx	lr
 801226e:	4608      	mov	r0, r1
 8012270:	4770      	bx	lr
	...

08012274 <malloc>:
 8012274:	4b02      	ldr	r3, [pc, #8]	; (8012280 <malloc+0xc>)
 8012276:	4601      	mov	r1, r0
 8012278:	6818      	ldr	r0, [r3, #0]
 801227a:	f7ff bf7d 	b.w	8012178 <_malloc_r>
 801227e:	bf00      	nop
 8012280:	2000001c 	.word	0x2000001c

08012284 <__malloc_lock>:
 8012284:	4770      	bx	lr

08012286 <__malloc_unlock>:
 8012286:	4770      	bx	lr

08012288 <cos>:
 8012288:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 801228a:	ec51 0b10 	vmov	r0, r1, d0
 801228e:	4a1e      	ldr	r2, [pc, #120]	; (8012308 <cos+0x80>)
 8012290:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8012294:	4293      	cmp	r3, r2
 8012296:	dc06      	bgt.n	80122a6 <cos+0x1e>
 8012298:	ed9f 1b19 	vldr	d1, [pc, #100]	; 8012300 <cos+0x78>
 801229c:	f002 fab8 	bl	8014810 <__kernel_cos>
 80122a0:	ec51 0b10 	vmov	r0, r1, d0
 80122a4:	e007      	b.n	80122b6 <cos+0x2e>
 80122a6:	4a19      	ldr	r2, [pc, #100]	; (801230c <cos+0x84>)
 80122a8:	4293      	cmp	r3, r2
 80122aa:	dd09      	ble.n	80122c0 <cos+0x38>
 80122ac:	ee10 2a10 	vmov	r2, s0
 80122b0:	460b      	mov	r3, r1
 80122b2:	f7ed ffbb 	bl	800022c <__aeabi_dsub>
 80122b6:	ec41 0b10 	vmov	d0, r0, r1
 80122ba:	b005      	add	sp, #20
 80122bc:	f85d fb04 	ldr.w	pc, [sp], #4
 80122c0:	4668      	mov	r0, sp
 80122c2:	f001 fc11 	bl	8013ae8 <__ieee754_rem_pio2>
 80122c6:	f000 0003 	and.w	r0, r0, #3
 80122ca:	2801      	cmp	r0, #1
 80122cc:	ed9d 1b02 	vldr	d1, [sp, #8]
 80122d0:	ed9d 0b00 	vldr	d0, [sp]
 80122d4:	d007      	beq.n	80122e6 <cos+0x5e>
 80122d6:	2802      	cmp	r0, #2
 80122d8:	d00e      	beq.n	80122f8 <cos+0x70>
 80122da:	2800      	cmp	r0, #0
 80122dc:	d0de      	beq.n	801229c <cos+0x14>
 80122de:	2001      	movs	r0, #1
 80122e0:	f002 fe9e 	bl	8015020 <__kernel_sin>
 80122e4:	e7dc      	b.n	80122a0 <cos+0x18>
 80122e6:	f002 fe9b 	bl	8015020 <__kernel_sin>
 80122ea:	ec53 2b10 	vmov	r2, r3, d0
 80122ee:	ee10 0a10 	vmov	r0, s0
 80122f2:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 80122f6:	e7de      	b.n	80122b6 <cos+0x2e>
 80122f8:	f002 fa8a 	bl	8014810 <__kernel_cos>
 80122fc:	e7f5      	b.n	80122ea <cos+0x62>
 80122fe:	bf00      	nop
	...
 8012308:	3fe921fb 	.word	0x3fe921fb
 801230c:	7fefffff 	.word	0x7fefffff

08012310 <sin>:
 8012310:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 8012312:	ec51 0b10 	vmov	r0, r1, d0
 8012316:	4a20      	ldr	r2, [pc, #128]	; (8012398 <sin+0x88>)
 8012318:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 801231c:	4293      	cmp	r3, r2
 801231e:	dc07      	bgt.n	8012330 <sin+0x20>
 8012320:	ed9f 1b1b 	vldr	d1, [pc, #108]	; 8012390 <sin+0x80>
 8012324:	2000      	movs	r0, #0
 8012326:	f002 fe7b 	bl	8015020 <__kernel_sin>
 801232a:	ec51 0b10 	vmov	r0, r1, d0
 801232e:	e007      	b.n	8012340 <sin+0x30>
 8012330:	4a1a      	ldr	r2, [pc, #104]	; (801239c <sin+0x8c>)
 8012332:	4293      	cmp	r3, r2
 8012334:	dd09      	ble.n	801234a <sin+0x3a>
 8012336:	ee10 2a10 	vmov	r2, s0
 801233a:	460b      	mov	r3, r1
 801233c:	f7ed ff76 	bl	800022c <__aeabi_dsub>
 8012340:	ec41 0b10 	vmov	d0, r0, r1
 8012344:	b005      	add	sp, #20
 8012346:	f85d fb04 	ldr.w	pc, [sp], #4
 801234a:	4668      	mov	r0, sp
 801234c:	f001 fbcc 	bl	8013ae8 <__ieee754_rem_pio2>
 8012350:	f000 0003 	and.w	r0, r0, #3
 8012354:	2801      	cmp	r0, #1
 8012356:	ed9d 1b02 	vldr	d1, [sp, #8]
 801235a:	ed9d 0b00 	vldr	d0, [sp]
 801235e:	d004      	beq.n	801236a <sin+0x5a>
 8012360:	2802      	cmp	r0, #2
 8012362:	d005      	beq.n	8012370 <sin+0x60>
 8012364:	b970      	cbnz	r0, 8012384 <sin+0x74>
 8012366:	2001      	movs	r0, #1
 8012368:	e7dd      	b.n	8012326 <sin+0x16>
 801236a:	f002 fa51 	bl	8014810 <__kernel_cos>
 801236e:	e7dc      	b.n	801232a <sin+0x1a>
 8012370:	2001      	movs	r0, #1
 8012372:	f002 fe55 	bl	8015020 <__kernel_sin>
 8012376:	ec53 2b10 	vmov	r2, r3, d0
 801237a:	ee10 0a10 	vmov	r0, s0
 801237e:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 8012382:	e7dd      	b.n	8012340 <sin+0x30>
 8012384:	f002 fa44 	bl	8014810 <__kernel_cos>
 8012388:	e7f5      	b.n	8012376 <sin+0x66>
 801238a:	bf00      	nop
 801238c:	f3af 8000 	nop.w
	...
 8012398:	3fe921fb 	.word	0x3fe921fb
 801239c:	7fefffff 	.word	0x7fefffff

080123a0 <tan>:
 80123a0:	b51f      	push	{r0, r1, r2, r3, r4, lr}
 80123a2:	ec51 0b10 	vmov	r0, r1, d0
 80123a6:	4a14      	ldr	r2, [pc, #80]	; (80123f8 <tan+0x58>)
 80123a8:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 80123ac:	4293      	cmp	r3, r2
 80123ae:	dc05      	bgt.n	80123bc <tan+0x1c>
 80123b0:	ed9f 1b0f 	vldr	d1, [pc, #60]	; 80123f0 <tan+0x50>
 80123b4:	2001      	movs	r0, #1
 80123b6:	f002 feef 	bl	8015198 <__kernel_tan>
 80123ba:	e009      	b.n	80123d0 <tan+0x30>
 80123bc:	4a0f      	ldr	r2, [pc, #60]	; (80123fc <tan+0x5c>)
 80123be:	4293      	cmp	r3, r2
 80123c0:	dd09      	ble.n	80123d6 <tan+0x36>
 80123c2:	ee10 2a10 	vmov	r2, s0
 80123c6:	460b      	mov	r3, r1
 80123c8:	f7ed ff30 	bl	800022c <__aeabi_dsub>
 80123cc:	ec41 0b10 	vmov	d0, r0, r1
 80123d0:	b005      	add	sp, #20
 80123d2:	f85d fb04 	ldr.w	pc, [sp], #4
 80123d6:	4668      	mov	r0, sp
 80123d8:	f001 fb86 	bl	8013ae8 <__ieee754_rem_pio2>
 80123dc:	0040      	lsls	r0, r0, #1
 80123de:	f000 0002 	and.w	r0, r0, #2
 80123e2:	f1c0 0001 	rsb	r0, r0, #1
 80123e6:	ed9d 1b02 	vldr	d1, [sp, #8]
 80123ea:	ed9d 0b00 	vldr	d0, [sp]
 80123ee:	e7e2      	b.n	80123b6 <tan+0x16>
	...
 80123f8:	3fe921fb 	.word	0x3fe921fb
 80123fc:	7fefffff 	.word	0x7fefffff

08012400 <cosf>:
 8012400:	ee10 3a10 	vmov	r3, s0
 8012404:	b507      	push	{r0, r1, r2, lr}
 8012406:	4a1c      	ldr	r2, [pc, #112]	; (8012478 <cosf+0x78>)
 8012408:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801240c:	4293      	cmp	r3, r2
 801240e:	dc04      	bgt.n	801241a <cosf+0x1a>
 8012410:	eddf 0a1a 	vldr	s1, [pc, #104]	; 801247c <cosf+0x7c>
 8012414:	f003 f88c 	bl	8015530 <__kernel_cosf>
 8012418:	e004      	b.n	8012424 <cosf+0x24>
 801241a:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 801241e:	db04      	blt.n	801242a <cosf+0x2a>
 8012420:	ee30 0a40 	vsub.f32	s0, s0, s0
 8012424:	b003      	add	sp, #12
 8012426:	f85d fb04 	ldr.w	pc, [sp], #4
 801242a:	4668      	mov	r0, sp
 801242c:	f002 f8be 	bl	80145ac <__ieee754_rem_pio2f>
 8012430:	f000 0003 	and.w	r0, r0, #3
 8012434:	2801      	cmp	r0, #1
 8012436:	d007      	beq.n	8012448 <cosf+0x48>
 8012438:	2802      	cmp	r0, #2
 801243a:	d00e      	beq.n	801245a <cosf+0x5a>
 801243c:	b9a0      	cbnz	r0, 8012468 <cosf+0x68>
 801243e:	eddd 0a01 	vldr	s1, [sp, #4]
 8012442:	ed9d 0a00 	vldr	s0, [sp]
 8012446:	e7e5      	b.n	8012414 <cosf+0x14>
 8012448:	eddd 0a01 	vldr	s1, [sp, #4]
 801244c:	ed9d 0a00 	vldr	s0, [sp]
 8012450:	f003 fb4e 	bl	8015af0 <__kernel_sinf>
 8012454:	eeb1 0a40 	vneg.f32	s0, s0
 8012458:	e7e4      	b.n	8012424 <cosf+0x24>
 801245a:	eddd 0a01 	vldr	s1, [sp, #4]
 801245e:	ed9d 0a00 	vldr	s0, [sp]
 8012462:	f003 f865 	bl	8015530 <__kernel_cosf>
 8012466:	e7f5      	b.n	8012454 <cosf+0x54>
 8012468:	2001      	movs	r0, #1
 801246a:	eddd 0a01 	vldr	s1, [sp, #4]
 801246e:	ed9d 0a00 	vldr	s0, [sp]
 8012472:	f003 fb3d 	bl	8015af0 <__kernel_sinf>
 8012476:	e7d5      	b.n	8012424 <cosf+0x24>
 8012478:	3f490fd8 	.word	0x3f490fd8
 801247c:	00000000 	.word	0x00000000

08012480 <sinf>:
 8012480:	ee10 3a10 	vmov	r3, s0
 8012484:	b507      	push	{r0, r1, r2, lr}
 8012486:	4a1d      	ldr	r2, [pc, #116]	; (80124fc <sinf+0x7c>)
 8012488:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 801248c:	4293      	cmp	r3, r2
 801248e:	dc05      	bgt.n	801249c <sinf+0x1c>
 8012490:	eddf 0a1b 	vldr	s1, [pc, #108]	; 8012500 <sinf+0x80>
 8012494:	2000      	movs	r0, #0
 8012496:	f003 fb2b 	bl	8015af0 <__kernel_sinf>
 801249a:	e004      	b.n	80124a6 <sinf+0x26>
 801249c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 80124a0:	db04      	blt.n	80124ac <sinf+0x2c>
 80124a2:	ee30 0a40 	vsub.f32	s0, s0, s0
 80124a6:	b003      	add	sp, #12
 80124a8:	f85d fb04 	ldr.w	pc, [sp], #4
 80124ac:	4668      	mov	r0, sp
 80124ae:	f002 f87d 	bl	80145ac <__ieee754_rem_pio2f>
 80124b2:	f000 0003 	and.w	r0, r0, #3
 80124b6:	2801      	cmp	r0, #1
 80124b8:	d008      	beq.n	80124cc <sinf+0x4c>
 80124ba:	2802      	cmp	r0, #2
 80124bc:	d00d      	beq.n	80124da <sinf+0x5a>
 80124be:	b9b0      	cbnz	r0, 80124ee <sinf+0x6e>
 80124c0:	2001      	movs	r0, #1
 80124c2:	eddd 0a01 	vldr	s1, [sp, #4]
 80124c6:	ed9d 0a00 	vldr	s0, [sp]
 80124ca:	e7e4      	b.n	8012496 <sinf+0x16>
 80124cc:	eddd 0a01 	vldr	s1, [sp, #4]
 80124d0:	ed9d 0a00 	vldr	s0, [sp]
 80124d4:	f003 f82c 	bl	8015530 <__kernel_cosf>
 80124d8:	e7e5      	b.n	80124a6 <sinf+0x26>
 80124da:	2001      	movs	r0, #1
 80124dc:	eddd 0a01 	vldr	s1, [sp, #4]
 80124e0:	ed9d 0a00 	vldr	s0, [sp]
 80124e4:	f003 fb04 	bl	8015af0 <__kernel_sinf>
 80124e8:	eeb1 0a40 	vneg.f32	s0, s0
 80124ec:	e7db      	b.n	80124a6 <sinf+0x26>
 80124ee:	eddd 0a01 	vldr	s1, [sp, #4]
 80124f2:	ed9d 0a00 	vldr	s0, [sp]
 80124f6:	f003 f81b 	bl	8015530 <__kernel_cosf>
 80124fa:	e7f5      	b.n	80124e8 <sinf+0x68>
 80124fc:	3f490fd8 	.word	0x3f490fd8
 8012500:	00000000 	.word	0x00000000

08012504 <acos>:
 8012504:	b5f0      	push	{r4, r5, r6, r7, lr}
 8012506:	ed2d 8b02 	vpush	{d8}
 801250a:	4e26      	ldr	r6, [pc, #152]	; (80125a4 <acos+0xa0>)
 801250c:	b08b      	sub	sp, #44	; 0x2c
 801250e:	ec55 4b10 	vmov	r4, r5, d0
 8012512:	f000 fb7d 	bl	8012c10 <__ieee754_acos>
 8012516:	f996 3000 	ldrsb.w	r3, [r6]
 801251a:	eeb0 8a40 	vmov.f32	s16, s0
 801251e:	eef0 8a60 	vmov.f32	s17, s1
 8012522:	3301      	adds	r3, #1
 8012524:	d036      	beq.n	8012594 <acos+0x90>
 8012526:	4622      	mov	r2, r4
 8012528:	462b      	mov	r3, r5
 801252a:	4620      	mov	r0, r4
 801252c:	4629      	mov	r1, r5
 801252e:	f7ee facf 	bl	8000ad0 <__aeabi_dcmpun>
 8012532:	4607      	mov	r7, r0
 8012534:	bb70      	cbnz	r0, 8012594 <acos+0x90>
 8012536:	ec45 4b10 	vmov	d0, r4, r5
 801253a:	f003 fb21 	bl	8015b80 <fabs>
 801253e:	2200      	movs	r2, #0
 8012540:	4b19      	ldr	r3, [pc, #100]	; (80125a8 <acos+0xa4>)
 8012542:	ec51 0b10 	vmov	r0, r1, d0
 8012546:	f7ee fab9 	bl	8000abc <__aeabi_dcmpgt>
 801254a:	b318      	cbz	r0, 8012594 <acos+0x90>
 801254c:	2301      	movs	r3, #1
 801254e:	9300      	str	r3, [sp, #0]
 8012550:	4816      	ldr	r0, [pc, #88]	; (80125ac <acos+0xa8>)
 8012552:	4b17      	ldr	r3, [pc, #92]	; (80125b0 <acos+0xac>)
 8012554:	9301      	str	r3, [sp, #4]
 8012556:	9708      	str	r7, [sp, #32]
 8012558:	e9cd 4504 	strd	r4, r5, [sp, #16]
 801255c:	e9cd 4502 	strd	r4, r5, [sp, #8]
 8012560:	f003 fbaa 	bl	8015cb8 <nan>
 8012564:	f996 3000 	ldrsb.w	r3, [r6]
 8012568:	2b02      	cmp	r3, #2
 801256a:	ed8d 0b06 	vstr	d0, [sp, #24]
 801256e:	d104      	bne.n	801257a <acos+0x76>
 8012570:	f7fe f830 	bl	80105d4 <__errno>
 8012574:	2321      	movs	r3, #33	; 0x21
 8012576:	6003      	str	r3, [r0, #0]
 8012578:	e004      	b.n	8012584 <acos+0x80>
 801257a:	4668      	mov	r0, sp
 801257c:	f003 fb98 	bl	8015cb0 <matherr>
 8012580:	2800      	cmp	r0, #0
 8012582:	d0f5      	beq.n	8012570 <acos+0x6c>
 8012584:	9b08      	ldr	r3, [sp, #32]
 8012586:	b11b      	cbz	r3, 8012590 <acos+0x8c>
 8012588:	f7fe f824 	bl	80105d4 <__errno>
 801258c:	9b08      	ldr	r3, [sp, #32]
 801258e:	6003      	str	r3, [r0, #0]
 8012590:	ed9d 8b06 	vldr	d8, [sp, #24]
 8012594:	eeb0 0a48 	vmov.f32	s0, s16
 8012598:	eef0 0a68 	vmov.f32	s1, s17
 801259c:	b00b      	add	sp, #44	; 0x2c
 801259e:	ecbd 8b02 	vpop	{d8}
 80125a2:	bdf0      	pop	{r4, r5, r6, r7, pc}
 80125a4:	200001ec 	.word	0x200001ec
 80125a8:	3ff00000 	.word	0x3ff00000
 80125ac:	08016409 	.word	0x08016409
 80125b0:	0801660d 	.word	0x0801660d

080125b4 <pow>:
 80125b4:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80125b8:	ed2d 8b04 	vpush	{d8-d9}
 80125bc:	f8df 92d0 	ldr.w	r9, [pc, #720]	; 8012890 <pow+0x2dc>
 80125c0:	b08d      	sub	sp, #52	; 0x34
 80125c2:	ec57 6b10 	vmov	r6, r7, d0
 80125c6:	ec55 4b11 	vmov	r4, r5, d1
 80125ca:	f000 fd7d 	bl	80130c8 <__ieee754_pow>
 80125ce:	f999 3000 	ldrsb.w	r3, [r9]
 80125d2:	9300      	str	r3, [sp, #0]
 80125d4:	3301      	adds	r3, #1
 80125d6:	eeb0 8a40 	vmov.f32	s16, s0
 80125da:	eef0 8a60 	vmov.f32	s17, s1
 80125de:	46c8      	mov	r8, r9
 80125e0:	d05f      	beq.n	80126a2 <pow+0xee>
 80125e2:	4622      	mov	r2, r4
 80125e4:	462b      	mov	r3, r5
 80125e6:	4620      	mov	r0, r4
 80125e8:	4629      	mov	r1, r5
 80125ea:	f7ee fa71 	bl	8000ad0 <__aeabi_dcmpun>
 80125ee:	4683      	mov	fp, r0
 80125f0:	2800      	cmp	r0, #0
 80125f2:	d156      	bne.n	80126a2 <pow+0xee>
 80125f4:	4632      	mov	r2, r6
 80125f6:	463b      	mov	r3, r7
 80125f8:	4630      	mov	r0, r6
 80125fa:	4639      	mov	r1, r7
 80125fc:	f7ee fa68 	bl	8000ad0 <__aeabi_dcmpun>
 8012600:	9001      	str	r0, [sp, #4]
 8012602:	b1e8      	cbz	r0, 8012640 <pow+0x8c>
 8012604:	2200      	movs	r2, #0
 8012606:	2300      	movs	r3, #0
 8012608:	4620      	mov	r0, r4
 801260a:	4629      	mov	r1, r5
 801260c:	f7ee fa2e 	bl	8000a6c <__aeabi_dcmpeq>
 8012610:	2800      	cmp	r0, #0
 8012612:	d046      	beq.n	80126a2 <pow+0xee>
 8012614:	2301      	movs	r3, #1
 8012616:	9302      	str	r3, [sp, #8]
 8012618:	4b96      	ldr	r3, [pc, #600]	; (8012874 <pow+0x2c0>)
 801261a:	9303      	str	r3, [sp, #12]
 801261c:	4b96      	ldr	r3, [pc, #600]	; (8012878 <pow+0x2c4>)
 801261e:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 8012622:	2200      	movs	r2, #0
 8012624:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8012628:	9b00      	ldr	r3, [sp, #0]
 801262a:	2b02      	cmp	r3, #2
 801262c:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8012630:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8012634:	d033      	beq.n	801269e <pow+0xea>
 8012636:	a802      	add	r0, sp, #8
 8012638:	f003 fb3a 	bl	8015cb0 <matherr>
 801263c:	bb48      	cbnz	r0, 8012692 <pow+0xde>
 801263e:	e05d      	b.n	80126fc <pow+0x148>
 8012640:	f04f 0a00 	mov.w	sl, #0
 8012644:	f04f 0b00 	mov.w	fp, #0
 8012648:	4652      	mov	r2, sl
 801264a:	465b      	mov	r3, fp
 801264c:	4630      	mov	r0, r6
 801264e:	4639      	mov	r1, r7
 8012650:	f7ee fa0c 	bl	8000a6c <__aeabi_dcmpeq>
 8012654:	ec4b ab19 	vmov	d9, sl, fp
 8012658:	2800      	cmp	r0, #0
 801265a:	d054      	beq.n	8012706 <pow+0x152>
 801265c:	4652      	mov	r2, sl
 801265e:	465b      	mov	r3, fp
 8012660:	4620      	mov	r0, r4
 8012662:	4629      	mov	r1, r5
 8012664:	f7ee fa02 	bl	8000a6c <__aeabi_dcmpeq>
 8012668:	4680      	mov	r8, r0
 801266a:	b318      	cbz	r0, 80126b4 <pow+0x100>
 801266c:	2301      	movs	r3, #1
 801266e:	9302      	str	r3, [sp, #8]
 8012670:	4b80      	ldr	r3, [pc, #512]	; (8012874 <pow+0x2c0>)
 8012672:	9303      	str	r3, [sp, #12]
 8012674:	9b01      	ldr	r3, [sp, #4]
 8012676:	930a      	str	r3, [sp, #40]	; 0x28
 8012678:	9b00      	ldr	r3, [sp, #0]
 801267a:	e9cd 6704 	strd	r6, r7, [sp, #16]
 801267e:	e9cd 4506 	strd	r4, r5, [sp, #24]
 8012682:	e9cd ab08 	strd	sl, fp, [sp, #32]
 8012686:	2b00      	cmp	r3, #0
 8012688:	d0d5      	beq.n	8012636 <pow+0x82>
 801268a:	4b7b      	ldr	r3, [pc, #492]	; (8012878 <pow+0x2c4>)
 801268c:	2200      	movs	r2, #0
 801268e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8012692:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8012694:	b11b      	cbz	r3, 801269e <pow+0xea>
 8012696:	f7fd ff9d 	bl	80105d4 <__errno>
 801269a:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801269c:	6003      	str	r3, [r0, #0]
 801269e:	ed9d 8b08 	vldr	d8, [sp, #32]
 80126a2:	eeb0 0a48 	vmov.f32	s0, s16
 80126a6:	eef0 0a68 	vmov.f32	s1, s17
 80126aa:	b00d      	add	sp, #52	; 0x34
 80126ac:	ecbd 8b04 	vpop	{d8-d9}
 80126b0:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80126b4:	ec45 4b10 	vmov	d0, r4, r5
 80126b8:	f003 fa6b 	bl	8015b92 <finite>
 80126bc:	2800      	cmp	r0, #0
 80126be:	d0f0      	beq.n	80126a2 <pow+0xee>
 80126c0:	4652      	mov	r2, sl
 80126c2:	465b      	mov	r3, fp
 80126c4:	4620      	mov	r0, r4
 80126c6:	4629      	mov	r1, r5
 80126c8:	f7ee f9da 	bl	8000a80 <__aeabi_dcmplt>
 80126cc:	2800      	cmp	r0, #0
 80126ce:	d0e8      	beq.n	80126a2 <pow+0xee>
 80126d0:	2301      	movs	r3, #1
 80126d2:	9302      	str	r3, [sp, #8]
 80126d4:	4b67      	ldr	r3, [pc, #412]	; (8012874 <pow+0x2c0>)
 80126d6:	9303      	str	r3, [sp, #12]
 80126d8:	f999 3000 	ldrsb.w	r3, [r9]
 80126dc:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 80126e0:	e9cd 6704 	strd	r6, r7, [sp, #16]
 80126e4:	e9cd 4506 	strd	r4, r5, [sp, #24]
 80126e8:	b913      	cbnz	r3, 80126f0 <pow+0x13c>
 80126ea:	e9cd ab08 	strd	sl, fp, [sp, #32]
 80126ee:	e7a2      	b.n	8012636 <pow+0x82>
 80126f0:	4962      	ldr	r1, [pc, #392]	; (801287c <pow+0x2c8>)
 80126f2:	2000      	movs	r0, #0
 80126f4:	e9cd 0108 	strd	r0, r1, [sp, #32]
 80126f8:	2b02      	cmp	r3, #2
 80126fa:	d19c      	bne.n	8012636 <pow+0x82>
 80126fc:	f7fd ff6a 	bl	80105d4 <__errno>
 8012700:	2321      	movs	r3, #33	; 0x21
 8012702:	6003      	str	r3, [r0, #0]
 8012704:	e7c5      	b.n	8012692 <pow+0xde>
 8012706:	eeb0 0a48 	vmov.f32	s0, s16
 801270a:	eef0 0a68 	vmov.f32	s1, s17
 801270e:	f003 fa40 	bl	8015b92 <finite>
 8012712:	9000      	str	r0, [sp, #0]
 8012714:	2800      	cmp	r0, #0
 8012716:	f040 8081 	bne.w	801281c <pow+0x268>
 801271a:	ec47 6b10 	vmov	d0, r6, r7
 801271e:	f003 fa38 	bl	8015b92 <finite>
 8012722:	2800      	cmp	r0, #0
 8012724:	d07a      	beq.n	801281c <pow+0x268>
 8012726:	ec45 4b10 	vmov	d0, r4, r5
 801272a:	f003 fa32 	bl	8015b92 <finite>
 801272e:	2800      	cmp	r0, #0
 8012730:	d074      	beq.n	801281c <pow+0x268>
 8012732:	ec53 2b18 	vmov	r2, r3, d8
 8012736:	ee18 0a10 	vmov	r0, s16
 801273a:	4619      	mov	r1, r3
 801273c:	f7ee f9c8 	bl	8000ad0 <__aeabi_dcmpun>
 8012740:	f999 9000 	ldrsb.w	r9, [r9]
 8012744:	4b4b      	ldr	r3, [pc, #300]	; (8012874 <pow+0x2c0>)
 8012746:	b1b0      	cbz	r0, 8012776 <pow+0x1c2>
 8012748:	2201      	movs	r2, #1
 801274a:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801274e:	9b00      	ldr	r3, [sp, #0]
 8012750:	930a      	str	r3, [sp, #40]	; 0x28
 8012752:	e9cd 6704 	strd	r6, r7, [sp, #16]
 8012756:	e9cd 4506 	strd	r4, r5, [sp, #24]
 801275a:	f1b9 0f00 	cmp.w	r9, #0
 801275e:	d0c4      	beq.n	80126ea <pow+0x136>
 8012760:	4652      	mov	r2, sl
 8012762:	465b      	mov	r3, fp
 8012764:	4650      	mov	r0, sl
 8012766:	4659      	mov	r1, fp
 8012768:	f7ee f842 	bl	80007f0 <__aeabi_ddiv>
 801276c:	f1b9 0f02 	cmp.w	r9, #2
 8012770:	e9cd 0108 	strd	r0, r1, [sp, #32]
 8012774:	e7c1      	b.n	80126fa <pow+0x146>
 8012776:	2203      	movs	r2, #3
 8012778:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801277c:	900a      	str	r0, [sp, #40]	; 0x28
 801277e:	4629      	mov	r1, r5
 8012780:	4620      	mov	r0, r4
 8012782:	2200      	movs	r2, #0
 8012784:	4b3e      	ldr	r3, [pc, #248]	; (8012880 <pow+0x2cc>)
 8012786:	e9cd 4506 	strd	r4, r5, [sp, #24]
 801278a:	e9cd 6704 	strd	r6, r7, [sp, #16]
 801278e:	f7ed ff05 	bl	800059c <__aeabi_dmul>
 8012792:	4604      	mov	r4, r0
 8012794:	460d      	mov	r5, r1
 8012796:	f1b9 0f00 	cmp.w	r9, #0
 801279a:	d124      	bne.n	80127e6 <pow+0x232>
 801279c:	4b39      	ldr	r3, [pc, #228]	; (8012884 <pow+0x2d0>)
 801279e:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80127a2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80127a6:	4630      	mov	r0, r6
 80127a8:	4652      	mov	r2, sl
 80127aa:	465b      	mov	r3, fp
 80127ac:	4639      	mov	r1, r7
 80127ae:	f7ee f967 	bl	8000a80 <__aeabi_dcmplt>
 80127b2:	2800      	cmp	r0, #0
 80127b4:	d056      	beq.n	8012864 <pow+0x2b0>
 80127b6:	ec45 4b10 	vmov	d0, r4, r5
 80127ba:	f003 fa85 	bl	8015cc8 <rint>
 80127be:	4622      	mov	r2, r4
 80127c0:	462b      	mov	r3, r5
 80127c2:	ec51 0b10 	vmov	r0, r1, d0
 80127c6:	f7ee f951 	bl	8000a6c <__aeabi_dcmpeq>
 80127ca:	b920      	cbnz	r0, 80127d6 <pow+0x222>
 80127cc:	4b2e      	ldr	r3, [pc, #184]	; (8012888 <pow+0x2d4>)
 80127ce:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 80127d2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80127d6:	f998 3000 	ldrsb.w	r3, [r8]
 80127da:	2b02      	cmp	r3, #2
 80127dc:	d142      	bne.n	8012864 <pow+0x2b0>
 80127de:	f7fd fef9 	bl	80105d4 <__errno>
 80127e2:	2322      	movs	r3, #34	; 0x22
 80127e4:	e78d      	b.n	8012702 <pow+0x14e>
 80127e6:	4b29      	ldr	r3, [pc, #164]	; (801288c <pow+0x2d8>)
 80127e8:	2200      	movs	r2, #0
 80127ea:	e9cd 2308 	strd	r2, r3, [sp, #32]
 80127ee:	4630      	mov	r0, r6
 80127f0:	4652      	mov	r2, sl
 80127f2:	465b      	mov	r3, fp
 80127f4:	4639      	mov	r1, r7
 80127f6:	f7ee f943 	bl	8000a80 <__aeabi_dcmplt>
 80127fa:	2800      	cmp	r0, #0
 80127fc:	d0eb      	beq.n	80127d6 <pow+0x222>
 80127fe:	ec45 4b10 	vmov	d0, r4, r5
 8012802:	f003 fa61 	bl	8015cc8 <rint>
 8012806:	4622      	mov	r2, r4
 8012808:	462b      	mov	r3, r5
 801280a:	ec51 0b10 	vmov	r0, r1, d0
 801280e:	f7ee f92d 	bl	8000a6c <__aeabi_dcmpeq>
 8012812:	2800      	cmp	r0, #0
 8012814:	d1df      	bne.n	80127d6 <pow+0x222>
 8012816:	2200      	movs	r2, #0
 8012818:	4b18      	ldr	r3, [pc, #96]	; (801287c <pow+0x2c8>)
 801281a:	e7da      	b.n	80127d2 <pow+0x21e>
 801281c:	2200      	movs	r2, #0
 801281e:	2300      	movs	r3, #0
 8012820:	ec51 0b18 	vmov	r0, r1, d8
 8012824:	f7ee f922 	bl	8000a6c <__aeabi_dcmpeq>
 8012828:	2800      	cmp	r0, #0
 801282a:	f43f af3a 	beq.w	80126a2 <pow+0xee>
 801282e:	ec47 6b10 	vmov	d0, r6, r7
 8012832:	f003 f9ae 	bl	8015b92 <finite>
 8012836:	2800      	cmp	r0, #0
 8012838:	f43f af33 	beq.w	80126a2 <pow+0xee>
 801283c:	ec45 4b10 	vmov	d0, r4, r5
 8012840:	f003 f9a7 	bl	8015b92 <finite>
 8012844:	2800      	cmp	r0, #0
 8012846:	f43f af2c 	beq.w	80126a2 <pow+0xee>
 801284a:	2304      	movs	r3, #4
 801284c:	9302      	str	r3, [sp, #8]
 801284e:	4b09      	ldr	r3, [pc, #36]	; (8012874 <pow+0x2c0>)
 8012850:	9303      	str	r3, [sp, #12]
 8012852:	2300      	movs	r3, #0
 8012854:	930a      	str	r3, [sp, #40]	; 0x28
 8012856:	e9cd 6704 	strd	r6, r7, [sp, #16]
 801285a:	e9cd 4506 	strd	r4, r5, [sp, #24]
 801285e:	ed8d 9b08 	vstr	d9, [sp, #32]
 8012862:	e7b8      	b.n	80127d6 <pow+0x222>
 8012864:	a802      	add	r0, sp, #8
 8012866:	f003 fa23 	bl	8015cb0 <matherr>
 801286a:	2800      	cmp	r0, #0
 801286c:	f47f af11 	bne.w	8012692 <pow+0xde>
 8012870:	e7b5      	b.n	80127de <pow+0x22a>
 8012872:	bf00      	nop
 8012874:	08016612 	.word	0x08016612
 8012878:	3ff00000 	.word	0x3ff00000
 801287c:	fff00000 	.word	0xfff00000
 8012880:	3fe00000 	.word	0x3fe00000
 8012884:	47efffff 	.word	0x47efffff
 8012888:	c7efffff 	.word	0xc7efffff
 801288c:	7ff00000 	.word	0x7ff00000
 8012890:	200001ec 	.word	0x200001ec

08012894 <sqrt>:
 8012894:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 8012898:	ed2d 8b02 	vpush	{d8}
 801289c:	b08b      	sub	sp, #44	; 0x2c
 801289e:	ec55 4b10 	vmov	r4, r5, d0
 80128a2:	f001 fb13 	bl	8013ecc <__ieee754_sqrt>
 80128a6:	4b26      	ldr	r3, [pc, #152]	; (8012940 <sqrt+0xac>)
 80128a8:	eeb0 8a40 	vmov.f32	s16, s0
 80128ac:	eef0 8a60 	vmov.f32	s17, s1
 80128b0:	f993 6000 	ldrsb.w	r6, [r3]
 80128b4:	1c73      	adds	r3, r6, #1
 80128b6:	d02a      	beq.n	801290e <sqrt+0x7a>
 80128b8:	4622      	mov	r2, r4
 80128ba:	462b      	mov	r3, r5
 80128bc:	4620      	mov	r0, r4
 80128be:	4629      	mov	r1, r5
 80128c0:	f7ee f906 	bl	8000ad0 <__aeabi_dcmpun>
 80128c4:	4607      	mov	r7, r0
 80128c6:	bb10      	cbnz	r0, 801290e <sqrt+0x7a>
 80128c8:	f04f 0800 	mov.w	r8, #0
 80128cc:	f04f 0900 	mov.w	r9, #0
 80128d0:	4642      	mov	r2, r8
 80128d2:	464b      	mov	r3, r9
 80128d4:	4620      	mov	r0, r4
 80128d6:	4629      	mov	r1, r5
 80128d8:	f7ee f8d2 	bl	8000a80 <__aeabi_dcmplt>
 80128dc:	b1b8      	cbz	r0, 801290e <sqrt+0x7a>
 80128de:	2301      	movs	r3, #1
 80128e0:	9300      	str	r3, [sp, #0]
 80128e2:	4b18      	ldr	r3, [pc, #96]	; (8012944 <sqrt+0xb0>)
 80128e4:	9301      	str	r3, [sp, #4]
 80128e6:	9708      	str	r7, [sp, #32]
 80128e8:	e9cd 4504 	strd	r4, r5, [sp, #16]
 80128ec:	e9cd 4502 	strd	r4, r5, [sp, #8]
 80128f0:	b9b6      	cbnz	r6, 8012920 <sqrt+0x8c>
 80128f2:	e9cd 8906 	strd	r8, r9, [sp, #24]
 80128f6:	4668      	mov	r0, sp
 80128f8:	f003 f9da 	bl	8015cb0 <matherr>
 80128fc:	b1d0      	cbz	r0, 8012934 <sqrt+0xa0>
 80128fe:	9b08      	ldr	r3, [sp, #32]
 8012900:	b11b      	cbz	r3, 801290a <sqrt+0x76>
 8012902:	f7fd fe67 	bl	80105d4 <__errno>
 8012906:	9b08      	ldr	r3, [sp, #32]
 8012908:	6003      	str	r3, [r0, #0]
 801290a:	ed9d 8b06 	vldr	d8, [sp, #24]
 801290e:	eeb0 0a48 	vmov.f32	s0, s16
 8012912:	eef0 0a68 	vmov.f32	s1, s17
 8012916:	b00b      	add	sp, #44	; 0x2c
 8012918:	ecbd 8b02 	vpop	{d8}
 801291c:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 8012920:	4642      	mov	r2, r8
 8012922:	464b      	mov	r3, r9
 8012924:	4640      	mov	r0, r8
 8012926:	4649      	mov	r1, r9
 8012928:	f7ed ff62 	bl	80007f0 <__aeabi_ddiv>
 801292c:	2e02      	cmp	r6, #2
 801292e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8012932:	d1e0      	bne.n	80128f6 <sqrt+0x62>
 8012934:	f7fd fe4e 	bl	80105d4 <__errno>
 8012938:	2321      	movs	r3, #33	; 0x21
 801293a:	6003      	str	r3, [r0, #0]
 801293c:	e7df      	b.n	80128fe <sqrt+0x6a>
 801293e:	bf00      	nop
 8012940:	200001ec 	.word	0x200001ec
 8012944:	08016616 	.word	0x08016616

08012948 <powf>:
 8012948:	e92d 4370 	stmdb	sp!, {r4, r5, r6, r8, r9, lr}
 801294c:	ed2d 8b04 	vpush	{d8-d9}
 8012950:	4ca7      	ldr	r4, [pc, #668]	; (8012bf0 <powf+0x2a8>)
 8012952:	b08a      	sub	sp, #40	; 0x28
 8012954:	eef0 8a40 	vmov.f32	s17, s0
 8012958:	eeb0 8a60 	vmov.f32	s16, s1
 801295c:	f001 fb66 	bl	801402c <__ieee754_powf>
 8012960:	f994 5000 	ldrsb.w	r5, [r4]
 8012964:	1c6b      	adds	r3, r5, #1
 8012966:	eeb0 9a40 	vmov.f32	s18, s0
 801296a:	4626      	mov	r6, r4
 801296c:	d05f      	beq.n	8012a2e <powf+0xe6>
 801296e:	eeb4 8a48 	vcmp.f32	s16, s16
 8012972:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012976:	d65a      	bvs.n	8012a2e <powf+0xe6>
 8012978:	eef4 8a68 	vcmp.f32	s17, s17
 801297c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012980:	d721      	bvc.n	80129c6 <powf+0x7e>
 8012982:	eeb5 8a40 	vcmp.f32	s16, #0.0
 8012986:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801298a:	d150      	bne.n	8012a2e <powf+0xe6>
 801298c:	2301      	movs	r3, #1
 801298e:	9300      	str	r3, [sp, #0]
 8012990:	4b98      	ldr	r3, [pc, #608]	; (8012bf4 <powf+0x2ac>)
 8012992:	9301      	str	r3, [sp, #4]
 8012994:	ee18 0a90 	vmov	r0, s17
 8012998:	2300      	movs	r3, #0
 801299a:	9308      	str	r3, [sp, #32]
 801299c:	f7ed fda6 	bl	80004ec <__aeabi_f2d>
 80129a0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80129a4:	ee18 0a10 	vmov	r0, s16
 80129a8:	f7ed fda0 	bl	80004ec <__aeabi_f2d>
 80129ac:	4b92      	ldr	r3, [pc, #584]	; (8012bf8 <powf+0x2b0>)
 80129ae:	2200      	movs	r2, #0
 80129b0:	2d02      	cmp	r5, #2
 80129b2:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80129b6:	e9cd 2306 	strd	r2, r3, [sp, #24]
 80129ba:	d032      	beq.n	8012a22 <powf+0xda>
 80129bc:	4668      	mov	r0, sp
 80129be:	f003 f977 	bl	8015cb0 <matherr>
 80129c2:	bb40      	cbnz	r0, 8012a16 <powf+0xce>
 80129c4:	e065      	b.n	8012a92 <powf+0x14a>
 80129c6:	eddf 9a8d 	vldr	s19, [pc, #564]	; 8012bfc <powf+0x2b4>
 80129ca:	eef4 8a69 	vcmp.f32	s17, s19
 80129ce:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80129d2:	d163      	bne.n	8012a9c <powf+0x154>
 80129d4:	eeb4 8a69 	vcmp.f32	s16, s19
 80129d8:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80129dc:	d12e      	bne.n	8012a3c <powf+0xf4>
 80129de:	2301      	movs	r3, #1
 80129e0:	9300      	str	r3, [sp, #0]
 80129e2:	4b84      	ldr	r3, [pc, #528]	; (8012bf4 <powf+0x2ac>)
 80129e4:	9301      	str	r3, [sp, #4]
 80129e6:	ee18 0a90 	vmov	r0, s17
 80129ea:	2300      	movs	r3, #0
 80129ec:	9308      	str	r3, [sp, #32]
 80129ee:	f7ed fd7d 	bl	80004ec <__aeabi_f2d>
 80129f2:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80129f6:	ee18 0a10 	vmov	r0, s16
 80129fa:	f7ed fd77 	bl	80004ec <__aeabi_f2d>
 80129fe:	2200      	movs	r2, #0
 8012a00:	2300      	movs	r3, #0
 8012a02:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012a06:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8012a0a:	2d00      	cmp	r5, #0
 8012a0c:	d0d6      	beq.n	80129bc <powf+0x74>
 8012a0e:	4b7a      	ldr	r3, [pc, #488]	; (8012bf8 <powf+0x2b0>)
 8012a10:	2200      	movs	r2, #0
 8012a12:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8012a16:	9b08      	ldr	r3, [sp, #32]
 8012a18:	b11b      	cbz	r3, 8012a22 <powf+0xda>
 8012a1a:	f7fd fddb 	bl	80105d4 <__errno>
 8012a1e:	9b08      	ldr	r3, [sp, #32]
 8012a20:	6003      	str	r3, [r0, #0]
 8012a22:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8012a26:	f7ee f8b1 	bl	8000b8c <__aeabi_d2f>
 8012a2a:	ee09 0a10 	vmov	s18, r0
 8012a2e:	eeb0 0a49 	vmov.f32	s0, s18
 8012a32:	b00a      	add	sp, #40	; 0x28
 8012a34:	ecbd 8b04 	vpop	{d8-d9}
 8012a38:	e8bd 8370 	ldmia.w	sp!, {r4, r5, r6, r8, r9, pc}
 8012a3c:	eeb0 0a48 	vmov.f32	s0, s16
 8012a40:	f003 fa43 	bl	8015eca <finitef>
 8012a44:	2800      	cmp	r0, #0
 8012a46:	d0f2      	beq.n	8012a2e <powf+0xe6>
 8012a48:	eeb5 8ac0 	vcmpe.f32	s16, #0.0
 8012a4c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012a50:	d5ed      	bpl.n	8012a2e <powf+0xe6>
 8012a52:	2301      	movs	r3, #1
 8012a54:	9300      	str	r3, [sp, #0]
 8012a56:	4b67      	ldr	r3, [pc, #412]	; (8012bf4 <powf+0x2ac>)
 8012a58:	9301      	str	r3, [sp, #4]
 8012a5a:	ee18 0a90 	vmov	r0, s17
 8012a5e:	2300      	movs	r3, #0
 8012a60:	9308      	str	r3, [sp, #32]
 8012a62:	f7ed fd43 	bl	80004ec <__aeabi_f2d>
 8012a66:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8012a6a:	ee18 0a10 	vmov	r0, s16
 8012a6e:	f7ed fd3d 	bl	80004ec <__aeabi_f2d>
 8012a72:	f994 3000 	ldrsb.w	r3, [r4]
 8012a76:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012a7a:	b923      	cbnz	r3, 8012a86 <powf+0x13e>
 8012a7c:	2200      	movs	r2, #0
 8012a7e:	2300      	movs	r3, #0
 8012a80:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8012a84:	e79a      	b.n	80129bc <powf+0x74>
 8012a86:	495e      	ldr	r1, [pc, #376]	; (8012c00 <powf+0x2b8>)
 8012a88:	2000      	movs	r0, #0
 8012a8a:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8012a8e:	2b02      	cmp	r3, #2
 8012a90:	d194      	bne.n	80129bc <powf+0x74>
 8012a92:	f7fd fd9f 	bl	80105d4 <__errno>
 8012a96:	2321      	movs	r3, #33	; 0x21
 8012a98:	6003      	str	r3, [r0, #0]
 8012a9a:	e7bc      	b.n	8012a16 <powf+0xce>
 8012a9c:	f003 fa15 	bl	8015eca <finitef>
 8012aa0:	4605      	mov	r5, r0
 8012aa2:	2800      	cmp	r0, #0
 8012aa4:	d173      	bne.n	8012b8e <powf+0x246>
 8012aa6:	eeb0 0a68 	vmov.f32	s0, s17
 8012aaa:	f003 fa0e 	bl	8015eca <finitef>
 8012aae:	2800      	cmp	r0, #0
 8012ab0:	d06d      	beq.n	8012b8e <powf+0x246>
 8012ab2:	eeb0 0a48 	vmov.f32	s0, s16
 8012ab6:	f003 fa08 	bl	8015eca <finitef>
 8012aba:	2800      	cmp	r0, #0
 8012abc:	d067      	beq.n	8012b8e <powf+0x246>
 8012abe:	ee18 0a90 	vmov	r0, s17
 8012ac2:	f7ed fd13 	bl	80004ec <__aeabi_f2d>
 8012ac6:	4680      	mov	r8, r0
 8012ac8:	ee18 0a10 	vmov	r0, s16
 8012acc:	4689      	mov	r9, r1
 8012ace:	f7ed fd0d 	bl	80004ec <__aeabi_f2d>
 8012ad2:	eeb4 9a49 	vcmp.f32	s18, s18
 8012ad6:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012ada:	f994 4000 	ldrsb.w	r4, [r4]
 8012ade:	4b45      	ldr	r3, [pc, #276]	; (8012bf4 <powf+0x2ac>)
 8012ae0:	d713      	bvc.n	8012b0a <powf+0x1c2>
 8012ae2:	2201      	movs	r2, #1
 8012ae4:	e9cd 2300 	strd	r2, r3, [sp]
 8012ae8:	9508      	str	r5, [sp, #32]
 8012aea:	e9cd 8902 	strd	r8, r9, [sp, #8]
 8012aee:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012af2:	2c00      	cmp	r4, #0
 8012af4:	d0c2      	beq.n	8012a7c <powf+0x134>
 8012af6:	eec9 7aa9 	vdiv.f32	s15, s19, s19
 8012afa:	ee17 0a90 	vmov	r0, s15
 8012afe:	f7ed fcf5 	bl	80004ec <__aeabi_f2d>
 8012b02:	2c02      	cmp	r4, #2
 8012b04:	e9cd 0106 	strd	r0, r1, [sp, #24]
 8012b08:	e7c2      	b.n	8012a90 <powf+0x148>
 8012b0a:	2203      	movs	r2, #3
 8012b0c:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8012b10:	e9cd 2300 	strd	r2, r3, [sp]
 8012b14:	9508      	str	r5, [sp, #32]
 8012b16:	e9cd 8902 	strd	r8, r9, [sp, #8]
 8012b1a:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012b1e:	ee28 8a27 	vmul.f32	s16, s16, s15
 8012b22:	b9fc      	cbnz	r4, 8012b64 <powf+0x21c>
 8012b24:	4b37      	ldr	r3, [pc, #220]	; (8012c04 <powf+0x2bc>)
 8012b26:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8012b2a:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8012b2e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b32:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8012b36:	d553      	bpl.n	8012be0 <powf+0x298>
 8012b38:	eeb0 0a48 	vmov.f32	s0, s16
 8012b3c:	f003 fa12 	bl	8015f64 <rintf>
 8012b40:	eeb4 0a48 	vcmp.f32	s0, s16
 8012b44:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b48:	d004      	beq.n	8012b54 <powf+0x20c>
 8012b4a:	4b2f      	ldr	r3, [pc, #188]	; (8012c08 <powf+0x2c0>)
 8012b4c:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 8012b50:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8012b54:	f996 3000 	ldrsb.w	r3, [r6]
 8012b58:	2b02      	cmp	r3, #2
 8012b5a:	d141      	bne.n	8012be0 <powf+0x298>
 8012b5c:	f7fd fd3a 	bl	80105d4 <__errno>
 8012b60:	2322      	movs	r3, #34	; 0x22
 8012b62:	e799      	b.n	8012a98 <powf+0x150>
 8012b64:	4b29      	ldr	r3, [pc, #164]	; (8012c0c <powf+0x2c4>)
 8012b66:	eef5 8ac0 	vcmpe.f32	s17, #0.0
 8012b6a:	2200      	movs	r2, #0
 8012b6c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b70:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8012b74:	d5ee      	bpl.n	8012b54 <powf+0x20c>
 8012b76:	eeb0 0a48 	vmov.f32	s0, s16
 8012b7a:	f003 f9f3 	bl	8015f64 <rintf>
 8012b7e:	eeb4 0a48 	vcmp.f32	s0, s16
 8012b82:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b86:	d0e5      	beq.n	8012b54 <powf+0x20c>
 8012b88:	2200      	movs	r2, #0
 8012b8a:	4b1d      	ldr	r3, [pc, #116]	; (8012c00 <powf+0x2b8>)
 8012b8c:	e7e0      	b.n	8012b50 <powf+0x208>
 8012b8e:	eeb5 9a40 	vcmp.f32	s18, #0.0
 8012b92:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8012b96:	f47f af4a 	bne.w	8012a2e <powf+0xe6>
 8012b9a:	eeb0 0a68 	vmov.f32	s0, s17
 8012b9e:	f003 f994 	bl	8015eca <finitef>
 8012ba2:	2800      	cmp	r0, #0
 8012ba4:	f43f af43 	beq.w	8012a2e <powf+0xe6>
 8012ba8:	eeb0 0a48 	vmov.f32	s0, s16
 8012bac:	f003 f98d 	bl	8015eca <finitef>
 8012bb0:	2800      	cmp	r0, #0
 8012bb2:	f43f af3c 	beq.w	8012a2e <powf+0xe6>
 8012bb6:	2304      	movs	r3, #4
 8012bb8:	9300      	str	r3, [sp, #0]
 8012bba:	4b0e      	ldr	r3, [pc, #56]	; (8012bf4 <powf+0x2ac>)
 8012bbc:	9301      	str	r3, [sp, #4]
 8012bbe:	ee18 0a90 	vmov	r0, s17
 8012bc2:	2300      	movs	r3, #0
 8012bc4:	9308      	str	r3, [sp, #32]
 8012bc6:	f7ed fc91 	bl	80004ec <__aeabi_f2d>
 8012bca:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8012bce:	ee18 0a10 	vmov	r0, s16
 8012bd2:	f7ed fc8b 	bl	80004ec <__aeabi_f2d>
 8012bd6:	2200      	movs	r2, #0
 8012bd8:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8012bdc:	2300      	movs	r3, #0
 8012bde:	e7b7      	b.n	8012b50 <powf+0x208>
 8012be0:	4668      	mov	r0, sp
 8012be2:	f003 f865 	bl	8015cb0 <matherr>
 8012be6:	2800      	cmp	r0, #0
 8012be8:	f47f af15 	bne.w	8012a16 <powf+0xce>
 8012bec:	e7b6      	b.n	8012b5c <powf+0x214>
 8012bee:	bf00      	nop
 8012bf0:	200001ec 	.word	0x200001ec
 8012bf4:	0801661b 	.word	0x0801661b
 8012bf8:	3ff00000 	.word	0x3ff00000
 8012bfc:	00000000 	.word	0x00000000
 8012c00:	fff00000 	.word	0xfff00000
 8012c04:	47efffff 	.word	0x47efffff
 8012c08:	c7efffff 	.word	0xc7efffff
 8012c0c:	7ff00000 	.word	0x7ff00000

08012c10 <__ieee754_acos>:
 8012c10:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8012c14:	ec55 4b10 	vmov	r4, r5, d0
 8012c18:	49b7      	ldr	r1, [pc, #732]	; (8012ef8 <__ieee754_acos+0x2e8>)
 8012c1a:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8012c1e:	428b      	cmp	r3, r1
 8012c20:	dd1b      	ble.n	8012c5a <__ieee754_acos+0x4a>
 8012c22:	f103 4340 	add.w	r3, r3, #3221225472	; 0xc0000000
 8012c26:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 8012c2a:	4323      	orrs	r3, r4
 8012c2c:	d109      	bne.n	8012c42 <__ieee754_acos+0x32>
 8012c2e:	2d00      	cmp	r5, #0
 8012c30:	f300 8211 	bgt.w	8013056 <__ieee754_acos+0x446>
 8012c34:	a196      	add	r1, pc, #600	; (adr r1, 8012e90 <__ieee754_acos+0x280>)
 8012c36:	e9d1 0100 	ldrd	r0, r1, [r1]
 8012c3a:	ec41 0b10 	vmov	d0, r0, r1
 8012c3e:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8012c42:	ee10 2a10 	vmov	r2, s0
 8012c46:	462b      	mov	r3, r5
 8012c48:	4620      	mov	r0, r4
 8012c4a:	4629      	mov	r1, r5
 8012c4c:	f7ed faee 	bl	800022c <__aeabi_dsub>
 8012c50:	4602      	mov	r2, r0
 8012c52:	460b      	mov	r3, r1
 8012c54:	f7ed fdcc 	bl	80007f0 <__aeabi_ddiv>
 8012c58:	e7ef      	b.n	8012c3a <__ieee754_acos+0x2a>
 8012c5a:	49a8      	ldr	r1, [pc, #672]	; (8012efc <__ieee754_acos+0x2ec>)
 8012c5c:	428b      	cmp	r3, r1
 8012c5e:	f300 8087 	bgt.w	8012d70 <__ieee754_acos+0x160>
 8012c62:	4aa7      	ldr	r2, [pc, #668]	; (8012f00 <__ieee754_acos+0x2f0>)
 8012c64:	4293      	cmp	r3, r2
 8012c66:	f340 81f9 	ble.w	801305c <__ieee754_acos+0x44c>
 8012c6a:	ee10 2a10 	vmov	r2, s0
 8012c6e:	ee10 0a10 	vmov	r0, s0
 8012c72:	462b      	mov	r3, r5
 8012c74:	4629      	mov	r1, r5
 8012c76:	f7ed fc91 	bl	800059c <__aeabi_dmul>
 8012c7a:	a387      	add	r3, pc, #540	; (adr r3, 8012e98 <__ieee754_acos+0x288>)
 8012c7c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012c80:	4606      	mov	r6, r0
 8012c82:	460f      	mov	r7, r1
 8012c84:	f7ed fc8a 	bl	800059c <__aeabi_dmul>
 8012c88:	a385      	add	r3, pc, #532	; (adr r3, 8012ea0 <__ieee754_acos+0x290>)
 8012c8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012c8e:	f7ed facf 	bl	8000230 <__adddf3>
 8012c92:	4632      	mov	r2, r6
 8012c94:	463b      	mov	r3, r7
 8012c96:	f7ed fc81 	bl	800059c <__aeabi_dmul>
 8012c9a:	a383      	add	r3, pc, #524	; (adr r3, 8012ea8 <__ieee754_acos+0x298>)
 8012c9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012ca0:	f7ed fac4 	bl	800022c <__aeabi_dsub>
 8012ca4:	4632      	mov	r2, r6
 8012ca6:	463b      	mov	r3, r7
 8012ca8:	f7ed fc78 	bl	800059c <__aeabi_dmul>
 8012cac:	a380      	add	r3, pc, #512	; (adr r3, 8012eb0 <__ieee754_acos+0x2a0>)
 8012cae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012cb2:	f7ed fabd 	bl	8000230 <__adddf3>
 8012cb6:	4632      	mov	r2, r6
 8012cb8:	463b      	mov	r3, r7
 8012cba:	f7ed fc6f 	bl	800059c <__aeabi_dmul>
 8012cbe:	a37e      	add	r3, pc, #504	; (adr r3, 8012eb8 <__ieee754_acos+0x2a8>)
 8012cc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012cc4:	f7ed fab2 	bl	800022c <__aeabi_dsub>
 8012cc8:	4632      	mov	r2, r6
 8012cca:	463b      	mov	r3, r7
 8012ccc:	f7ed fc66 	bl	800059c <__aeabi_dmul>
 8012cd0:	a37b      	add	r3, pc, #492	; (adr r3, 8012ec0 <__ieee754_acos+0x2b0>)
 8012cd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012cd6:	f7ed faab 	bl	8000230 <__adddf3>
 8012cda:	4632      	mov	r2, r6
 8012cdc:	463b      	mov	r3, r7
 8012cde:	f7ed fc5d 	bl	800059c <__aeabi_dmul>
 8012ce2:	a379      	add	r3, pc, #484	; (adr r3, 8012ec8 <__ieee754_acos+0x2b8>)
 8012ce4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012ce8:	4680      	mov	r8, r0
 8012cea:	4689      	mov	r9, r1
 8012cec:	4630      	mov	r0, r6
 8012cee:	4639      	mov	r1, r7
 8012cf0:	f7ed fc54 	bl	800059c <__aeabi_dmul>
 8012cf4:	a376      	add	r3, pc, #472	; (adr r3, 8012ed0 <__ieee754_acos+0x2c0>)
 8012cf6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012cfa:	f7ed fa97 	bl	800022c <__aeabi_dsub>
 8012cfe:	4632      	mov	r2, r6
 8012d00:	463b      	mov	r3, r7
 8012d02:	f7ed fc4b 	bl	800059c <__aeabi_dmul>
 8012d06:	a374      	add	r3, pc, #464	; (adr r3, 8012ed8 <__ieee754_acos+0x2c8>)
 8012d08:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012d0c:	f7ed fa90 	bl	8000230 <__adddf3>
 8012d10:	4632      	mov	r2, r6
 8012d12:	463b      	mov	r3, r7
 8012d14:	f7ed fc42 	bl	800059c <__aeabi_dmul>
 8012d18:	a371      	add	r3, pc, #452	; (adr r3, 8012ee0 <__ieee754_acos+0x2d0>)
 8012d1a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012d1e:	f7ed fa85 	bl	800022c <__aeabi_dsub>
 8012d22:	4632      	mov	r2, r6
 8012d24:	463b      	mov	r3, r7
 8012d26:	f7ed fc39 	bl	800059c <__aeabi_dmul>
 8012d2a:	2200      	movs	r2, #0
 8012d2c:	4b75      	ldr	r3, [pc, #468]	; (8012f04 <__ieee754_acos+0x2f4>)
 8012d2e:	f7ed fa7f 	bl	8000230 <__adddf3>
 8012d32:	4602      	mov	r2, r0
 8012d34:	460b      	mov	r3, r1
 8012d36:	4640      	mov	r0, r8
 8012d38:	4649      	mov	r1, r9
 8012d3a:	f7ed fd59 	bl	80007f0 <__aeabi_ddiv>
 8012d3e:	4622      	mov	r2, r4
 8012d40:	462b      	mov	r3, r5
 8012d42:	f7ed fc2b 	bl	800059c <__aeabi_dmul>
 8012d46:	4602      	mov	r2, r0
 8012d48:	460b      	mov	r3, r1
 8012d4a:	a167      	add	r1, pc, #412	; (adr r1, 8012ee8 <__ieee754_acos+0x2d8>)
 8012d4c:	e9d1 0100 	ldrd	r0, r1, [r1]
 8012d50:	f7ed fa6c 	bl	800022c <__aeabi_dsub>
 8012d54:	4602      	mov	r2, r0
 8012d56:	460b      	mov	r3, r1
 8012d58:	4620      	mov	r0, r4
 8012d5a:	4629      	mov	r1, r5
 8012d5c:	f7ed fa66 	bl	800022c <__aeabi_dsub>
 8012d60:	4602      	mov	r2, r0
 8012d62:	460b      	mov	r3, r1
 8012d64:	a162      	add	r1, pc, #392	; (adr r1, 8012ef0 <__ieee754_acos+0x2e0>)
 8012d66:	e9d1 0100 	ldrd	r0, r1, [r1]
 8012d6a:	f7ed fa5f 	bl	800022c <__aeabi_dsub>
 8012d6e:	e764      	b.n	8012c3a <__ieee754_acos+0x2a>
 8012d70:	2d00      	cmp	r5, #0
 8012d72:	f280 80cb 	bge.w	8012f0c <__ieee754_acos+0x2fc>
 8012d76:	ee10 0a10 	vmov	r0, s0
 8012d7a:	2200      	movs	r2, #0
 8012d7c:	4b61      	ldr	r3, [pc, #388]	; (8012f04 <__ieee754_acos+0x2f4>)
 8012d7e:	4629      	mov	r1, r5
 8012d80:	f7ed fa56 	bl	8000230 <__adddf3>
 8012d84:	2200      	movs	r2, #0
 8012d86:	4b60      	ldr	r3, [pc, #384]	; (8012f08 <__ieee754_acos+0x2f8>)
 8012d88:	f7ed fc08 	bl	800059c <__aeabi_dmul>
 8012d8c:	a342      	add	r3, pc, #264	; (adr r3, 8012e98 <__ieee754_acos+0x288>)
 8012d8e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012d92:	4604      	mov	r4, r0
 8012d94:	460d      	mov	r5, r1
 8012d96:	f7ed fc01 	bl	800059c <__aeabi_dmul>
 8012d9a:	a341      	add	r3, pc, #260	; (adr r3, 8012ea0 <__ieee754_acos+0x290>)
 8012d9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012da0:	f7ed fa46 	bl	8000230 <__adddf3>
 8012da4:	4622      	mov	r2, r4
 8012da6:	462b      	mov	r3, r5
 8012da8:	f7ed fbf8 	bl	800059c <__aeabi_dmul>
 8012dac:	a33e      	add	r3, pc, #248	; (adr r3, 8012ea8 <__ieee754_acos+0x298>)
 8012dae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012db2:	f7ed fa3b 	bl	800022c <__aeabi_dsub>
 8012db6:	4622      	mov	r2, r4
 8012db8:	462b      	mov	r3, r5
 8012dba:	f7ed fbef 	bl	800059c <__aeabi_dmul>
 8012dbe:	a33c      	add	r3, pc, #240	; (adr r3, 8012eb0 <__ieee754_acos+0x2a0>)
 8012dc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012dc4:	f7ed fa34 	bl	8000230 <__adddf3>
 8012dc8:	4622      	mov	r2, r4
 8012dca:	462b      	mov	r3, r5
 8012dcc:	f7ed fbe6 	bl	800059c <__aeabi_dmul>
 8012dd0:	a339      	add	r3, pc, #228	; (adr r3, 8012eb8 <__ieee754_acos+0x2a8>)
 8012dd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012dd6:	f7ed fa29 	bl	800022c <__aeabi_dsub>
 8012dda:	4622      	mov	r2, r4
 8012ddc:	462b      	mov	r3, r5
 8012dde:	f7ed fbdd 	bl	800059c <__aeabi_dmul>
 8012de2:	a337      	add	r3, pc, #220	; (adr r3, 8012ec0 <__ieee754_acos+0x2b0>)
 8012de4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012de8:	f7ed fa22 	bl	8000230 <__adddf3>
 8012dec:	4622      	mov	r2, r4
 8012dee:	462b      	mov	r3, r5
 8012df0:	f7ed fbd4 	bl	800059c <__aeabi_dmul>
 8012df4:	ec45 4b10 	vmov	d0, r4, r5
 8012df8:	4680      	mov	r8, r0
 8012dfa:	4689      	mov	r9, r1
 8012dfc:	f001 f866 	bl	8013ecc <__ieee754_sqrt>
 8012e00:	a331      	add	r3, pc, #196	; (adr r3, 8012ec8 <__ieee754_acos+0x2b8>)
 8012e02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012e06:	4620      	mov	r0, r4
 8012e08:	4629      	mov	r1, r5
 8012e0a:	ec57 6b10 	vmov	r6, r7, d0
 8012e0e:	f7ed fbc5 	bl	800059c <__aeabi_dmul>
 8012e12:	a32f      	add	r3, pc, #188	; (adr r3, 8012ed0 <__ieee754_acos+0x2c0>)
 8012e14:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012e18:	f7ed fa08 	bl	800022c <__aeabi_dsub>
 8012e1c:	4622      	mov	r2, r4
 8012e1e:	462b      	mov	r3, r5
 8012e20:	f7ed fbbc 	bl	800059c <__aeabi_dmul>
 8012e24:	a32c      	add	r3, pc, #176	; (adr r3, 8012ed8 <__ieee754_acos+0x2c8>)
 8012e26:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012e2a:	f7ed fa01 	bl	8000230 <__adddf3>
 8012e2e:	4622      	mov	r2, r4
 8012e30:	462b      	mov	r3, r5
 8012e32:	f7ed fbb3 	bl	800059c <__aeabi_dmul>
 8012e36:	a32a      	add	r3, pc, #168	; (adr r3, 8012ee0 <__ieee754_acos+0x2d0>)
 8012e38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012e3c:	f7ed f9f6 	bl	800022c <__aeabi_dsub>
 8012e40:	4622      	mov	r2, r4
 8012e42:	462b      	mov	r3, r5
 8012e44:	f7ed fbaa 	bl	800059c <__aeabi_dmul>
 8012e48:	2200      	movs	r2, #0
 8012e4a:	4b2e      	ldr	r3, [pc, #184]	; (8012f04 <__ieee754_acos+0x2f4>)
 8012e4c:	f7ed f9f0 	bl	8000230 <__adddf3>
 8012e50:	4602      	mov	r2, r0
 8012e52:	460b      	mov	r3, r1
 8012e54:	4640      	mov	r0, r8
 8012e56:	4649      	mov	r1, r9
 8012e58:	f7ed fcca 	bl	80007f0 <__aeabi_ddiv>
 8012e5c:	4632      	mov	r2, r6
 8012e5e:	463b      	mov	r3, r7
 8012e60:	f7ed fb9c 	bl	800059c <__aeabi_dmul>
 8012e64:	a320      	add	r3, pc, #128	; (adr r3, 8012ee8 <__ieee754_acos+0x2d8>)
 8012e66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012e6a:	f7ed f9df 	bl	800022c <__aeabi_dsub>
 8012e6e:	4632      	mov	r2, r6
 8012e70:	463b      	mov	r3, r7
 8012e72:	f7ed f9dd 	bl	8000230 <__adddf3>
 8012e76:	4602      	mov	r2, r0
 8012e78:	460b      	mov	r3, r1
 8012e7a:	f7ed f9d9 	bl	8000230 <__adddf3>
 8012e7e:	4602      	mov	r2, r0
 8012e80:	460b      	mov	r3, r1
 8012e82:	a103      	add	r1, pc, #12	; (adr r1, 8012e90 <__ieee754_acos+0x280>)
 8012e84:	e9d1 0100 	ldrd	r0, r1, [r1]
 8012e88:	e76f      	b.n	8012d6a <__ieee754_acos+0x15a>
 8012e8a:	bf00      	nop
 8012e8c:	f3af 8000 	nop.w
 8012e90:	54442d18 	.word	0x54442d18
 8012e94:	400921fb 	.word	0x400921fb
 8012e98:	0dfdf709 	.word	0x0dfdf709
 8012e9c:	3f023de1 	.word	0x3f023de1
 8012ea0:	7501b288 	.word	0x7501b288
 8012ea4:	3f49efe0 	.word	0x3f49efe0
 8012ea8:	b5688f3b 	.word	0xb5688f3b
 8012eac:	3fa48228 	.word	0x3fa48228
 8012eb0:	0e884455 	.word	0x0e884455
 8012eb4:	3fc9c155 	.word	0x3fc9c155
 8012eb8:	03eb6f7d 	.word	0x03eb6f7d
 8012ebc:	3fd4d612 	.word	0x3fd4d612
 8012ec0:	55555555 	.word	0x55555555
 8012ec4:	3fc55555 	.word	0x3fc55555
 8012ec8:	b12e9282 	.word	0xb12e9282
 8012ecc:	3fb3b8c5 	.word	0x3fb3b8c5
 8012ed0:	1b8d0159 	.word	0x1b8d0159
 8012ed4:	3fe6066c 	.word	0x3fe6066c
 8012ed8:	9c598ac8 	.word	0x9c598ac8
 8012edc:	40002ae5 	.word	0x40002ae5
 8012ee0:	1c8a2d4b 	.word	0x1c8a2d4b
 8012ee4:	40033a27 	.word	0x40033a27
 8012ee8:	33145c07 	.word	0x33145c07
 8012eec:	3c91a626 	.word	0x3c91a626
 8012ef0:	54442d18 	.word	0x54442d18
 8012ef4:	3ff921fb 	.word	0x3ff921fb
 8012ef8:	3fefffff 	.word	0x3fefffff
 8012efc:	3fdfffff 	.word	0x3fdfffff
 8012f00:	3c600000 	.word	0x3c600000
 8012f04:	3ff00000 	.word	0x3ff00000
 8012f08:	3fe00000 	.word	0x3fe00000
 8012f0c:	ee10 2a10 	vmov	r2, s0
 8012f10:	462b      	mov	r3, r5
 8012f12:	2000      	movs	r0, #0
 8012f14:	496a      	ldr	r1, [pc, #424]	; (80130c0 <__ieee754_acos+0x4b0>)
 8012f16:	f7ed f989 	bl	800022c <__aeabi_dsub>
 8012f1a:	2200      	movs	r2, #0
 8012f1c:	4b69      	ldr	r3, [pc, #420]	; (80130c4 <__ieee754_acos+0x4b4>)
 8012f1e:	f7ed fb3d 	bl	800059c <__aeabi_dmul>
 8012f22:	4604      	mov	r4, r0
 8012f24:	460d      	mov	r5, r1
 8012f26:	ec45 4b10 	vmov	d0, r4, r5
 8012f2a:	f000 ffcf 	bl	8013ecc <__ieee754_sqrt>
 8012f2e:	a34e      	add	r3, pc, #312	; (adr r3, 8013068 <__ieee754_acos+0x458>)
 8012f30:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012f34:	4620      	mov	r0, r4
 8012f36:	4629      	mov	r1, r5
 8012f38:	ec59 8b10 	vmov	r8, r9, d0
 8012f3c:	f7ed fb2e 	bl	800059c <__aeabi_dmul>
 8012f40:	a34b      	add	r3, pc, #300	; (adr r3, 8013070 <__ieee754_acos+0x460>)
 8012f42:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012f46:	f7ed f973 	bl	8000230 <__adddf3>
 8012f4a:	4622      	mov	r2, r4
 8012f4c:	462b      	mov	r3, r5
 8012f4e:	f7ed fb25 	bl	800059c <__aeabi_dmul>
 8012f52:	a349      	add	r3, pc, #292	; (adr r3, 8013078 <__ieee754_acos+0x468>)
 8012f54:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012f58:	f7ed f968 	bl	800022c <__aeabi_dsub>
 8012f5c:	4622      	mov	r2, r4
 8012f5e:	462b      	mov	r3, r5
 8012f60:	f7ed fb1c 	bl	800059c <__aeabi_dmul>
 8012f64:	a346      	add	r3, pc, #280	; (adr r3, 8013080 <__ieee754_acos+0x470>)
 8012f66:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012f6a:	f7ed f961 	bl	8000230 <__adddf3>
 8012f6e:	4622      	mov	r2, r4
 8012f70:	462b      	mov	r3, r5
 8012f72:	f7ed fb13 	bl	800059c <__aeabi_dmul>
 8012f76:	a344      	add	r3, pc, #272	; (adr r3, 8013088 <__ieee754_acos+0x478>)
 8012f78:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012f7c:	f7ed f956 	bl	800022c <__aeabi_dsub>
 8012f80:	4622      	mov	r2, r4
 8012f82:	462b      	mov	r3, r5
 8012f84:	f7ed fb0a 	bl	800059c <__aeabi_dmul>
 8012f88:	a341      	add	r3, pc, #260	; (adr r3, 8013090 <__ieee754_acos+0x480>)
 8012f8a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012f8e:	f7ed f94f 	bl	8000230 <__adddf3>
 8012f92:	4622      	mov	r2, r4
 8012f94:	462b      	mov	r3, r5
 8012f96:	f7ed fb01 	bl	800059c <__aeabi_dmul>
 8012f9a:	a33f      	add	r3, pc, #252	; (adr r3, 8013098 <__ieee754_acos+0x488>)
 8012f9c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012fa0:	4682      	mov	sl, r0
 8012fa2:	468b      	mov	fp, r1
 8012fa4:	4620      	mov	r0, r4
 8012fa6:	4629      	mov	r1, r5
 8012fa8:	f7ed faf8 	bl	800059c <__aeabi_dmul>
 8012fac:	a33c      	add	r3, pc, #240	; (adr r3, 80130a0 <__ieee754_acos+0x490>)
 8012fae:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012fb2:	f7ed f93b 	bl	800022c <__aeabi_dsub>
 8012fb6:	4622      	mov	r2, r4
 8012fb8:	462b      	mov	r3, r5
 8012fba:	f7ed faef 	bl	800059c <__aeabi_dmul>
 8012fbe:	a33a      	add	r3, pc, #232	; (adr r3, 80130a8 <__ieee754_acos+0x498>)
 8012fc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012fc4:	f7ed f934 	bl	8000230 <__adddf3>
 8012fc8:	4622      	mov	r2, r4
 8012fca:	462b      	mov	r3, r5
 8012fcc:	f7ed fae6 	bl	800059c <__aeabi_dmul>
 8012fd0:	a337      	add	r3, pc, #220	; (adr r3, 80130b0 <__ieee754_acos+0x4a0>)
 8012fd2:	e9d3 2300 	ldrd	r2, r3, [r3]
 8012fd6:	f7ed f929 	bl	800022c <__aeabi_dsub>
 8012fda:	4622      	mov	r2, r4
 8012fdc:	462b      	mov	r3, r5
 8012fde:	f7ed fadd 	bl	800059c <__aeabi_dmul>
 8012fe2:	2200      	movs	r2, #0
 8012fe4:	4b36      	ldr	r3, [pc, #216]	; (80130c0 <__ieee754_acos+0x4b0>)
 8012fe6:	f7ed f923 	bl	8000230 <__adddf3>
 8012fea:	4602      	mov	r2, r0
 8012fec:	460b      	mov	r3, r1
 8012fee:	4650      	mov	r0, sl
 8012ff0:	4659      	mov	r1, fp
 8012ff2:	f7ed fbfd 	bl	80007f0 <__aeabi_ddiv>
 8012ff6:	4642      	mov	r2, r8
 8012ff8:	464b      	mov	r3, r9
 8012ffa:	f7ed facf 	bl	800059c <__aeabi_dmul>
 8012ffe:	2600      	movs	r6, #0
 8013000:	4682      	mov	sl, r0
 8013002:	468b      	mov	fp, r1
 8013004:	4632      	mov	r2, r6
 8013006:	464b      	mov	r3, r9
 8013008:	4630      	mov	r0, r6
 801300a:	4649      	mov	r1, r9
 801300c:	f7ed fac6 	bl	800059c <__aeabi_dmul>
 8013010:	4602      	mov	r2, r0
 8013012:	460b      	mov	r3, r1
 8013014:	4620      	mov	r0, r4
 8013016:	4629      	mov	r1, r5
 8013018:	f7ed f908 	bl	800022c <__aeabi_dsub>
 801301c:	4632      	mov	r2, r6
 801301e:	4604      	mov	r4, r0
 8013020:	460d      	mov	r5, r1
 8013022:	464b      	mov	r3, r9
 8013024:	4640      	mov	r0, r8
 8013026:	4649      	mov	r1, r9
 8013028:	f7ed f902 	bl	8000230 <__adddf3>
 801302c:	4602      	mov	r2, r0
 801302e:	460b      	mov	r3, r1
 8013030:	4620      	mov	r0, r4
 8013032:	4629      	mov	r1, r5
 8013034:	f7ed fbdc 	bl	80007f0 <__aeabi_ddiv>
 8013038:	4602      	mov	r2, r0
 801303a:	460b      	mov	r3, r1
 801303c:	4650      	mov	r0, sl
 801303e:	4659      	mov	r1, fp
 8013040:	f7ed f8f6 	bl	8000230 <__adddf3>
 8013044:	4632      	mov	r2, r6
 8013046:	464b      	mov	r3, r9
 8013048:	f7ed f8f2 	bl	8000230 <__adddf3>
 801304c:	4602      	mov	r2, r0
 801304e:	460b      	mov	r3, r1
 8013050:	f7ed f8ee 	bl	8000230 <__adddf3>
 8013054:	e5f1      	b.n	8012c3a <__ieee754_acos+0x2a>
 8013056:	2000      	movs	r0, #0
 8013058:	2100      	movs	r1, #0
 801305a:	e5ee      	b.n	8012c3a <__ieee754_acos+0x2a>
 801305c:	a116      	add	r1, pc, #88	; (adr r1, 80130b8 <__ieee754_acos+0x4a8>)
 801305e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8013062:	e5ea      	b.n	8012c3a <__ieee754_acos+0x2a>
 8013064:	f3af 8000 	nop.w
 8013068:	0dfdf709 	.word	0x0dfdf709
 801306c:	3f023de1 	.word	0x3f023de1
 8013070:	7501b288 	.word	0x7501b288
 8013074:	3f49efe0 	.word	0x3f49efe0
 8013078:	b5688f3b 	.word	0xb5688f3b
 801307c:	3fa48228 	.word	0x3fa48228
 8013080:	0e884455 	.word	0x0e884455
 8013084:	3fc9c155 	.word	0x3fc9c155
 8013088:	03eb6f7d 	.word	0x03eb6f7d
 801308c:	3fd4d612 	.word	0x3fd4d612
 8013090:	55555555 	.word	0x55555555
 8013094:	3fc55555 	.word	0x3fc55555
 8013098:	b12e9282 	.word	0xb12e9282
 801309c:	3fb3b8c5 	.word	0x3fb3b8c5
 80130a0:	1b8d0159 	.word	0x1b8d0159
 80130a4:	3fe6066c 	.word	0x3fe6066c
 80130a8:	9c598ac8 	.word	0x9c598ac8
 80130ac:	40002ae5 	.word	0x40002ae5
 80130b0:	1c8a2d4b 	.word	0x1c8a2d4b
 80130b4:	40033a27 	.word	0x40033a27
 80130b8:	54442d18 	.word	0x54442d18
 80130bc:	3ff921fb 	.word	0x3ff921fb
 80130c0:	3ff00000 	.word	0x3ff00000
 80130c4:	3fe00000 	.word	0x3fe00000

080130c8 <__ieee754_pow>:
 80130c8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80130cc:	b091      	sub	sp, #68	; 0x44
 80130ce:	ed8d 1b00 	vstr	d1, [sp]
 80130d2:	e9dd 2900 	ldrd	r2, r9, [sp]
 80130d6:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 80130da:	ea58 0302 	orrs.w	r3, r8, r2
 80130de:	ec57 6b10 	vmov	r6, r7, d0
 80130e2:	f000 84be 	beq.w	8013a62 <__ieee754_pow+0x99a>
 80130e6:	4b7a      	ldr	r3, [pc, #488]	; (80132d0 <__ieee754_pow+0x208>)
 80130e8:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 80130ec:	429c      	cmp	r4, r3
 80130ee:	463d      	mov	r5, r7
 80130f0:	ee10 aa10 	vmov	sl, s0
 80130f4:	dc09      	bgt.n	801310a <__ieee754_pow+0x42>
 80130f6:	d103      	bne.n	8013100 <__ieee754_pow+0x38>
 80130f8:	b93e      	cbnz	r6, 801310a <__ieee754_pow+0x42>
 80130fa:	45a0      	cmp	r8, r4
 80130fc:	dc0d      	bgt.n	801311a <__ieee754_pow+0x52>
 80130fe:	e001      	b.n	8013104 <__ieee754_pow+0x3c>
 8013100:	4598      	cmp	r8, r3
 8013102:	dc02      	bgt.n	801310a <__ieee754_pow+0x42>
 8013104:	4598      	cmp	r8, r3
 8013106:	d10e      	bne.n	8013126 <__ieee754_pow+0x5e>
 8013108:	b16a      	cbz	r2, 8013126 <__ieee754_pow+0x5e>
 801310a:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 801310e:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8013112:	ea54 030a 	orrs.w	r3, r4, sl
 8013116:	f000 84a4 	beq.w	8013a62 <__ieee754_pow+0x99a>
 801311a:	486e      	ldr	r0, [pc, #440]	; (80132d4 <__ieee754_pow+0x20c>)
 801311c:	b011      	add	sp, #68	; 0x44
 801311e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013122:	f002 bdc9 	b.w	8015cb8 <nan>
 8013126:	2d00      	cmp	r5, #0
 8013128:	da53      	bge.n	80131d2 <__ieee754_pow+0x10a>
 801312a:	4b6b      	ldr	r3, [pc, #428]	; (80132d8 <__ieee754_pow+0x210>)
 801312c:	4598      	cmp	r8, r3
 801312e:	dc4d      	bgt.n	80131cc <__ieee754_pow+0x104>
 8013130:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 8013134:	4598      	cmp	r8, r3
 8013136:	dd4c      	ble.n	80131d2 <__ieee754_pow+0x10a>
 8013138:	ea4f 5328 	mov.w	r3, r8, asr #20
 801313c:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8013140:	2b14      	cmp	r3, #20
 8013142:	dd26      	ble.n	8013192 <__ieee754_pow+0xca>
 8013144:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 8013148:	fa22 f103 	lsr.w	r1, r2, r3
 801314c:	fa01 f303 	lsl.w	r3, r1, r3
 8013150:	4293      	cmp	r3, r2
 8013152:	d13e      	bne.n	80131d2 <__ieee754_pow+0x10a>
 8013154:	f001 0101 	and.w	r1, r1, #1
 8013158:	f1c1 0b02 	rsb	fp, r1, #2
 801315c:	2a00      	cmp	r2, #0
 801315e:	d15b      	bne.n	8013218 <__ieee754_pow+0x150>
 8013160:	4b5b      	ldr	r3, [pc, #364]	; (80132d0 <__ieee754_pow+0x208>)
 8013162:	4598      	cmp	r8, r3
 8013164:	d124      	bne.n	80131b0 <__ieee754_pow+0xe8>
 8013166:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 801316a:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 801316e:	ea53 030a 	orrs.w	r3, r3, sl
 8013172:	f000 8476 	beq.w	8013a62 <__ieee754_pow+0x99a>
 8013176:	4b59      	ldr	r3, [pc, #356]	; (80132dc <__ieee754_pow+0x214>)
 8013178:	429c      	cmp	r4, r3
 801317a:	dd2d      	ble.n	80131d8 <__ieee754_pow+0x110>
 801317c:	f1b9 0f00 	cmp.w	r9, #0
 8013180:	f280 8473 	bge.w	8013a6a <__ieee754_pow+0x9a2>
 8013184:	2000      	movs	r0, #0
 8013186:	2100      	movs	r1, #0
 8013188:	ec41 0b10 	vmov	d0, r0, r1
 801318c:	b011      	add	sp, #68	; 0x44
 801318e:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013192:	2a00      	cmp	r2, #0
 8013194:	d13e      	bne.n	8013214 <__ieee754_pow+0x14c>
 8013196:	f1c3 0314 	rsb	r3, r3, #20
 801319a:	fa48 f103 	asr.w	r1, r8, r3
 801319e:	fa01 f303 	lsl.w	r3, r1, r3
 80131a2:	4543      	cmp	r3, r8
 80131a4:	f040 8469 	bne.w	8013a7a <__ieee754_pow+0x9b2>
 80131a8:	f001 0101 	and.w	r1, r1, #1
 80131ac:	f1c1 0b02 	rsb	fp, r1, #2
 80131b0:	4b4b      	ldr	r3, [pc, #300]	; (80132e0 <__ieee754_pow+0x218>)
 80131b2:	4598      	cmp	r8, r3
 80131b4:	d118      	bne.n	80131e8 <__ieee754_pow+0x120>
 80131b6:	f1b9 0f00 	cmp.w	r9, #0
 80131ba:	f280 845a 	bge.w	8013a72 <__ieee754_pow+0x9aa>
 80131be:	4948      	ldr	r1, [pc, #288]	; (80132e0 <__ieee754_pow+0x218>)
 80131c0:	4632      	mov	r2, r6
 80131c2:	463b      	mov	r3, r7
 80131c4:	2000      	movs	r0, #0
 80131c6:	f7ed fb13 	bl	80007f0 <__aeabi_ddiv>
 80131ca:	e7dd      	b.n	8013188 <__ieee754_pow+0xc0>
 80131cc:	f04f 0b02 	mov.w	fp, #2
 80131d0:	e7c4      	b.n	801315c <__ieee754_pow+0x94>
 80131d2:	f04f 0b00 	mov.w	fp, #0
 80131d6:	e7c1      	b.n	801315c <__ieee754_pow+0x94>
 80131d8:	f1b9 0f00 	cmp.w	r9, #0
 80131dc:	dad2      	bge.n	8013184 <__ieee754_pow+0xbc>
 80131de:	e9dd 0300 	ldrd	r0, r3, [sp]
 80131e2:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 80131e6:	e7cf      	b.n	8013188 <__ieee754_pow+0xc0>
 80131e8:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 80131ec:	d106      	bne.n	80131fc <__ieee754_pow+0x134>
 80131ee:	4632      	mov	r2, r6
 80131f0:	463b      	mov	r3, r7
 80131f2:	4610      	mov	r0, r2
 80131f4:	4619      	mov	r1, r3
 80131f6:	f7ed f9d1 	bl	800059c <__aeabi_dmul>
 80131fa:	e7c5      	b.n	8013188 <__ieee754_pow+0xc0>
 80131fc:	4b39      	ldr	r3, [pc, #228]	; (80132e4 <__ieee754_pow+0x21c>)
 80131fe:	4599      	cmp	r9, r3
 8013200:	d10a      	bne.n	8013218 <__ieee754_pow+0x150>
 8013202:	2d00      	cmp	r5, #0
 8013204:	db08      	blt.n	8013218 <__ieee754_pow+0x150>
 8013206:	ec47 6b10 	vmov	d0, r6, r7
 801320a:	b011      	add	sp, #68	; 0x44
 801320c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013210:	f000 be5c 	b.w	8013ecc <__ieee754_sqrt>
 8013214:	f04f 0b00 	mov.w	fp, #0
 8013218:	ec47 6b10 	vmov	d0, r6, r7
 801321c:	f002 fcb0 	bl	8015b80 <fabs>
 8013220:	ec51 0b10 	vmov	r0, r1, d0
 8013224:	f1ba 0f00 	cmp.w	sl, #0
 8013228:	d127      	bne.n	801327a <__ieee754_pow+0x1b2>
 801322a:	b124      	cbz	r4, 8013236 <__ieee754_pow+0x16e>
 801322c:	4b2c      	ldr	r3, [pc, #176]	; (80132e0 <__ieee754_pow+0x218>)
 801322e:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 8013232:	429a      	cmp	r2, r3
 8013234:	d121      	bne.n	801327a <__ieee754_pow+0x1b2>
 8013236:	f1b9 0f00 	cmp.w	r9, #0
 801323a:	da05      	bge.n	8013248 <__ieee754_pow+0x180>
 801323c:	4602      	mov	r2, r0
 801323e:	460b      	mov	r3, r1
 8013240:	2000      	movs	r0, #0
 8013242:	4927      	ldr	r1, [pc, #156]	; (80132e0 <__ieee754_pow+0x218>)
 8013244:	f7ed fad4 	bl	80007f0 <__aeabi_ddiv>
 8013248:	2d00      	cmp	r5, #0
 801324a:	da9d      	bge.n	8013188 <__ieee754_pow+0xc0>
 801324c:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 8013250:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 8013254:	ea54 030b 	orrs.w	r3, r4, fp
 8013258:	d108      	bne.n	801326c <__ieee754_pow+0x1a4>
 801325a:	4602      	mov	r2, r0
 801325c:	460b      	mov	r3, r1
 801325e:	4610      	mov	r0, r2
 8013260:	4619      	mov	r1, r3
 8013262:	f7ec ffe3 	bl	800022c <__aeabi_dsub>
 8013266:	4602      	mov	r2, r0
 8013268:	460b      	mov	r3, r1
 801326a:	e7ac      	b.n	80131c6 <__ieee754_pow+0xfe>
 801326c:	f1bb 0f01 	cmp.w	fp, #1
 8013270:	d18a      	bne.n	8013188 <__ieee754_pow+0xc0>
 8013272:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8013276:	4619      	mov	r1, r3
 8013278:	e786      	b.n	8013188 <__ieee754_pow+0xc0>
 801327a:	0fed      	lsrs	r5, r5, #31
 801327c:	1e6b      	subs	r3, r5, #1
 801327e:	930d      	str	r3, [sp, #52]	; 0x34
 8013280:	ea5b 0303 	orrs.w	r3, fp, r3
 8013284:	d102      	bne.n	801328c <__ieee754_pow+0x1c4>
 8013286:	4632      	mov	r2, r6
 8013288:	463b      	mov	r3, r7
 801328a:	e7e8      	b.n	801325e <__ieee754_pow+0x196>
 801328c:	4b16      	ldr	r3, [pc, #88]	; (80132e8 <__ieee754_pow+0x220>)
 801328e:	4598      	cmp	r8, r3
 8013290:	f340 80fe 	ble.w	8013490 <__ieee754_pow+0x3c8>
 8013294:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 8013298:	4598      	cmp	r8, r3
 801329a:	dd0a      	ble.n	80132b2 <__ieee754_pow+0x1ea>
 801329c:	4b0f      	ldr	r3, [pc, #60]	; (80132dc <__ieee754_pow+0x214>)
 801329e:	429c      	cmp	r4, r3
 80132a0:	dc0d      	bgt.n	80132be <__ieee754_pow+0x1f6>
 80132a2:	f1b9 0f00 	cmp.w	r9, #0
 80132a6:	f6bf af6d 	bge.w	8013184 <__ieee754_pow+0xbc>
 80132aa:	a307      	add	r3, pc, #28	; (adr r3, 80132c8 <__ieee754_pow+0x200>)
 80132ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80132b0:	e79f      	b.n	80131f2 <__ieee754_pow+0x12a>
 80132b2:	4b0e      	ldr	r3, [pc, #56]	; (80132ec <__ieee754_pow+0x224>)
 80132b4:	429c      	cmp	r4, r3
 80132b6:	ddf4      	ble.n	80132a2 <__ieee754_pow+0x1da>
 80132b8:	4b09      	ldr	r3, [pc, #36]	; (80132e0 <__ieee754_pow+0x218>)
 80132ba:	429c      	cmp	r4, r3
 80132bc:	dd18      	ble.n	80132f0 <__ieee754_pow+0x228>
 80132be:	f1b9 0f00 	cmp.w	r9, #0
 80132c2:	dcf2      	bgt.n	80132aa <__ieee754_pow+0x1e2>
 80132c4:	e75e      	b.n	8013184 <__ieee754_pow+0xbc>
 80132c6:	bf00      	nop
 80132c8:	8800759c 	.word	0x8800759c
 80132cc:	7e37e43c 	.word	0x7e37e43c
 80132d0:	7ff00000 	.word	0x7ff00000
 80132d4:	08016409 	.word	0x08016409
 80132d8:	433fffff 	.word	0x433fffff
 80132dc:	3fefffff 	.word	0x3fefffff
 80132e0:	3ff00000 	.word	0x3ff00000
 80132e4:	3fe00000 	.word	0x3fe00000
 80132e8:	41e00000 	.word	0x41e00000
 80132ec:	3feffffe 	.word	0x3feffffe
 80132f0:	2200      	movs	r2, #0
 80132f2:	4b63      	ldr	r3, [pc, #396]	; (8013480 <__ieee754_pow+0x3b8>)
 80132f4:	f7ec ff9a 	bl	800022c <__aeabi_dsub>
 80132f8:	a355      	add	r3, pc, #340	; (adr r3, 8013450 <__ieee754_pow+0x388>)
 80132fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80132fe:	4604      	mov	r4, r0
 8013300:	460d      	mov	r5, r1
 8013302:	f7ed f94b 	bl	800059c <__aeabi_dmul>
 8013306:	a354      	add	r3, pc, #336	; (adr r3, 8013458 <__ieee754_pow+0x390>)
 8013308:	e9d3 2300 	ldrd	r2, r3, [r3]
 801330c:	4606      	mov	r6, r0
 801330e:	460f      	mov	r7, r1
 8013310:	4620      	mov	r0, r4
 8013312:	4629      	mov	r1, r5
 8013314:	f7ed f942 	bl	800059c <__aeabi_dmul>
 8013318:	2200      	movs	r2, #0
 801331a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801331e:	4b59      	ldr	r3, [pc, #356]	; (8013484 <__ieee754_pow+0x3bc>)
 8013320:	4620      	mov	r0, r4
 8013322:	4629      	mov	r1, r5
 8013324:	f7ed f93a 	bl	800059c <__aeabi_dmul>
 8013328:	4602      	mov	r2, r0
 801332a:	460b      	mov	r3, r1
 801332c:	a14c      	add	r1, pc, #304	; (adr r1, 8013460 <__ieee754_pow+0x398>)
 801332e:	e9d1 0100 	ldrd	r0, r1, [r1]
 8013332:	f7ec ff7b 	bl	800022c <__aeabi_dsub>
 8013336:	4622      	mov	r2, r4
 8013338:	462b      	mov	r3, r5
 801333a:	f7ed f92f 	bl	800059c <__aeabi_dmul>
 801333e:	4602      	mov	r2, r0
 8013340:	460b      	mov	r3, r1
 8013342:	2000      	movs	r0, #0
 8013344:	4950      	ldr	r1, [pc, #320]	; (8013488 <__ieee754_pow+0x3c0>)
 8013346:	f7ec ff71 	bl	800022c <__aeabi_dsub>
 801334a:	4622      	mov	r2, r4
 801334c:	462b      	mov	r3, r5
 801334e:	4680      	mov	r8, r0
 8013350:	4689      	mov	r9, r1
 8013352:	4620      	mov	r0, r4
 8013354:	4629      	mov	r1, r5
 8013356:	f7ed f921 	bl	800059c <__aeabi_dmul>
 801335a:	4602      	mov	r2, r0
 801335c:	460b      	mov	r3, r1
 801335e:	4640      	mov	r0, r8
 8013360:	4649      	mov	r1, r9
 8013362:	f7ed f91b 	bl	800059c <__aeabi_dmul>
 8013366:	a340      	add	r3, pc, #256	; (adr r3, 8013468 <__ieee754_pow+0x3a0>)
 8013368:	e9d3 2300 	ldrd	r2, r3, [r3]
 801336c:	f7ed f916 	bl	800059c <__aeabi_dmul>
 8013370:	4602      	mov	r2, r0
 8013372:	460b      	mov	r3, r1
 8013374:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8013378:	f7ec ff58 	bl	800022c <__aeabi_dsub>
 801337c:	4602      	mov	r2, r0
 801337e:	460b      	mov	r3, r1
 8013380:	4604      	mov	r4, r0
 8013382:	460d      	mov	r5, r1
 8013384:	4630      	mov	r0, r6
 8013386:	4639      	mov	r1, r7
 8013388:	f7ec ff52 	bl	8000230 <__adddf3>
 801338c:	2000      	movs	r0, #0
 801338e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8013392:	4632      	mov	r2, r6
 8013394:	463b      	mov	r3, r7
 8013396:	f7ec ff49 	bl	800022c <__aeabi_dsub>
 801339a:	4602      	mov	r2, r0
 801339c:	460b      	mov	r3, r1
 801339e:	4620      	mov	r0, r4
 80133a0:	4629      	mov	r1, r5
 80133a2:	f7ec ff43 	bl	800022c <__aeabi_dsub>
 80133a6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 80133a8:	f10b 33ff 	add.w	r3, fp, #4294967295
 80133ac:	4313      	orrs	r3, r2
 80133ae:	4606      	mov	r6, r0
 80133b0:	460f      	mov	r7, r1
 80133b2:	f040 81eb 	bne.w	801378c <__ieee754_pow+0x6c4>
 80133b6:	ed9f 7b2e 	vldr	d7, [pc, #184]	; 8013470 <__ieee754_pow+0x3a8>
 80133ba:	e9dd 4500 	ldrd	r4, r5, [sp]
 80133be:	2400      	movs	r4, #0
 80133c0:	4622      	mov	r2, r4
 80133c2:	462b      	mov	r3, r5
 80133c4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80133c8:	ed8d 7b02 	vstr	d7, [sp, #8]
 80133cc:	f7ec ff2e 	bl	800022c <__aeabi_dsub>
 80133d0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80133d4:	f7ed f8e2 	bl	800059c <__aeabi_dmul>
 80133d8:	e9dd 2300 	ldrd	r2, r3, [sp]
 80133dc:	4680      	mov	r8, r0
 80133de:	4689      	mov	r9, r1
 80133e0:	4630      	mov	r0, r6
 80133e2:	4639      	mov	r1, r7
 80133e4:	f7ed f8da 	bl	800059c <__aeabi_dmul>
 80133e8:	4602      	mov	r2, r0
 80133ea:	460b      	mov	r3, r1
 80133ec:	4640      	mov	r0, r8
 80133ee:	4649      	mov	r1, r9
 80133f0:	f7ec ff1e 	bl	8000230 <__adddf3>
 80133f4:	4622      	mov	r2, r4
 80133f6:	462b      	mov	r3, r5
 80133f8:	4680      	mov	r8, r0
 80133fa:	4689      	mov	r9, r1
 80133fc:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8013400:	f7ed f8cc 	bl	800059c <__aeabi_dmul>
 8013404:	460b      	mov	r3, r1
 8013406:	4604      	mov	r4, r0
 8013408:	460d      	mov	r5, r1
 801340a:	4602      	mov	r2, r0
 801340c:	4649      	mov	r1, r9
 801340e:	4640      	mov	r0, r8
 8013410:	e9cd 4500 	strd	r4, r5, [sp]
 8013414:	f7ec ff0c 	bl	8000230 <__adddf3>
 8013418:	4b1c      	ldr	r3, [pc, #112]	; (801348c <__ieee754_pow+0x3c4>)
 801341a:	4299      	cmp	r1, r3
 801341c:	4606      	mov	r6, r0
 801341e:	460f      	mov	r7, r1
 8013420:	468b      	mov	fp, r1
 8013422:	f340 82f7 	ble.w	8013a14 <__ieee754_pow+0x94c>
 8013426:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 801342a:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 801342e:	4303      	orrs	r3, r0
 8013430:	f000 81ea 	beq.w	8013808 <__ieee754_pow+0x740>
 8013434:	a310      	add	r3, pc, #64	; (adr r3, 8013478 <__ieee754_pow+0x3b0>)
 8013436:	e9d3 2300 	ldrd	r2, r3, [r3]
 801343a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801343e:	f7ed f8ad 	bl	800059c <__aeabi_dmul>
 8013442:	a30d      	add	r3, pc, #52	; (adr r3, 8013478 <__ieee754_pow+0x3b0>)
 8013444:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013448:	e6d5      	b.n	80131f6 <__ieee754_pow+0x12e>
 801344a:	bf00      	nop
 801344c:	f3af 8000 	nop.w
 8013450:	60000000 	.word	0x60000000
 8013454:	3ff71547 	.word	0x3ff71547
 8013458:	f85ddf44 	.word	0xf85ddf44
 801345c:	3e54ae0b 	.word	0x3e54ae0b
 8013460:	55555555 	.word	0x55555555
 8013464:	3fd55555 	.word	0x3fd55555
 8013468:	652b82fe 	.word	0x652b82fe
 801346c:	3ff71547 	.word	0x3ff71547
 8013470:	00000000 	.word	0x00000000
 8013474:	bff00000 	.word	0xbff00000
 8013478:	8800759c 	.word	0x8800759c
 801347c:	7e37e43c 	.word	0x7e37e43c
 8013480:	3ff00000 	.word	0x3ff00000
 8013484:	3fd00000 	.word	0x3fd00000
 8013488:	3fe00000 	.word	0x3fe00000
 801348c:	408fffff 	.word	0x408fffff
 8013490:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8013494:	f04f 0200 	mov.w	r2, #0
 8013498:	da05      	bge.n	80134a6 <__ieee754_pow+0x3de>
 801349a:	4bd3      	ldr	r3, [pc, #844]	; (80137e8 <__ieee754_pow+0x720>)
 801349c:	f7ed f87e 	bl	800059c <__aeabi_dmul>
 80134a0:	f06f 0234 	mvn.w	r2, #52	; 0x34
 80134a4:	460c      	mov	r4, r1
 80134a6:	1523      	asrs	r3, r4, #20
 80134a8:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 80134ac:	4413      	add	r3, r2
 80134ae:	9309      	str	r3, [sp, #36]	; 0x24
 80134b0:	4bce      	ldr	r3, [pc, #824]	; (80137ec <__ieee754_pow+0x724>)
 80134b2:	f3c4 0413 	ubfx	r4, r4, #0, #20
 80134b6:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 80134ba:	429c      	cmp	r4, r3
 80134bc:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 80134c0:	dd08      	ble.n	80134d4 <__ieee754_pow+0x40c>
 80134c2:	4bcb      	ldr	r3, [pc, #812]	; (80137f0 <__ieee754_pow+0x728>)
 80134c4:	429c      	cmp	r4, r3
 80134c6:	f340 815e 	ble.w	8013786 <__ieee754_pow+0x6be>
 80134ca:	9b09      	ldr	r3, [sp, #36]	; 0x24
 80134cc:	3301      	adds	r3, #1
 80134ce:	9309      	str	r3, [sp, #36]	; 0x24
 80134d0:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 80134d4:	f04f 0a00 	mov.w	sl, #0
 80134d8:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 80134dc:	930c      	str	r3, [sp, #48]	; 0x30
 80134de:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 80134e0:	4bc4      	ldr	r3, [pc, #784]	; (80137f4 <__ieee754_pow+0x72c>)
 80134e2:	4413      	add	r3, r2
 80134e4:	ed93 7b00 	vldr	d7, [r3]
 80134e8:	4629      	mov	r1, r5
 80134ea:	ec53 2b17 	vmov	r2, r3, d7
 80134ee:	ed8d 7b06 	vstr	d7, [sp, #24]
 80134f2:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 80134f6:	f7ec fe99 	bl	800022c <__aeabi_dsub>
 80134fa:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 80134fe:	4606      	mov	r6, r0
 8013500:	460f      	mov	r7, r1
 8013502:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8013506:	f7ec fe93 	bl	8000230 <__adddf3>
 801350a:	4602      	mov	r2, r0
 801350c:	460b      	mov	r3, r1
 801350e:	2000      	movs	r0, #0
 8013510:	49b9      	ldr	r1, [pc, #740]	; (80137f8 <__ieee754_pow+0x730>)
 8013512:	f7ed f96d 	bl	80007f0 <__aeabi_ddiv>
 8013516:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 801351a:	4602      	mov	r2, r0
 801351c:	460b      	mov	r3, r1
 801351e:	4630      	mov	r0, r6
 8013520:	4639      	mov	r1, r7
 8013522:	f7ed f83b 	bl	800059c <__aeabi_dmul>
 8013526:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801352a:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 801352e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 8013532:	2300      	movs	r3, #0
 8013534:	9302      	str	r3, [sp, #8]
 8013536:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 801353a:	106d      	asrs	r5, r5, #1
 801353c:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 8013540:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 8013544:	2200      	movs	r2, #0
 8013546:	eb05 438a 	add.w	r3, r5, sl, lsl #18
 801354a:	4640      	mov	r0, r8
 801354c:	4649      	mov	r1, r9
 801354e:	4614      	mov	r4, r2
 8013550:	461d      	mov	r5, r3
 8013552:	f7ed f823 	bl	800059c <__aeabi_dmul>
 8013556:	4602      	mov	r2, r0
 8013558:	460b      	mov	r3, r1
 801355a:	4630      	mov	r0, r6
 801355c:	4639      	mov	r1, r7
 801355e:	f7ec fe65 	bl	800022c <__aeabi_dsub>
 8013562:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8013566:	4606      	mov	r6, r0
 8013568:	460f      	mov	r7, r1
 801356a:	4620      	mov	r0, r4
 801356c:	4629      	mov	r1, r5
 801356e:	f7ec fe5d 	bl	800022c <__aeabi_dsub>
 8013572:	4602      	mov	r2, r0
 8013574:	460b      	mov	r3, r1
 8013576:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 801357a:	f7ec fe57 	bl	800022c <__aeabi_dsub>
 801357e:	4642      	mov	r2, r8
 8013580:	464b      	mov	r3, r9
 8013582:	f7ed f80b 	bl	800059c <__aeabi_dmul>
 8013586:	4602      	mov	r2, r0
 8013588:	460b      	mov	r3, r1
 801358a:	4630      	mov	r0, r6
 801358c:	4639      	mov	r1, r7
 801358e:	f7ec fe4d 	bl	800022c <__aeabi_dsub>
 8013592:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 8013596:	f7ed f801 	bl	800059c <__aeabi_dmul>
 801359a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 801359e:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80135a2:	4610      	mov	r0, r2
 80135a4:	4619      	mov	r1, r3
 80135a6:	f7ec fff9 	bl	800059c <__aeabi_dmul>
 80135aa:	a37b      	add	r3, pc, #492	; (adr r3, 8013798 <__ieee754_pow+0x6d0>)
 80135ac:	e9d3 2300 	ldrd	r2, r3, [r3]
 80135b0:	4604      	mov	r4, r0
 80135b2:	460d      	mov	r5, r1
 80135b4:	f7ec fff2 	bl	800059c <__aeabi_dmul>
 80135b8:	a379      	add	r3, pc, #484	; (adr r3, 80137a0 <__ieee754_pow+0x6d8>)
 80135ba:	e9d3 2300 	ldrd	r2, r3, [r3]
 80135be:	f7ec fe37 	bl	8000230 <__adddf3>
 80135c2:	4622      	mov	r2, r4
 80135c4:	462b      	mov	r3, r5
 80135c6:	f7ec ffe9 	bl	800059c <__aeabi_dmul>
 80135ca:	a377      	add	r3, pc, #476	; (adr r3, 80137a8 <__ieee754_pow+0x6e0>)
 80135cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80135d0:	f7ec fe2e 	bl	8000230 <__adddf3>
 80135d4:	4622      	mov	r2, r4
 80135d6:	462b      	mov	r3, r5
 80135d8:	f7ec ffe0 	bl	800059c <__aeabi_dmul>
 80135dc:	a374      	add	r3, pc, #464	; (adr r3, 80137b0 <__ieee754_pow+0x6e8>)
 80135de:	e9d3 2300 	ldrd	r2, r3, [r3]
 80135e2:	f7ec fe25 	bl	8000230 <__adddf3>
 80135e6:	4622      	mov	r2, r4
 80135e8:	462b      	mov	r3, r5
 80135ea:	f7ec ffd7 	bl	800059c <__aeabi_dmul>
 80135ee:	a372      	add	r3, pc, #456	; (adr r3, 80137b8 <__ieee754_pow+0x6f0>)
 80135f0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80135f4:	f7ec fe1c 	bl	8000230 <__adddf3>
 80135f8:	4622      	mov	r2, r4
 80135fa:	462b      	mov	r3, r5
 80135fc:	f7ec ffce 	bl	800059c <__aeabi_dmul>
 8013600:	a36f      	add	r3, pc, #444	; (adr r3, 80137c0 <__ieee754_pow+0x6f8>)
 8013602:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013606:	f7ec fe13 	bl	8000230 <__adddf3>
 801360a:	4622      	mov	r2, r4
 801360c:	4606      	mov	r6, r0
 801360e:	460f      	mov	r7, r1
 8013610:	462b      	mov	r3, r5
 8013612:	4620      	mov	r0, r4
 8013614:	4629      	mov	r1, r5
 8013616:	f7ec ffc1 	bl	800059c <__aeabi_dmul>
 801361a:	4602      	mov	r2, r0
 801361c:	460b      	mov	r3, r1
 801361e:	4630      	mov	r0, r6
 8013620:	4639      	mov	r1, r7
 8013622:	f7ec ffbb 	bl	800059c <__aeabi_dmul>
 8013626:	4642      	mov	r2, r8
 8013628:	4604      	mov	r4, r0
 801362a:	460d      	mov	r5, r1
 801362c:	464b      	mov	r3, r9
 801362e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8013632:	f7ec fdfd 	bl	8000230 <__adddf3>
 8013636:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801363a:	f7ec ffaf 	bl	800059c <__aeabi_dmul>
 801363e:	4622      	mov	r2, r4
 8013640:	462b      	mov	r3, r5
 8013642:	f7ec fdf5 	bl	8000230 <__adddf3>
 8013646:	4642      	mov	r2, r8
 8013648:	4606      	mov	r6, r0
 801364a:	460f      	mov	r7, r1
 801364c:	464b      	mov	r3, r9
 801364e:	4640      	mov	r0, r8
 8013650:	4649      	mov	r1, r9
 8013652:	f7ec ffa3 	bl	800059c <__aeabi_dmul>
 8013656:	2200      	movs	r2, #0
 8013658:	4b68      	ldr	r3, [pc, #416]	; (80137fc <__ieee754_pow+0x734>)
 801365a:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 801365e:	f7ec fde7 	bl	8000230 <__adddf3>
 8013662:	4632      	mov	r2, r6
 8013664:	463b      	mov	r3, r7
 8013666:	f7ec fde3 	bl	8000230 <__adddf3>
 801366a:	9802      	ldr	r0, [sp, #8]
 801366c:	460d      	mov	r5, r1
 801366e:	4604      	mov	r4, r0
 8013670:	4602      	mov	r2, r0
 8013672:	460b      	mov	r3, r1
 8013674:	4640      	mov	r0, r8
 8013676:	4649      	mov	r1, r9
 8013678:	f7ec ff90 	bl	800059c <__aeabi_dmul>
 801367c:	2200      	movs	r2, #0
 801367e:	4680      	mov	r8, r0
 8013680:	4689      	mov	r9, r1
 8013682:	4b5e      	ldr	r3, [pc, #376]	; (80137fc <__ieee754_pow+0x734>)
 8013684:	4620      	mov	r0, r4
 8013686:	4629      	mov	r1, r5
 8013688:	f7ec fdd0 	bl	800022c <__aeabi_dsub>
 801368c:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 8013690:	f7ec fdcc 	bl	800022c <__aeabi_dsub>
 8013694:	4602      	mov	r2, r0
 8013696:	460b      	mov	r3, r1
 8013698:	4630      	mov	r0, r6
 801369a:	4639      	mov	r1, r7
 801369c:	f7ec fdc6 	bl	800022c <__aeabi_dsub>
 80136a0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 80136a4:	f7ec ff7a 	bl	800059c <__aeabi_dmul>
 80136a8:	4622      	mov	r2, r4
 80136aa:	4606      	mov	r6, r0
 80136ac:	460f      	mov	r7, r1
 80136ae:	462b      	mov	r3, r5
 80136b0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 80136b4:	f7ec ff72 	bl	800059c <__aeabi_dmul>
 80136b8:	4602      	mov	r2, r0
 80136ba:	460b      	mov	r3, r1
 80136bc:	4630      	mov	r0, r6
 80136be:	4639      	mov	r1, r7
 80136c0:	f7ec fdb6 	bl	8000230 <__adddf3>
 80136c4:	4606      	mov	r6, r0
 80136c6:	460f      	mov	r7, r1
 80136c8:	4602      	mov	r2, r0
 80136ca:	460b      	mov	r3, r1
 80136cc:	4640      	mov	r0, r8
 80136ce:	4649      	mov	r1, r9
 80136d0:	f7ec fdae 	bl	8000230 <__adddf3>
 80136d4:	9802      	ldr	r0, [sp, #8]
 80136d6:	a33c      	add	r3, pc, #240	; (adr r3, 80137c8 <__ieee754_pow+0x700>)
 80136d8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80136dc:	4604      	mov	r4, r0
 80136de:	460d      	mov	r5, r1
 80136e0:	f7ec ff5c 	bl	800059c <__aeabi_dmul>
 80136e4:	4642      	mov	r2, r8
 80136e6:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80136ea:	464b      	mov	r3, r9
 80136ec:	4620      	mov	r0, r4
 80136ee:	4629      	mov	r1, r5
 80136f0:	f7ec fd9c 	bl	800022c <__aeabi_dsub>
 80136f4:	4602      	mov	r2, r0
 80136f6:	460b      	mov	r3, r1
 80136f8:	4630      	mov	r0, r6
 80136fa:	4639      	mov	r1, r7
 80136fc:	f7ec fd96 	bl	800022c <__aeabi_dsub>
 8013700:	a333      	add	r3, pc, #204	; (adr r3, 80137d0 <__ieee754_pow+0x708>)
 8013702:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013706:	f7ec ff49 	bl	800059c <__aeabi_dmul>
 801370a:	a333      	add	r3, pc, #204	; (adr r3, 80137d8 <__ieee754_pow+0x710>)
 801370c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013710:	4606      	mov	r6, r0
 8013712:	460f      	mov	r7, r1
 8013714:	4620      	mov	r0, r4
 8013716:	4629      	mov	r1, r5
 8013718:	f7ec ff40 	bl	800059c <__aeabi_dmul>
 801371c:	4602      	mov	r2, r0
 801371e:	460b      	mov	r3, r1
 8013720:	4630      	mov	r0, r6
 8013722:	4639      	mov	r1, r7
 8013724:	f7ec fd84 	bl	8000230 <__adddf3>
 8013728:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801372a:	4b35      	ldr	r3, [pc, #212]	; (8013800 <__ieee754_pow+0x738>)
 801372c:	4413      	add	r3, r2
 801372e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013732:	f7ec fd7d 	bl	8000230 <__adddf3>
 8013736:	4604      	mov	r4, r0
 8013738:	9809      	ldr	r0, [sp, #36]	; 0x24
 801373a:	460d      	mov	r5, r1
 801373c:	f7ec fec4 	bl	80004c8 <__aeabi_i2d>
 8013740:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8013742:	4b30      	ldr	r3, [pc, #192]	; (8013804 <__ieee754_pow+0x73c>)
 8013744:	4413      	add	r3, r2
 8013746:	e9d3 8900 	ldrd	r8, r9, [r3]
 801374a:	4606      	mov	r6, r0
 801374c:	460f      	mov	r7, r1
 801374e:	4622      	mov	r2, r4
 8013750:	462b      	mov	r3, r5
 8013752:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8013756:	f7ec fd6b 	bl	8000230 <__adddf3>
 801375a:	4642      	mov	r2, r8
 801375c:	464b      	mov	r3, r9
 801375e:	f7ec fd67 	bl	8000230 <__adddf3>
 8013762:	4632      	mov	r2, r6
 8013764:	463b      	mov	r3, r7
 8013766:	f7ec fd63 	bl	8000230 <__adddf3>
 801376a:	9802      	ldr	r0, [sp, #8]
 801376c:	4632      	mov	r2, r6
 801376e:	463b      	mov	r3, r7
 8013770:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8013774:	f7ec fd5a 	bl	800022c <__aeabi_dsub>
 8013778:	4642      	mov	r2, r8
 801377a:	464b      	mov	r3, r9
 801377c:	f7ec fd56 	bl	800022c <__aeabi_dsub>
 8013780:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 8013784:	e607      	b.n	8013396 <__ieee754_pow+0x2ce>
 8013786:	f04f 0a01 	mov.w	sl, #1
 801378a:	e6a5      	b.n	80134d8 <__ieee754_pow+0x410>
 801378c:	ed9f 7b14 	vldr	d7, [pc, #80]	; 80137e0 <__ieee754_pow+0x718>
 8013790:	e613      	b.n	80133ba <__ieee754_pow+0x2f2>
 8013792:	bf00      	nop
 8013794:	f3af 8000 	nop.w
 8013798:	4a454eef 	.word	0x4a454eef
 801379c:	3fca7e28 	.word	0x3fca7e28
 80137a0:	93c9db65 	.word	0x93c9db65
 80137a4:	3fcd864a 	.word	0x3fcd864a
 80137a8:	a91d4101 	.word	0xa91d4101
 80137ac:	3fd17460 	.word	0x3fd17460
 80137b0:	518f264d 	.word	0x518f264d
 80137b4:	3fd55555 	.word	0x3fd55555
 80137b8:	db6fabff 	.word	0xdb6fabff
 80137bc:	3fdb6db6 	.word	0x3fdb6db6
 80137c0:	33333303 	.word	0x33333303
 80137c4:	3fe33333 	.word	0x3fe33333
 80137c8:	e0000000 	.word	0xe0000000
 80137cc:	3feec709 	.word	0x3feec709
 80137d0:	dc3a03fd 	.word	0xdc3a03fd
 80137d4:	3feec709 	.word	0x3feec709
 80137d8:	145b01f5 	.word	0x145b01f5
 80137dc:	be3e2fe0 	.word	0xbe3e2fe0
 80137e0:	00000000 	.word	0x00000000
 80137e4:	3ff00000 	.word	0x3ff00000
 80137e8:	43400000 	.word	0x43400000
 80137ec:	0003988e 	.word	0x0003988e
 80137f0:	000bb679 	.word	0x000bb679
 80137f4:	08016620 	.word	0x08016620
 80137f8:	3ff00000 	.word	0x3ff00000
 80137fc:	40080000 	.word	0x40080000
 8013800:	08016640 	.word	0x08016640
 8013804:	08016630 	.word	0x08016630
 8013808:	a3b4      	add	r3, pc, #720	; (adr r3, 8013adc <__ieee754_pow+0xa14>)
 801380a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801380e:	4640      	mov	r0, r8
 8013810:	4649      	mov	r1, r9
 8013812:	f7ec fd0d 	bl	8000230 <__adddf3>
 8013816:	4622      	mov	r2, r4
 8013818:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801381c:	462b      	mov	r3, r5
 801381e:	4630      	mov	r0, r6
 8013820:	4639      	mov	r1, r7
 8013822:	f7ec fd03 	bl	800022c <__aeabi_dsub>
 8013826:	4602      	mov	r2, r0
 8013828:	460b      	mov	r3, r1
 801382a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801382e:	f7ed f945 	bl	8000abc <__aeabi_dcmpgt>
 8013832:	2800      	cmp	r0, #0
 8013834:	f47f adfe 	bne.w	8013434 <__ieee754_pow+0x36c>
 8013838:	4aa3      	ldr	r2, [pc, #652]	; (8013ac8 <__ieee754_pow+0xa00>)
 801383a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 801383e:	4293      	cmp	r3, r2
 8013840:	f340 810a 	ble.w	8013a58 <__ieee754_pow+0x990>
 8013844:	151b      	asrs	r3, r3, #20
 8013846:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 801384a:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 801384e:	fa4a f303 	asr.w	r3, sl, r3
 8013852:	445b      	add	r3, fp
 8013854:	f3c3 520a 	ubfx	r2, r3, #20, #11
 8013858:	4e9c      	ldr	r6, [pc, #624]	; (8013acc <__ieee754_pow+0xa04>)
 801385a:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 801385e:	4116      	asrs	r6, r2
 8013860:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 8013864:	2000      	movs	r0, #0
 8013866:	ea23 0106 	bic.w	r1, r3, r6
 801386a:	f1c2 0214 	rsb	r2, r2, #20
 801386e:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 8013872:	fa4a fa02 	asr.w	sl, sl, r2
 8013876:	f1bb 0f00 	cmp.w	fp, #0
 801387a:	4602      	mov	r2, r0
 801387c:	460b      	mov	r3, r1
 801387e:	4620      	mov	r0, r4
 8013880:	4629      	mov	r1, r5
 8013882:	bfb8      	it	lt
 8013884:	f1ca 0a00 	rsblt	sl, sl, #0
 8013888:	f7ec fcd0 	bl	800022c <__aeabi_dsub>
 801388c:	e9cd 0100 	strd	r0, r1, [sp]
 8013890:	4642      	mov	r2, r8
 8013892:	464b      	mov	r3, r9
 8013894:	e9dd 0100 	ldrd	r0, r1, [sp]
 8013898:	f7ec fcca 	bl	8000230 <__adddf3>
 801389c:	2000      	movs	r0, #0
 801389e:	a378      	add	r3, pc, #480	; (adr r3, 8013a80 <__ieee754_pow+0x9b8>)
 80138a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80138a4:	4604      	mov	r4, r0
 80138a6:	460d      	mov	r5, r1
 80138a8:	f7ec fe78 	bl	800059c <__aeabi_dmul>
 80138ac:	e9dd 2300 	ldrd	r2, r3, [sp]
 80138b0:	4606      	mov	r6, r0
 80138b2:	460f      	mov	r7, r1
 80138b4:	4620      	mov	r0, r4
 80138b6:	4629      	mov	r1, r5
 80138b8:	f7ec fcb8 	bl	800022c <__aeabi_dsub>
 80138bc:	4602      	mov	r2, r0
 80138be:	460b      	mov	r3, r1
 80138c0:	4640      	mov	r0, r8
 80138c2:	4649      	mov	r1, r9
 80138c4:	f7ec fcb2 	bl	800022c <__aeabi_dsub>
 80138c8:	a36f      	add	r3, pc, #444	; (adr r3, 8013a88 <__ieee754_pow+0x9c0>)
 80138ca:	e9d3 2300 	ldrd	r2, r3, [r3]
 80138ce:	f7ec fe65 	bl	800059c <__aeabi_dmul>
 80138d2:	a36f      	add	r3, pc, #444	; (adr r3, 8013a90 <__ieee754_pow+0x9c8>)
 80138d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80138d8:	4680      	mov	r8, r0
 80138da:	4689      	mov	r9, r1
 80138dc:	4620      	mov	r0, r4
 80138de:	4629      	mov	r1, r5
 80138e0:	f7ec fe5c 	bl	800059c <__aeabi_dmul>
 80138e4:	4602      	mov	r2, r0
 80138e6:	460b      	mov	r3, r1
 80138e8:	4640      	mov	r0, r8
 80138ea:	4649      	mov	r1, r9
 80138ec:	f7ec fca0 	bl	8000230 <__adddf3>
 80138f0:	4604      	mov	r4, r0
 80138f2:	460d      	mov	r5, r1
 80138f4:	4602      	mov	r2, r0
 80138f6:	460b      	mov	r3, r1
 80138f8:	4630      	mov	r0, r6
 80138fa:	4639      	mov	r1, r7
 80138fc:	f7ec fc98 	bl	8000230 <__adddf3>
 8013900:	4632      	mov	r2, r6
 8013902:	463b      	mov	r3, r7
 8013904:	4680      	mov	r8, r0
 8013906:	4689      	mov	r9, r1
 8013908:	f7ec fc90 	bl	800022c <__aeabi_dsub>
 801390c:	4602      	mov	r2, r0
 801390e:	460b      	mov	r3, r1
 8013910:	4620      	mov	r0, r4
 8013912:	4629      	mov	r1, r5
 8013914:	f7ec fc8a 	bl	800022c <__aeabi_dsub>
 8013918:	4642      	mov	r2, r8
 801391a:	4606      	mov	r6, r0
 801391c:	460f      	mov	r7, r1
 801391e:	464b      	mov	r3, r9
 8013920:	4640      	mov	r0, r8
 8013922:	4649      	mov	r1, r9
 8013924:	f7ec fe3a 	bl	800059c <__aeabi_dmul>
 8013928:	a35b      	add	r3, pc, #364	; (adr r3, 8013a98 <__ieee754_pow+0x9d0>)
 801392a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801392e:	4604      	mov	r4, r0
 8013930:	460d      	mov	r5, r1
 8013932:	f7ec fe33 	bl	800059c <__aeabi_dmul>
 8013936:	a35a      	add	r3, pc, #360	; (adr r3, 8013aa0 <__ieee754_pow+0x9d8>)
 8013938:	e9d3 2300 	ldrd	r2, r3, [r3]
 801393c:	f7ec fc76 	bl	800022c <__aeabi_dsub>
 8013940:	4622      	mov	r2, r4
 8013942:	462b      	mov	r3, r5
 8013944:	f7ec fe2a 	bl	800059c <__aeabi_dmul>
 8013948:	a357      	add	r3, pc, #348	; (adr r3, 8013aa8 <__ieee754_pow+0x9e0>)
 801394a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801394e:	f7ec fc6f 	bl	8000230 <__adddf3>
 8013952:	4622      	mov	r2, r4
 8013954:	462b      	mov	r3, r5
 8013956:	f7ec fe21 	bl	800059c <__aeabi_dmul>
 801395a:	a355      	add	r3, pc, #340	; (adr r3, 8013ab0 <__ieee754_pow+0x9e8>)
 801395c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013960:	f7ec fc64 	bl	800022c <__aeabi_dsub>
 8013964:	4622      	mov	r2, r4
 8013966:	462b      	mov	r3, r5
 8013968:	f7ec fe18 	bl	800059c <__aeabi_dmul>
 801396c:	a352      	add	r3, pc, #328	; (adr r3, 8013ab8 <__ieee754_pow+0x9f0>)
 801396e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013972:	f7ec fc5d 	bl	8000230 <__adddf3>
 8013976:	4622      	mov	r2, r4
 8013978:	462b      	mov	r3, r5
 801397a:	f7ec fe0f 	bl	800059c <__aeabi_dmul>
 801397e:	4602      	mov	r2, r0
 8013980:	460b      	mov	r3, r1
 8013982:	4640      	mov	r0, r8
 8013984:	4649      	mov	r1, r9
 8013986:	f7ec fc51 	bl	800022c <__aeabi_dsub>
 801398a:	4604      	mov	r4, r0
 801398c:	460d      	mov	r5, r1
 801398e:	4602      	mov	r2, r0
 8013990:	460b      	mov	r3, r1
 8013992:	4640      	mov	r0, r8
 8013994:	4649      	mov	r1, r9
 8013996:	f7ec fe01 	bl	800059c <__aeabi_dmul>
 801399a:	2200      	movs	r2, #0
 801399c:	e9cd 0100 	strd	r0, r1, [sp]
 80139a0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80139a4:	4620      	mov	r0, r4
 80139a6:	4629      	mov	r1, r5
 80139a8:	f7ec fc40 	bl	800022c <__aeabi_dsub>
 80139ac:	4602      	mov	r2, r0
 80139ae:	460b      	mov	r3, r1
 80139b0:	e9dd 0100 	ldrd	r0, r1, [sp]
 80139b4:	f7ec ff1c 	bl	80007f0 <__aeabi_ddiv>
 80139b8:	4632      	mov	r2, r6
 80139ba:	4604      	mov	r4, r0
 80139bc:	460d      	mov	r5, r1
 80139be:	463b      	mov	r3, r7
 80139c0:	4640      	mov	r0, r8
 80139c2:	4649      	mov	r1, r9
 80139c4:	f7ec fdea 	bl	800059c <__aeabi_dmul>
 80139c8:	4632      	mov	r2, r6
 80139ca:	463b      	mov	r3, r7
 80139cc:	f7ec fc30 	bl	8000230 <__adddf3>
 80139d0:	4602      	mov	r2, r0
 80139d2:	460b      	mov	r3, r1
 80139d4:	4620      	mov	r0, r4
 80139d6:	4629      	mov	r1, r5
 80139d8:	f7ec fc28 	bl	800022c <__aeabi_dsub>
 80139dc:	4642      	mov	r2, r8
 80139de:	464b      	mov	r3, r9
 80139e0:	f7ec fc24 	bl	800022c <__aeabi_dsub>
 80139e4:	4602      	mov	r2, r0
 80139e6:	460b      	mov	r3, r1
 80139e8:	2000      	movs	r0, #0
 80139ea:	4939      	ldr	r1, [pc, #228]	; (8013ad0 <__ieee754_pow+0xa08>)
 80139ec:	f7ec fc1e 	bl	800022c <__aeabi_dsub>
 80139f0:	eb01 540a 	add.w	r4, r1, sl, lsl #20
 80139f4:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 80139f8:	4602      	mov	r2, r0
 80139fa:	460b      	mov	r3, r1
 80139fc:	da2f      	bge.n	8013a5e <__ieee754_pow+0x996>
 80139fe:	4650      	mov	r0, sl
 8013a00:	ec43 2b10 	vmov	d0, r2, r3
 8013a04:	f002 f9e4 	bl	8015dd0 <scalbn>
 8013a08:	ec51 0b10 	vmov	r0, r1, d0
 8013a0c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8013a10:	f7ff bbf1 	b.w	80131f6 <__ieee754_pow+0x12e>
 8013a14:	4b2f      	ldr	r3, [pc, #188]	; (8013ad4 <__ieee754_pow+0xa0c>)
 8013a16:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 8013a1a:	429e      	cmp	r6, r3
 8013a1c:	f77f af0c 	ble.w	8013838 <__ieee754_pow+0x770>
 8013a20:	4b2d      	ldr	r3, [pc, #180]	; (8013ad8 <__ieee754_pow+0xa10>)
 8013a22:	440b      	add	r3, r1
 8013a24:	4303      	orrs	r3, r0
 8013a26:	d00b      	beq.n	8013a40 <__ieee754_pow+0x978>
 8013a28:	a325      	add	r3, pc, #148	; (adr r3, 8013ac0 <__ieee754_pow+0x9f8>)
 8013a2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013a2e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8013a32:	f7ec fdb3 	bl	800059c <__aeabi_dmul>
 8013a36:	a322      	add	r3, pc, #136	; (adr r3, 8013ac0 <__ieee754_pow+0x9f8>)
 8013a38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013a3c:	f7ff bbdb 	b.w	80131f6 <__ieee754_pow+0x12e>
 8013a40:	4622      	mov	r2, r4
 8013a42:	462b      	mov	r3, r5
 8013a44:	f7ec fbf2 	bl	800022c <__aeabi_dsub>
 8013a48:	4642      	mov	r2, r8
 8013a4a:	464b      	mov	r3, r9
 8013a4c:	f7ed f82c 	bl	8000aa8 <__aeabi_dcmpge>
 8013a50:	2800      	cmp	r0, #0
 8013a52:	f43f aef1 	beq.w	8013838 <__ieee754_pow+0x770>
 8013a56:	e7e7      	b.n	8013a28 <__ieee754_pow+0x960>
 8013a58:	f04f 0a00 	mov.w	sl, #0
 8013a5c:	e718      	b.n	8013890 <__ieee754_pow+0x7c8>
 8013a5e:	4621      	mov	r1, r4
 8013a60:	e7d4      	b.n	8013a0c <__ieee754_pow+0x944>
 8013a62:	2000      	movs	r0, #0
 8013a64:	491a      	ldr	r1, [pc, #104]	; (8013ad0 <__ieee754_pow+0xa08>)
 8013a66:	f7ff bb8f 	b.w	8013188 <__ieee754_pow+0xc0>
 8013a6a:	e9dd 0100 	ldrd	r0, r1, [sp]
 8013a6e:	f7ff bb8b 	b.w	8013188 <__ieee754_pow+0xc0>
 8013a72:	4630      	mov	r0, r6
 8013a74:	4639      	mov	r1, r7
 8013a76:	f7ff bb87 	b.w	8013188 <__ieee754_pow+0xc0>
 8013a7a:	4693      	mov	fp, r2
 8013a7c:	f7ff bb98 	b.w	80131b0 <__ieee754_pow+0xe8>
 8013a80:	00000000 	.word	0x00000000
 8013a84:	3fe62e43 	.word	0x3fe62e43
 8013a88:	fefa39ef 	.word	0xfefa39ef
 8013a8c:	3fe62e42 	.word	0x3fe62e42
 8013a90:	0ca86c39 	.word	0x0ca86c39
 8013a94:	be205c61 	.word	0xbe205c61
 8013a98:	72bea4d0 	.word	0x72bea4d0
 8013a9c:	3e663769 	.word	0x3e663769
 8013aa0:	c5d26bf1 	.word	0xc5d26bf1
 8013aa4:	3ebbbd41 	.word	0x3ebbbd41
 8013aa8:	af25de2c 	.word	0xaf25de2c
 8013aac:	3f11566a 	.word	0x3f11566a
 8013ab0:	16bebd93 	.word	0x16bebd93
 8013ab4:	3f66c16c 	.word	0x3f66c16c
 8013ab8:	5555553e 	.word	0x5555553e
 8013abc:	3fc55555 	.word	0x3fc55555
 8013ac0:	c2f8f359 	.word	0xc2f8f359
 8013ac4:	01a56e1f 	.word	0x01a56e1f
 8013ac8:	3fe00000 	.word	0x3fe00000
 8013acc:	000fffff 	.word	0x000fffff
 8013ad0:	3ff00000 	.word	0x3ff00000
 8013ad4:	4090cbff 	.word	0x4090cbff
 8013ad8:	3f6f3400 	.word	0x3f6f3400
 8013adc:	652b82fe 	.word	0x652b82fe
 8013ae0:	3c971547 	.word	0x3c971547
 8013ae4:	00000000 	.word	0x00000000

08013ae8 <__ieee754_rem_pio2>:
 8013ae8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8013aec:	ec57 6b10 	vmov	r6, r7, d0
 8013af0:	4bc3      	ldr	r3, [pc, #780]	; (8013e00 <__ieee754_rem_pio2+0x318>)
 8013af2:	b08d      	sub	sp, #52	; 0x34
 8013af4:	f027 4800 	bic.w	r8, r7, #2147483648	; 0x80000000
 8013af8:	4598      	cmp	r8, r3
 8013afa:	4604      	mov	r4, r0
 8013afc:	9704      	str	r7, [sp, #16]
 8013afe:	dc07      	bgt.n	8013b10 <__ieee754_rem_pio2+0x28>
 8013b00:	2200      	movs	r2, #0
 8013b02:	2300      	movs	r3, #0
 8013b04:	ed84 0b00 	vstr	d0, [r4]
 8013b08:	e9c0 2302 	strd	r2, r3, [r0, #8]
 8013b0c:	2500      	movs	r5, #0
 8013b0e:	e027      	b.n	8013b60 <__ieee754_rem_pio2+0x78>
 8013b10:	4bbc      	ldr	r3, [pc, #752]	; (8013e04 <__ieee754_rem_pio2+0x31c>)
 8013b12:	4598      	cmp	r8, r3
 8013b14:	dc75      	bgt.n	8013c02 <__ieee754_rem_pio2+0x11a>
 8013b16:	9b04      	ldr	r3, [sp, #16]
 8013b18:	4dbb      	ldr	r5, [pc, #748]	; (8013e08 <__ieee754_rem_pio2+0x320>)
 8013b1a:	2b00      	cmp	r3, #0
 8013b1c:	ee10 0a10 	vmov	r0, s0
 8013b20:	a3a9      	add	r3, pc, #676	; (adr r3, 8013dc8 <__ieee754_rem_pio2+0x2e0>)
 8013b22:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013b26:	4639      	mov	r1, r7
 8013b28:	dd36      	ble.n	8013b98 <__ieee754_rem_pio2+0xb0>
 8013b2a:	f7ec fb7f 	bl	800022c <__aeabi_dsub>
 8013b2e:	45a8      	cmp	r8, r5
 8013b30:	4606      	mov	r6, r0
 8013b32:	460f      	mov	r7, r1
 8013b34:	d018      	beq.n	8013b68 <__ieee754_rem_pio2+0x80>
 8013b36:	a3a6      	add	r3, pc, #664	; (adr r3, 8013dd0 <__ieee754_rem_pio2+0x2e8>)
 8013b38:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013b3c:	f7ec fb76 	bl	800022c <__aeabi_dsub>
 8013b40:	4602      	mov	r2, r0
 8013b42:	460b      	mov	r3, r1
 8013b44:	e9c4 2300 	strd	r2, r3, [r4]
 8013b48:	4630      	mov	r0, r6
 8013b4a:	4639      	mov	r1, r7
 8013b4c:	f7ec fb6e 	bl	800022c <__aeabi_dsub>
 8013b50:	a39f      	add	r3, pc, #636	; (adr r3, 8013dd0 <__ieee754_rem_pio2+0x2e8>)
 8013b52:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013b56:	f7ec fb69 	bl	800022c <__aeabi_dsub>
 8013b5a:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8013b5e:	2501      	movs	r5, #1
 8013b60:	4628      	mov	r0, r5
 8013b62:	b00d      	add	sp, #52	; 0x34
 8013b64:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8013b68:	a39b      	add	r3, pc, #620	; (adr r3, 8013dd8 <__ieee754_rem_pio2+0x2f0>)
 8013b6a:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013b6e:	f7ec fb5d 	bl	800022c <__aeabi_dsub>
 8013b72:	a39b      	add	r3, pc, #620	; (adr r3, 8013de0 <__ieee754_rem_pio2+0x2f8>)
 8013b74:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013b78:	4606      	mov	r6, r0
 8013b7a:	460f      	mov	r7, r1
 8013b7c:	f7ec fb56 	bl	800022c <__aeabi_dsub>
 8013b80:	4602      	mov	r2, r0
 8013b82:	460b      	mov	r3, r1
 8013b84:	e9c4 2300 	strd	r2, r3, [r4]
 8013b88:	4630      	mov	r0, r6
 8013b8a:	4639      	mov	r1, r7
 8013b8c:	f7ec fb4e 	bl	800022c <__aeabi_dsub>
 8013b90:	a393      	add	r3, pc, #588	; (adr r3, 8013de0 <__ieee754_rem_pio2+0x2f8>)
 8013b92:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013b96:	e7de      	b.n	8013b56 <__ieee754_rem_pio2+0x6e>
 8013b98:	f7ec fb4a 	bl	8000230 <__adddf3>
 8013b9c:	45a8      	cmp	r8, r5
 8013b9e:	4606      	mov	r6, r0
 8013ba0:	460f      	mov	r7, r1
 8013ba2:	d016      	beq.n	8013bd2 <__ieee754_rem_pio2+0xea>
 8013ba4:	a38a      	add	r3, pc, #552	; (adr r3, 8013dd0 <__ieee754_rem_pio2+0x2e8>)
 8013ba6:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013baa:	f7ec fb41 	bl	8000230 <__adddf3>
 8013bae:	4602      	mov	r2, r0
 8013bb0:	460b      	mov	r3, r1
 8013bb2:	e9c4 2300 	strd	r2, r3, [r4]
 8013bb6:	4630      	mov	r0, r6
 8013bb8:	4639      	mov	r1, r7
 8013bba:	f7ec fb37 	bl	800022c <__aeabi_dsub>
 8013bbe:	a384      	add	r3, pc, #528	; (adr r3, 8013dd0 <__ieee754_rem_pio2+0x2e8>)
 8013bc0:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013bc4:	f7ec fb34 	bl	8000230 <__adddf3>
 8013bc8:	f04f 35ff 	mov.w	r5, #4294967295
 8013bcc:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8013bd0:	e7c6      	b.n	8013b60 <__ieee754_rem_pio2+0x78>
 8013bd2:	a381      	add	r3, pc, #516	; (adr r3, 8013dd8 <__ieee754_rem_pio2+0x2f0>)
 8013bd4:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013bd8:	f7ec fb2a 	bl	8000230 <__adddf3>
 8013bdc:	a380      	add	r3, pc, #512	; (adr r3, 8013de0 <__ieee754_rem_pio2+0x2f8>)
 8013bde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013be2:	4606      	mov	r6, r0
 8013be4:	460f      	mov	r7, r1
 8013be6:	f7ec fb23 	bl	8000230 <__adddf3>
 8013bea:	4602      	mov	r2, r0
 8013bec:	460b      	mov	r3, r1
 8013bee:	e9c4 2300 	strd	r2, r3, [r4]
 8013bf2:	4630      	mov	r0, r6
 8013bf4:	4639      	mov	r1, r7
 8013bf6:	f7ec fb19 	bl	800022c <__aeabi_dsub>
 8013bfa:	a379      	add	r3, pc, #484	; (adr r3, 8013de0 <__ieee754_rem_pio2+0x2f8>)
 8013bfc:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013c00:	e7e0      	b.n	8013bc4 <__ieee754_rem_pio2+0xdc>
 8013c02:	4b82      	ldr	r3, [pc, #520]	; (8013e0c <__ieee754_rem_pio2+0x324>)
 8013c04:	4598      	cmp	r8, r3
 8013c06:	f300 80d0 	bgt.w	8013daa <__ieee754_rem_pio2+0x2c2>
 8013c0a:	f001 ffb9 	bl	8015b80 <fabs>
 8013c0e:	ec57 6b10 	vmov	r6, r7, d0
 8013c12:	ee10 0a10 	vmov	r0, s0
 8013c16:	a374      	add	r3, pc, #464	; (adr r3, 8013de8 <__ieee754_rem_pio2+0x300>)
 8013c18:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013c1c:	4639      	mov	r1, r7
 8013c1e:	f7ec fcbd 	bl	800059c <__aeabi_dmul>
 8013c22:	2200      	movs	r2, #0
 8013c24:	4b7a      	ldr	r3, [pc, #488]	; (8013e10 <__ieee754_rem_pio2+0x328>)
 8013c26:	f7ec fb03 	bl	8000230 <__adddf3>
 8013c2a:	f7ec ff67 	bl	8000afc <__aeabi_d2iz>
 8013c2e:	4605      	mov	r5, r0
 8013c30:	f7ec fc4a 	bl	80004c8 <__aeabi_i2d>
 8013c34:	a364      	add	r3, pc, #400	; (adr r3, 8013dc8 <__ieee754_rem_pio2+0x2e0>)
 8013c36:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013c3a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8013c3e:	f7ec fcad 	bl	800059c <__aeabi_dmul>
 8013c42:	4602      	mov	r2, r0
 8013c44:	460b      	mov	r3, r1
 8013c46:	4630      	mov	r0, r6
 8013c48:	4639      	mov	r1, r7
 8013c4a:	f7ec faef 	bl	800022c <__aeabi_dsub>
 8013c4e:	a360      	add	r3, pc, #384	; (adr r3, 8013dd0 <__ieee754_rem_pio2+0x2e8>)
 8013c50:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013c54:	4682      	mov	sl, r0
 8013c56:	468b      	mov	fp, r1
 8013c58:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8013c5c:	f7ec fc9e 	bl	800059c <__aeabi_dmul>
 8013c60:	2d1f      	cmp	r5, #31
 8013c62:	4606      	mov	r6, r0
 8013c64:	460f      	mov	r7, r1
 8013c66:	dc0c      	bgt.n	8013c82 <__ieee754_rem_pio2+0x19a>
 8013c68:	1e6a      	subs	r2, r5, #1
 8013c6a:	4b6a      	ldr	r3, [pc, #424]	; (8013e14 <__ieee754_rem_pio2+0x32c>)
 8013c6c:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8013c70:	4543      	cmp	r3, r8
 8013c72:	d006      	beq.n	8013c82 <__ieee754_rem_pio2+0x19a>
 8013c74:	4632      	mov	r2, r6
 8013c76:	463b      	mov	r3, r7
 8013c78:	4650      	mov	r0, sl
 8013c7a:	4659      	mov	r1, fp
 8013c7c:	f7ec fad6 	bl	800022c <__aeabi_dsub>
 8013c80:	e00e      	b.n	8013ca0 <__ieee754_rem_pio2+0x1b8>
 8013c82:	4632      	mov	r2, r6
 8013c84:	463b      	mov	r3, r7
 8013c86:	4650      	mov	r0, sl
 8013c88:	4659      	mov	r1, fp
 8013c8a:	f7ec facf 	bl	800022c <__aeabi_dsub>
 8013c8e:	ea4f 5328 	mov.w	r3, r8, asr #20
 8013c92:	9305      	str	r3, [sp, #20]
 8013c94:	9a05      	ldr	r2, [sp, #20]
 8013c96:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8013c9a:	1ad3      	subs	r3, r2, r3
 8013c9c:	2b10      	cmp	r3, #16
 8013c9e:	dc02      	bgt.n	8013ca6 <__ieee754_rem_pio2+0x1be>
 8013ca0:	e9c4 0100 	strd	r0, r1, [r4]
 8013ca4:	e039      	b.n	8013d1a <__ieee754_rem_pio2+0x232>
 8013ca6:	a34c      	add	r3, pc, #304	; (adr r3, 8013dd8 <__ieee754_rem_pio2+0x2f0>)
 8013ca8:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013cac:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8013cb0:	f7ec fc74 	bl	800059c <__aeabi_dmul>
 8013cb4:	4606      	mov	r6, r0
 8013cb6:	460f      	mov	r7, r1
 8013cb8:	4602      	mov	r2, r0
 8013cba:	460b      	mov	r3, r1
 8013cbc:	4650      	mov	r0, sl
 8013cbe:	4659      	mov	r1, fp
 8013cc0:	f7ec fab4 	bl	800022c <__aeabi_dsub>
 8013cc4:	4602      	mov	r2, r0
 8013cc6:	460b      	mov	r3, r1
 8013cc8:	4680      	mov	r8, r0
 8013cca:	4689      	mov	r9, r1
 8013ccc:	4650      	mov	r0, sl
 8013cce:	4659      	mov	r1, fp
 8013cd0:	f7ec faac 	bl	800022c <__aeabi_dsub>
 8013cd4:	4632      	mov	r2, r6
 8013cd6:	463b      	mov	r3, r7
 8013cd8:	f7ec faa8 	bl	800022c <__aeabi_dsub>
 8013cdc:	a340      	add	r3, pc, #256	; (adr r3, 8013de0 <__ieee754_rem_pio2+0x2f8>)
 8013cde:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013ce2:	4606      	mov	r6, r0
 8013ce4:	460f      	mov	r7, r1
 8013ce6:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8013cea:	f7ec fc57 	bl	800059c <__aeabi_dmul>
 8013cee:	4632      	mov	r2, r6
 8013cf0:	463b      	mov	r3, r7
 8013cf2:	f7ec fa9b 	bl	800022c <__aeabi_dsub>
 8013cf6:	4602      	mov	r2, r0
 8013cf8:	460b      	mov	r3, r1
 8013cfa:	4606      	mov	r6, r0
 8013cfc:	460f      	mov	r7, r1
 8013cfe:	4640      	mov	r0, r8
 8013d00:	4649      	mov	r1, r9
 8013d02:	f7ec fa93 	bl	800022c <__aeabi_dsub>
 8013d06:	9a05      	ldr	r2, [sp, #20]
 8013d08:	f3c1 530a 	ubfx	r3, r1, #20, #11
 8013d0c:	1ad3      	subs	r3, r2, r3
 8013d0e:	2b31      	cmp	r3, #49	; 0x31
 8013d10:	dc20      	bgt.n	8013d54 <__ieee754_rem_pio2+0x26c>
 8013d12:	e9c4 0100 	strd	r0, r1, [r4]
 8013d16:	46c2      	mov	sl, r8
 8013d18:	46cb      	mov	fp, r9
 8013d1a:	e9d4 8900 	ldrd	r8, r9, [r4]
 8013d1e:	4650      	mov	r0, sl
 8013d20:	4642      	mov	r2, r8
 8013d22:	464b      	mov	r3, r9
 8013d24:	4659      	mov	r1, fp
 8013d26:	f7ec fa81 	bl	800022c <__aeabi_dsub>
 8013d2a:	463b      	mov	r3, r7
 8013d2c:	4632      	mov	r2, r6
 8013d2e:	f7ec fa7d 	bl	800022c <__aeabi_dsub>
 8013d32:	9b04      	ldr	r3, [sp, #16]
 8013d34:	2b00      	cmp	r3, #0
 8013d36:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8013d3a:	f6bf af11 	bge.w	8013b60 <__ieee754_rem_pio2+0x78>
 8013d3e:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8013d42:	6063      	str	r3, [r4, #4]
 8013d44:	f8c4 8000 	str.w	r8, [r4]
 8013d48:	60a0      	str	r0, [r4, #8]
 8013d4a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8013d4e:	60e3      	str	r3, [r4, #12]
 8013d50:	426d      	negs	r5, r5
 8013d52:	e705      	b.n	8013b60 <__ieee754_rem_pio2+0x78>
 8013d54:	a326      	add	r3, pc, #152	; (adr r3, 8013df0 <__ieee754_rem_pio2+0x308>)
 8013d56:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013d5a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8013d5e:	f7ec fc1d 	bl	800059c <__aeabi_dmul>
 8013d62:	4606      	mov	r6, r0
 8013d64:	460f      	mov	r7, r1
 8013d66:	4602      	mov	r2, r0
 8013d68:	460b      	mov	r3, r1
 8013d6a:	4640      	mov	r0, r8
 8013d6c:	4649      	mov	r1, r9
 8013d6e:	f7ec fa5d 	bl	800022c <__aeabi_dsub>
 8013d72:	4602      	mov	r2, r0
 8013d74:	460b      	mov	r3, r1
 8013d76:	4682      	mov	sl, r0
 8013d78:	468b      	mov	fp, r1
 8013d7a:	4640      	mov	r0, r8
 8013d7c:	4649      	mov	r1, r9
 8013d7e:	f7ec fa55 	bl	800022c <__aeabi_dsub>
 8013d82:	4632      	mov	r2, r6
 8013d84:	463b      	mov	r3, r7
 8013d86:	f7ec fa51 	bl	800022c <__aeabi_dsub>
 8013d8a:	a31b      	add	r3, pc, #108	; (adr r3, 8013df8 <__ieee754_rem_pio2+0x310>)
 8013d8c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8013d90:	4606      	mov	r6, r0
 8013d92:	460f      	mov	r7, r1
 8013d94:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8013d98:	f7ec fc00 	bl	800059c <__aeabi_dmul>
 8013d9c:	4632      	mov	r2, r6
 8013d9e:	463b      	mov	r3, r7
 8013da0:	f7ec fa44 	bl	800022c <__aeabi_dsub>
 8013da4:	4606      	mov	r6, r0
 8013da6:	460f      	mov	r7, r1
 8013da8:	e764      	b.n	8013c74 <__ieee754_rem_pio2+0x18c>
 8013daa:	4b1b      	ldr	r3, [pc, #108]	; (8013e18 <__ieee754_rem_pio2+0x330>)
 8013dac:	4598      	cmp	r8, r3
 8013dae:	dd35      	ble.n	8013e1c <__ieee754_rem_pio2+0x334>
 8013db0:	ee10 2a10 	vmov	r2, s0
 8013db4:	463b      	mov	r3, r7
 8013db6:	4630      	mov	r0, r6
 8013db8:	4639      	mov	r1, r7
 8013dba:	f7ec fa37 	bl	800022c <__aeabi_dsub>
 8013dbe:	e9c4 0102 	strd	r0, r1, [r4, #8]
 8013dc2:	e9c4 0100 	strd	r0, r1, [r4]
 8013dc6:	e6a1      	b.n	8013b0c <__ieee754_rem_pio2+0x24>
 8013dc8:	54400000 	.word	0x54400000
 8013dcc:	3ff921fb 	.word	0x3ff921fb
 8013dd0:	1a626331 	.word	0x1a626331
 8013dd4:	3dd0b461 	.word	0x3dd0b461
 8013dd8:	1a600000 	.word	0x1a600000
 8013ddc:	3dd0b461 	.word	0x3dd0b461
 8013de0:	2e037073 	.word	0x2e037073
 8013de4:	3ba3198a 	.word	0x3ba3198a
 8013de8:	6dc9c883 	.word	0x6dc9c883
 8013dec:	3fe45f30 	.word	0x3fe45f30
 8013df0:	2e000000 	.word	0x2e000000
 8013df4:	3ba3198a 	.word	0x3ba3198a
 8013df8:	252049c1 	.word	0x252049c1
 8013dfc:	397b839a 	.word	0x397b839a
 8013e00:	3fe921fb 	.word	0x3fe921fb
 8013e04:	4002d97b 	.word	0x4002d97b
 8013e08:	3ff921fb 	.word	0x3ff921fb
 8013e0c:	413921fb 	.word	0x413921fb
 8013e10:	3fe00000 	.word	0x3fe00000
 8013e14:	08016650 	.word	0x08016650
 8013e18:	7fefffff 	.word	0x7fefffff
 8013e1c:	ea4f 5528 	mov.w	r5, r8, asr #20
 8013e20:	f2a5 4516 	subw	r5, r5, #1046	; 0x416
 8013e24:	eba8 5105 	sub.w	r1, r8, r5, lsl #20
 8013e28:	4630      	mov	r0, r6
 8013e2a:	460f      	mov	r7, r1
 8013e2c:	f7ec fe66 	bl	8000afc <__aeabi_d2iz>
 8013e30:	f7ec fb4a 	bl	80004c8 <__aeabi_i2d>
 8013e34:	4602      	mov	r2, r0
 8013e36:	460b      	mov	r3, r1
 8013e38:	4630      	mov	r0, r6
 8013e3a:	4639      	mov	r1, r7
 8013e3c:	e9cd 2306 	strd	r2, r3, [sp, #24]
 8013e40:	f7ec f9f4 	bl	800022c <__aeabi_dsub>
 8013e44:	2200      	movs	r2, #0
 8013e46:	4b1f      	ldr	r3, [pc, #124]	; (8013ec4 <__ieee754_rem_pio2+0x3dc>)
 8013e48:	f7ec fba8 	bl	800059c <__aeabi_dmul>
 8013e4c:	460f      	mov	r7, r1
 8013e4e:	4606      	mov	r6, r0
 8013e50:	f7ec fe54 	bl	8000afc <__aeabi_d2iz>
 8013e54:	f7ec fb38 	bl	80004c8 <__aeabi_i2d>
 8013e58:	4602      	mov	r2, r0
 8013e5a:	460b      	mov	r3, r1
 8013e5c:	4630      	mov	r0, r6
 8013e5e:	4639      	mov	r1, r7
 8013e60:	e9cd 2308 	strd	r2, r3, [sp, #32]
 8013e64:	f7ec f9e2 	bl	800022c <__aeabi_dsub>
 8013e68:	2200      	movs	r2, #0
 8013e6a:	4b16      	ldr	r3, [pc, #88]	; (8013ec4 <__ieee754_rem_pio2+0x3dc>)
 8013e6c:	f7ec fb96 	bl	800059c <__aeabi_dmul>
 8013e70:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 8013e74:	f10d 0930 	add.w	r9, sp, #48	; 0x30
 8013e78:	f04f 0803 	mov.w	r8, #3
 8013e7c:	2600      	movs	r6, #0
 8013e7e:	2700      	movs	r7, #0
 8013e80:	4632      	mov	r2, r6
 8013e82:	463b      	mov	r3, r7
 8013e84:	e979 0102 	ldrd	r0, r1, [r9, #-8]!
 8013e88:	f108 3aff 	add.w	sl, r8, #4294967295
 8013e8c:	f7ec fdee 	bl	8000a6c <__aeabi_dcmpeq>
 8013e90:	b9b0      	cbnz	r0, 8013ec0 <__ieee754_rem_pio2+0x3d8>
 8013e92:	4b0d      	ldr	r3, [pc, #52]	; (8013ec8 <__ieee754_rem_pio2+0x3e0>)
 8013e94:	9301      	str	r3, [sp, #4]
 8013e96:	2302      	movs	r3, #2
 8013e98:	9300      	str	r3, [sp, #0]
 8013e9a:	462a      	mov	r2, r5
 8013e9c:	4643      	mov	r3, r8
 8013e9e:	4621      	mov	r1, r4
 8013ea0:	a806      	add	r0, sp, #24
 8013ea2:	f000 fd7d 	bl	80149a0 <__kernel_rem_pio2>
 8013ea6:	9b04      	ldr	r3, [sp, #16]
 8013ea8:	2b00      	cmp	r3, #0
 8013eaa:	4605      	mov	r5, r0
 8013eac:	f6bf ae58 	bge.w	8013b60 <__ieee754_rem_pio2+0x78>
 8013eb0:	6863      	ldr	r3, [r4, #4]
 8013eb2:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8013eb6:	6063      	str	r3, [r4, #4]
 8013eb8:	68e3      	ldr	r3, [r4, #12]
 8013eba:	f103 4300 	add.w	r3, r3, #2147483648	; 0x80000000
 8013ebe:	e746      	b.n	8013d4e <__ieee754_rem_pio2+0x266>
 8013ec0:	46d0      	mov	r8, sl
 8013ec2:	e7dd      	b.n	8013e80 <__ieee754_rem_pio2+0x398>
 8013ec4:	41700000 	.word	0x41700000
 8013ec8:	080166d0 	.word	0x080166d0

08013ecc <__ieee754_sqrt>:
 8013ecc:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8013ed0:	4955      	ldr	r1, [pc, #340]	; (8014028 <__ieee754_sqrt+0x15c>)
 8013ed2:	ec55 4b10 	vmov	r4, r5, d0
 8013ed6:	43a9      	bics	r1, r5
 8013ed8:	462b      	mov	r3, r5
 8013eda:	462a      	mov	r2, r5
 8013edc:	d112      	bne.n	8013f04 <__ieee754_sqrt+0x38>
 8013ede:	ee10 2a10 	vmov	r2, s0
 8013ee2:	ee10 0a10 	vmov	r0, s0
 8013ee6:	4629      	mov	r1, r5
 8013ee8:	f7ec fb58 	bl	800059c <__aeabi_dmul>
 8013eec:	4602      	mov	r2, r0
 8013eee:	460b      	mov	r3, r1
 8013ef0:	4620      	mov	r0, r4
 8013ef2:	4629      	mov	r1, r5
 8013ef4:	f7ec f99c 	bl	8000230 <__adddf3>
 8013ef8:	4604      	mov	r4, r0
 8013efa:	460d      	mov	r5, r1
 8013efc:	ec45 4b10 	vmov	d0, r4, r5
 8013f00:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8013f04:	2d00      	cmp	r5, #0
 8013f06:	ee10 0a10 	vmov	r0, s0
 8013f0a:	4621      	mov	r1, r4
 8013f0c:	dc0f      	bgt.n	8013f2e <__ieee754_sqrt+0x62>
 8013f0e:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 8013f12:	4330      	orrs	r0, r6
 8013f14:	d0f2      	beq.n	8013efc <__ieee754_sqrt+0x30>
 8013f16:	b155      	cbz	r5, 8013f2e <__ieee754_sqrt+0x62>
 8013f18:	ee10 2a10 	vmov	r2, s0
 8013f1c:	4620      	mov	r0, r4
 8013f1e:	4629      	mov	r1, r5
 8013f20:	f7ec f984 	bl	800022c <__aeabi_dsub>
 8013f24:	4602      	mov	r2, r0
 8013f26:	460b      	mov	r3, r1
 8013f28:	f7ec fc62 	bl	80007f0 <__aeabi_ddiv>
 8013f2c:	e7e4      	b.n	8013ef8 <__ieee754_sqrt+0x2c>
 8013f2e:	151b      	asrs	r3, r3, #20
 8013f30:	d073      	beq.n	801401a <__ieee754_sqrt+0x14e>
 8013f32:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 8013f36:	07dd      	lsls	r5, r3, #31
 8013f38:	f3c2 0213 	ubfx	r2, r2, #0, #20
 8013f3c:	bf48      	it	mi
 8013f3e:	0fc8      	lsrmi	r0, r1, #31
 8013f40:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 8013f44:	bf44      	itt	mi
 8013f46:	0049      	lslmi	r1, r1, #1
 8013f48:	eb00 0242 	addmi.w	r2, r0, r2, lsl #1
 8013f4c:	2500      	movs	r5, #0
 8013f4e:	1058      	asrs	r0, r3, #1
 8013f50:	0fcb      	lsrs	r3, r1, #31
 8013f52:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 8013f56:	0049      	lsls	r1, r1, #1
 8013f58:	2316      	movs	r3, #22
 8013f5a:	462c      	mov	r4, r5
 8013f5c:	f44f 1600 	mov.w	r6, #2097152	; 0x200000
 8013f60:	19a7      	adds	r7, r4, r6
 8013f62:	4297      	cmp	r7, r2
 8013f64:	bfde      	ittt	le
 8013f66:	19bc      	addle	r4, r7, r6
 8013f68:	1bd2      	suble	r2, r2, r7
 8013f6a:	19ad      	addle	r5, r5, r6
 8013f6c:	0fcf      	lsrs	r7, r1, #31
 8013f6e:	3b01      	subs	r3, #1
 8013f70:	eb07 0242 	add.w	r2, r7, r2, lsl #1
 8013f74:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8013f78:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8013f7c:	d1f0      	bne.n	8013f60 <__ieee754_sqrt+0x94>
 8013f7e:	f04f 0c20 	mov.w	ip, #32
 8013f82:	469e      	mov	lr, r3
 8013f84:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 8013f88:	42a2      	cmp	r2, r4
 8013f8a:	eb06 070e 	add.w	r7, r6, lr
 8013f8e:	dc02      	bgt.n	8013f96 <__ieee754_sqrt+0xca>
 8013f90:	d112      	bne.n	8013fb8 <__ieee754_sqrt+0xec>
 8013f92:	428f      	cmp	r7, r1
 8013f94:	d810      	bhi.n	8013fb8 <__ieee754_sqrt+0xec>
 8013f96:	2f00      	cmp	r7, #0
 8013f98:	eb07 0e06 	add.w	lr, r7, r6
 8013f9c:	da42      	bge.n	8014024 <__ieee754_sqrt+0x158>
 8013f9e:	f1be 0f00 	cmp.w	lr, #0
 8013fa2:	db3f      	blt.n	8014024 <__ieee754_sqrt+0x158>
 8013fa4:	f104 0801 	add.w	r8, r4, #1
 8013fa8:	1b12      	subs	r2, r2, r4
 8013faa:	428f      	cmp	r7, r1
 8013fac:	bf88      	it	hi
 8013fae:	f102 32ff 	addhi.w	r2, r2, #4294967295
 8013fb2:	1bc9      	subs	r1, r1, r7
 8013fb4:	4433      	add	r3, r6
 8013fb6:	4644      	mov	r4, r8
 8013fb8:	0052      	lsls	r2, r2, #1
 8013fba:	f1bc 0c01 	subs.w	ip, ip, #1
 8013fbe:	eb02 72d1 	add.w	r2, r2, r1, lsr #31
 8013fc2:	ea4f 0656 	mov.w	r6, r6, lsr #1
 8013fc6:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8013fca:	d1dd      	bne.n	8013f88 <__ieee754_sqrt+0xbc>
 8013fcc:	430a      	orrs	r2, r1
 8013fce:	d006      	beq.n	8013fde <__ieee754_sqrt+0x112>
 8013fd0:	1c5c      	adds	r4, r3, #1
 8013fd2:	bf13      	iteet	ne
 8013fd4:	3301      	addne	r3, #1
 8013fd6:	3501      	addeq	r5, #1
 8013fd8:	4663      	moveq	r3, ip
 8013fda:	f023 0301 	bicne.w	r3, r3, #1
 8013fde:	106a      	asrs	r2, r5, #1
 8013fe0:	085b      	lsrs	r3, r3, #1
 8013fe2:	07e9      	lsls	r1, r5, #31
 8013fe4:	f102 527f 	add.w	r2, r2, #1069547520	; 0x3fc00000
 8013fe8:	f502 1200 	add.w	r2, r2, #2097152	; 0x200000
 8013fec:	bf48      	it	mi
 8013fee:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 8013ff2:	eb02 5500 	add.w	r5, r2, r0, lsl #20
 8013ff6:	461c      	mov	r4, r3
 8013ff8:	e780      	b.n	8013efc <__ieee754_sqrt+0x30>
 8013ffa:	0aca      	lsrs	r2, r1, #11
 8013ffc:	3815      	subs	r0, #21
 8013ffe:	0549      	lsls	r1, r1, #21
 8014000:	2a00      	cmp	r2, #0
 8014002:	d0fa      	beq.n	8013ffa <__ieee754_sqrt+0x12e>
 8014004:	02d6      	lsls	r6, r2, #11
 8014006:	d50a      	bpl.n	801401e <__ieee754_sqrt+0x152>
 8014008:	f1c3 0420 	rsb	r4, r3, #32
 801400c:	fa21 f404 	lsr.w	r4, r1, r4
 8014010:	1e5d      	subs	r5, r3, #1
 8014012:	4099      	lsls	r1, r3
 8014014:	4322      	orrs	r2, r4
 8014016:	1b43      	subs	r3, r0, r5
 8014018:	e78b      	b.n	8013f32 <__ieee754_sqrt+0x66>
 801401a:	4618      	mov	r0, r3
 801401c:	e7f0      	b.n	8014000 <__ieee754_sqrt+0x134>
 801401e:	0052      	lsls	r2, r2, #1
 8014020:	3301      	adds	r3, #1
 8014022:	e7ef      	b.n	8014004 <__ieee754_sqrt+0x138>
 8014024:	46a0      	mov	r8, r4
 8014026:	e7bf      	b.n	8013fa8 <__ieee754_sqrt+0xdc>
 8014028:	7ff00000 	.word	0x7ff00000

0801402c <__ieee754_powf>:
 801402c:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8014030:	ee10 5a90 	vmov	r5, s1
 8014034:	f035 4700 	bics.w	r7, r5, #2147483648	; 0x80000000
 8014038:	ed2d 8b02 	vpush	{d8}
 801403c:	eeb0 8a40 	vmov.f32	s16, s0
 8014040:	eef0 8a60 	vmov.f32	s17, s1
 8014044:	f000 8293 	beq.w	801456e <__ieee754_powf+0x542>
 8014048:	ee10 8a10 	vmov	r8, s0
 801404c:	f028 4400 	bic.w	r4, r8, #2147483648	; 0x80000000
 8014050:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 8014054:	dc06      	bgt.n	8014064 <__ieee754_powf+0x38>
 8014056:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
 801405a:	dd0a      	ble.n	8014072 <__ieee754_powf+0x46>
 801405c:	f1b4 5f7e 	cmp.w	r4, #1065353216	; 0x3f800000
 8014060:	f000 8285 	beq.w	801456e <__ieee754_powf+0x542>
 8014064:	ecbd 8b02 	vpop	{d8}
 8014068:	48d9      	ldr	r0, [pc, #868]	; (80143d0 <__ieee754_powf+0x3a4>)
 801406a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801406e:	f7fe b8ed 	b.w	801224c <nanf>
 8014072:	f1b8 0f00 	cmp.w	r8, #0
 8014076:	da1d      	bge.n	80140b4 <__ieee754_powf+0x88>
 8014078:	f1b7 4f97 	cmp.w	r7, #1266679808	; 0x4b800000
 801407c:	da2c      	bge.n	80140d8 <__ieee754_powf+0xac>
 801407e:	f1b7 5f7e 	cmp.w	r7, #1065353216	; 0x3f800000
 8014082:	db30      	blt.n	80140e6 <__ieee754_powf+0xba>
 8014084:	15fb      	asrs	r3, r7, #23
 8014086:	f1c3 0396 	rsb	r3, r3, #150	; 0x96
 801408a:	fa47 f603 	asr.w	r6, r7, r3
 801408e:	fa06 f303 	lsl.w	r3, r6, r3
 8014092:	42bb      	cmp	r3, r7
 8014094:	d127      	bne.n	80140e6 <__ieee754_powf+0xba>
 8014096:	f006 0601 	and.w	r6, r6, #1
 801409a:	f1c6 0602 	rsb	r6, r6, #2
 801409e:	f1b7 5f7e 	cmp.w	r7, #1065353216	; 0x3f800000
 80140a2:	d122      	bne.n	80140ea <__ieee754_powf+0xbe>
 80140a4:	2d00      	cmp	r5, #0
 80140a6:	f280 8268 	bge.w	801457a <__ieee754_powf+0x54e>
 80140aa:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 80140ae:	ee87 0a88 	vdiv.f32	s0, s15, s16
 80140b2:	e00d      	b.n	80140d0 <__ieee754_powf+0xa4>
 80140b4:	2600      	movs	r6, #0
 80140b6:	f1b7 4fff 	cmp.w	r7, #2139095040	; 0x7f800000
 80140ba:	d1f0      	bne.n	801409e <__ieee754_powf+0x72>
 80140bc:	f1b4 5f7e 	cmp.w	r4, #1065353216	; 0x3f800000
 80140c0:	f000 8255 	beq.w	801456e <__ieee754_powf+0x542>
 80140c4:	dd0a      	ble.n	80140dc <__ieee754_powf+0xb0>
 80140c6:	2d00      	cmp	r5, #0
 80140c8:	f280 8254 	bge.w	8014574 <__ieee754_powf+0x548>
 80140cc:	ed9f 0ac1 	vldr	s0, [pc, #772]	; 80143d4 <__ieee754_powf+0x3a8>
 80140d0:	ecbd 8b02 	vpop	{d8}
 80140d4:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 80140d8:	2602      	movs	r6, #2
 80140da:	e7ec      	b.n	80140b6 <__ieee754_powf+0x8a>
 80140dc:	2d00      	cmp	r5, #0
 80140de:	daf5      	bge.n	80140cc <__ieee754_powf+0xa0>
 80140e0:	eeb1 0a68 	vneg.f32	s0, s17
 80140e4:	e7f4      	b.n	80140d0 <__ieee754_powf+0xa4>
 80140e6:	2600      	movs	r6, #0
 80140e8:	e7d9      	b.n	801409e <__ieee754_powf+0x72>
 80140ea:	f1b5 4f80 	cmp.w	r5, #1073741824	; 0x40000000
 80140ee:	d102      	bne.n	80140f6 <__ieee754_powf+0xca>
 80140f0:	ee28 0a08 	vmul.f32	s0, s16, s16
 80140f4:	e7ec      	b.n	80140d0 <__ieee754_powf+0xa4>
 80140f6:	f1b5 5f7c 	cmp.w	r5, #1056964608	; 0x3f000000
 80140fa:	eeb0 0a48 	vmov.f32	s0, s16
 80140fe:	d108      	bne.n	8014112 <__ieee754_powf+0xe6>
 8014100:	f1b8 0f00 	cmp.w	r8, #0
 8014104:	db05      	blt.n	8014112 <__ieee754_powf+0xe6>
 8014106:	ecbd 8b02 	vpop	{d8}
 801410a:	e8bd 41f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, lr}
 801410e:	f000 bb79 	b.w	8014804 <__ieee754_sqrtf>
 8014112:	f001 fed3 	bl	8015ebc <fabsf>
 8014116:	b124      	cbz	r4, 8014122 <__ieee754_powf+0xf6>
 8014118:	f028 4340 	bic.w	r3, r8, #3221225472	; 0xc0000000
 801411c:	f1b3 5f7e 	cmp.w	r3, #1065353216	; 0x3f800000
 8014120:	d117      	bne.n	8014152 <__ieee754_powf+0x126>
 8014122:	2d00      	cmp	r5, #0
 8014124:	bfbc      	itt	lt
 8014126:	eef7 7a00 	vmovlt.f32	s15, #112	; 0x3f800000  1.0
 801412a:	ee87 0a80 	vdivlt.f32	s0, s15, s0
 801412e:	f1b8 0f00 	cmp.w	r8, #0
 8014132:	dacd      	bge.n	80140d0 <__ieee754_powf+0xa4>
 8014134:	f1a4 547e 	sub.w	r4, r4, #1065353216	; 0x3f800000
 8014138:	ea54 0306 	orrs.w	r3, r4, r6
 801413c:	d104      	bne.n	8014148 <__ieee754_powf+0x11c>
 801413e:	ee70 7a40 	vsub.f32	s15, s0, s0
 8014142:	ee87 0aa7 	vdiv.f32	s0, s15, s15
 8014146:	e7c3      	b.n	80140d0 <__ieee754_powf+0xa4>
 8014148:	2e01      	cmp	r6, #1
 801414a:	d1c1      	bne.n	80140d0 <__ieee754_powf+0xa4>
 801414c:	eeb1 0a40 	vneg.f32	s0, s0
 8014150:	e7be      	b.n	80140d0 <__ieee754_powf+0xa4>
 8014152:	ea4f 70d8 	mov.w	r0, r8, lsr #31
 8014156:	3801      	subs	r0, #1
 8014158:	ea56 0300 	orrs.w	r3, r6, r0
 801415c:	d104      	bne.n	8014168 <__ieee754_powf+0x13c>
 801415e:	ee38 8a48 	vsub.f32	s16, s16, s16
 8014162:	ee88 0a08 	vdiv.f32	s0, s16, s16
 8014166:	e7b3      	b.n	80140d0 <__ieee754_powf+0xa4>
 8014168:	f1b7 4f9a 	cmp.w	r7, #1291845632	; 0x4d000000
 801416c:	dd6d      	ble.n	801424a <__ieee754_powf+0x21e>
 801416e:	4b9a      	ldr	r3, [pc, #616]	; (80143d8 <__ieee754_powf+0x3ac>)
 8014170:	429c      	cmp	r4, r3
 8014172:	dc06      	bgt.n	8014182 <__ieee754_powf+0x156>
 8014174:	2d00      	cmp	r5, #0
 8014176:	daa9      	bge.n	80140cc <__ieee754_powf+0xa0>
 8014178:	ed9f 0a98 	vldr	s0, [pc, #608]	; 80143dc <__ieee754_powf+0x3b0>
 801417c:	ee20 0a00 	vmul.f32	s0, s0, s0
 8014180:	e7a6      	b.n	80140d0 <__ieee754_powf+0xa4>
 8014182:	4b97      	ldr	r3, [pc, #604]	; (80143e0 <__ieee754_powf+0x3b4>)
 8014184:	429c      	cmp	r4, r3
 8014186:	dd02      	ble.n	801418e <__ieee754_powf+0x162>
 8014188:	2d00      	cmp	r5, #0
 801418a:	dcf5      	bgt.n	8014178 <__ieee754_powf+0x14c>
 801418c:	e79e      	b.n	80140cc <__ieee754_powf+0xa0>
 801418e:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014192:	ee30 0a67 	vsub.f32	s0, s0, s15
 8014196:	ed9f 7a93 	vldr	s14, [pc, #588]	; 80143e4 <__ieee754_powf+0x3b8>
 801419a:	eef1 6a40 	vneg.f32	s13, s0
 801419e:	eef5 7a00 	vmov.f32	s15, #80	; 0x3e800000  0.250
 80141a2:	eea6 7aa7 	vfma.f32	s14, s13, s15
 80141a6:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 80141aa:	eee7 7a40 	vfms.f32	s15, s14, s0
 80141ae:	ee60 0a00 	vmul.f32	s1, s0, s0
 80141b2:	ed9f 7a8d 	vldr	s14, [pc, #564]	; 80143e8 <__ieee754_powf+0x3bc>
 80141b6:	ee67 0aa0 	vmul.f32	s1, s15, s1
 80141ba:	eddf 7a8c 	vldr	s15, [pc, #560]	; 80143ec <__ieee754_powf+0x3c0>
 80141be:	ee67 7ae0 	vnmul.f32	s15, s15, s1
 80141c2:	eee0 7a07 	vfma.f32	s15, s0, s14
 80141c6:	ed9f 7a8a 	vldr	s14, [pc, #552]	; 80143f0 <__ieee754_powf+0x3c4>
 80141ca:	eeb0 6a67 	vmov.f32	s12, s15
 80141ce:	eea0 6a07 	vfma.f32	s12, s0, s14
 80141d2:	ee16 3a10 	vmov	r3, s12
 80141d6:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 80141da:	f023 030f 	bic.w	r3, r3, #15
 80141de:	ee00 3a90 	vmov	s1, r3
 80141e2:	eee6 0a87 	vfma.f32	s1, s13, s14
 80141e6:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80141ea:	f425 657f 	bic.w	r5, r5, #4080	; 0xff0
 80141ee:	f025 050f 	bic.w	r5, r5, #15
 80141f2:	ee07 5a10 	vmov	s14, r5
 80141f6:	ee67 0aa8 	vmul.f32	s1, s15, s17
 80141fa:	ee38 7ac7 	vsub.f32	s14, s17, s14
 80141fe:	ee07 3a90 	vmov	s15, r3
 8014202:	eee7 0a27 	vfma.f32	s1, s14, s15
 8014206:	3e01      	subs	r6, #1
 8014208:	ea56 0200 	orrs.w	r2, r6, r0
 801420c:	ee07 5a10 	vmov	s14, r5
 8014210:	ee67 7a87 	vmul.f32	s15, s15, s14
 8014214:	eeb7 8a00 	vmov.f32	s16, #112	; 0x3f800000  1.0
 8014218:	ee30 7aa7 	vadd.f32	s14, s1, s15
 801421c:	eebf 0a00 	vmov.f32	s0, #240	; 0xbf800000 -1.0
 8014220:	ee17 4a10 	vmov	r4, s14
 8014224:	bf08      	it	eq
 8014226:	eeb0 8a40 	vmoveq.f32	s16, s0
 801422a:	2c00      	cmp	r4, #0
 801422c:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8014230:	f340 8184 	ble.w	801453c <__ieee754_powf+0x510>
 8014234:	f1b3 4f86 	cmp.w	r3, #1124073472	; 0x43000000
 8014238:	f340 80fc 	ble.w	8014434 <__ieee754_powf+0x408>
 801423c:	eddf 7a67 	vldr	s15, [pc, #412]	; 80143dc <__ieee754_powf+0x3b0>
 8014240:	ee28 0a27 	vmul.f32	s0, s16, s15
 8014244:	ee20 0a27 	vmul.f32	s0, s0, s15
 8014248:	e742      	b.n	80140d0 <__ieee754_powf+0xa4>
 801424a:	f5b4 0f00 	cmp.w	r4, #8388608	; 0x800000
 801424e:	bfbf      	itttt	lt
 8014250:	eddf 7a68 	vldrlt	s15, [pc, #416]	; 80143f4 <__ieee754_powf+0x3c8>
 8014254:	ee60 7a27 	vmullt.f32	s15, s0, s15
 8014258:	f06f 0217 	mvnlt.w	r2, #23
 801425c:	ee17 4a90 	vmovlt	r4, s15
 8014260:	ea4f 53e4 	mov.w	r3, r4, asr #23
 8014264:	bfa8      	it	ge
 8014266:	2200      	movge	r2, #0
 8014268:	3b7f      	subs	r3, #127	; 0x7f
 801426a:	4413      	add	r3, r2
 801426c:	4a62      	ldr	r2, [pc, #392]	; (80143f8 <__ieee754_powf+0x3cc>)
 801426e:	f3c4 0416 	ubfx	r4, r4, #0, #23
 8014272:	4294      	cmp	r4, r2
 8014274:	f044 517e 	orr.w	r1, r4, #1065353216	; 0x3f800000
 8014278:	dd06      	ble.n	8014288 <__ieee754_powf+0x25c>
 801427a:	4a60      	ldr	r2, [pc, #384]	; (80143fc <__ieee754_powf+0x3d0>)
 801427c:	4294      	cmp	r4, r2
 801427e:	f340 80a5 	ble.w	80143cc <__ieee754_powf+0x3a0>
 8014282:	3301      	adds	r3, #1
 8014284:	f5a1 0100 	sub.w	r1, r1, #8388608	; 0x800000
 8014288:	2400      	movs	r4, #0
 801428a:	4a5d      	ldr	r2, [pc, #372]	; (8014400 <__ieee754_powf+0x3d4>)
 801428c:	00a7      	lsls	r7, r4, #2
 801428e:	443a      	add	r2, r7
 8014290:	ee07 1a90 	vmov	s15, r1
 8014294:	ed92 7a00 	vldr	s14, [r2]
 8014298:	4a5a      	ldr	r2, [pc, #360]	; (8014404 <__ieee754_powf+0x3d8>)
 801429a:	ee37 6a27 	vadd.f32	s12, s14, s15
 801429e:	eeb7 5a00 	vmov.f32	s10, #112	; 0x3f800000  1.0
 80142a2:	eec5 6a06 	vdiv.f32	s13, s10, s12
 80142a6:	1049      	asrs	r1, r1, #1
 80142a8:	f041 5100 	orr.w	r1, r1, #536870912	; 0x20000000
 80142ac:	f501 2180 	add.w	r1, r1, #262144	; 0x40000
 80142b0:	eb01 5144 	add.w	r1, r1, r4, lsl #21
 80142b4:	ee77 5ac7 	vsub.f32	s11, s15, s14
 80142b8:	ee06 1a10 	vmov	s12, r1
 80142bc:	ee65 4aa6 	vmul.f32	s9, s11, s13
 80142c0:	ee14 ca90 	vmov	ip, s9
 80142c4:	ea02 0c0c 	and.w	ip, r2, ip
 80142c8:	ee05 ca10 	vmov	s10, ip
 80142cc:	eeb1 4a45 	vneg.f32	s8, s10
 80142d0:	eee4 5a06 	vfma.f32	s11, s8, s12
 80142d4:	ee36 6a47 	vsub.f32	s12, s12, s14
 80142d8:	ed9f 7a4b 	vldr	s14, [pc, #300]	; 8014408 <__ieee754_powf+0x3dc>
 80142dc:	ee37 6ac6 	vsub.f32	s12, s15, s12
 80142e0:	ee64 7aa4 	vmul.f32	s15, s9, s9
 80142e4:	eee4 5a06 	vfma.f32	s11, s8, s12
 80142e8:	ee67 3aa7 	vmul.f32	s7, s15, s15
 80142ec:	ee25 6aa6 	vmul.f32	s12, s11, s13
 80142f0:	eddf 5a46 	vldr	s11, [pc, #280]	; 801440c <__ieee754_powf+0x3e0>
 80142f4:	eea7 7aa5 	vfma.f32	s14, s15, s11
 80142f8:	eddf 5a45 	vldr	s11, [pc, #276]	; 8014410 <__ieee754_powf+0x3e4>
 80142fc:	eee7 5a27 	vfma.f32	s11, s14, s15
 8014300:	ed9f 7a38 	vldr	s14, [pc, #224]	; 80143e4 <__ieee754_powf+0x3b8>
 8014304:	eea5 7aa7 	vfma.f32	s14, s11, s15
 8014308:	eddf 5a42 	vldr	s11, [pc, #264]	; 8014414 <__ieee754_powf+0x3e8>
 801430c:	eee7 5a27 	vfma.f32	s11, s14, s15
 8014310:	ed9f 7a41 	vldr	s14, [pc, #260]	; 8014418 <__ieee754_powf+0x3ec>
 8014314:	ee75 6a24 	vadd.f32	s13, s10, s9
 8014318:	eea5 7aa7 	vfma.f32	s14, s11, s15
 801431c:	ee66 6a86 	vmul.f32	s13, s13, s12
 8014320:	eef0 5a08 	vmov.f32	s11, #8	; 0x40400000  3.0
 8014324:	eef0 7a65 	vmov.f32	s15, s11
 8014328:	eee3 6a87 	vfma.f32	s13, s7, s14
 801432c:	eee5 7a05 	vfma.f32	s15, s10, s10
 8014330:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8014334:	ee17 1a90 	vmov	r1, s15
 8014338:	4011      	ands	r1, r2
 801433a:	ee07 1a90 	vmov	s15, r1
 801433e:	ee37 7ae5 	vsub.f32	s14, s15, s11
 8014342:	eddf 5a36 	vldr	s11, [pc, #216]	; 801441c <__ieee754_powf+0x3f0>
 8014346:	eea4 7a05 	vfma.f32	s14, s8, s10
 801434a:	ee36 7ac7 	vsub.f32	s14, s13, s14
 801434e:	ee27 7a24 	vmul.f32	s14, s14, s9
 8014352:	eea7 7a86 	vfma.f32	s14, s15, s12
 8014356:	eeb0 6a47 	vmov.f32	s12, s14
 801435a:	eea5 6a27 	vfma.f32	s12, s10, s15
 801435e:	ee16 1a10 	vmov	r1, s12
 8014362:	4011      	ands	r1, r2
 8014364:	ee06 1a90 	vmov	s13, r1
 8014368:	eee4 6a27 	vfma.f32	s13, s8, s15
 801436c:	eddf 7a2c 	vldr	s15, [pc, #176]	; 8014420 <__ieee754_powf+0x3f4>
 8014370:	ee37 7a66 	vsub.f32	s14, s14, s13
 8014374:	ee06 1a10 	vmov	s12, r1
 8014378:	ee27 7a27 	vmul.f32	s14, s14, s15
 801437c:	eddf 7a29 	vldr	s15, [pc, #164]	; 8014424 <__ieee754_powf+0x3f8>
 8014380:	4929      	ldr	r1, [pc, #164]	; (8014428 <__ieee754_powf+0x3fc>)
 8014382:	eea6 7a27 	vfma.f32	s14, s12, s15
 8014386:	4439      	add	r1, r7
 8014388:	edd1 7a00 	vldr	s15, [r1]
 801438c:	ee37 7a27 	vadd.f32	s14, s14, s15
 8014390:	ee07 3a90 	vmov	s15, r3
 8014394:	eef0 0a47 	vmov.f32	s1, s14
 8014398:	4b24      	ldr	r3, [pc, #144]	; (801442c <__ieee754_powf+0x400>)
 801439a:	eee6 0a25 	vfma.f32	s1, s12, s11
 801439e:	443b      	add	r3, r7
 80143a0:	ed93 5a00 	vldr	s10, [r3]
 80143a4:	eef8 6ae7 	vcvt.f32.s32	s13, s15
 80143a8:	ee70 0a85 	vadd.f32	s1, s1, s10
 80143ac:	ee70 7aa6 	vadd.f32	s15, s1, s13
 80143b0:	ee17 3a90 	vmov	r3, s15
 80143b4:	4013      	ands	r3, r2
 80143b6:	ee07 3a90 	vmov	s15, r3
 80143ba:	ee77 7ae6 	vsub.f32	s15, s15, s13
 80143be:	ee77 7ac5 	vsub.f32	s15, s15, s10
 80143c2:	eee6 7a65 	vfms.f32	s15, s12, s11
 80143c6:	ee77 7a67 	vsub.f32	s15, s14, s15
 80143ca:	e70e      	b.n	80141ea <__ieee754_powf+0x1be>
 80143cc:	2401      	movs	r4, #1
 80143ce:	e75c      	b.n	801428a <__ieee754_powf+0x25e>
 80143d0:	08016409 	.word	0x08016409
 80143d4:	00000000 	.word	0x00000000
 80143d8:	3f7ffff7 	.word	0x3f7ffff7
 80143dc:	7149f2ca 	.word	0x7149f2ca
 80143e0:	3f800007 	.word	0x3f800007
 80143e4:	3eaaaaab 	.word	0x3eaaaaab
 80143e8:	36eca570 	.word	0x36eca570
 80143ec:	3fb8aa3b 	.word	0x3fb8aa3b
 80143f0:	3fb8aa00 	.word	0x3fb8aa00
 80143f4:	4b800000 	.word	0x4b800000
 80143f8:	001cc471 	.word	0x001cc471
 80143fc:	005db3d6 	.word	0x005db3d6
 8014400:	080167d8 	.word	0x080167d8
 8014404:	fffff000 	.word	0xfffff000
 8014408:	3e6c3255 	.word	0x3e6c3255
 801440c:	3e53f142 	.word	0x3e53f142
 8014410:	3e8ba305 	.word	0x3e8ba305
 8014414:	3edb6db7 	.word	0x3edb6db7
 8014418:	3f19999a 	.word	0x3f19999a
 801441c:	3f763800 	.word	0x3f763800
 8014420:	3f76384f 	.word	0x3f76384f
 8014424:	369dc3a0 	.word	0x369dc3a0
 8014428:	080167e8 	.word	0x080167e8
 801442c:	080167e0 	.word	0x080167e0
 8014430:	3338aa3c 	.word	0x3338aa3c
 8014434:	f040 8092 	bne.w	801455c <__ieee754_powf+0x530>
 8014438:	ed5f 6a03 	vldr	s13, [pc, #-12]	; 8014430 <__ieee754_powf+0x404>
 801443c:	ee37 7a67 	vsub.f32	s14, s14, s15
 8014440:	ee70 6aa6 	vadd.f32	s13, s1, s13
 8014444:	eef4 6ac7 	vcmpe.f32	s13, s14
 8014448:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801444c:	f73f aef6 	bgt.w	801423c <__ieee754_powf+0x210>
 8014450:	15db      	asrs	r3, r3, #23
 8014452:	f1a3 007e 	sub.w	r0, r3, #126	; 0x7e
 8014456:	f44f 0300 	mov.w	r3, #8388608	; 0x800000
 801445a:	4103      	asrs	r3, r0
 801445c:	4423      	add	r3, r4
 801445e:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 8014462:	4947      	ldr	r1, [pc, #284]	; (8014580 <__ieee754_powf+0x554>)
 8014464:	3a7f      	subs	r2, #127	; 0x7f
 8014466:	4111      	asrs	r1, r2
 8014468:	ea23 0101 	bic.w	r1, r3, r1
 801446c:	f3c3 0016 	ubfx	r0, r3, #0, #23
 8014470:	ee07 1a10 	vmov	s14, r1
 8014474:	f440 0000 	orr.w	r0, r0, #8388608	; 0x800000
 8014478:	f1c2 0217 	rsb	r2, r2, #23
 801447c:	4110      	asrs	r0, r2
 801447e:	2c00      	cmp	r4, #0
 8014480:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014484:	bfb8      	it	lt
 8014486:	4240      	neglt	r0, r0
 8014488:	ee37 7aa0 	vadd.f32	s14, s15, s1
 801448c:	eddf 6a3d 	vldr	s13, [pc, #244]	; 8014584 <__ieee754_powf+0x558>
 8014490:	ee17 3a10 	vmov	r3, s14
 8014494:	f423 637f 	bic.w	r3, r3, #4080	; 0xff0
 8014498:	f023 030f 	bic.w	r3, r3, #15
 801449c:	ee07 3a10 	vmov	s14, r3
 80144a0:	ee77 7a67 	vsub.f32	s15, s14, s15
 80144a4:	ee70 0ae7 	vsub.f32	s1, s1, s15
 80144a8:	eddf 7a37 	vldr	s15, [pc, #220]	; 8014588 <__ieee754_powf+0x55c>
 80144ac:	ee67 7a27 	vmul.f32	s15, s14, s15
 80144b0:	eee0 7aa6 	vfma.f32	s15, s1, s13
 80144b4:	eddf 6a35 	vldr	s13, [pc, #212]	; 801458c <__ieee754_powf+0x560>
 80144b8:	eeb0 0a67 	vmov.f32	s0, s15
 80144bc:	eea7 0a26 	vfma.f32	s0, s14, s13
 80144c0:	eeb0 6a40 	vmov.f32	s12, s0
 80144c4:	eea7 6a66 	vfms.f32	s12, s14, s13
 80144c8:	ee20 7a00 	vmul.f32	s14, s0, s0
 80144cc:	ee77 7ac6 	vsub.f32	s15, s15, s12
 80144d0:	eddf 6a2f 	vldr	s13, [pc, #188]	; 8014590 <__ieee754_powf+0x564>
 80144d4:	ed9f 6a2f 	vldr	s12, [pc, #188]	; 8014594 <__ieee754_powf+0x568>
 80144d8:	eea7 6a26 	vfma.f32	s12, s14, s13
 80144dc:	eddf 6a2e 	vldr	s13, [pc, #184]	; 8014598 <__ieee754_powf+0x56c>
 80144e0:	eee6 6a07 	vfma.f32	s13, s12, s14
 80144e4:	ed9f 6a2d 	vldr	s12, [pc, #180]	; 801459c <__ieee754_powf+0x570>
 80144e8:	eea6 6a87 	vfma.f32	s12, s13, s14
 80144ec:	eddf 6a2c 	vldr	s13, [pc, #176]	; 80145a0 <__ieee754_powf+0x574>
 80144f0:	eee6 6a07 	vfma.f32	s13, s12, s14
 80144f4:	eeb0 6a40 	vmov.f32	s12, s0
 80144f8:	eea6 6ac7 	vfms.f32	s12, s13, s14
 80144fc:	eef0 6a00 	vmov.f32	s13, #0	; 0x40000000  2.0
 8014500:	eeb0 7a46 	vmov.f32	s14, s12
 8014504:	ee77 6a66 	vsub.f32	s13, s14, s13
 8014508:	ee20 6a06 	vmul.f32	s12, s0, s12
 801450c:	eee0 7a27 	vfma.f32	s15, s0, s15
 8014510:	ee86 7a26 	vdiv.f32	s14, s12, s13
 8014514:	ee77 7a67 	vsub.f32	s15, s14, s15
 8014518:	ee37 0ac0 	vsub.f32	s0, s15, s0
 801451c:	eef7 7a00 	vmov.f32	s15, #112	; 0x3f800000  1.0
 8014520:	ee37 0ac0 	vsub.f32	s0, s15, s0
 8014524:	ee10 3a10 	vmov	r3, s0
 8014528:	eb03 53c0 	add.w	r3, r3, r0, lsl #23
 801452c:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8014530:	da1a      	bge.n	8014568 <__ieee754_powf+0x53c>
 8014532:	f001 fd71 	bl	8016018 <scalbnf>
 8014536:	ee20 0a08 	vmul.f32	s0, s0, s16
 801453a:	e5c9      	b.n	80140d0 <__ieee754_powf+0xa4>
 801453c:	4a19      	ldr	r2, [pc, #100]	; (80145a4 <__ieee754_powf+0x578>)
 801453e:	4293      	cmp	r3, r2
 8014540:	dd02      	ble.n	8014548 <__ieee754_powf+0x51c>
 8014542:	eddf 7a19 	vldr	s15, [pc, #100]	; 80145a8 <__ieee754_powf+0x57c>
 8014546:	e67b      	b.n	8014240 <__ieee754_powf+0x214>
 8014548:	d108      	bne.n	801455c <__ieee754_powf+0x530>
 801454a:	ee37 7a67 	vsub.f32	s14, s14, s15
 801454e:	eeb4 7ae0 	vcmpe.f32	s14, s1
 8014552:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014556:	f6ff af7b 	blt.w	8014450 <__ieee754_powf+0x424>
 801455a:	e7f2      	b.n	8014542 <__ieee754_powf+0x516>
 801455c:	f1b3 5f7c 	cmp.w	r3, #1056964608	; 0x3f000000
 8014560:	f73f af76 	bgt.w	8014450 <__ieee754_powf+0x424>
 8014564:	2000      	movs	r0, #0
 8014566:	e78f      	b.n	8014488 <__ieee754_powf+0x45c>
 8014568:	ee00 3a10 	vmov	s0, r3
 801456c:	e7e3      	b.n	8014536 <__ieee754_powf+0x50a>
 801456e:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 8014572:	e5ad      	b.n	80140d0 <__ieee754_powf+0xa4>
 8014574:	eeb0 0a68 	vmov.f32	s0, s17
 8014578:	e5aa      	b.n	80140d0 <__ieee754_powf+0xa4>
 801457a:	eeb0 0a48 	vmov.f32	s0, s16
 801457e:	e5a7      	b.n	80140d0 <__ieee754_powf+0xa4>
 8014580:	007fffff 	.word	0x007fffff
 8014584:	3f317218 	.word	0x3f317218
 8014588:	35bfbe8c 	.word	0x35bfbe8c
 801458c:	3f317200 	.word	0x3f317200
 8014590:	3331bb4c 	.word	0x3331bb4c
 8014594:	b5ddea0e 	.word	0xb5ddea0e
 8014598:	388ab355 	.word	0x388ab355
 801459c:	bb360b61 	.word	0xbb360b61
 80145a0:	3e2aaaab 	.word	0x3e2aaaab
 80145a4:	43160000 	.word	0x43160000
 80145a8:	0da24260 	.word	0x0da24260

080145ac <__ieee754_rem_pio2f>:
 80145ac:	b5f0      	push	{r4, r5, r6, r7, lr}
 80145ae:	ee10 6a10 	vmov	r6, s0
 80145b2:	4b86      	ldr	r3, [pc, #536]	; (80147cc <__ieee754_rem_pio2f+0x220>)
 80145b4:	f026 4400 	bic.w	r4, r6, #2147483648	; 0x80000000
 80145b8:	429c      	cmp	r4, r3
 80145ba:	b087      	sub	sp, #28
 80145bc:	4605      	mov	r5, r0
 80145be:	dc05      	bgt.n	80145cc <__ieee754_rem_pio2f+0x20>
 80145c0:	2300      	movs	r3, #0
 80145c2:	ed85 0a00 	vstr	s0, [r5]
 80145c6:	6043      	str	r3, [r0, #4]
 80145c8:	2000      	movs	r0, #0
 80145ca:	e020      	b.n	801460e <__ieee754_rem_pio2f+0x62>
 80145cc:	4b80      	ldr	r3, [pc, #512]	; (80147d0 <__ieee754_rem_pio2f+0x224>)
 80145ce:	429c      	cmp	r4, r3
 80145d0:	dc38      	bgt.n	8014644 <__ieee754_rem_pio2f+0x98>
 80145d2:	2e00      	cmp	r6, #0
 80145d4:	f024 040f 	bic.w	r4, r4, #15
 80145d8:	ed9f 7a7e 	vldr	s14, [pc, #504]	; 80147d4 <__ieee754_rem_pio2f+0x228>
 80145dc:	4b7e      	ldr	r3, [pc, #504]	; (80147d8 <__ieee754_rem_pio2f+0x22c>)
 80145de:	dd18      	ble.n	8014612 <__ieee754_rem_pio2f+0x66>
 80145e0:	429c      	cmp	r4, r3
 80145e2:	ee70 7a47 	vsub.f32	s15, s0, s14
 80145e6:	bf09      	itett	eq
 80145e8:	ed9f 7a7c 	vldreq	s14, [pc, #496]	; 80147dc <__ieee754_rem_pio2f+0x230>
 80145ec:	ed9f 7a7c 	vldrne	s14, [pc, #496]	; 80147e0 <__ieee754_rem_pio2f+0x234>
 80145f0:	ee77 7ac7 	vsubeq.f32	s15, s15, s14
 80145f4:	ed9f 7a7b 	vldreq	s14, [pc, #492]	; 80147e4 <__ieee754_rem_pio2f+0x238>
 80145f8:	ee77 6ac7 	vsub.f32	s13, s15, s14
 80145fc:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014600:	edc0 6a00 	vstr	s13, [r0]
 8014604:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014608:	edc0 7a01 	vstr	s15, [r0, #4]
 801460c:	2001      	movs	r0, #1
 801460e:	b007      	add	sp, #28
 8014610:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8014612:	429c      	cmp	r4, r3
 8014614:	ee70 7a07 	vadd.f32	s15, s0, s14
 8014618:	bf09      	itett	eq
 801461a:	ed9f 7a70 	vldreq	s14, [pc, #448]	; 80147dc <__ieee754_rem_pio2f+0x230>
 801461e:	ed9f 7a70 	vldrne	s14, [pc, #448]	; 80147e0 <__ieee754_rem_pio2f+0x234>
 8014622:	ee77 7a87 	vaddeq.f32	s15, s15, s14
 8014626:	ed9f 7a6f 	vldreq	s14, [pc, #444]	; 80147e4 <__ieee754_rem_pio2f+0x238>
 801462a:	ee77 6a87 	vadd.f32	s13, s15, s14
 801462e:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8014632:	edc0 6a00 	vstr	s13, [r0]
 8014636:	ee77 7a87 	vadd.f32	s15, s15, s14
 801463a:	edc0 7a01 	vstr	s15, [r0, #4]
 801463e:	f04f 30ff 	mov.w	r0, #4294967295
 8014642:	e7e4      	b.n	801460e <__ieee754_rem_pio2f+0x62>
 8014644:	4b68      	ldr	r3, [pc, #416]	; (80147e8 <__ieee754_rem_pio2f+0x23c>)
 8014646:	429c      	cmp	r4, r3
 8014648:	dc71      	bgt.n	801472e <__ieee754_rem_pio2f+0x182>
 801464a:	f001 fc37 	bl	8015ebc <fabsf>
 801464e:	ed9f 7a67 	vldr	s14, [pc, #412]	; 80147ec <__ieee754_rem_pio2f+0x240>
 8014652:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 8014656:	eee0 7a07 	vfma.f32	s15, s0, s14
 801465a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801465e:	eeb8 6ae7 	vcvt.f32.s32	s12, s15
 8014662:	ee17 0a90 	vmov	r0, s15
 8014666:	eddf 7a5b 	vldr	s15, [pc, #364]	; 80147d4 <__ieee754_rem_pio2f+0x228>
 801466a:	eeb1 7a46 	vneg.f32	s14, s12
 801466e:	eea7 0a27 	vfma.f32	s0, s14, s15
 8014672:	281f      	cmp	r0, #31
 8014674:	eddf 7a5a 	vldr	s15, [pc, #360]	; 80147e0 <__ieee754_rem_pio2f+0x234>
 8014678:	ee66 7a27 	vmul.f32	s15, s12, s15
 801467c:	ee70 6a67 	vsub.f32	s13, s0, s15
 8014680:	ee16 3a90 	vmov	r3, s13
 8014684:	dc1c      	bgt.n	80146c0 <__ieee754_rem_pio2f+0x114>
 8014686:	1e47      	subs	r7, r0, #1
 8014688:	4959      	ldr	r1, [pc, #356]	; (80147f0 <__ieee754_rem_pio2f+0x244>)
 801468a:	f851 1027 	ldr.w	r1, [r1, r7, lsl #2]
 801468e:	f024 02ff 	bic.w	r2, r4, #255	; 0xff
 8014692:	428a      	cmp	r2, r1
 8014694:	d014      	beq.n	80146c0 <__ieee754_rem_pio2f+0x114>
 8014696:	602b      	str	r3, [r5, #0]
 8014698:	ed95 7a00 	vldr	s14, [r5]
 801469c:	ee30 0a47 	vsub.f32	s0, s0, s14
 80146a0:	2e00      	cmp	r6, #0
 80146a2:	ee30 0a67 	vsub.f32	s0, s0, s15
 80146a6:	ed85 0a01 	vstr	s0, [r5, #4]
 80146aa:	dab0      	bge.n	801460e <__ieee754_rem_pio2f+0x62>
 80146ac:	eeb1 7a47 	vneg.f32	s14, s14
 80146b0:	eeb1 0a40 	vneg.f32	s0, s0
 80146b4:	ed85 7a00 	vstr	s14, [r5]
 80146b8:	ed85 0a01 	vstr	s0, [r5, #4]
 80146bc:	4240      	negs	r0, r0
 80146be:	e7a6      	b.n	801460e <__ieee754_rem_pio2f+0x62>
 80146c0:	15e4      	asrs	r4, r4, #23
 80146c2:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80146c6:	1aa2      	subs	r2, r4, r2
 80146c8:	2a08      	cmp	r2, #8
 80146ca:	dde4      	ble.n	8014696 <__ieee754_rem_pio2f+0xea>
 80146cc:	eddf 7a43 	vldr	s15, [pc, #268]	; 80147dc <__ieee754_rem_pio2f+0x230>
 80146d0:	eef0 6a40 	vmov.f32	s13, s0
 80146d4:	eee7 6a27 	vfma.f32	s13, s14, s15
 80146d8:	ee30 0a66 	vsub.f32	s0, s0, s13
 80146dc:	eea7 0a27 	vfma.f32	s0, s14, s15
 80146e0:	eddf 7a40 	vldr	s15, [pc, #256]	; 80147e4 <__ieee754_rem_pio2f+0x238>
 80146e4:	ee96 0a27 	vfnms.f32	s0, s12, s15
 80146e8:	ee76 5ac0 	vsub.f32	s11, s13, s0
 80146ec:	eef0 7a40 	vmov.f32	s15, s0
 80146f0:	ee15 3a90 	vmov	r3, s11
 80146f4:	f3c3 52c7 	ubfx	r2, r3, #23, #8
 80146f8:	1aa4      	subs	r4, r4, r2
 80146fa:	2c19      	cmp	r4, #25
 80146fc:	dc04      	bgt.n	8014708 <__ieee754_rem_pio2f+0x15c>
 80146fe:	edc5 5a00 	vstr	s11, [r5]
 8014702:	eeb0 0a66 	vmov.f32	s0, s13
 8014706:	e7c7      	b.n	8014698 <__ieee754_rem_pio2f+0xec>
 8014708:	eddf 5a3a 	vldr	s11, [pc, #232]	; 80147f4 <__ieee754_rem_pio2f+0x248>
 801470c:	eeb0 0a66 	vmov.f32	s0, s13
 8014710:	eea7 0a25 	vfma.f32	s0, s14, s11
 8014714:	ee76 7ac0 	vsub.f32	s15, s13, s0
 8014718:	eee7 7a25 	vfma.f32	s15, s14, s11
 801471c:	ed9f 7a36 	vldr	s14, [pc, #216]	; 80147f8 <__ieee754_rem_pio2f+0x24c>
 8014720:	eed6 7a07 	vfnms.f32	s15, s12, s14
 8014724:	ee30 7a67 	vsub.f32	s14, s0, s15
 8014728:	ed85 7a00 	vstr	s14, [r5]
 801472c:	e7b4      	b.n	8014698 <__ieee754_rem_pio2f+0xec>
 801472e:	f1b4 4fff 	cmp.w	r4, #2139095040	; 0x7f800000
 8014732:	db06      	blt.n	8014742 <__ieee754_rem_pio2f+0x196>
 8014734:	ee70 7a40 	vsub.f32	s15, s0, s0
 8014738:	edc0 7a01 	vstr	s15, [r0, #4]
 801473c:	edc0 7a00 	vstr	s15, [r0]
 8014740:	e742      	b.n	80145c8 <__ieee754_rem_pio2f+0x1c>
 8014742:	15e2      	asrs	r2, r4, #23
 8014744:	3a86      	subs	r2, #134	; 0x86
 8014746:	eba4 53c2 	sub.w	r3, r4, r2, lsl #23
 801474a:	ee07 3a90 	vmov	s15, r3
 801474e:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 8014752:	eddf 6a2a 	vldr	s13, [pc, #168]	; 80147fc <__ieee754_rem_pio2f+0x250>
 8014756:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801475a:	ee77 7ac7 	vsub.f32	s15, s15, s14
 801475e:	ed8d 7a03 	vstr	s14, [sp, #12]
 8014762:	ee67 7aa6 	vmul.f32	s15, s15, s13
 8014766:	eebd 7ae7 	vcvt.s32.f32	s14, s15
 801476a:	eeb8 7ac7 	vcvt.f32.s32	s14, s14
 801476e:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8014772:	ed8d 7a04 	vstr	s14, [sp, #16]
 8014776:	ee67 7aa6 	vmul.f32	s15, s15, s13
 801477a:	eef5 7a40 	vcmp.f32	s15, #0.0
 801477e:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014782:	edcd 7a05 	vstr	s15, [sp, #20]
 8014786:	d11e      	bne.n	80147c6 <__ieee754_rem_pio2f+0x21a>
 8014788:	eeb5 7a40 	vcmp.f32	s14, #0.0
 801478c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8014790:	bf0c      	ite	eq
 8014792:	2301      	moveq	r3, #1
 8014794:	2302      	movne	r3, #2
 8014796:	491a      	ldr	r1, [pc, #104]	; (8014800 <__ieee754_rem_pio2f+0x254>)
 8014798:	9101      	str	r1, [sp, #4]
 801479a:	2102      	movs	r1, #2
 801479c:	9100      	str	r1, [sp, #0]
 801479e:	a803      	add	r0, sp, #12
 80147a0:	4629      	mov	r1, r5
 80147a2:	f000 ff23 	bl	80155ec <__kernel_rem_pio2f>
 80147a6:	2e00      	cmp	r6, #0
 80147a8:	f6bf af31 	bge.w	801460e <__ieee754_rem_pio2f+0x62>
 80147ac:	edd5 7a00 	vldr	s15, [r5]
 80147b0:	eef1 7a67 	vneg.f32	s15, s15
 80147b4:	edc5 7a00 	vstr	s15, [r5]
 80147b8:	edd5 7a01 	vldr	s15, [r5, #4]
 80147bc:	eef1 7a67 	vneg.f32	s15, s15
 80147c0:	edc5 7a01 	vstr	s15, [r5, #4]
 80147c4:	e77a      	b.n	80146bc <__ieee754_rem_pio2f+0x110>
 80147c6:	2303      	movs	r3, #3
 80147c8:	e7e5      	b.n	8014796 <__ieee754_rem_pio2f+0x1ea>
 80147ca:	bf00      	nop
 80147cc:	3f490fd8 	.word	0x3f490fd8
 80147d0:	4016cbe3 	.word	0x4016cbe3
 80147d4:	3fc90f80 	.word	0x3fc90f80
 80147d8:	3fc90fd0 	.word	0x3fc90fd0
 80147dc:	37354400 	.word	0x37354400
 80147e0:	37354443 	.word	0x37354443
 80147e4:	2e85a308 	.word	0x2e85a308
 80147e8:	43490f80 	.word	0x43490f80
 80147ec:	3f22f984 	.word	0x3f22f984
 80147f0:	080167f0 	.word	0x080167f0
 80147f4:	2e85a300 	.word	0x2e85a300
 80147f8:	248d3132 	.word	0x248d3132
 80147fc:	43800000 	.word	0x43800000
 8014800:	08016870 	.word	0x08016870

08014804 <__ieee754_sqrtf>:
 8014804:	eeb1 0ac0 	vsqrt.f32	s0, s0
 8014808:	4770      	bx	lr
 801480a:	0000      	movs	r0, r0
 801480c:	0000      	movs	r0, r0
	...

08014810 <__kernel_cos>:
 8014810:	e92d 4ff8 	stmdb	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8014814:	ec59 8b10 	vmov	r8, r9, d0
 8014818:	f029 4600 	bic.w	r6, r9, #2147483648	; 0x80000000
 801481c:	f1b6 5f79 	cmp.w	r6, #1044381696	; 0x3e400000
 8014820:	ed2d 8b02 	vpush	{d8}
 8014824:	eeb0 8a41 	vmov.f32	s16, s2
 8014828:	eef0 8a61 	vmov.f32	s17, s3
 801482c:	da07      	bge.n	801483e <__kernel_cos+0x2e>
 801482e:	ee10 0a10 	vmov	r0, s0
 8014832:	4649      	mov	r1, r9
 8014834:	f7ec f962 	bl	8000afc <__aeabi_d2iz>
 8014838:	2800      	cmp	r0, #0
 801483a:	f000 8089 	beq.w	8014950 <__kernel_cos+0x140>
 801483e:	4642      	mov	r2, r8
 8014840:	464b      	mov	r3, r9
 8014842:	4640      	mov	r0, r8
 8014844:	4649      	mov	r1, r9
 8014846:	f7eb fea9 	bl	800059c <__aeabi_dmul>
 801484a:	2200      	movs	r2, #0
 801484c:	4b4e      	ldr	r3, [pc, #312]	; (8014988 <__kernel_cos+0x178>)
 801484e:	4604      	mov	r4, r0
 8014850:	460d      	mov	r5, r1
 8014852:	f7eb fea3 	bl	800059c <__aeabi_dmul>
 8014856:	a340      	add	r3, pc, #256	; (adr r3, 8014958 <__kernel_cos+0x148>)
 8014858:	e9d3 2300 	ldrd	r2, r3, [r3]
 801485c:	4682      	mov	sl, r0
 801485e:	468b      	mov	fp, r1
 8014860:	4620      	mov	r0, r4
 8014862:	4629      	mov	r1, r5
 8014864:	f7eb fe9a 	bl	800059c <__aeabi_dmul>
 8014868:	a33d      	add	r3, pc, #244	; (adr r3, 8014960 <__kernel_cos+0x150>)
 801486a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801486e:	f7eb fcdf 	bl	8000230 <__adddf3>
 8014872:	4622      	mov	r2, r4
 8014874:	462b      	mov	r3, r5
 8014876:	f7eb fe91 	bl	800059c <__aeabi_dmul>
 801487a:	a33b      	add	r3, pc, #236	; (adr r3, 8014968 <__kernel_cos+0x158>)
 801487c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014880:	f7eb fcd4 	bl	800022c <__aeabi_dsub>
 8014884:	4622      	mov	r2, r4
 8014886:	462b      	mov	r3, r5
 8014888:	f7eb fe88 	bl	800059c <__aeabi_dmul>
 801488c:	a338      	add	r3, pc, #224	; (adr r3, 8014970 <__kernel_cos+0x160>)
 801488e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014892:	f7eb fccd 	bl	8000230 <__adddf3>
 8014896:	4622      	mov	r2, r4
 8014898:	462b      	mov	r3, r5
 801489a:	f7eb fe7f 	bl	800059c <__aeabi_dmul>
 801489e:	a336      	add	r3, pc, #216	; (adr r3, 8014978 <__kernel_cos+0x168>)
 80148a0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80148a4:	f7eb fcc2 	bl	800022c <__aeabi_dsub>
 80148a8:	4622      	mov	r2, r4
 80148aa:	462b      	mov	r3, r5
 80148ac:	f7eb fe76 	bl	800059c <__aeabi_dmul>
 80148b0:	a333      	add	r3, pc, #204	; (adr r3, 8014980 <__kernel_cos+0x170>)
 80148b2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80148b6:	f7eb fcbb 	bl	8000230 <__adddf3>
 80148ba:	4622      	mov	r2, r4
 80148bc:	462b      	mov	r3, r5
 80148be:	f7eb fe6d 	bl	800059c <__aeabi_dmul>
 80148c2:	4622      	mov	r2, r4
 80148c4:	462b      	mov	r3, r5
 80148c6:	f7eb fe69 	bl	800059c <__aeabi_dmul>
 80148ca:	ec53 2b18 	vmov	r2, r3, d8
 80148ce:	4604      	mov	r4, r0
 80148d0:	460d      	mov	r5, r1
 80148d2:	4640      	mov	r0, r8
 80148d4:	4649      	mov	r1, r9
 80148d6:	f7eb fe61 	bl	800059c <__aeabi_dmul>
 80148da:	460b      	mov	r3, r1
 80148dc:	4602      	mov	r2, r0
 80148de:	4629      	mov	r1, r5
 80148e0:	4620      	mov	r0, r4
 80148e2:	f7eb fca3 	bl	800022c <__aeabi_dsub>
 80148e6:	4b29      	ldr	r3, [pc, #164]	; (801498c <__kernel_cos+0x17c>)
 80148e8:	429e      	cmp	r6, r3
 80148ea:	4680      	mov	r8, r0
 80148ec:	4689      	mov	r9, r1
 80148ee:	dc11      	bgt.n	8014914 <__kernel_cos+0x104>
 80148f0:	4602      	mov	r2, r0
 80148f2:	460b      	mov	r3, r1
 80148f4:	4650      	mov	r0, sl
 80148f6:	4659      	mov	r1, fp
 80148f8:	f7eb fc98 	bl	800022c <__aeabi_dsub>
 80148fc:	460b      	mov	r3, r1
 80148fe:	4924      	ldr	r1, [pc, #144]	; (8014990 <__kernel_cos+0x180>)
 8014900:	4602      	mov	r2, r0
 8014902:	2000      	movs	r0, #0
 8014904:	f7eb fc92 	bl	800022c <__aeabi_dsub>
 8014908:	ecbd 8b02 	vpop	{d8}
 801490c:	ec41 0b10 	vmov	d0, r0, r1
 8014910:	e8bd 8ff8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014914:	4b1f      	ldr	r3, [pc, #124]	; (8014994 <__kernel_cos+0x184>)
 8014916:	491e      	ldr	r1, [pc, #120]	; (8014990 <__kernel_cos+0x180>)
 8014918:	429e      	cmp	r6, r3
 801491a:	bfcc      	ite	gt
 801491c:	4d1e      	ldrgt	r5, [pc, #120]	; (8014998 <__kernel_cos+0x188>)
 801491e:	f5a6 1500 	suble.w	r5, r6, #2097152	; 0x200000
 8014922:	2400      	movs	r4, #0
 8014924:	4622      	mov	r2, r4
 8014926:	462b      	mov	r3, r5
 8014928:	2000      	movs	r0, #0
 801492a:	f7eb fc7f 	bl	800022c <__aeabi_dsub>
 801492e:	4622      	mov	r2, r4
 8014930:	4606      	mov	r6, r0
 8014932:	460f      	mov	r7, r1
 8014934:	462b      	mov	r3, r5
 8014936:	4650      	mov	r0, sl
 8014938:	4659      	mov	r1, fp
 801493a:	f7eb fc77 	bl	800022c <__aeabi_dsub>
 801493e:	4642      	mov	r2, r8
 8014940:	464b      	mov	r3, r9
 8014942:	f7eb fc73 	bl	800022c <__aeabi_dsub>
 8014946:	4602      	mov	r2, r0
 8014948:	460b      	mov	r3, r1
 801494a:	4630      	mov	r0, r6
 801494c:	4639      	mov	r1, r7
 801494e:	e7d9      	b.n	8014904 <__kernel_cos+0xf4>
 8014950:	2000      	movs	r0, #0
 8014952:	490f      	ldr	r1, [pc, #60]	; (8014990 <__kernel_cos+0x180>)
 8014954:	e7d8      	b.n	8014908 <__kernel_cos+0xf8>
 8014956:	bf00      	nop
 8014958:	be8838d4 	.word	0xbe8838d4
 801495c:	bda8fae9 	.word	0xbda8fae9
 8014960:	bdb4b1c4 	.word	0xbdb4b1c4
 8014964:	3e21ee9e 	.word	0x3e21ee9e
 8014968:	809c52ad 	.word	0x809c52ad
 801496c:	3e927e4f 	.word	0x3e927e4f
 8014970:	19cb1590 	.word	0x19cb1590
 8014974:	3efa01a0 	.word	0x3efa01a0
 8014978:	16c15177 	.word	0x16c15177
 801497c:	3f56c16c 	.word	0x3f56c16c
 8014980:	5555554c 	.word	0x5555554c
 8014984:	3fa55555 	.word	0x3fa55555
 8014988:	3fe00000 	.word	0x3fe00000
 801498c:	3fd33332 	.word	0x3fd33332
 8014990:	3ff00000 	.word	0x3ff00000
 8014994:	3fe90000 	.word	0x3fe90000
 8014998:	3fd20000 	.word	0x3fd20000
 801499c:	00000000 	.word	0x00000000

080149a0 <__kernel_rem_pio2>:
 80149a0:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80149a4:	ed2d 8b02 	vpush	{d8}
 80149a8:	f5ad 7d1b 	sub.w	sp, sp, #620	; 0x26c
 80149ac:	1ed4      	subs	r4, r2, #3
 80149ae:	9308      	str	r3, [sp, #32]
 80149b0:	9101      	str	r1, [sp, #4]
 80149b2:	4bc5      	ldr	r3, [pc, #788]	; (8014cc8 <__kernel_rem_pio2+0x328>)
 80149b4:	99a6      	ldr	r1, [sp, #664]	; 0x298
 80149b6:	9009      	str	r0, [sp, #36]	; 0x24
 80149b8:	f853 3021 	ldr.w	r3, [r3, r1, lsl #2]
 80149bc:	9304      	str	r3, [sp, #16]
 80149be:	9b08      	ldr	r3, [sp, #32]
 80149c0:	3b01      	subs	r3, #1
 80149c2:	9307      	str	r3, [sp, #28]
 80149c4:	2318      	movs	r3, #24
 80149c6:	fb94 f4f3 	sdiv	r4, r4, r3
 80149ca:	f06f 0317 	mvn.w	r3, #23
 80149ce:	ea24 74e4 	bic.w	r4, r4, r4, asr #31
 80149d2:	fb04 3303 	mla	r3, r4, r3, r3
 80149d6:	eb03 0a02 	add.w	sl, r3, r2
 80149da:	9b04      	ldr	r3, [sp, #16]
 80149dc:	9a07      	ldr	r2, [sp, #28]
 80149de:	ed9f 8bb6 	vldr	d8, [pc, #728]	; 8014cb8 <__kernel_rem_pio2+0x318>
 80149e2:	eb03 0802 	add.w	r8, r3, r2
 80149e6:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 80149e8:	1aa7      	subs	r7, r4, r2
 80149ea:	eb03 0987 	add.w	r9, r3, r7, lsl #2
 80149ee:	ae22      	add	r6, sp, #136	; 0x88
 80149f0:	2500      	movs	r5, #0
 80149f2:	4545      	cmp	r5, r8
 80149f4:	dd13      	ble.n	8014a1e <__kernel_rem_pio2+0x7e>
 80149f6:	ed9f 8bb0 	vldr	d8, [pc, #704]	; 8014cb8 <__kernel_rem_pio2+0x318>
 80149fa:	f50d 7be4 	add.w	fp, sp, #456	; 0x1c8
 80149fe:	2600      	movs	r6, #0
 8014a00:	9b04      	ldr	r3, [sp, #16]
 8014a02:	429e      	cmp	r6, r3
 8014a04:	dc32      	bgt.n	8014a6c <__kernel_rem_pio2+0xcc>
 8014a06:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014a08:	9302      	str	r3, [sp, #8]
 8014a0a:	9b08      	ldr	r3, [sp, #32]
 8014a0c:	199d      	adds	r5, r3, r6
 8014a0e:	ab22      	add	r3, sp, #136	; 0x88
 8014a10:	eb03 03c5 	add.w	r3, r3, r5, lsl #3
 8014a14:	9306      	str	r3, [sp, #24]
 8014a16:	ec59 8b18 	vmov	r8, r9, d8
 8014a1a:	2700      	movs	r7, #0
 8014a1c:	e01f      	b.n	8014a5e <__kernel_rem_pio2+0xbe>
 8014a1e:	42ef      	cmn	r7, r5
 8014a20:	d407      	bmi.n	8014a32 <__kernel_rem_pio2+0x92>
 8014a22:	f859 0025 	ldr.w	r0, [r9, r5, lsl #2]
 8014a26:	f7eb fd4f 	bl	80004c8 <__aeabi_i2d>
 8014a2a:	e8e6 0102 	strd	r0, r1, [r6], #8
 8014a2e:	3501      	adds	r5, #1
 8014a30:	e7df      	b.n	80149f2 <__kernel_rem_pio2+0x52>
 8014a32:	ec51 0b18 	vmov	r0, r1, d8
 8014a36:	e7f8      	b.n	8014a2a <__kernel_rem_pio2+0x8a>
 8014a38:	9906      	ldr	r1, [sp, #24]
 8014a3a:	9d02      	ldr	r5, [sp, #8]
 8014a3c:	e971 2302 	ldrd	r2, r3, [r1, #-8]!
 8014a40:	9106      	str	r1, [sp, #24]
 8014a42:	e8f5 0102 	ldrd	r0, r1, [r5], #8
 8014a46:	9502      	str	r5, [sp, #8]
 8014a48:	f7eb fda8 	bl	800059c <__aeabi_dmul>
 8014a4c:	4602      	mov	r2, r0
 8014a4e:	460b      	mov	r3, r1
 8014a50:	4640      	mov	r0, r8
 8014a52:	4649      	mov	r1, r9
 8014a54:	f7eb fbec 	bl	8000230 <__adddf3>
 8014a58:	3701      	adds	r7, #1
 8014a5a:	4680      	mov	r8, r0
 8014a5c:	4689      	mov	r9, r1
 8014a5e:	9b07      	ldr	r3, [sp, #28]
 8014a60:	429f      	cmp	r7, r3
 8014a62:	dde9      	ble.n	8014a38 <__kernel_rem_pio2+0x98>
 8014a64:	e8eb 8902 	strd	r8, r9, [fp], #8
 8014a68:	3601      	adds	r6, #1
 8014a6a:	e7c9      	b.n	8014a00 <__kernel_rem_pio2+0x60>
 8014a6c:	9b04      	ldr	r3, [sp, #16]
 8014a6e:	aa0e      	add	r2, sp, #56	; 0x38
 8014a70:	eb02 0383 	add.w	r3, r2, r3, lsl #2
 8014a74:	930c      	str	r3, [sp, #48]	; 0x30
 8014a76:	9ba7      	ldr	r3, [sp, #668]	; 0x29c
 8014a78:	eb03 0384 	add.w	r3, r3, r4, lsl #2
 8014a7c:	9c04      	ldr	r4, [sp, #16]
 8014a7e:	930b      	str	r3, [sp, #44]	; 0x2c
 8014a80:	ab9a      	add	r3, sp, #616	; 0x268
 8014a82:	f104 5b00 	add.w	fp, r4, #536870912	; 0x20000000
 8014a86:	eb03 03c4 	add.w	r3, r3, r4, lsl #3
 8014a8a:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014a8e:	e953 8928 	ldrd	r8, r9, [r3, #-160]	; 0xa0
 8014a92:	ea4f 0bcb 	mov.w	fp, fp, lsl #3
 8014a96:	ab9a      	add	r3, sp, #616	; 0x268
 8014a98:	445b      	add	r3, fp
 8014a9a:	f1a3 0698 	sub.w	r6, r3, #152	; 0x98
 8014a9e:	2500      	movs	r5, #0
 8014aa0:	1b63      	subs	r3, r4, r5
 8014aa2:	2b00      	cmp	r3, #0
 8014aa4:	dc78      	bgt.n	8014b98 <__kernel_rem_pio2+0x1f8>
 8014aa6:	4650      	mov	r0, sl
 8014aa8:	ec49 8b10 	vmov	d0, r8, r9
 8014aac:	f001 f990 	bl	8015dd0 <scalbn>
 8014ab0:	ec57 6b10 	vmov	r6, r7, d0
 8014ab4:	2200      	movs	r2, #0
 8014ab6:	f04f 537f 	mov.w	r3, #1069547520	; 0x3fc00000
 8014aba:	ee10 0a10 	vmov	r0, s0
 8014abe:	4639      	mov	r1, r7
 8014ac0:	f7eb fd6c 	bl	800059c <__aeabi_dmul>
 8014ac4:	ec41 0b10 	vmov	d0, r0, r1
 8014ac8:	f001 f86e 	bl	8015ba8 <floor>
 8014acc:	2200      	movs	r2, #0
 8014ace:	ec51 0b10 	vmov	r0, r1, d0
 8014ad2:	4b7e      	ldr	r3, [pc, #504]	; (8014ccc <__kernel_rem_pio2+0x32c>)
 8014ad4:	f7eb fd62 	bl	800059c <__aeabi_dmul>
 8014ad8:	4602      	mov	r2, r0
 8014ada:	460b      	mov	r3, r1
 8014adc:	4630      	mov	r0, r6
 8014ade:	4639      	mov	r1, r7
 8014ae0:	f7eb fba4 	bl	800022c <__aeabi_dsub>
 8014ae4:	460f      	mov	r7, r1
 8014ae6:	4606      	mov	r6, r0
 8014ae8:	f7ec f808 	bl	8000afc <__aeabi_d2iz>
 8014aec:	9006      	str	r0, [sp, #24]
 8014aee:	f7eb fceb 	bl	80004c8 <__aeabi_i2d>
 8014af2:	4602      	mov	r2, r0
 8014af4:	460b      	mov	r3, r1
 8014af6:	4630      	mov	r0, r6
 8014af8:	4639      	mov	r1, r7
 8014afa:	f7eb fb97 	bl	800022c <__aeabi_dsub>
 8014afe:	f1ba 0f00 	cmp.w	sl, #0
 8014b02:	4606      	mov	r6, r0
 8014b04:	460f      	mov	r7, r1
 8014b06:	dd6c      	ble.n	8014be2 <__kernel_rem_pio2+0x242>
 8014b08:	1e62      	subs	r2, r4, #1
 8014b0a:	ab0e      	add	r3, sp, #56	; 0x38
 8014b0c:	f1ca 0118 	rsb	r1, sl, #24
 8014b10:	f853 0022 	ldr.w	r0, [r3, r2, lsl #2]
 8014b14:	9d06      	ldr	r5, [sp, #24]
 8014b16:	fa40 f301 	asr.w	r3, r0, r1
 8014b1a:	441d      	add	r5, r3
 8014b1c:	408b      	lsls	r3, r1
 8014b1e:	1ac0      	subs	r0, r0, r3
 8014b20:	ab0e      	add	r3, sp, #56	; 0x38
 8014b22:	9506      	str	r5, [sp, #24]
 8014b24:	f843 0022 	str.w	r0, [r3, r2, lsl #2]
 8014b28:	f1ca 0317 	rsb	r3, sl, #23
 8014b2c:	fa40 f303 	asr.w	r3, r0, r3
 8014b30:	9302      	str	r3, [sp, #8]
 8014b32:	9b02      	ldr	r3, [sp, #8]
 8014b34:	2b00      	cmp	r3, #0
 8014b36:	dd62      	ble.n	8014bfe <__kernel_rem_pio2+0x25e>
 8014b38:	9b06      	ldr	r3, [sp, #24]
 8014b3a:	2200      	movs	r2, #0
 8014b3c:	3301      	adds	r3, #1
 8014b3e:	9306      	str	r3, [sp, #24]
 8014b40:	4615      	mov	r5, r2
 8014b42:	f06f 417f 	mvn.w	r1, #4278190080	; 0xff000000
 8014b46:	4294      	cmp	r4, r2
 8014b48:	f300 8095 	bgt.w	8014c76 <__kernel_rem_pio2+0x2d6>
 8014b4c:	f1ba 0f00 	cmp.w	sl, #0
 8014b50:	dd07      	ble.n	8014b62 <__kernel_rem_pio2+0x1c2>
 8014b52:	f1ba 0f01 	cmp.w	sl, #1
 8014b56:	f000 80a2 	beq.w	8014c9e <__kernel_rem_pio2+0x2fe>
 8014b5a:	f1ba 0f02 	cmp.w	sl, #2
 8014b5e:	f000 80c1 	beq.w	8014ce4 <__kernel_rem_pio2+0x344>
 8014b62:	9b02      	ldr	r3, [sp, #8]
 8014b64:	2b02      	cmp	r3, #2
 8014b66:	d14a      	bne.n	8014bfe <__kernel_rem_pio2+0x25e>
 8014b68:	4632      	mov	r2, r6
 8014b6a:	463b      	mov	r3, r7
 8014b6c:	2000      	movs	r0, #0
 8014b6e:	4958      	ldr	r1, [pc, #352]	; (8014cd0 <__kernel_rem_pio2+0x330>)
 8014b70:	f7eb fb5c 	bl	800022c <__aeabi_dsub>
 8014b74:	4606      	mov	r6, r0
 8014b76:	460f      	mov	r7, r1
 8014b78:	2d00      	cmp	r5, #0
 8014b7a:	d040      	beq.n	8014bfe <__kernel_rem_pio2+0x25e>
 8014b7c:	4650      	mov	r0, sl
 8014b7e:	ed9f 0b50 	vldr	d0, [pc, #320]	; 8014cc0 <__kernel_rem_pio2+0x320>
 8014b82:	f001 f925 	bl	8015dd0 <scalbn>
 8014b86:	4630      	mov	r0, r6
 8014b88:	4639      	mov	r1, r7
 8014b8a:	ec53 2b10 	vmov	r2, r3, d0
 8014b8e:	f7eb fb4d 	bl	800022c <__aeabi_dsub>
 8014b92:	4606      	mov	r6, r0
 8014b94:	460f      	mov	r7, r1
 8014b96:	e032      	b.n	8014bfe <__kernel_rem_pio2+0x25e>
 8014b98:	2200      	movs	r2, #0
 8014b9a:	4b4e      	ldr	r3, [pc, #312]	; (8014cd4 <__kernel_rem_pio2+0x334>)
 8014b9c:	4640      	mov	r0, r8
 8014b9e:	4649      	mov	r1, r9
 8014ba0:	f7eb fcfc 	bl	800059c <__aeabi_dmul>
 8014ba4:	f7eb ffaa 	bl	8000afc <__aeabi_d2iz>
 8014ba8:	f7eb fc8e 	bl	80004c8 <__aeabi_i2d>
 8014bac:	2200      	movs	r2, #0
 8014bae:	4b4a      	ldr	r3, [pc, #296]	; (8014cd8 <__kernel_rem_pio2+0x338>)
 8014bb0:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8014bb4:	f7eb fcf2 	bl	800059c <__aeabi_dmul>
 8014bb8:	4602      	mov	r2, r0
 8014bba:	460b      	mov	r3, r1
 8014bbc:	4640      	mov	r0, r8
 8014bbe:	4649      	mov	r1, r9
 8014bc0:	f7eb fb34 	bl	800022c <__aeabi_dsub>
 8014bc4:	f7eb ff9a 	bl	8000afc <__aeabi_d2iz>
 8014bc8:	ab0e      	add	r3, sp, #56	; 0x38
 8014bca:	f843 0025 	str.w	r0, [r3, r5, lsl #2]
 8014bce:	e976 2302 	ldrd	r2, r3, [r6, #-8]!
 8014bd2:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8014bd6:	f7eb fb2b 	bl	8000230 <__adddf3>
 8014bda:	3501      	adds	r5, #1
 8014bdc:	4680      	mov	r8, r0
 8014bde:	4689      	mov	r9, r1
 8014be0:	e75e      	b.n	8014aa0 <__kernel_rem_pio2+0x100>
 8014be2:	d105      	bne.n	8014bf0 <__kernel_rem_pio2+0x250>
 8014be4:	1e63      	subs	r3, r4, #1
 8014be6:	aa0e      	add	r2, sp, #56	; 0x38
 8014be8:	f852 0023 	ldr.w	r0, [r2, r3, lsl #2]
 8014bec:	15c3      	asrs	r3, r0, #23
 8014bee:	e79f      	b.n	8014b30 <__kernel_rem_pio2+0x190>
 8014bf0:	2200      	movs	r2, #0
 8014bf2:	4b3a      	ldr	r3, [pc, #232]	; (8014cdc <__kernel_rem_pio2+0x33c>)
 8014bf4:	f7eb ff58 	bl	8000aa8 <__aeabi_dcmpge>
 8014bf8:	2800      	cmp	r0, #0
 8014bfa:	d139      	bne.n	8014c70 <__kernel_rem_pio2+0x2d0>
 8014bfc:	9002      	str	r0, [sp, #8]
 8014bfe:	2200      	movs	r2, #0
 8014c00:	2300      	movs	r3, #0
 8014c02:	4630      	mov	r0, r6
 8014c04:	4639      	mov	r1, r7
 8014c06:	f7eb ff31 	bl	8000a6c <__aeabi_dcmpeq>
 8014c0a:	2800      	cmp	r0, #0
 8014c0c:	f000 80c7 	beq.w	8014d9e <__kernel_rem_pio2+0x3fe>
 8014c10:	1e65      	subs	r5, r4, #1
 8014c12:	462b      	mov	r3, r5
 8014c14:	2200      	movs	r2, #0
 8014c16:	9904      	ldr	r1, [sp, #16]
 8014c18:	428b      	cmp	r3, r1
 8014c1a:	da6a      	bge.n	8014cf2 <__kernel_rem_pio2+0x352>
 8014c1c:	2a00      	cmp	r2, #0
 8014c1e:	f000 8088 	beq.w	8014d32 <__kernel_rem_pio2+0x392>
 8014c22:	ab0e      	add	r3, sp, #56	; 0x38
 8014c24:	f1aa 0a18 	sub.w	sl, sl, #24
 8014c28:	f853 3025 	ldr.w	r3, [r3, r5, lsl #2]
 8014c2c:	2b00      	cmp	r3, #0
 8014c2e:	f000 80b4 	beq.w	8014d9a <__kernel_rem_pio2+0x3fa>
 8014c32:	4650      	mov	r0, sl
 8014c34:	ed9f 0b22 	vldr	d0, [pc, #136]	; 8014cc0 <__kernel_rem_pio2+0x320>
 8014c38:	f001 f8ca 	bl	8015dd0 <scalbn>
 8014c3c:	00ec      	lsls	r4, r5, #3
 8014c3e:	ab72      	add	r3, sp, #456	; 0x1c8
 8014c40:	191e      	adds	r6, r3, r4
 8014c42:	ec59 8b10 	vmov	r8, r9, d0
 8014c46:	f106 0a08 	add.w	sl, r6, #8
 8014c4a:	462f      	mov	r7, r5
 8014c4c:	2f00      	cmp	r7, #0
 8014c4e:	f280 80df 	bge.w	8014e10 <__kernel_rem_pio2+0x470>
 8014c52:	ed9f 8b19 	vldr	d8, [pc, #100]	; 8014cb8 <__kernel_rem_pio2+0x318>
 8014c56:	f04f 0a00 	mov.w	sl, #0
 8014c5a:	eba5 030a 	sub.w	r3, r5, sl
 8014c5e:	2b00      	cmp	r3, #0
 8014c60:	f2c0 810a 	blt.w	8014e78 <__kernel_rem_pio2+0x4d8>
 8014c64:	f8df b078 	ldr.w	fp, [pc, #120]	; 8014ce0 <__kernel_rem_pio2+0x340>
 8014c68:	ec59 8b18 	vmov	r8, r9, d8
 8014c6c:	2700      	movs	r7, #0
 8014c6e:	e0f5      	b.n	8014e5c <__kernel_rem_pio2+0x4bc>
 8014c70:	2302      	movs	r3, #2
 8014c72:	9302      	str	r3, [sp, #8]
 8014c74:	e760      	b.n	8014b38 <__kernel_rem_pio2+0x198>
 8014c76:	ab0e      	add	r3, sp, #56	; 0x38
 8014c78:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8014c7c:	b94d      	cbnz	r5, 8014c92 <__kernel_rem_pio2+0x2f2>
 8014c7e:	b12b      	cbz	r3, 8014c8c <__kernel_rem_pio2+0x2ec>
 8014c80:	a80e      	add	r0, sp, #56	; 0x38
 8014c82:	f1c3 7380 	rsb	r3, r3, #16777216	; 0x1000000
 8014c86:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014c8a:	2301      	movs	r3, #1
 8014c8c:	3201      	adds	r2, #1
 8014c8e:	461d      	mov	r5, r3
 8014c90:	e759      	b.n	8014b46 <__kernel_rem_pio2+0x1a6>
 8014c92:	a80e      	add	r0, sp, #56	; 0x38
 8014c94:	1acb      	subs	r3, r1, r3
 8014c96:	f840 3022 	str.w	r3, [r0, r2, lsl #2]
 8014c9a:	462b      	mov	r3, r5
 8014c9c:	e7f6      	b.n	8014c8c <__kernel_rem_pio2+0x2ec>
 8014c9e:	1e62      	subs	r2, r4, #1
 8014ca0:	ab0e      	add	r3, sp, #56	; 0x38
 8014ca2:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8014ca6:	f3c3 0316 	ubfx	r3, r3, #0, #23
 8014caa:	a90e      	add	r1, sp, #56	; 0x38
 8014cac:	f841 3022 	str.w	r3, [r1, r2, lsl #2]
 8014cb0:	e757      	b.n	8014b62 <__kernel_rem_pio2+0x1c2>
 8014cb2:	bf00      	nop
 8014cb4:	f3af 8000 	nop.w
	...
 8014cc4:	3ff00000 	.word	0x3ff00000
 8014cc8:	08016bc8 	.word	0x08016bc8
 8014ccc:	40200000 	.word	0x40200000
 8014cd0:	3ff00000 	.word	0x3ff00000
 8014cd4:	3e700000 	.word	0x3e700000
 8014cd8:	41700000 	.word	0x41700000
 8014cdc:	3fe00000 	.word	0x3fe00000
 8014ce0:	08016b88 	.word	0x08016b88
 8014ce4:	1e62      	subs	r2, r4, #1
 8014ce6:	ab0e      	add	r3, sp, #56	; 0x38
 8014ce8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 8014cec:	f3c3 0315 	ubfx	r3, r3, #0, #22
 8014cf0:	e7db      	b.n	8014caa <__kernel_rem_pio2+0x30a>
 8014cf2:	a90e      	add	r1, sp, #56	; 0x38
 8014cf4:	f851 1023 	ldr.w	r1, [r1, r3, lsl #2]
 8014cf8:	3b01      	subs	r3, #1
 8014cfa:	430a      	orrs	r2, r1
 8014cfc:	e78b      	b.n	8014c16 <__kernel_rem_pio2+0x276>
 8014cfe:	3301      	adds	r3, #1
 8014d00:	f852 1d04 	ldr.w	r1, [r2, #-4]!
 8014d04:	2900      	cmp	r1, #0
 8014d06:	d0fa      	beq.n	8014cfe <__kernel_rem_pio2+0x35e>
 8014d08:	9a08      	ldr	r2, [sp, #32]
 8014d0a:	4422      	add	r2, r4
 8014d0c:	00d2      	lsls	r2, r2, #3
 8014d0e:	a922      	add	r1, sp, #136	; 0x88
 8014d10:	18e3      	adds	r3, r4, r3
 8014d12:	9206      	str	r2, [sp, #24]
 8014d14:	440a      	add	r2, r1
 8014d16:	9302      	str	r3, [sp, #8]
 8014d18:	f10b 0108 	add.w	r1, fp, #8
 8014d1c:	f102 0308 	add.w	r3, r2, #8
 8014d20:	1c66      	adds	r6, r4, #1
 8014d22:	910a      	str	r1, [sp, #40]	; 0x28
 8014d24:	2500      	movs	r5, #0
 8014d26:	930d      	str	r3, [sp, #52]	; 0x34
 8014d28:	9b02      	ldr	r3, [sp, #8]
 8014d2a:	42b3      	cmp	r3, r6
 8014d2c:	da04      	bge.n	8014d38 <__kernel_rem_pio2+0x398>
 8014d2e:	461c      	mov	r4, r3
 8014d30:	e6a6      	b.n	8014a80 <__kernel_rem_pio2+0xe0>
 8014d32:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8014d34:	2301      	movs	r3, #1
 8014d36:	e7e3      	b.n	8014d00 <__kernel_rem_pio2+0x360>
 8014d38:	9b06      	ldr	r3, [sp, #24]
 8014d3a:	18ef      	adds	r7, r5, r3
 8014d3c:	ab22      	add	r3, sp, #136	; 0x88
 8014d3e:	441f      	add	r7, r3
 8014d40:	9b0b      	ldr	r3, [sp, #44]	; 0x2c
 8014d42:	f853 0026 	ldr.w	r0, [r3, r6, lsl #2]
 8014d46:	f7eb fbbf 	bl	80004c8 <__aeabi_i2d>
 8014d4a:	9b09      	ldr	r3, [sp, #36]	; 0x24
 8014d4c:	461c      	mov	r4, r3
 8014d4e:	9b0d      	ldr	r3, [sp, #52]	; 0x34
 8014d50:	e9c7 0100 	strd	r0, r1, [r7]
 8014d54:	eb03 0b05 	add.w	fp, r3, r5
 8014d58:	2700      	movs	r7, #0
 8014d5a:	f04f 0800 	mov.w	r8, #0
 8014d5e:	f04f 0900 	mov.w	r9, #0
 8014d62:	9b07      	ldr	r3, [sp, #28]
 8014d64:	429f      	cmp	r7, r3
 8014d66:	dd08      	ble.n	8014d7a <__kernel_rem_pio2+0x3da>
 8014d68:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 8014d6a:	aa72      	add	r2, sp, #456	; 0x1c8
 8014d6c:	18eb      	adds	r3, r5, r3
 8014d6e:	4413      	add	r3, r2
 8014d70:	e9c3 8902 	strd	r8, r9, [r3, #8]
 8014d74:	3601      	adds	r6, #1
 8014d76:	3508      	adds	r5, #8
 8014d78:	e7d6      	b.n	8014d28 <__kernel_rem_pio2+0x388>
 8014d7a:	e97b 2302 	ldrd	r2, r3, [fp, #-8]!
 8014d7e:	e8f4 0102 	ldrd	r0, r1, [r4], #8
 8014d82:	f7eb fc0b 	bl	800059c <__aeabi_dmul>
 8014d86:	4602      	mov	r2, r0
 8014d88:	460b      	mov	r3, r1
 8014d8a:	4640      	mov	r0, r8
 8014d8c:	4649      	mov	r1, r9
 8014d8e:	f7eb fa4f 	bl	8000230 <__adddf3>
 8014d92:	3701      	adds	r7, #1
 8014d94:	4680      	mov	r8, r0
 8014d96:	4689      	mov	r9, r1
 8014d98:	e7e3      	b.n	8014d62 <__kernel_rem_pio2+0x3c2>
 8014d9a:	3d01      	subs	r5, #1
 8014d9c:	e741      	b.n	8014c22 <__kernel_rem_pio2+0x282>
 8014d9e:	f1ca 0000 	rsb	r0, sl, #0
 8014da2:	ec47 6b10 	vmov	d0, r6, r7
 8014da6:	f001 f813 	bl	8015dd0 <scalbn>
 8014daa:	ec57 6b10 	vmov	r6, r7, d0
 8014dae:	2200      	movs	r2, #0
 8014db0:	4b99      	ldr	r3, [pc, #612]	; (8015018 <__kernel_rem_pio2+0x678>)
 8014db2:	ee10 0a10 	vmov	r0, s0
 8014db6:	4639      	mov	r1, r7
 8014db8:	f7eb fe76 	bl	8000aa8 <__aeabi_dcmpge>
 8014dbc:	b1f8      	cbz	r0, 8014dfe <__kernel_rem_pio2+0x45e>
 8014dbe:	2200      	movs	r2, #0
 8014dc0:	4b96      	ldr	r3, [pc, #600]	; (801501c <__kernel_rem_pio2+0x67c>)
 8014dc2:	4630      	mov	r0, r6
 8014dc4:	4639      	mov	r1, r7
 8014dc6:	f7eb fbe9 	bl	800059c <__aeabi_dmul>
 8014dca:	f7eb fe97 	bl	8000afc <__aeabi_d2iz>
 8014dce:	4680      	mov	r8, r0
 8014dd0:	f7eb fb7a 	bl	80004c8 <__aeabi_i2d>
 8014dd4:	2200      	movs	r2, #0
 8014dd6:	4b90      	ldr	r3, [pc, #576]	; (8015018 <__kernel_rem_pio2+0x678>)
 8014dd8:	f7eb fbe0 	bl	800059c <__aeabi_dmul>
 8014ddc:	460b      	mov	r3, r1
 8014dde:	4602      	mov	r2, r0
 8014de0:	4639      	mov	r1, r7
 8014de2:	4630      	mov	r0, r6
 8014de4:	f7eb fa22 	bl	800022c <__aeabi_dsub>
 8014de8:	f7eb fe88 	bl	8000afc <__aeabi_d2iz>
 8014dec:	1c65      	adds	r5, r4, #1
 8014dee:	ab0e      	add	r3, sp, #56	; 0x38
 8014df0:	f10a 0a18 	add.w	sl, sl, #24
 8014df4:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8014df8:	f843 8025 	str.w	r8, [r3, r5, lsl #2]
 8014dfc:	e719      	b.n	8014c32 <__kernel_rem_pio2+0x292>
 8014dfe:	4630      	mov	r0, r6
 8014e00:	4639      	mov	r1, r7
 8014e02:	f7eb fe7b 	bl	8000afc <__aeabi_d2iz>
 8014e06:	ab0e      	add	r3, sp, #56	; 0x38
 8014e08:	4625      	mov	r5, r4
 8014e0a:	f843 0024 	str.w	r0, [r3, r4, lsl #2]
 8014e0e:	e710      	b.n	8014c32 <__kernel_rem_pio2+0x292>
 8014e10:	ab0e      	add	r3, sp, #56	; 0x38
 8014e12:	f853 0027 	ldr.w	r0, [r3, r7, lsl #2]
 8014e16:	f7eb fb57 	bl	80004c8 <__aeabi_i2d>
 8014e1a:	4642      	mov	r2, r8
 8014e1c:	464b      	mov	r3, r9
 8014e1e:	f7eb fbbd 	bl	800059c <__aeabi_dmul>
 8014e22:	2200      	movs	r2, #0
 8014e24:	e96a 0102 	strd	r0, r1, [sl, #-8]!
 8014e28:	4b7c      	ldr	r3, [pc, #496]	; (801501c <__kernel_rem_pio2+0x67c>)
 8014e2a:	4640      	mov	r0, r8
 8014e2c:	4649      	mov	r1, r9
 8014e2e:	f7eb fbb5 	bl	800059c <__aeabi_dmul>
 8014e32:	3f01      	subs	r7, #1
 8014e34:	4680      	mov	r8, r0
 8014e36:	4689      	mov	r9, r1
 8014e38:	e708      	b.n	8014c4c <__kernel_rem_pio2+0x2ac>
 8014e3a:	eb06 03c7 	add.w	r3, r6, r7, lsl #3
 8014e3e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8014e42:	e8fb 0102 	ldrd	r0, r1, [fp], #8
 8014e46:	f7eb fba9 	bl	800059c <__aeabi_dmul>
 8014e4a:	4602      	mov	r2, r0
 8014e4c:	460b      	mov	r3, r1
 8014e4e:	4640      	mov	r0, r8
 8014e50:	4649      	mov	r1, r9
 8014e52:	f7eb f9ed 	bl	8000230 <__adddf3>
 8014e56:	3701      	adds	r7, #1
 8014e58:	4680      	mov	r8, r0
 8014e5a:	4689      	mov	r9, r1
 8014e5c:	9b04      	ldr	r3, [sp, #16]
 8014e5e:	429f      	cmp	r7, r3
 8014e60:	dc01      	bgt.n	8014e66 <__kernel_rem_pio2+0x4c6>
 8014e62:	45ba      	cmp	sl, r7
 8014e64:	dae9      	bge.n	8014e3a <__kernel_rem_pio2+0x49a>
 8014e66:	ab4a      	add	r3, sp, #296	; 0x128
 8014e68:	eb03 03ca 	add.w	r3, r3, sl, lsl #3
 8014e6c:	e9c3 8900 	strd	r8, r9, [r3]
 8014e70:	f10a 0a01 	add.w	sl, sl, #1
 8014e74:	3e08      	subs	r6, #8
 8014e76:	e6f0      	b.n	8014c5a <__kernel_rem_pio2+0x2ba>
 8014e78:	9ba6      	ldr	r3, [sp, #664]	; 0x298
 8014e7a:	2b03      	cmp	r3, #3
 8014e7c:	d85b      	bhi.n	8014f36 <__kernel_rem_pio2+0x596>
 8014e7e:	e8df f003 	tbb	[pc, r3]
 8014e82:	264a      	.short	0x264a
 8014e84:	0226      	.short	0x0226
 8014e86:	ab9a      	add	r3, sp, #616	; 0x268
 8014e88:	441c      	add	r4, r3
 8014e8a:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 8014e8e:	46a2      	mov	sl, r4
 8014e90:	46ab      	mov	fp, r5
 8014e92:	f1bb 0f00 	cmp.w	fp, #0
 8014e96:	dc6c      	bgt.n	8014f72 <__kernel_rem_pio2+0x5d2>
 8014e98:	46a2      	mov	sl, r4
 8014e9a:	46ab      	mov	fp, r5
 8014e9c:	f1bb 0f01 	cmp.w	fp, #1
 8014ea0:	f300 8086 	bgt.w	8014fb0 <__kernel_rem_pio2+0x610>
 8014ea4:	2000      	movs	r0, #0
 8014ea6:	2100      	movs	r1, #0
 8014ea8:	2d01      	cmp	r5, #1
 8014eaa:	f300 80a0 	bgt.w	8014fee <__kernel_rem_pio2+0x64e>
 8014eae:	9b02      	ldr	r3, [sp, #8]
 8014eb0:	e9dd 784a 	ldrd	r7, r8, [sp, #296]	; 0x128
 8014eb4:	e9dd 564c 	ldrd	r5, r6, [sp, #304]	; 0x130
 8014eb8:	2b00      	cmp	r3, #0
 8014eba:	f040 809e 	bne.w	8014ffa <__kernel_rem_pio2+0x65a>
 8014ebe:	9b01      	ldr	r3, [sp, #4]
 8014ec0:	e9c3 7800 	strd	r7, r8, [r3]
 8014ec4:	e9c3 5602 	strd	r5, r6, [r3, #8]
 8014ec8:	e9c3 0104 	strd	r0, r1, [r3, #16]
 8014ecc:	e033      	b.n	8014f36 <__kernel_rem_pio2+0x596>
 8014ece:	3408      	adds	r4, #8
 8014ed0:	ab4a      	add	r3, sp, #296	; 0x128
 8014ed2:	441c      	add	r4, r3
 8014ed4:	462e      	mov	r6, r5
 8014ed6:	2000      	movs	r0, #0
 8014ed8:	2100      	movs	r1, #0
 8014eda:	2e00      	cmp	r6, #0
 8014edc:	da3a      	bge.n	8014f54 <__kernel_rem_pio2+0x5b4>
 8014ede:	9b02      	ldr	r3, [sp, #8]
 8014ee0:	2b00      	cmp	r3, #0
 8014ee2:	d03d      	beq.n	8014f60 <__kernel_rem_pio2+0x5c0>
 8014ee4:	4602      	mov	r2, r0
 8014ee6:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8014eea:	9c01      	ldr	r4, [sp, #4]
 8014eec:	e9c4 2300 	strd	r2, r3, [r4]
 8014ef0:	4602      	mov	r2, r0
 8014ef2:	460b      	mov	r3, r1
 8014ef4:	e9dd 014a 	ldrd	r0, r1, [sp, #296]	; 0x128
 8014ef8:	f7eb f998 	bl	800022c <__aeabi_dsub>
 8014efc:	ae4c      	add	r6, sp, #304	; 0x130
 8014efe:	2401      	movs	r4, #1
 8014f00:	42a5      	cmp	r5, r4
 8014f02:	da30      	bge.n	8014f66 <__kernel_rem_pio2+0x5c6>
 8014f04:	9b02      	ldr	r3, [sp, #8]
 8014f06:	b113      	cbz	r3, 8014f0e <__kernel_rem_pio2+0x56e>
 8014f08:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8014f0c:	4619      	mov	r1, r3
 8014f0e:	9b01      	ldr	r3, [sp, #4]
 8014f10:	e9c3 0102 	strd	r0, r1, [r3, #8]
 8014f14:	e00f      	b.n	8014f36 <__kernel_rem_pio2+0x596>
 8014f16:	ab9a      	add	r3, sp, #616	; 0x268
 8014f18:	441c      	add	r4, r3
 8014f1a:	f5a4 749c 	sub.w	r4, r4, #312	; 0x138
 8014f1e:	2000      	movs	r0, #0
 8014f20:	2100      	movs	r1, #0
 8014f22:	2d00      	cmp	r5, #0
 8014f24:	da10      	bge.n	8014f48 <__kernel_rem_pio2+0x5a8>
 8014f26:	9b02      	ldr	r3, [sp, #8]
 8014f28:	b113      	cbz	r3, 8014f30 <__kernel_rem_pio2+0x590>
 8014f2a:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8014f2e:	4619      	mov	r1, r3
 8014f30:	9b01      	ldr	r3, [sp, #4]
 8014f32:	e9c3 0100 	strd	r0, r1, [r3]
 8014f36:	9b06      	ldr	r3, [sp, #24]
 8014f38:	f003 0007 	and.w	r0, r3, #7
 8014f3c:	f50d 7d1b 	add.w	sp, sp, #620	; 0x26c
 8014f40:	ecbd 8b02 	vpop	{d8}
 8014f44:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8014f48:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8014f4c:	f7eb f970 	bl	8000230 <__adddf3>
 8014f50:	3d01      	subs	r5, #1
 8014f52:	e7e6      	b.n	8014f22 <__kernel_rem_pio2+0x582>
 8014f54:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8014f58:	f7eb f96a 	bl	8000230 <__adddf3>
 8014f5c:	3e01      	subs	r6, #1
 8014f5e:	e7bc      	b.n	8014eda <__kernel_rem_pio2+0x53a>
 8014f60:	4602      	mov	r2, r0
 8014f62:	460b      	mov	r3, r1
 8014f64:	e7c1      	b.n	8014eea <__kernel_rem_pio2+0x54a>
 8014f66:	e8f6 2302 	ldrd	r2, r3, [r6], #8
 8014f6a:	f7eb f961 	bl	8000230 <__adddf3>
 8014f6e:	3401      	adds	r4, #1
 8014f70:	e7c6      	b.n	8014f00 <__kernel_rem_pio2+0x560>
 8014f72:	e95a 8904 	ldrd	r8, r9, [sl, #-16]
 8014f76:	ed3a 7b02 	vldmdb	sl!, {d7}
 8014f7a:	4640      	mov	r0, r8
 8014f7c:	ec53 2b17 	vmov	r2, r3, d7
 8014f80:	4649      	mov	r1, r9
 8014f82:	ed8d 7b04 	vstr	d7, [sp, #16]
 8014f86:	f7eb f953 	bl	8000230 <__adddf3>
 8014f8a:	4602      	mov	r2, r0
 8014f8c:	460b      	mov	r3, r1
 8014f8e:	4606      	mov	r6, r0
 8014f90:	460f      	mov	r7, r1
 8014f92:	4640      	mov	r0, r8
 8014f94:	4649      	mov	r1, r9
 8014f96:	f7eb f949 	bl	800022c <__aeabi_dsub>
 8014f9a:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8014f9e:	f7eb f947 	bl	8000230 <__adddf3>
 8014fa2:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014fa6:	e9ca 0100 	strd	r0, r1, [sl]
 8014faa:	e94a 6702 	strd	r6, r7, [sl, #-8]
 8014fae:	e770      	b.n	8014e92 <__kernel_rem_pio2+0x4f2>
 8014fb0:	e95a 6704 	ldrd	r6, r7, [sl, #-16]
 8014fb4:	ed3a 7b02 	vldmdb	sl!, {d7}
 8014fb8:	4630      	mov	r0, r6
 8014fba:	ec53 2b17 	vmov	r2, r3, d7
 8014fbe:	4639      	mov	r1, r7
 8014fc0:	ed8d 7b04 	vstr	d7, [sp, #16]
 8014fc4:	f7eb f934 	bl	8000230 <__adddf3>
 8014fc8:	4602      	mov	r2, r0
 8014fca:	460b      	mov	r3, r1
 8014fcc:	4680      	mov	r8, r0
 8014fce:	4689      	mov	r9, r1
 8014fd0:	4630      	mov	r0, r6
 8014fd2:	4639      	mov	r1, r7
 8014fd4:	f7eb f92a 	bl	800022c <__aeabi_dsub>
 8014fd8:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8014fdc:	f7eb f928 	bl	8000230 <__adddf3>
 8014fe0:	f10b 3bff 	add.w	fp, fp, #4294967295
 8014fe4:	e9ca 0100 	strd	r0, r1, [sl]
 8014fe8:	e94a 8902 	strd	r8, r9, [sl, #-8]
 8014fec:	e756      	b.n	8014e9c <__kernel_rem_pio2+0x4fc>
 8014fee:	e974 2302 	ldrd	r2, r3, [r4, #-8]!
 8014ff2:	f7eb f91d 	bl	8000230 <__adddf3>
 8014ff6:	3d01      	subs	r5, #1
 8014ff8:	e756      	b.n	8014ea8 <__kernel_rem_pio2+0x508>
 8014ffa:	9b01      	ldr	r3, [sp, #4]
 8014ffc:	9a01      	ldr	r2, [sp, #4]
 8014ffe:	601f      	str	r7, [r3, #0]
 8015000:	f108 4400 	add.w	r4, r8, #2147483648	; 0x80000000
 8015004:	605c      	str	r4, [r3, #4]
 8015006:	609d      	str	r5, [r3, #8]
 8015008:	f106 4300 	add.w	r3, r6, #2147483648	; 0x80000000
 801500c:	60d3      	str	r3, [r2, #12]
 801500e:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 8015012:	6110      	str	r0, [r2, #16]
 8015014:	6153      	str	r3, [r2, #20]
 8015016:	e78e      	b.n	8014f36 <__kernel_rem_pio2+0x596>
 8015018:	41700000 	.word	0x41700000
 801501c:	3e700000 	.word	0x3e700000

08015020 <__kernel_sin>:
 8015020:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 8015024:	ec55 4b10 	vmov	r4, r5, d0
 8015028:	b085      	sub	sp, #20
 801502a:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 801502e:	f1b3 5f79 	cmp.w	r3, #1044381696	; 0x3e400000
 8015032:	ed8d 1b00 	vstr	d1, [sp]
 8015036:	9002      	str	r0, [sp, #8]
 8015038:	da06      	bge.n	8015048 <__kernel_sin+0x28>
 801503a:	ee10 0a10 	vmov	r0, s0
 801503e:	4629      	mov	r1, r5
 8015040:	f7eb fd5c 	bl	8000afc <__aeabi_d2iz>
 8015044:	2800      	cmp	r0, #0
 8015046:	d051      	beq.n	80150ec <__kernel_sin+0xcc>
 8015048:	4622      	mov	r2, r4
 801504a:	462b      	mov	r3, r5
 801504c:	4620      	mov	r0, r4
 801504e:	4629      	mov	r1, r5
 8015050:	f7eb faa4 	bl	800059c <__aeabi_dmul>
 8015054:	4682      	mov	sl, r0
 8015056:	468b      	mov	fp, r1
 8015058:	4602      	mov	r2, r0
 801505a:	460b      	mov	r3, r1
 801505c:	4620      	mov	r0, r4
 801505e:	4629      	mov	r1, r5
 8015060:	f7eb fa9c 	bl	800059c <__aeabi_dmul>
 8015064:	a341      	add	r3, pc, #260	; (adr r3, 801516c <__kernel_sin+0x14c>)
 8015066:	e9d3 2300 	ldrd	r2, r3, [r3]
 801506a:	4680      	mov	r8, r0
 801506c:	4689      	mov	r9, r1
 801506e:	4650      	mov	r0, sl
 8015070:	4659      	mov	r1, fp
 8015072:	f7eb fa93 	bl	800059c <__aeabi_dmul>
 8015076:	a33f      	add	r3, pc, #252	; (adr r3, 8015174 <__kernel_sin+0x154>)
 8015078:	e9d3 2300 	ldrd	r2, r3, [r3]
 801507c:	f7eb f8d6 	bl	800022c <__aeabi_dsub>
 8015080:	4652      	mov	r2, sl
 8015082:	465b      	mov	r3, fp
 8015084:	f7eb fa8a 	bl	800059c <__aeabi_dmul>
 8015088:	a33c      	add	r3, pc, #240	; (adr r3, 801517c <__kernel_sin+0x15c>)
 801508a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801508e:	f7eb f8cf 	bl	8000230 <__adddf3>
 8015092:	4652      	mov	r2, sl
 8015094:	465b      	mov	r3, fp
 8015096:	f7eb fa81 	bl	800059c <__aeabi_dmul>
 801509a:	a33a      	add	r3, pc, #232	; (adr r3, 8015184 <__kernel_sin+0x164>)
 801509c:	e9d3 2300 	ldrd	r2, r3, [r3]
 80150a0:	f7eb f8c4 	bl	800022c <__aeabi_dsub>
 80150a4:	4652      	mov	r2, sl
 80150a6:	465b      	mov	r3, fp
 80150a8:	f7eb fa78 	bl	800059c <__aeabi_dmul>
 80150ac:	a337      	add	r3, pc, #220	; (adr r3, 801518c <__kernel_sin+0x16c>)
 80150ae:	e9d3 2300 	ldrd	r2, r3, [r3]
 80150b2:	f7eb f8bd 	bl	8000230 <__adddf3>
 80150b6:	9b02      	ldr	r3, [sp, #8]
 80150b8:	4606      	mov	r6, r0
 80150ba:	460f      	mov	r7, r1
 80150bc:	b9db      	cbnz	r3, 80150f6 <__kernel_sin+0xd6>
 80150be:	4602      	mov	r2, r0
 80150c0:	460b      	mov	r3, r1
 80150c2:	4650      	mov	r0, sl
 80150c4:	4659      	mov	r1, fp
 80150c6:	f7eb fa69 	bl	800059c <__aeabi_dmul>
 80150ca:	a325      	add	r3, pc, #148	; (adr r3, 8015160 <__kernel_sin+0x140>)
 80150cc:	e9d3 2300 	ldrd	r2, r3, [r3]
 80150d0:	f7eb f8ac 	bl	800022c <__aeabi_dsub>
 80150d4:	4642      	mov	r2, r8
 80150d6:	464b      	mov	r3, r9
 80150d8:	f7eb fa60 	bl	800059c <__aeabi_dmul>
 80150dc:	4602      	mov	r2, r0
 80150de:	460b      	mov	r3, r1
 80150e0:	4620      	mov	r0, r4
 80150e2:	4629      	mov	r1, r5
 80150e4:	f7eb f8a4 	bl	8000230 <__adddf3>
 80150e8:	4604      	mov	r4, r0
 80150ea:	460d      	mov	r5, r1
 80150ec:	ec45 4b10 	vmov	d0, r4, r5
 80150f0:	b005      	add	sp, #20
 80150f2:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80150f6:	2200      	movs	r2, #0
 80150f8:	4b1b      	ldr	r3, [pc, #108]	; (8015168 <__kernel_sin+0x148>)
 80150fa:	e9dd 0100 	ldrd	r0, r1, [sp]
 80150fe:	f7eb fa4d 	bl	800059c <__aeabi_dmul>
 8015102:	4632      	mov	r2, r6
 8015104:	e9cd 0102 	strd	r0, r1, [sp, #8]
 8015108:	463b      	mov	r3, r7
 801510a:	4640      	mov	r0, r8
 801510c:	4649      	mov	r1, r9
 801510e:	f7eb fa45 	bl	800059c <__aeabi_dmul>
 8015112:	4602      	mov	r2, r0
 8015114:	460b      	mov	r3, r1
 8015116:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801511a:	f7eb f887 	bl	800022c <__aeabi_dsub>
 801511e:	4652      	mov	r2, sl
 8015120:	465b      	mov	r3, fp
 8015122:	f7eb fa3b 	bl	800059c <__aeabi_dmul>
 8015126:	e9dd 2300 	ldrd	r2, r3, [sp]
 801512a:	f7eb f87f 	bl	800022c <__aeabi_dsub>
 801512e:	a30c      	add	r3, pc, #48	; (adr r3, 8015160 <__kernel_sin+0x140>)
 8015130:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015134:	4606      	mov	r6, r0
 8015136:	460f      	mov	r7, r1
 8015138:	4640      	mov	r0, r8
 801513a:	4649      	mov	r1, r9
 801513c:	f7eb fa2e 	bl	800059c <__aeabi_dmul>
 8015140:	4602      	mov	r2, r0
 8015142:	460b      	mov	r3, r1
 8015144:	4630      	mov	r0, r6
 8015146:	4639      	mov	r1, r7
 8015148:	f7eb f872 	bl	8000230 <__adddf3>
 801514c:	4602      	mov	r2, r0
 801514e:	460b      	mov	r3, r1
 8015150:	4620      	mov	r0, r4
 8015152:	4629      	mov	r1, r5
 8015154:	f7eb f86a 	bl	800022c <__aeabi_dsub>
 8015158:	e7c6      	b.n	80150e8 <__kernel_sin+0xc8>
 801515a:	bf00      	nop
 801515c:	f3af 8000 	nop.w
 8015160:	55555549 	.word	0x55555549
 8015164:	3fc55555 	.word	0x3fc55555
 8015168:	3fe00000 	.word	0x3fe00000
 801516c:	5acfd57c 	.word	0x5acfd57c
 8015170:	3de5d93a 	.word	0x3de5d93a
 8015174:	8a2b9ceb 	.word	0x8a2b9ceb
 8015178:	3e5ae5e6 	.word	0x3e5ae5e6
 801517c:	57b1fe7d 	.word	0x57b1fe7d
 8015180:	3ec71de3 	.word	0x3ec71de3
 8015184:	19c161d5 	.word	0x19c161d5
 8015188:	3f2a01a0 	.word	0x3f2a01a0
 801518c:	1110f8a6 	.word	0x1110f8a6
 8015190:	3f811111 	.word	0x3f811111
 8015194:	00000000 	.word	0x00000000

08015198 <__kernel_tan>:
 8015198:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801519c:	ec5b ab10 	vmov	sl, fp, d0
 80151a0:	4bbf      	ldr	r3, [pc, #764]	; (80154a0 <__kernel_tan+0x308>)
 80151a2:	b089      	sub	sp, #36	; 0x24
 80151a4:	f02b 4700 	bic.w	r7, fp, #2147483648	; 0x80000000
 80151a8:	429f      	cmp	r7, r3
 80151aa:	ec59 8b11 	vmov	r8, r9, d1
 80151ae:	4606      	mov	r6, r0
 80151b0:	f8cd b008 	str.w	fp, [sp, #8]
 80151b4:	dc22      	bgt.n	80151fc <__kernel_tan+0x64>
 80151b6:	ee10 0a10 	vmov	r0, s0
 80151ba:	4659      	mov	r1, fp
 80151bc:	f7eb fc9e 	bl	8000afc <__aeabi_d2iz>
 80151c0:	2800      	cmp	r0, #0
 80151c2:	d145      	bne.n	8015250 <__kernel_tan+0xb8>
 80151c4:	1c73      	adds	r3, r6, #1
 80151c6:	4652      	mov	r2, sl
 80151c8:	4313      	orrs	r3, r2
 80151ca:	433b      	orrs	r3, r7
 80151cc:	d110      	bne.n	80151f0 <__kernel_tan+0x58>
 80151ce:	ec4b ab10 	vmov	d0, sl, fp
 80151d2:	f000 fcd5 	bl	8015b80 <fabs>
 80151d6:	49b3      	ldr	r1, [pc, #716]	; (80154a4 <__kernel_tan+0x30c>)
 80151d8:	ec53 2b10 	vmov	r2, r3, d0
 80151dc:	2000      	movs	r0, #0
 80151de:	f7eb fb07 	bl	80007f0 <__aeabi_ddiv>
 80151e2:	4682      	mov	sl, r0
 80151e4:	468b      	mov	fp, r1
 80151e6:	ec4b ab10 	vmov	d0, sl, fp
 80151ea:	b009      	add	sp, #36	; 0x24
 80151ec:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 80151f0:	2e01      	cmp	r6, #1
 80151f2:	d0f8      	beq.n	80151e6 <__kernel_tan+0x4e>
 80151f4:	465b      	mov	r3, fp
 80151f6:	2000      	movs	r0, #0
 80151f8:	49ab      	ldr	r1, [pc, #684]	; (80154a8 <__kernel_tan+0x310>)
 80151fa:	e7f0      	b.n	80151de <__kernel_tan+0x46>
 80151fc:	4bab      	ldr	r3, [pc, #684]	; (80154ac <__kernel_tan+0x314>)
 80151fe:	429f      	cmp	r7, r3
 8015200:	dd26      	ble.n	8015250 <__kernel_tan+0xb8>
 8015202:	9b02      	ldr	r3, [sp, #8]
 8015204:	2b00      	cmp	r3, #0
 8015206:	da09      	bge.n	801521c <__kernel_tan+0x84>
 8015208:	f10b 4300 	add.w	r3, fp, #2147483648	; 0x80000000
 801520c:	469b      	mov	fp, r3
 801520e:	ee10 aa10 	vmov	sl, s0
 8015212:	f109 4300 	add.w	r3, r9, #2147483648	; 0x80000000
 8015216:	ee11 8a10 	vmov	r8, s2
 801521a:	4699      	mov	r9, r3
 801521c:	4652      	mov	r2, sl
 801521e:	465b      	mov	r3, fp
 8015220:	a181      	add	r1, pc, #516	; (adr r1, 8015428 <__kernel_tan+0x290>)
 8015222:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015226:	f7eb f801 	bl	800022c <__aeabi_dsub>
 801522a:	4642      	mov	r2, r8
 801522c:	464b      	mov	r3, r9
 801522e:	4604      	mov	r4, r0
 8015230:	460d      	mov	r5, r1
 8015232:	a17f      	add	r1, pc, #508	; (adr r1, 8015430 <__kernel_tan+0x298>)
 8015234:	e9d1 0100 	ldrd	r0, r1, [r1]
 8015238:	f7ea fff8 	bl	800022c <__aeabi_dsub>
 801523c:	4622      	mov	r2, r4
 801523e:	462b      	mov	r3, r5
 8015240:	f7ea fff6 	bl	8000230 <__adddf3>
 8015244:	f04f 0800 	mov.w	r8, #0
 8015248:	4682      	mov	sl, r0
 801524a:	468b      	mov	fp, r1
 801524c:	f04f 0900 	mov.w	r9, #0
 8015250:	4652      	mov	r2, sl
 8015252:	465b      	mov	r3, fp
 8015254:	4650      	mov	r0, sl
 8015256:	4659      	mov	r1, fp
 8015258:	f7eb f9a0 	bl	800059c <__aeabi_dmul>
 801525c:	4602      	mov	r2, r0
 801525e:	460b      	mov	r3, r1
 8015260:	e9cd 0100 	strd	r0, r1, [sp]
 8015264:	f7eb f99a 	bl	800059c <__aeabi_dmul>
 8015268:	e9dd 2300 	ldrd	r2, r3, [sp]
 801526c:	4604      	mov	r4, r0
 801526e:	460d      	mov	r5, r1
 8015270:	4650      	mov	r0, sl
 8015272:	4659      	mov	r1, fp
 8015274:	f7eb f992 	bl	800059c <__aeabi_dmul>
 8015278:	a36f      	add	r3, pc, #444	; (adr r3, 8015438 <__kernel_tan+0x2a0>)
 801527a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801527e:	e9cd 0104 	strd	r0, r1, [sp, #16]
 8015282:	4620      	mov	r0, r4
 8015284:	4629      	mov	r1, r5
 8015286:	f7eb f989 	bl	800059c <__aeabi_dmul>
 801528a:	a36d      	add	r3, pc, #436	; (adr r3, 8015440 <__kernel_tan+0x2a8>)
 801528c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015290:	f7ea ffce 	bl	8000230 <__adddf3>
 8015294:	4622      	mov	r2, r4
 8015296:	462b      	mov	r3, r5
 8015298:	f7eb f980 	bl	800059c <__aeabi_dmul>
 801529c:	a36a      	add	r3, pc, #424	; (adr r3, 8015448 <__kernel_tan+0x2b0>)
 801529e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80152a2:	f7ea ffc5 	bl	8000230 <__adddf3>
 80152a6:	4622      	mov	r2, r4
 80152a8:	462b      	mov	r3, r5
 80152aa:	f7eb f977 	bl	800059c <__aeabi_dmul>
 80152ae:	a368      	add	r3, pc, #416	; (adr r3, 8015450 <__kernel_tan+0x2b8>)
 80152b0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80152b4:	f7ea ffbc 	bl	8000230 <__adddf3>
 80152b8:	4622      	mov	r2, r4
 80152ba:	462b      	mov	r3, r5
 80152bc:	f7eb f96e 	bl	800059c <__aeabi_dmul>
 80152c0:	a365      	add	r3, pc, #404	; (adr r3, 8015458 <__kernel_tan+0x2c0>)
 80152c2:	e9d3 2300 	ldrd	r2, r3, [r3]
 80152c6:	f7ea ffb3 	bl	8000230 <__adddf3>
 80152ca:	4622      	mov	r2, r4
 80152cc:	462b      	mov	r3, r5
 80152ce:	f7eb f965 	bl	800059c <__aeabi_dmul>
 80152d2:	a363      	add	r3, pc, #396	; (adr r3, 8015460 <__kernel_tan+0x2c8>)
 80152d4:	e9d3 2300 	ldrd	r2, r3, [r3]
 80152d8:	f7ea ffaa 	bl	8000230 <__adddf3>
 80152dc:	e9dd 2300 	ldrd	r2, r3, [sp]
 80152e0:	f7eb f95c 	bl	800059c <__aeabi_dmul>
 80152e4:	a360      	add	r3, pc, #384	; (adr r3, 8015468 <__kernel_tan+0x2d0>)
 80152e6:	e9d3 2300 	ldrd	r2, r3, [r3]
 80152ea:	e9cd 0106 	strd	r0, r1, [sp, #24]
 80152ee:	4620      	mov	r0, r4
 80152f0:	4629      	mov	r1, r5
 80152f2:	f7eb f953 	bl	800059c <__aeabi_dmul>
 80152f6:	a35e      	add	r3, pc, #376	; (adr r3, 8015470 <__kernel_tan+0x2d8>)
 80152f8:	e9d3 2300 	ldrd	r2, r3, [r3]
 80152fc:	f7ea ff98 	bl	8000230 <__adddf3>
 8015300:	4622      	mov	r2, r4
 8015302:	462b      	mov	r3, r5
 8015304:	f7eb f94a 	bl	800059c <__aeabi_dmul>
 8015308:	a35b      	add	r3, pc, #364	; (adr r3, 8015478 <__kernel_tan+0x2e0>)
 801530a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801530e:	f7ea ff8f 	bl	8000230 <__adddf3>
 8015312:	4622      	mov	r2, r4
 8015314:	462b      	mov	r3, r5
 8015316:	f7eb f941 	bl	800059c <__aeabi_dmul>
 801531a:	a359      	add	r3, pc, #356	; (adr r3, 8015480 <__kernel_tan+0x2e8>)
 801531c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015320:	f7ea ff86 	bl	8000230 <__adddf3>
 8015324:	4622      	mov	r2, r4
 8015326:	462b      	mov	r3, r5
 8015328:	f7eb f938 	bl	800059c <__aeabi_dmul>
 801532c:	a356      	add	r3, pc, #344	; (adr r3, 8015488 <__kernel_tan+0x2f0>)
 801532e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015332:	f7ea ff7d 	bl	8000230 <__adddf3>
 8015336:	4622      	mov	r2, r4
 8015338:	462b      	mov	r3, r5
 801533a:	f7eb f92f 	bl	800059c <__aeabi_dmul>
 801533e:	a354      	add	r3, pc, #336	; (adr r3, 8015490 <__kernel_tan+0x2f8>)
 8015340:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015344:	f7ea ff74 	bl	8000230 <__adddf3>
 8015348:	4602      	mov	r2, r0
 801534a:	460b      	mov	r3, r1
 801534c:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8015350:	f7ea ff6e 	bl	8000230 <__adddf3>
 8015354:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 8015358:	f7eb f920 	bl	800059c <__aeabi_dmul>
 801535c:	4642      	mov	r2, r8
 801535e:	464b      	mov	r3, r9
 8015360:	f7ea ff66 	bl	8000230 <__adddf3>
 8015364:	e9dd 2300 	ldrd	r2, r3, [sp]
 8015368:	f7eb f918 	bl	800059c <__aeabi_dmul>
 801536c:	4642      	mov	r2, r8
 801536e:	464b      	mov	r3, r9
 8015370:	f7ea ff5e 	bl	8000230 <__adddf3>
 8015374:	a348      	add	r3, pc, #288	; (adr r3, 8015498 <__kernel_tan+0x300>)
 8015376:	e9d3 2300 	ldrd	r2, r3, [r3]
 801537a:	4604      	mov	r4, r0
 801537c:	460d      	mov	r5, r1
 801537e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 8015382:	f7eb f90b 	bl	800059c <__aeabi_dmul>
 8015386:	4622      	mov	r2, r4
 8015388:	462b      	mov	r3, r5
 801538a:	f7ea ff51 	bl	8000230 <__adddf3>
 801538e:	e9cd 0100 	strd	r0, r1, [sp]
 8015392:	460b      	mov	r3, r1
 8015394:	4602      	mov	r2, r0
 8015396:	4659      	mov	r1, fp
 8015398:	4650      	mov	r0, sl
 801539a:	f7ea ff49 	bl	8000230 <__adddf3>
 801539e:	4b43      	ldr	r3, [pc, #268]	; (80154ac <__kernel_tan+0x314>)
 80153a0:	429f      	cmp	r7, r3
 80153a2:	4604      	mov	r4, r0
 80153a4:	460d      	mov	r5, r1
 80153a6:	f340 8083 	ble.w	80154b0 <__kernel_tan+0x318>
 80153aa:	4630      	mov	r0, r6
 80153ac:	f7eb f88c 	bl	80004c8 <__aeabi_i2d>
 80153b0:	4622      	mov	r2, r4
 80153b2:	4680      	mov	r8, r0
 80153b4:	4689      	mov	r9, r1
 80153b6:	462b      	mov	r3, r5
 80153b8:	4620      	mov	r0, r4
 80153ba:	4629      	mov	r1, r5
 80153bc:	f7eb f8ee 	bl	800059c <__aeabi_dmul>
 80153c0:	4642      	mov	r2, r8
 80153c2:	4606      	mov	r6, r0
 80153c4:	460f      	mov	r7, r1
 80153c6:	464b      	mov	r3, r9
 80153c8:	4620      	mov	r0, r4
 80153ca:	4629      	mov	r1, r5
 80153cc:	f7ea ff30 	bl	8000230 <__adddf3>
 80153d0:	4602      	mov	r2, r0
 80153d2:	460b      	mov	r3, r1
 80153d4:	4630      	mov	r0, r6
 80153d6:	4639      	mov	r1, r7
 80153d8:	f7eb fa0a 	bl	80007f0 <__aeabi_ddiv>
 80153dc:	e9dd 2300 	ldrd	r2, r3, [sp]
 80153e0:	f7ea ff24 	bl	800022c <__aeabi_dsub>
 80153e4:	4602      	mov	r2, r0
 80153e6:	460b      	mov	r3, r1
 80153e8:	4650      	mov	r0, sl
 80153ea:	4659      	mov	r1, fp
 80153ec:	f7ea ff1e 	bl	800022c <__aeabi_dsub>
 80153f0:	4602      	mov	r2, r0
 80153f2:	460b      	mov	r3, r1
 80153f4:	f7ea ff1c 	bl	8000230 <__adddf3>
 80153f8:	4602      	mov	r2, r0
 80153fa:	460b      	mov	r3, r1
 80153fc:	4640      	mov	r0, r8
 80153fe:	4649      	mov	r1, r9
 8015400:	f7ea ff14 	bl	800022c <__aeabi_dsub>
 8015404:	9b02      	ldr	r3, [sp, #8]
 8015406:	4604      	mov	r4, r0
 8015408:	1798      	asrs	r0, r3, #30
 801540a:	f000 0002 	and.w	r0, r0, #2
 801540e:	f1c0 0001 	rsb	r0, r0, #1
 8015412:	460d      	mov	r5, r1
 8015414:	f7eb f858 	bl	80004c8 <__aeabi_i2d>
 8015418:	4602      	mov	r2, r0
 801541a:	460b      	mov	r3, r1
 801541c:	4620      	mov	r0, r4
 801541e:	4629      	mov	r1, r5
 8015420:	f7eb f8bc 	bl	800059c <__aeabi_dmul>
 8015424:	e6dd      	b.n	80151e2 <__kernel_tan+0x4a>
 8015426:	bf00      	nop
 8015428:	54442d18 	.word	0x54442d18
 801542c:	3fe921fb 	.word	0x3fe921fb
 8015430:	33145c07 	.word	0x33145c07
 8015434:	3c81a626 	.word	0x3c81a626
 8015438:	74bf7ad4 	.word	0x74bf7ad4
 801543c:	3efb2a70 	.word	0x3efb2a70
 8015440:	32f0a7e9 	.word	0x32f0a7e9
 8015444:	3f12b80f 	.word	0x3f12b80f
 8015448:	1a8d1068 	.word	0x1a8d1068
 801544c:	3f3026f7 	.word	0x3f3026f7
 8015450:	fee08315 	.word	0xfee08315
 8015454:	3f57dbc8 	.word	0x3f57dbc8
 8015458:	e96e8493 	.word	0xe96e8493
 801545c:	3f8226e3 	.word	0x3f8226e3
 8015460:	1bb341fe 	.word	0x1bb341fe
 8015464:	3faba1ba 	.word	0x3faba1ba
 8015468:	db605373 	.word	0xdb605373
 801546c:	bef375cb 	.word	0xbef375cb
 8015470:	a03792a6 	.word	0xa03792a6
 8015474:	3f147e88 	.word	0x3f147e88
 8015478:	f2f26501 	.word	0xf2f26501
 801547c:	3f4344d8 	.word	0x3f4344d8
 8015480:	c9560328 	.word	0xc9560328
 8015484:	3f6d6d22 	.word	0x3f6d6d22
 8015488:	8406d637 	.word	0x8406d637
 801548c:	3f9664f4 	.word	0x3f9664f4
 8015490:	1110fe7a 	.word	0x1110fe7a
 8015494:	3fc11111 	.word	0x3fc11111
 8015498:	55555563 	.word	0x55555563
 801549c:	3fd55555 	.word	0x3fd55555
 80154a0:	3e2fffff 	.word	0x3e2fffff
 80154a4:	3ff00000 	.word	0x3ff00000
 80154a8:	bff00000 	.word	0xbff00000
 80154ac:	3fe59427 	.word	0x3fe59427
 80154b0:	2e01      	cmp	r6, #1
 80154b2:	d036      	beq.n	8015522 <__kernel_tan+0x38a>
 80154b4:	460f      	mov	r7, r1
 80154b6:	4602      	mov	r2, r0
 80154b8:	460b      	mov	r3, r1
 80154ba:	2000      	movs	r0, #0
 80154bc:	491a      	ldr	r1, [pc, #104]	; (8015528 <__kernel_tan+0x390>)
 80154be:	f7eb f997 	bl	80007f0 <__aeabi_ddiv>
 80154c2:	2600      	movs	r6, #0
 80154c4:	e9cd 0102 	strd	r0, r1, [sp, #8]
 80154c8:	4652      	mov	r2, sl
 80154ca:	465b      	mov	r3, fp
 80154cc:	4630      	mov	r0, r6
 80154ce:	4639      	mov	r1, r7
 80154d0:	f7ea feac 	bl	800022c <__aeabi_dsub>
 80154d4:	e9dd 4502 	ldrd	r4, r5, [sp, #8]
 80154d8:	4602      	mov	r2, r0
 80154da:	460b      	mov	r3, r1
 80154dc:	e9dd 0100 	ldrd	r0, r1, [sp]
 80154e0:	f7ea fea4 	bl	800022c <__aeabi_dsub>
 80154e4:	4632      	mov	r2, r6
 80154e6:	462b      	mov	r3, r5
 80154e8:	f7eb f858 	bl	800059c <__aeabi_dmul>
 80154ec:	4632      	mov	r2, r6
 80154ee:	4682      	mov	sl, r0
 80154f0:	468b      	mov	fp, r1
 80154f2:	462b      	mov	r3, r5
 80154f4:	4630      	mov	r0, r6
 80154f6:	4639      	mov	r1, r7
 80154f8:	f7eb f850 	bl	800059c <__aeabi_dmul>
 80154fc:	2200      	movs	r2, #0
 80154fe:	4b0b      	ldr	r3, [pc, #44]	; (801552c <__kernel_tan+0x394>)
 8015500:	f7ea fe96 	bl	8000230 <__adddf3>
 8015504:	4602      	mov	r2, r0
 8015506:	460b      	mov	r3, r1
 8015508:	4650      	mov	r0, sl
 801550a:	4659      	mov	r1, fp
 801550c:	f7ea fe90 	bl	8000230 <__adddf3>
 8015510:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8015514:	f7eb f842 	bl	800059c <__aeabi_dmul>
 8015518:	4632      	mov	r2, r6
 801551a:	462b      	mov	r3, r5
 801551c:	f7ea fe88 	bl	8000230 <__adddf3>
 8015520:	e65f      	b.n	80151e2 <__kernel_tan+0x4a>
 8015522:	4682      	mov	sl, r0
 8015524:	468b      	mov	fp, r1
 8015526:	e65e      	b.n	80151e6 <__kernel_tan+0x4e>
 8015528:	bff00000 	.word	0xbff00000
 801552c:	3ff00000 	.word	0x3ff00000

08015530 <__kernel_cosf>:
 8015530:	ee10 3a10 	vmov	r3, s0
 8015534:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8015538:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 801553c:	eef7 6a00 	vmov.f32	s13, #112	; 0x3f800000  1.0
 8015540:	da05      	bge.n	801554e <__kernel_cosf+0x1e>
 8015542:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8015546:	ee17 2a90 	vmov	r2, s15
 801554a:	2a00      	cmp	r2, #0
 801554c:	d03b      	beq.n	80155c6 <__kernel_cosf+0x96>
 801554e:	ee20 6a00 	vmul.f32	s12, s0, s0
 8015552:	eeb6 7a00 	vmov.f32	s14, #96	; 0x3f000000  0.5
 8015556:	eddf 5a1d 	vldr	s11, [pc, #116]	; 80155cc <__kernel_cosf+0x9c>
 801555a:	4a1d      	ldr	r2, [pc, #116]	; (80155d0 <__kernel_cosf+0xa0>)
 801555c:	ee66 7a07 	vmul.f32	s15, s12, s14
 8015560:	ed9f 7a1c 	vldr	s14, [pc, #112]	; 80155d4 <__kernel_cosf+0xa4>
 8015564:	eea6 7a25 	vfma.f32	s14, s12, s11
 8015568:	4293      	cmp	r3, r2
 801556a:	eddf 5a1b 	vldr	s11, [pc, #108]	; 80155d8 <__kernel_cosf+0xa8>
 801556e:	eee7 5a06 	vfma.f32	s11, s14, s12
 8015572:	ed9f 7a1a 	vldr	s14, [pc, #104]	; 80155dc <__kernel_cosf+0xac>
 8015576:	eea5 7a86 	vfma.f32	s14, s11, s12
 801557a:	eddf 5a19 	vldr	s11, [pc, #100]	; 80155e0 <__kernel_cosf+0xb0>
 801557e:	eee7 5a06 	vfma.f32	s11, s14, s12
 8015582:	ed9f 7a18 	vldr	s14, [pc, #96]	; 80155e4 <__kernel_cosf+0xb4>
 8015586:	eea5 7a86 	vfma.f32	s14, s11, s12
 801558a:	ee60 0ac0 	vnmul.f32	s1, s1, s0
 801558e:	ee27 7a06 	vmul.f32	s14, s14, s12
 8015592:	eee6 0a07 	vfma.f32	s1, s12, s14
 8015596:	dc04      	bgt.n	80155a2 <__kernel_cosf+0x72>
 8015598:	ee77 0ae0 	vsub.f32	s1, s15, s1
 801559c:	ee36 0ae0 	vsub.f32	s0, s13, s1
 80155a0:	4770      	bx	lr
 80155a2:	4a11      	ldr	r2, [pc, #68]	; (80155e8 <__kernel_cosf+0xb8>)
 80155a4:	4293      	cmp	r3, r2
 80155a6:	bfda      	itte	le
 80155a8:	f103 437f 	addle.w	r3, r3, #4278190080	; 0xff000000
 80155ac:	ee07 3a10 	vmovle	s14, r3
 80155b0:	eeb5 7a02 	vmovgt.f32	s14, #82	; 0x3e900000  0.2812500
 80155b4:	ee77 7ac7 	vsub.f32	s15, s15, s14
 80155b8:	ee36 0ac7 	vsub.f32	s0, s13, s14
 80155bc:	ee77 7ae0 	vsub.f32	s15, s15, s1
 80155c0:	ee30 0a67 	vsub.f32	s0, s0, s15
 80155c4:	4770      	bx	lr
 80155c6:	eeb0 0a66 	vmov.f32	s0, s13
 80155ca:	4770      	bx	lr
 80155cc:	ad47d74e 	.word	0xad47d74e
 80155d0:	3e999999 	.word	0x3e999999
 80155d4:	310f74f6 	.word	0x310f74f6
 80155d8:	b493f27c 	.word	0xb493f27c
 80155dc:	37d00d01 	.word	0x37d00d01
 80155e0:	bab60b61 	.word	0xbab60b61
 80155e4:	3d2aaaab 	.word	0x3d2aaaab
 80155e8:	3f480000 	.word	0x3f480000

080155ec <__kernel_rem_pio2f>:
 80155ec:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 80155f0:	ed2d 8b04 	vpush	{d8-d9}
 80155f4:	b0d7      	sub	sp, #348	; 0x15c
 80155f6:	469b      	mov	fp, r3
 80155f8:	460e      	mov	r6, r1
 80155fa:	4bbe      	ldr	r3, [pc, #760]	; (80158f4 <__kernel_rem_pio2f+0x308>)
 80155fc:	9964      	ldr	r1, [sp, #400]	; 0x190
 80155fe:	9002      	str	r0, [sp, #8]
 8015600:	f853 9021 	ldr.w	r9, [r3, r1, lsl #2]
 8015604:	9865      	ldr	r0, [sp, #404]	; 0x194
 8015606:	ed9f 7abf 	vldr	s14, [pc, #764]	; 8015904 <__kernel_rem_pio2f+0x318>
 801560a:	1ed1      	subs	r1, r2, #3
 801560c:	2308      	movs	r3, #8
 801560e:	fb91 f1f3 	sdiv	r1, r1, r3
 8015612:	ea21 71e1 	bic.w	r1, r1, r1, asr #31
 8015616:	f10b 3aff 	add.w	sl, fp, #4294967295
 801561a:	1c4c      	adds	r4, r1, #1
 801561c:	eba2 04c4 	sub.w	r4, r2, r4, lsl #3
 8015620:	eba1 050a 	sub.w	r5, r1, sl
 8015624:	aa1a      	add	r2, sp, #104	; 0x68
 8015626:	eb09 070a 	add.w	r7, r9, sl
 801562a:	eb00 0c85 	add.w	ip, r0, r5, lsl #2
 801562e:	4696      	mov	lr, r2
 8015630:	2300      	movs	r3, #0
 8015632:	42bb      	cmp	r3, r7
 8015634:	dd0f      	ble.n	8015656 <__kernel_rem_pio2f+0x6a>
 8015636:	af42      	add	r7, sp, #264	; 0x108
 8015638:	2200      	movs	r2, #0
 801563a:	454a      	cmp	r2, r9
 801563c:	dc27      	bgt.n	801568e <__kernel_rem_pio2f+0xa2>
 801563e:	f10d 0c68 	add.w	ip, sp, #104	; 0x68
 8015642:	eb0b 0302 	add.w	r3, fp, r2
 8015646:	eb0c 0383 	add.w	r3, ip, r3, lsl #2
 801564a:	9d02      	ldr	r5, [sp, #8]
 801564c:	eddf 7aad 	vldr	s15, [pc, #692]	; 8015904 <__kernel_rem_pio2f+0x318>
 8015650:	f04f 0c00 	mov.w	ip, #0
 8015654:	e015      	b.n	8015682 <__kernel_rem_pio2f+0x96>
 8015656:	42dd      	cmn	r5, r3
 8015658:	bf5d      	ittte	pl
 801565a:	f85c 2023 	ldrpl.w	r2, [ip, r3, lsl #2]
 801565e:	ee07 2a90 	vmovpl	s15, r2
 8015662:	eef8 7ae7 	vcvtpl.f32.s32	s15, s15
 8015666:	eef0 7a47 	vmovmi.f32	s15, s14
 801566a:	ecee 7a01 	vstmia	lr!, {s15}
 801566e:	3301      	adds	r3, #1
 8015670:	e7df      	b.n	8015632 <__kernel_rem_pio2f+0x46>
 8015672:	ecf5 6a01 	vldmia	r5!, {s13}
 8015676:	ed33 7a01 	vldmdb	r3!, {s14}
 801567a:	eee6 7a87 	vfma.f32	s15, s13, s14
 801567e:	f10c 0c01 	add.w	ip, ip, #1
 8015682:	45d4      	cmp	ip, sl
 8015684:	ddf5      	ble.n	8015672 <__kernel_rem_pio2f+0x86>
 8015686:	ece7 7a01 	vstmia	r7!, {s15}
 801568a:	3201      	adds	r2, #1
 801568c:	e7d5      	b.n	801563a <__kernel_rem_pio2f+0x4e>
 801568e:	ab06      	add	r3, sp, #24
 8015690:	eb03 0389 	add.w	r3, r3, r9, lsl #2
 8015694:	9304      	str	r3, [sp, #16]
 8015696:	eddf 8a9a 	vldr	s17, [pc, #616]	; 8015900 <__kernel_rem_pio2f+0x314>
 801569a:	ed9f 9a98 	vldr	s18, [pc, #608]	; 80158fc <__kernel_rem_pio2f+0x310>
 801569e:	eb00 0381 	add.w	r3, r0, r1, lsl #2
 80156a2:	9303      	str	r3, [sp, #12]
 80156a4:	464d      	mov	r5, r9
 80156a6:	ab56      	add	r3, sp, #344	; 0x158
 80156a8:	f105 4780 	add.w	r7, r5, #1073741824	; 0x40000000
 80156ac:	eb03 0385 	add.w	r3, r3, r5, lsl #2
 80156b0:	3f01      	subs	r7, #1
 80156b2:	ed13 0a14 	vldr	s0, [r3, #-80]	; 0xffffffb0
 80156b6:	00bf      	lsls	r7, r7, #2
 80156b8:	ab56      	add	r3, sp, #344	; 0x158
 80156ba:	19da      	adds	r2, r3, r7
 80156bc:	3a4c      	subs	r2, #76	; 0x4c
 80156be:	2300      	movs	r3, #0
 80156c0:	1ae9      	subs	r1, r5, r3
 80156c2:	2900      	cmp	r1, #0
 80156c4:	dc4c      	bgt.n	8015760 <__kernel_rem_pio2f+0x174>
 80156c6:	4620      	mov	r0, r4
 80156c8:	f000 fca6 	bl	8016018 <scalbnf>
 80156cc:	eeb0 8a40 	vmov.f32	s16, s0
 80156d0:	eeb4 0a00 	vmov.f32	s0, #64	; 0x3e000000  0.125
 80156d4:	ee28 0a00 	vmul.f32	s0, s16, s0
 80156d8:	f000 fc02 	bl	8015ee0 <floorf>
 80156dc:	eef2 7a00 	vmov.f32	s15, #32	; 0x41000000  8.0
 80156e0:	eea0 8a67 	vfms.f32	s16, s0, s15
 80156e4:	2c00      	cmp	r4, #0
 80156e6:	eefd 7ac8 	vcvt.s32.f32	s15, s16
 80156ea:	edcd 7a01 	vstr	s15, [sp, #4]
 80156ee:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80156f2:	ee38 8a67 	vsub.f32	s16, s16, s15
 80156f6:	dd48      	ble.n	801578a <__kernel_rem_pio2f+0x19e>
 80156f8:	1e69      	subs	r1, r5, #1
 80156fa:	ab06      	add	r3, sp, #24
 80156fc:	f1c4 0008 	rsb	r0, r4, #8
 8015700:	f853 c021 	ldr.w	ip, [r3, r1, lsl #2]
 8015704:	9a01      	ldr	r2, [sp, #4]
 8015706:	fa4c f300 	asr.w	r3, ip, r0
 801570a:	441a      	add	r2, r3
 801570c:	4083      	lsls	r3, r0
 801570e:	9201      	str	r2, [sp, #4]
 8015710:	ebac 0203 	sub.w	r2, ip, r3
 8015714:	ab06      	add	r3, sp, #24
 8015716:	f843 2021 	str.w	r2, [r3, r1, lsl #2]
 801571a:	f1c4 0307 	rsb	r3, r4, #7
 801571e:	fa42 f803 	asr.w	r8, r2, r3
 8015722:	f1b8 0f00 	cmp.w	r8, #0
 8015726:	dd41      	ble.n	80157ac <__kernel_rem_pio2f+0x1c0>
 8015728:	9b01      	ldr	r3, [sp, #4]
 801572a:	2000      	movs	r0, #0
 801572c:	3301      	adds	r3, #1
 801572e:	9301      	str	r3, [sp, #4]
 8015730:	4601      	mov	r1, r0
 8015732:	4285      	cmp	r5, r0
 8015734:	dc6d      	bgt.n	8015812 <__kernel_rem_pio2f+0x226>
 8015736:	2c00      	cmp	r4, #0
 8015738:	dd04      	ble.n	8015744 <__kernel_rem_pio2f+0x158>
 801573a:	2c01      	cmp	r4, #1
 801573c:	d07e      	beq.n	801583c <__kernel_rem_pio2f+0x250>
 801573e:	2c02      	cmp	r4, #2
 8015740:	f000 8086 	beq.w	8015850 <__kernel_rem_pio2f+0x264>
 8015744:	f1b8 0f02 	cmp.w	r8, #2
 8015748:	d130      	bne.n	80157ac <__kernel_rem_pio2f+0x1c0>
 801574a:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 801574e:	ee30 8a48 	vsub.f32	s16, s0, s16
 8015752:	b359      	cbz	r1, 80157ac <__kernel_rem_pio2f+0x1c0>
 8015754:	4620      	mov	r0, r4
 8015756:	f000 fc5f 	bl	8016018 <scalbnf>
 801575a:	ee38 8a40 	vsub.f32	s16, s16, s0
 801575e:	e025      	b.n	80157ac <__kernel_rem_pio2f+0x1c0>
 8015760:	ee60 7a28 	vmul.f32	s15, s0, s17
 8015764:	a806      	add	r0, sp, #24
 8015766:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801576a:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 801576e:	eea7 0ac9 	vfms.f32	s0, s15, s18
 8015772:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8015776:	ee10 1a10 	vmov	r1, s0
 801577a:	ed32 0a01 	vldmdb	r2!, {s0}
 801577e:	f840 1023 	str.w	r1, [r0, r3, lsl #2]
 8015782:	ee37 0a80 	vadd.f32	s0, s15, s0
 8015786:	3301      	adds	r3, #1
 8015788:	e79a      	b.n	80156c0 <__kernel_rem_pio2f+0xd4>
 801578a:	d106      	bne.n	801579a <__kernel_rem_pio2f+0x1ae>
 801578c:	1e6b      	subs	r3, r5, #1
 801578e:	aa06      	add	r2, sp, #24
 8015790:	f852 2023 	ldr.w	r2, [r2, r3, lsl #2]
 8015794:	ea4f 2822 	mov.w	r8, r2, asr #8
 8015798:	e7c3      	b.n	8015722 <__kernel_rem_pio2f+0x136>
 801579a:	eef6 7a00 	vmov.f32	s15, #96	; 0x3f000000  0.5
 801579e:	eeb4 8ae7 	vcmpe.f32	s16, s15
 80157a2:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80157a6:	da31      	bge.n	801580c <__kernel_rem_pio2f+0x220>
 80157a8:	f04f 0800 	mov.w	r8, #0
 80157ac:	eeb5 8a40 	vcmp.f32	s16, #0.0
 80157b0:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 80157b4:	f040 80a8 	bne.w	8015908 <__kernel_rem_pio2f+0x31c>
 80157b8:	1e6b      	subs	r3, r5, #1
 80157ba:	4618      	mov	r0, r3
 80157bc:	2200      	movs	r2, #0
 80157be:	4548      	cmp	r0, r9
 80157c0:	da4d      	bge.n	801585e <__kernel_rem_pio2f+0x272>
 80157c2:	2a00      	cmp	r2, #0
 80157c4:	f000 8087 	beq.w	80158d6 <__kernel_rem_pio2f+0x2ea>
 80157c8:	aa06      	add	r2, sp, #24
 80157ca:	3c08      	subs	r4, #8
 80157cc:	f852 1023 	ldr.w	r1, [r2, r3, lsl #2]
 80157d0:	2900      	cmp	r1, #0
 80157d2:	f000 808d 	beq.w	80158f0 <__kernel_rem_pio2f+0x304>
 80157d6:	4620      	mov	r0, r4
 80157d8:	eeb7 0a00 	vmov.f32	s0, #112	; 0x3f800000  1.0
 80157dc:	9302      	str	r3, [sp, #8]
 80157de:	f000 fc1b 	bl	8016018 <scalbnf>
 80157e2:	9b02      	ldr	r3, [sp, #8]
 80157e4:	ed9f 7a46 	vldr	s14, [pc, #280]	; 8015900 <__kernel_rem_pio2f+0x314>
 80157e8:	0099      	lsls	r1, r3, #2
 80157ea:	aa42      	add	r2, sp, #264	; 0x108
 80157ec:	1850      	adds	r0, r2, r1
 80157ee:	1d05      	adds	r5, r0, #4
 80157f0:	461c      	mov	r4, r3
 80157f2:	2c00      	cmp	r4, #0
 80157f4:	f280 80b8 	bge.w	8015968 <__kernel_rem_pio2f+0x37c>
 80157f8:	2500      	movs	r5, #0
 80157fa:	1b5c      	subs	r4, r3, r5
 80157fc:	2c00      	cmp	r4, #0
 80157fe:	f2c0 80d8 	blt.w	80159b2 <__kernel_rem_pio2f+0x3c6>
 8015802:	4f3d      	ldr	r7, [pc, #244]	; (80158f8 <__kernel_rem_pio2f+0x30c>)
 8015804:	eddf 7a3f 	vldr	s15, [pc, #252]	; 8015904 <__kernel_rem_pio2f+0x318>
 8015808:	2400      	movs	r4, #0
 801580a:	e0c6      	b.n	801599a <__kernel_rem_pio2f+0x3ae>
 801580c:	f04f 0802 	mov.w	r8, #2
 8015810:	e78a      	b.n	8015728 <__kernel_rem_pio2f+0x13c>
 8015812:	ab06      	add	r3, sp, #24
 8015814:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8015818:	b949      	cbnz	r1, 801582e <__kernel_rem_pio2f+0x242>
 801581a:	b12b      	cbz	r3, 8015828 <__kernel_rem_pio2f+0x23c>
 801581c:	aa06      	add	r2, sp, #24
 801581e:	f5c3 7380 	rsb	r3, r3, #256	; 0x100
 8015822:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8015826:	2301      	movs	r3, #1
 8015828:	3001      	adds	r0, #1
 801582a:	4619      	mov	r1, r3
 801582c:	e781      	b.n	8015732 <__kernel_rem_pio2f+0x146>
 801582e:	aa06      	add	r2, sp, #24
 8015830:	f1c3 03ff 	rsb	r3, r3, #255	; 0xff
 8015834:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 8015838:	460b      	mov	r3, r1
 801583a:	e7f5      	b.n	8015828 <__kernel_rem_pio2f+0x23c>
 801583c:	1e68      	subs	r0, r5, #1
 801583e:	ab06      	add	r3, sp, #24
 8015840:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8015844:	f003 037f 	and.w	r3, r3, #127	; 0x7f
 8015848:	aa06      	add	r2, sp, #24
 801584a:	f842 3020 	str.w	r3, [r2, r0, lsl #2]
 801584e:	e779      	b.n	8015744 <__kernel_rem_pio2f+0x158>
 8015850:	1e68      	subs	r0, r5, #1
 8015852:	ab06      	add	r3, sp, #24
 8015854:	f853 3020 	ldr.w	r3, [r3, r0, lsl #2]
 8015858:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 801585c:	e7f4      	b.n	8015848 <__kernel_rem_pio2f+0x25c>
 801585e:	a906      	add	r1, sp, #24
 8015860:	f851 1020 	ldr.w	r1, [r1, r0, lsl #2]
 8015864:	3801      	subs	r0, #1
 8015866:	430a      	orrs	r2, r1
 8015868:	e7a9      	b.n	80157be <__kernel_rem_pio2f+0x1d2>
 801586a:	f10c 0c01 	add.w	ip, ip, #1
 801586e:	f853 2d04 	ldr.w	r2, [r3, #-4]!
 8015872:	2a00      	cmp	r2, #0
 8015874:	d0f9      	beq.n	801586a <__kernel_rem_pio2f+0x27e>
 8015876:	eb0b 0305 	add.w	r3, fp, r5
 801587a:	aa1a      	add	r2, sp, #104	; 0x68
 801587c:	009b      	lsls	r3, r3, #2
 801587e:	1898      	adds	r0, r3, r2
 8015880:	3004      	adds	r0, #4
 8015882:	1c69      	adds	r1, r5, #1
 8015884:	3704      	adds	r7, #4
 8015886:	2200      	movs	r2, #0
 8015888:	4465      	add	r5, ip
 801588a:	9005      	str	r0, [sp, #20]
 801588c:	428d      	cmp	r5, r1
 801588e:	f6ff af0a 	blt.w	80156a6 <__kernel_rem_pio2f+0xba>
 8015892:	a81a      	add	r0, sp, #104	; 0x68
 8015894:	eb02 0c03 	add.w	ip, r2, r3
 8015898:	4484      	add	ip, r0
 801589a:	9803      	ldr	r0, [sp, #12]
 801589c:	f8dd e008 	ldr.w	lr, [sp, #8]
 80158a0:	f850 0021 	ldr.w	r0, [r0, r1, lsl #2]
 80158a4:	9001      	str	r0, [sp, #4]
 80158a6:	ee07 0a90 	vmov	s15, r0
 80158aa:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 80158ae:	9805      	ldr	r0, [sp, #20]
 80158b0:	edcc 7a00 	vstr	s15, [ip]
 80158b4:	eddf 7a13 	vldr	s15, [pc, #76]	; 8015904 <__kernel_rem_pio2f+0x318>
 80158b8:	eb00 0802 	add.w	r8, r0, r2
 80158bc:	f04f 0c00 	mov.w	ip, #0
 80158c0:	45d4      	cmp	ip, sl
 80158c2:	dd0c      	ble.n	80158de <__kernel_rem_pio2f+0x2f2>
 80158c4:	eb02 0c07 	add.w	ip, r2, r7
 80158c8:	a842      	add	r0, sp, #264	; 0x108
 80158ca:	4484      	add	ip, r0
 80158cc:	edcc 7a01 	vstr	s15, [ip, #4]
 80158d0:	3101      	adds	r1, #1
 80158d2:	3204      	adds	r2, #4
 80158d4:	e7da      	b.n	801588c <__kernel_rem_pio2f+0x2a0>
 80158d6:	9b04      	ldr	r3, [sp, #16]
 80158d8:	f04f 0c01 	mov.w	ip, #1
 80158dc:	e7c7      	b.n	801586e <__kernel_rem_pio2f+0x282>
 80158de:	ecfe 6a01 	vldmia	lr!, {s13}
 80158e2:	ed38 7a01 	vldmdb	r8!, {s14}
 80158e6:	f10c 0c01 	add.w	ip, ip, #1
 80158ea:	eee6 7a87 	vfma.f32	s15, s13, s14
 80158ee:	e7e7      	b.n	80158c0 <__kernel_rem_pio2f+0x2d4>
 80158f0:	3b01      	subs	r3, #1
 80158f2:	e769      	b.n	80157c8 <__kernel_rem_pio2f+0x1dc>
 80158f4:	08016c04 	.word	0x08016c04
 80158f8:	08016bd8 	.word	0x08016bd8
 80158fc:	43800000 	.word	0x43800000
 8015900:	3b800000 	.word	0x3b800000
 8015904:	00000000 	.word	0x00000000
 8015908:	4260      	negs	r0, r4
 801590a:	eeb0 0a48 	vmov.f32	s0, s16
 801590e:	f000 fb83 	bl	8016018 <scalbnf>
 8015912:	ed1f 7a06 	vldr	s14, [pc, #-24]	; 80158fc <__kernel_rem_pio2f+0x310>
 8015916:	eeb4 0ac7 	vcmpe.f32	s0, s14
 801591a:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 801591e:	db1a      	blt.n	8015956 <__kernel_rem_pio2f+0x36a>
 8015920:	ed5f 7a09 	vldr	s15, [pc, #-36]	; 8015900 <__kernel_rem_pio2f+0x314>
 8015924:	ee60 7a27 	vmul.f32	s15, s0, s15
 8015928:	aa06      	add	r2, sp, #24
 801592a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801592e:	a906      	add	r1, sp, #24
 8015930:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015934:	3408      	adds	r4, #8
 8015936:	eea7 0ac7 	vfms.f32	s0, s15, s14
 801593a:	eefd 7ae7 	vcvt.s32.f32	s15, s15
 801593e:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 8015942:	ee10 3a10 	vmov	r3, s0
 8015946:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
 801594a:	1c6b      	adds	r3, r5, #1
 801594c:	ee17 2a90 	vmov	r2, s15
 8015950:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
 8015954:	e73f      	b.n	80157d6 <__kernel_rem_pio2f+0x1ea>
 8015956:	eebd 0ac0 	vcvt.s32.f32	s0, s0
 801595a:	aa06      	add	r2, sp, #24
 801595c:	ee10 3a10 	vmov	r3, s0
 8015960:	f842 3025 	str.w	r3, [r2, r5, lsl #2]
 8015964:	462b      	mov	r3, r5
 8015966:	e736      	b.n	80157d6 <__kernel_rem_pio2f+0x1ea>
 8015968:	aa06      	add	r2, sp, #24
 801596a:	f852 2024 	ldr.w	r2, [r2, r4, lsl #2]
 801596e:	9202      	str	r2, [sp, #8]
 8015970:	ee07 2a90 	vmov	s15, r2
 8015974:	eef8 7ae7 	vcvt.f32.s32	s15, s15
 8015978:	3c01      	subs	r4, #1
 801597a:	ee67 7a80 	vmul.f32	s15, s15, s0
 801597e:	ee20 0a07 	vmul.f32	s0, s0, s14
 8015982:	ed65 7a01 	vstmdb	r5!, {s15}
 8015986:	e734      	b.n	80157f2 <__kernel_rem_pio2f+0x206>
 8015988:	eb00 0c84 	add.w	ip, r0, r4, lsl #2
 801598c:	ecf7 6a01 	vldmia	r7!, {s13}
 8015990:	ed9c 7a00 	vldr	s14, [ip]
 8015994:	eee6 7a87 	vfma.f32	s15, s13, s14
 8015998:	3401      	adds	r4, #1
 801599a:	454c      	cmp	r4, r9
 801599c:	dc01      	bgt.n	80159a2 <__kernel_rem_pio2f+0x3b6>
 801599e:	42a5      	cmp	r5, r4
 80159a0:	daf2      	bge.n	8015988 <__kernel_rem_pio2f+0x39c>
 80159a2:	aa56      	add	r2, sp, #344	; 0x158
 80159a4:	eb02 0485 	add.w	r4, r2, r5, lsl #2
 80159a8:	ed44 7a28 	vstr	s15, [r4, #-160]	; 0xffffff60
 80159ac:	3501      	adds	r5, #1
 80159ae:	3804      	subs	r0, #4
 80159b0:	e723      	b.n	80157fa <__kernel_rem_pio2f+0x20e>
 80159b2:	9a64      	ldr	r2, [sp, #400]	; 0x190
 80159b4:	2a03      	cmp	r2, #3
 80159b6:	d84d      	bhi.n	8015a54 <__kernel_rem_pio2f+0x468>
 80159b8:	e8df f002 	tbb	[pc, r2]
 80159bc:	021f1f3e 	.word	0x021f1f3e
 80159c0:	aa56      	add	r2, sp, #344	; 0x158
 80159c2:	4411      	add	r1, r2
 80159c4:	399c      	subs	r1, #156	; 0x9c
 80159c6:	4608      	mov	r0, r1
 80159c8:	461c      	mov	r4, r3
 80159ca:	2c00      	cmp	r4, #0
 80159cc:	dc5f      	bgt.n	8015a8e <__kernel_rem_pio2f+0x4a2>
 80159ce:	4608      	mov	r0, r1
 80159d0:	461c      	mov	r4, r3
 80159d2:	2c01      	cmp	r4, #1
 80159d4:	dc6b      	bgt.n	8015aae <__kernel_rem_pio2f+0x4c2>
 80159d6:	ed5f 7a35 	vldr	s15, [pc, #-212]	; 8015904 <__kernel_rem_pio2f+0x318>
 80159da:	2b01      	cmp	r3, #1
 80159dc:	dc77      	bgt.n	8015ace <__kernel_rem_pio2f+0x4e2>
 80159de:	eddd 6a2e 	vldr	s13, [sp, #184]	; 0xb8
 80159e2:	ed9d 7a2f 	vldr	s14, [sp, #188]	; 0xbc
 80159e6:	f1b8 0f00 	cmp.w	r8, #0
 80159ea:	d176      	bne.n	8015ada <__kernel_rem_pio2f+0x4ee>
 80159ec:	edc6 6a00 	vstr	s13, [r6]
 80159f0:	ed86 7a01 	vstr	s14, [r6, #4]
 80159f4:	edc6 7a02 	vstr	s15, [r6, #8]
 80159f8:	e02c      	b.n	8015a54 <__kernel_rem_pio2f+0x468>
 80159fa:	aa56      	add	r2, sp, #344	; 0x158
 80159fc:	4411      	add	r1, r2
 80159fe:	ed1f 7a3f 	vldr	s14, [pc, #-252]	; 8015904 <__kernel_rem_pio2f+0x318>
 8015a02:	399c      	subs	r1, #156	; 0x9c
 8015a04:	4618      	mov	r0, r3
 8015a06:	2800      	cmp	r0, #0
 8015a08:	da32      	bge.n	8015a70 <__kernel_rem_pio2f+0x484>
 8015a0a:	f1b8 0f00 	cmp.w	r8, #0
 8015a0e:	d035      	beq.n	8015a7c <__kernel_rem_pio2f+0x490>
 8015a10:	eef1 7a47 	vneg.f32	s15, s14
 8015a14:	edc6 7a00 	vstr	s15, [r6]
 8015a18:	eddd 7a2e 	vldr	s15, [sp, #184]	; 0xb8
 8015a1c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015a20:	a82f      	add	r0, sp, #188	; 0xbc
 8015a22:	2101      	movs	r1, #1
 8015a24:	428b      	cmp	r3, r1
 8015a26:	da2c      	bge.n	8015a82 <__kernel_rem_pio2f+0x496>
 8015a28:	f1b8 0f00 	cmp.w	r8, #0
 8015a2c:	d001      	beq.n	8015a32 <__kernel_rem_pio2f+0x446>
 8015a2e:	eef1 7a67 	vneg.f32	s15, s15
 8015a32:	edc6 7a01 	vstr	s15, [r6, #4]
 8015a36:	e00d      	b.n	8015a54 <__kernel_rem_pio2f+0x468>
 8015a38:	aa56      	add	r2, sp, #344	; 0x158
 8015a3a:	4411      	add	r1, r2
 8015a3c:	ed5f 7a4f 	vldr	s15, [pc, #-316]	; 8015904 <__kernel_rem_pio2f+0x318>
 8015a40:	399c      	subs	r1, #156	; 0x9c
 8015a42:	2b00      	cmp	r3, #0
 8015a44:	da0e      	bge.n	8015a64 <__kernel_rem_pio2f+0x478>
 8015a46:	f1b8 0f00 	cmp.w	r8, #0
 8015a4a:	d001      	beq.n	8015a50 <__kernel_rem_pio2f+0x464>
 8015a4c:	eef1 7a67 	vneg.f32	s15, s15
 8015a50:	edc6 7a00 	vstr	s15, [r6]
 8015a54:	9b01      	ldr	r3, [sp, #4]
 8015a56:	f003 0007 	and.w	r0, r3, #7
 8015a5a:	b057      	add	sp, #348	; 0x15c
 8015a5c:	ecbd 8b04 	vpop	{d8-d9}
 8015a60:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 8015a64:	ed31 7a01 	vldmdb	r1!, {s14}
 8015a68:	3b01      	subs	r3, #1
 8015a6a:	ee77 7a87 	vadd.f32	s15, s15, s14
 8015a6e:	e7e8      	b.n	8015a42 <__kernel_rem_pio2f+0x456>
 8015a70:	ed71 7a01 	vldmdb	r1!, {s15}
 8015a74:	3801      	subs	r0, #1
 8015a76:	ee37 7a27 	vadd.f32	s14, s14, s15
 8015a7a:	e7c4      	b.n	8015a06 <__kernel_rem_pio2f+0x41a>
 8015a7c:	eef0 7a47 	vmov.f32	s15, s14
 8015a80:	e7c8      	b.n	8015a14 <__kernel_rem_pio2f+0x428>
 8015a82:	ecb0 7a01 	vldmia	r0!, {s14}
 8015a86:	3101      	adds	r1, #1
 8015a88:	ee77 7a87 	vadd.f32	s15, s15, s14
 8015a8c:	e7ca      	b.n	8015a24 <__kernel_rem_pio2f+0x438>
 8015a8e:	ed50 7a02 	vldr	s15, [r0, #-8]
 8015a92:	ed70 6a01 	vldmdb	r0!, {s13}
 8015a96:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8015a9a:	3c01      	subs	r4, #1
 8015a9c:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015aa0:	ed00 7a01 	vstr	s14, [r0, #-4]
 8015aa4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015aa8:	edc0 7a00 	vstr	s15, [r0]
 8015aac:	e78d      	b.n	80159ca <__kernel_rem_pio2f+0x3de>
 8015aae:	ed50 7a02 	vldr	s15, [r0, #-8]
 8015ab2:	ed70 6a01 	vldmdb	r0!, {s13}
 8015ab6:	ee37 7aa6 	vadd.f32	s14, s15, s13
 8015aba:	3c01      	subs	r4, #1
 8015abc:	ee77 7ac7 	vsub.f32	s15, s15, s14
 8015ac0:	ed00 7a01 	vstr	s14, [r0, #-4]
 8015ac4:	ee77 7aa6 	vadd.f32	s15, s15, s13
 8015ac8:	edc0 7a00 	vstr	s15, [r0]
 8015acc:	e781      	b.n	80159d2 <__kernel_rem_pio2f+0x3e6>
 8015ace:	ed31 7a01 	vldmdb	r1!, {s14}
 8015ad2:	3b01      	subs	r3, #1
 8015ad4:	ee77 7a87 	vadd.f32	s15, s15, s14
 8015ad8:	e77f      	b.n	80159da <__kernel_rem_pio2f+0x3ee>
 8015ada:	eef1 6a66 	vneg.f32	s13, s13
 8015ade:	eeb1 7a47 	vneg.f32	s14, s14
 8015ae2:	edc6 6a00 	vstr	s13, [r6]
 8015ae6:	ed86 7a01 	vstr	s14, [r6, #4]
 8015aea:	eef1 7a67 	vneg.f32	s15, s15
 8015aee:	e781      	b.n	80159f4 <__kernel_rem_pio2f+0x408>

08015af0 <__kernel_sinf>:
 8015af0:	ee10 3a10 	vmov	r3, s0
 8015af4:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8015af8:	f1b3 5f48 	cmp.w	r3, #838860800	; 0x32000000
 8015afc:	da04      	bge.n	8015b08 <__kernel_sinf+0x18>
 8015afe:	eefd 7ac0 	vcvt.s32.f32	s15, s0
 8015b02:	ee17 3a90 	vmov	r3, s15
 8015b06:	b35b      	cbz	r3, 8015b60 <__kernel_sinf+0x70>
 8015b08:	ee20 7a00 	vmul.f32	s14, s0, s0
 8015b0c:	eddf 7a15 	vldr	s15, [pc, #84]	; 8015b64 <__kernel_sinf+0x74>
 8015b10:	ed9f 6a15 	vldr	s12, [pc, #84]	; 8015b68 <__kernel_sinf+0x78>
 8015b14:	eea7 6a27 	vfma.f32	s12, s14, s15
 8015b18:	eddf 7a14 	vldr	s15, [pc, #80]	; 8015b6c <__kernel_sinf+0x7c>
 8015b1c:	eee6 7a07 	vfma.f32	s15, s12, s14
 8015b20:	ed9f 6a13 	vldr	s12, [pc, #76]	; 8015b70 <__kernel_sinf+0x80>
 8015b24:	eea7 6a87 	vfma.f32	s12, s15, s14
 8015b28:	eddf 7a12 	vldr	s15, [pc, #72]	; 8015b74 <__kernel_sinf+0x84>
 8015b2c:	ee60 6a07 	vmul.f32	s13, s0, s14
 8015b30:	eee6 7a07 	vfma.f32	s15, s12, s14
 8015b34:	b930      	cbnz	r0, 8015b44 <__kernel_sinf+0x54>
 8015b36:	ed9f 6a10 	vldr	s12, [pc, #64]	; 8015b78 <__kernel_sinf+0x88>
 8015b3a:	eea7 6a27 	vfma.f32	s12, s14, s15
 8015b3e:	eea6 0a26 	vfma.f32	s0, s12, s13
 8015b42:	4770      	bx	lr
 8015b44:	ee67 7ae6 	vnmul.f32	s15, s15, s13
 8015b48:	eeb6 6a00 	vmov.f32	s12, #96	; 0x3f000000  0.5
 8015b4c:	eee0 7a86 	vfma.f32	s15, s1, s12
 8015b50:	eed7 0a87 	vfnms.f32	s1, s15, s14
 8015b54:	eddf 7a09 	vldr	s15, [pc, #36]	; 8015b7c <__kernel_sinf+0x8c>
 8015b58:	eee6 0aa7 	vfma.f32	s1, s13, s15
 8015b5c:	ee30 0a60 	vsub.f32	s0, s0, s1
 8015b60:	4770      	bx	lr
 8015b62:	bf00      	nop
 8015b64:	2f2ec9d3 	.word	0x2f2ec9d3
 8015b68:	b2d72f34 	.word	0xb2d72f34
 8015b6c:	3638ef1b 	.word	0x3638ef1b
 8015b70:	b9500d01 	.word	0xb9500d01
 8015b74:	3c088889 	.word	0x3c088889
 8015b78:	be2aaaab 	.word	0xbe2aaaab
 8015b7c:	3e2aaaab 	.word	0x3e2aaaab

08015b80 <fabs>:
 8015b80:	ec51 0b10 	vmov	r0, r1, d0
 8015b84:	ee10 2a10 	vmov	r2, s0
 8015b88:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8015b8c:	ec43 2b10 	vmov	d0, r2, r3
 8015b90:	4770      	bx	lr

08015b92 <finite>:
 8015b92:	ee10 3a90 	vmov	r3, s1
 8015b96:	f043 4000 	orr.w	r0, r3, #2147483648	; 0x80000000
 8015b9a:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8015b9e:	0fc0      	lsrs	r0, r0, #31
 8015ba0:	4770      	bx	lr
 8015ba2:	0000      	movs	r0, r0
 8015ba4:	0000      	movs	r0, r0
	...

08015ba8 <floor>:
 8015ba8:	ec51 0b10 	vmov	r0, r1, d0
 8015bac:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8015bb0:	f3c1 570a 	ubfx	r7, r1, #20, #11
 8015bb4:	f2a7 36ff 	subw	r6, r7, #1023	; 0x3ff
 8015bb8:	2e13      	cmp	r6, #19
 8015bba:	460c      	mov	r4, r1
 8015bbc:	ee10 5a10 	vmov	r5, s0
 8015bc0:	4680      	mov	r8, r0
 8015bc2:	dc34      	bgt.n	8015c2e <floor+0x86>
 8015bc4:	2e00      	cmp	r6, #0
 8015bc6:	da16      	bge.n	8015bf6 <floor+0x4e>
 8015bc8:	a335      	add	r3, pc, #212	; (adr r3, 8015ca0 <floor+0xf8>)
 8015bca:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015bce:	f7ea fb2f 	bl	8000230 <__adddf3>
 8015bd2:	2200      	movs	r2, #0
 8015bd4:	2300      	movs	r3, #0
 8015bd6:	f7ea ff71 	bl	8000abc <__aeabi_dcmpgt>
 8015bda:	b148      	cbz	r0, 8015bf0 <floor+0x48>
 8015bdc:	2c00      	cmp	r4, #0
 8015bde:	da59      	bge.n	8015c94 <floor+0xec>
 8015be0:	f024 4300 	bic.w	r3, r4, #2147483648	; 0x80000000
 8015be4:	4a30      	ldr	r2, [pc, #192]	; (8015ca8 <floor+0x100>)
 8015be6:	432b      	orrs	r3, r5
 8015be8:	2500      	movs	r5, #0
 8015bea:	42ab      	cmp	r3, r5
 8015bec:	bf18      	it	ne
 8015bee:	4614      	movne	r4, r2
 8015bf0:	4621      	mov	r1, r4
 8015bf2:	4628      	mov	r0, r5
 8015bf4:	e025      	b.n	8015c42 <floor+0x9a>
 8015bf6:	4f2d      	ldr	r7, [pc, #180]	; (8015cac <floor+0x104>)
 8015bf8:	4137      	asrs	r7, r6
 8015bfa:	ea01 0307 	and.w	r3, r1, r7
 8015bfe:	4303      	orrs	r3, r0
 8015c00:	d01f      	beq.n	8015c42 <floor+0x9a>
 8015c02:	a327      	add	r3, pc, #156	; (adr r3, 8015ca0 <floor+0xf8>)
 8015c04:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015c08:	f7ea fb12 	bl	8000230 <__adddf3>
 8015c0c:	2200      	movs	r2, #0
 8015c0e:	2300      	movs	r3, #0
 8015c10:	f7ea ff54 	bl	8000abc <__aeabi_dcmpgt>
 8015c14:	2800      	cmp	r0, #0
 8015c16:	d0eb      	beq.n	8015bf0 <floor+0x48>
 8015c18:	2c00      	cmp	r4, #0
 8015c1a:	bfbe      	ittt	lt
 8015c1c:	f44f 1380 	movlt.w	r3, #1048576	; 0x100000
 8015c20:	fa43 f606 	asrlt.w	r6, r3, r6
 8015c24:	19a4      	addlt	r4, r4, r6
 8015c26:	ea24 0407 	bic.w	r4, r4, r7
 8015c2a:	2500      	movs	r5, #0
 8015c2c:	e7e0      	b.n	8015bf0 <floor+0x48>
 8015c2e:	2e33      	cmp	r6, #51	; 0x33
 8015c30:	dd0b      	ble.n	8015c4a <floor+0xa2>
 8015c32:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8015c36:	d104      	bne.n	8015c42 <floor+0x9a>
 8015c38:	ee10 2a10 	vmov	r2, s0
 8015c3c:	460b      	mov	r3, r1
 8015c3e:	f7ea faf7 	bl	8000230 <__adddf3>
 8015c42:	ec41 0b10 	vmov	d0, r0, r1
 8015c46:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 8015c4a:	f2a7 4713 	subw	r7, r7, #1043	; 0x413
 8015c4e:	f04f 33ff 	mov.w	r3, #4294967295
 8015c52:	fa23 f707 	lsr.w	r7, r3, r7
 8015c56:	4207      	tst	r7, r0
 8015c58:	d0f3      	beq.n	8015c42 <floor+0x9a>
 8015c5a:	a311      	add	r3, pc, #68	; (adr r3, 8015ca0 <floor+0xf8>)
 8015c5c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015c60:	f7ea fae6 	bl	8000230 <__adddf3>
 8015c64:	2200      	movs	r2, #0
 8015c66:	2300      	movs	r3, #0
 8015c68:	f7ea ff28 	bl	8000abc <__aeabi_dcmpgt>
 8015c6c:	2800      	cmp	r0, #0
 8015c6e:	d0bf      	beq.n	8015bf0 <floor+0x48>
 8015c70:	2c00      	cmp	r4, #0
 8015c72:	da02      	bge.n	8015c7a <floor+0xd2>
 8015c74:	2e14      	cmp	r6, #20
 8015c76:	d103      	bne.n	8015c80 <floor+0xd8>
 8015c78:	3401      	adds	r4, #1
 8015c7a:	ea25 0507 	bic.w	r5, r5, r7
 8015c7e:	e7b7      	b.n	8015bf0 <floor+0x48>
 8015c80:	2301      	movs	r3, #1
 8015c82:	f1c6 0634 	rsb	r6, r6, #52	; 0x34
 8015c86:	fa03 f606 	lsl.w	r6, r3, r6
 8015c8a:	4435      	add	r5, r6
 8015c8c:	4545      	cmp	r5, r8
 8015c8e:	bf38      	it	cc
 8015c90:	18e4      	addcc	r4, r4, r3
 8015c92:	e7f2      	b.n	8015c7a <floor+0xd2>
 8015c94:	2500      	movs	r5, #0
 8015c96:	462c      	mov	r4, r5
 8015c98:	e7aa      	b.n	8015bf0 <floor+0x48>
 8015c9a:	bf00      	nop
 8015c9c:	f3af 8000 	nop.w
 8015ca0:	8800759c 	.word	0x8800759c
 8015ca4:	7e37e43c 	.word	0x7e37e43c
 8015ca8:	bff00000 	.word	0xbff00000
 8015cac:	000fffff 	.word	0x000fffff

08015cb0 <matherr>:
 8015cb0:	2000      	movs	r0, #0
 8015cb2:	4770      	bx	lr
 8015cb4:	0000      	movs	r0, r0
	...

08015cb8 <nan>:
 8015cb8:	ed9f 0b01 	vldr	d0, [pc, #4]	; 8015cc0 <nan+0x8>
 8015cbc:	4770      	bx	lr
 8015cbe:	bf00      	nop
 8015cc0:	00000000 	.word	0x00000000
 8015cc4:	7ff80000 	.word	0x7ff80000

08015cc8 <rint>:
 8015cc8:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 8015cca:	ec51 0b10 	vmov	r0, r1, d0
 8015cce:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8015cd2:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 8015cd6:	2e13      	cmp	r6, #19
 8015cd8:	460b      	mov	r3, r1
 8015cda:	ee10 4a10 	vmov	r4, s0
 8015cde:	ea4f 75d1 	mov.w	r5, r1, lsr #31
 8015ce2:	dc56      	bgt.n	8015d92 <rint+0xca>
 8015ce4:	2e00      	cmp	r6, #0
 8015ce6:	da2b      	bge.n	8015d40 <rint+0x78>
 8015ce8:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 8015cec:	4302      	orrs	r2, r0
 8015cee:	d023      	beq.n	8015d38 <rint+0x70>
 8015cf0:	f3c1 0213 	ubfx	r2, r1, #0, #20
 8015cf4:	4302      	orrs	r2, r0
 8015cf6:	4254      	negs	r4, r2
 8015cf8:	4314      	orrs	r4, r2
 8015cfa:	0c4b      	lsrs	r3, r1, #17
 8015cfc:	0b24      	lsrs	r4, r4, #12
 8015cfe:	045b      	lsls	r3, r3, #17
 8015d00:	f404 2400 	and.w	r4, r4, #524288	; 0x80000
 8015d04:	ea44 0103 	orr.w	r1, r4, r3
 8015d08:	460b      	mov	r3, r1
 8015d0a:	492f      	ldr	r1, [pc, #188]	; (8015dc8 <rint+0x100>)
 8015d0c:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
 8015d10:	e9d1 6700 	ldrd	r6, r7, [r1]
 8015d14:	4602      	mov	r2, r0
 8015d16:	4639      	mov	r1, r7
 8015d18:	4630      	mov	r0, r6
 8015d1a:	f7ea fa89 	bl	8000230 <__adddf3>
 8015d1e:	e9cd 0100 	strd	r0, r1, [sp]
 8015d22:	463b      	mov	r3, r7
 8015d24:	4632      	mov	r2, r6
 8015d26:	e9dd 0100 	ldrd	r0, r1, [sp]
 8015d2a:	f7ea fa7f 	bl	800022c <__aeabi_dsub>
 8015d2e:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8015d32:	ea43 77c5 	orr.w	r7, r3, r5, lsl #31
 8015d36:	4639      	mov	r1, r7
 8015d38:	ec41 0b10 	vmov	d0, r0, r1
 8015d3c:	b003      	add	sp, #12
 8015d3e:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8015d40:	4a22      	ldr	r2, [pc, #136]	; (8015dcc <rint+0x104>)
 8015d42:	4132      	asrs	r2, r6
 8015d44:	ea01 0702 	and.w	r7, r1, r2
 8015d48:	4307      	orrs	r7, r0
 8015d4a:	d0f5      	beq.n	8015d38 <rint+0x70>
 8015d4c:	0852      	lsrs	r2, r2, #1
 8015d4e:	4011      	ands	r1, r2
 8015d50:	430c      	orrs	r4, r1
 8015d52:	d00b      	beq.n	8015d6c <rint+0xa4>
 8015d54:	ea23 0202 	bic.w	r2, r3, r2
 8015d58:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8015d5c:	2e13      	cmp	r6, #19
 8015d5e:	fa43 f306 	asr.w	r3, r3, r6
 8015d62:	bf0c      	ite	eq
 8015d64:	f04f 4400 	moveq.w	r4, #2147483648	; 0x80000000
 8015d68:	2400      	movne	r4, #0
 8015d6a:	4313      	orrs	r3, r2
 8015d6c:	4916      	ldr	r1, [pc, #88]	; (8015dc8 <rint+0x100>)
 8015d6e:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 8015d72:	4622      	mov	r2, r4
 8015d74:	e9d5 4500 	ldrd	r4, r5, [r5]
 8015d78:	4620      	mov	r0, r4
 8015d7a:	4629      	mov	r1, r5
 8015d7c:	f7ea fa58 	bl	8000230 <__adddf3>
 8015d80:	e9cd 0100 	strd	r0, r1, [sp]
 8015d84:	4622      	mov	r2, r4
 8015d86:	462b      	mov	r3, r5
 8015d88:	e9dd 0100 	ldrd	r0, r1, [sp]
 8015d8c:	f7ea fa4e 	bl	800022c <__aeabi_dsub>
 8015d90:	e7d2      	b.n	8015d38 <rint+0x70>
 8015d92:	2e33      	cmp	r6, #51	; 0x33
 8015d94:	dd07      	ble.n	8015da6 <rint+0xde>
 8015d96:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8015d9a:	d1cd      	bne.n	8015d38 <rint+0x70>
 8015d9c:	ee10 2a10 	vmov	r2, s0
 8015da0:	f7ea fa46 	bl	8000230 <__adddf3>
 8015da4:	e7c8      	b.n	8015d38 <rint+0x70>
 8015da6:	f2a2 4613 	subw	r6, r2, #1043	; 0x413
 8015daa:	f04f 32ff 	mov.w	r2, #4294967295
 8015dae:	40f2      	lsrs	r2, r6
 8015db0:	4210      	tst	r0, r2
 8015db2:	d0c1      	beq.n	8015d38 <rint+0x70>
 8015db4:	0852      	lsrs	r2, r2, #1
 8015db6:	4210      	tst	r0, r2
 8015db8:	bf1f      	itttt	ne
 8015dba:	f04f 4480 	movne.w	r4, #1073741824	; 0x40000000
 8015dbe:	ea20 0202 	bicne.w	r2, r0, r2
 8015dc2:	4134      	asrne	r4, r6
 8015dc4:	4314      	orrne	r4, r2
 8015dc6:	e7d1      	b.n	8015d6c <rint+0xa4>
 8015dc8:	08016c10 	.word	0x08016c10
 8015dcc:	000fffff 	.word	0x000fffff

08015dd0 <scalbn>:
 8015dd0:	b570      	push	{r4, r5, r6, lr}
 8015dd2:	ec55 4b10 	vmov	r4, r5, d0
 8015dd6:	f3c5 520a 	ubfx	r2, r5, #20, #11
 8015dda:	4606      	mov	r6, r0
 8015ddc:	462b      	mov	r3, r5
 8015dde:	b9aa      	cbnz	r2, 8015e0c <scalbn+0x3c>
 8015de0:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 8015de4:	4323      	orrs	r3, r4
 8015de6:	d03b      	beq.n	8015e60 <scalbn+0x90>
 8015de8:	4b31      	ldr	r3, [pc, #196]	; (8015eb0 <scalbn+0xe0>)
 8015dea:	4629      	mov	r1, r5
 8015dec:	2200      	movs	r2, #0
 8015dee:	ee10 0a10 	vmov	r0, s0
 8015df2:	f7ea fbd3 	bl	800059c <__aeabi_dmul>
 8015df6:	4b2f      	ldr	r3, [pc, #188]	; (8015eb4 <scalbn+0xe4>)
 8015df8:	429e      	cmp	r6, r3
 8015dfa:	4604      	mov	r4, r0
 8015dfc:	460d      	mov	r5, r1
 8015dfe:	da12      	bge.n	8015e26 <scalbn+0x56>
 8015e00:	a327      	add	r3, pc, #156	; (adr r3, 8015ea0 <scalbn+0xd0>)
 8015e02:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015e06:	f7ea fbc9 	bl	800059c <__aeabi_dmul>
 8015e0a:	e009      	b.n	8015e20 <scalbn+0x50>
 8015e0c:	f240 71ff 	movw	r1, #2047	; 0x7ff
 8015e10:	428a      	cmp	r2, r1
 8015e12:	d10c      	bne.n	8015e2e <scalbn+0x5e>
 8015e14:	ee10 2a10 	vmov	r2, s0
 8015e18:	4620      	mov	r0, r4
 8015e1a:	4629      	mov	r1, r5
 8015e1c:	f7ea fa08 	bl	8000230 <__adddf3>
 8015e20:	4604      	mov	r4, r0
 8015e22:	460d      	mov	r5, r1
 8015e24:	e01c      	b.n	8015e60 <scalbn+0x90>
 8015e26:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8015e2a:	460b      	mov	r3, r1
 8015e2c:	3a36      	subs	r2, #54	; 0x36
 8015e2e:	4432      	add	r2, r6
 8015e30:	f240 71fe 	movw	r1, #2046	; 0x7fe
 8015e34:	428a      	cmp	r2, r1
 8015e36:	dd0b      	ble.n	8015e50 <scalbn+0x80>
 8015e38:	ec45 4b11 	vmov	d1, r4, r5
 8015e3c:	ed9f 0b1a 	vldr	d0, [pc, #104]	; 8015ea8 <scalbn+0xd8>
 8015e40:	f000 f94a 	bl	80160d8 <copysign>
 8015e44:	a318      	add	r3, pc, #96	; (adr r3, 8015ea8 <scalbn+0xd8>)
 8015e46:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015e4a:	ec51 0b10 	vmov	r0, r1, d0
 8015e4e:	e7da      	b.n	8015e06 <scalbn+0x36>
 8015e50:	2a00      	cmp	r2, #0
 8015e52:	dd08      	ble.n	8015e66 <scalbn+0x96>
 8015e54:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8015e58:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8015e5c:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8015e60:	ec45 4b10 	vmov	d0, r4, r5
 8015e64:	bd70      	pop	{r4, r5, r6, pc}
 8015e66:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8015e6a:	da0d      	bge.n	8015e88 <scalbn+0xb8>
 8015e6c:	f24c 3350 	movw	r3, #50000	; 0xc350
 8015e70:	429e      	cmp	r6, r3
 8015e72:	ec45 4b11 	vmov	d1, r4, r5
 8015e76:	dce1      	bgt.n	8015e3c <scalbn+0x6c>
 8015e78:	ed9f 0b09 	vldr	d0, [pc, #36]	; 8015ea0 <scalbn+0xd0>
 8015e7c:	f000 f92c 	bl	80160d8 <copysign>
 8015e80:	a307      	add	r3, pc, #28	; (adr r3, 8015ea0 <scalbn+0xd0>)
 8015e82:	e9d3 2300 	ldrd	r2, r3, [r3]
 8015e86:	e7e0      	b.n	8015e4a <scalbn+0x7a>
 8015e88:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8015e8c:	3236      	adds	r2, #54	; 0x36
 8015e8e:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8015e92:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8015e96:	4620      	mov	r0, r4
 8015e98:	4629      	mov	r1, r5
 8015e9a:	2200      	movs	r2, #0
 8015e9c:	4b06      	ldr	r3, [pc, #24]	; (8015eb8 <scalbn+0xe8>)
 8015e9e:	e7b2      	b.n	8015e06 <scalbn+0x36>
 8015ea0:	c2f8f359 	.word	0xc2f8f359
 8015ea4:	01a56e1f 	.word	0x01a56e1f
 8015ea8:	8800759c 	.word	0x8800759c
 8015eac:	7e37e43c 	.word	0x7e37e43c
 8015eb0:	43500000 	.word	0x43500000
 8015eb4:	ffff3cb0 	.word	0xffff3cb0
 8015eb8:	3c900000 	.word	0x3c900000

08015ebc <fabsf>:
 8015ebc:	ee10 3a10 	vmov	r3, s0
 8015ec0:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8015ec4:	ee00 3a10 	vmov	s0, r3
 8015ec8:	4770      	bx	lr

08015eca <finitef>:
 8015eca:	ee10 3a10 	vmov	r3, s0
 8015ece:	f023 4000 	bic.w	r0, r3, #2147483648	; 0x80000000
 8015ed2:	f1b0 4fff 	cmp.w	r0, #2139095040	; 0x7f800000
 8015ed6:	bfac      	ite	ge
 8015ed8:	2000      	movge	r0, #0
 8015eda:	2001      	movlt	r0, #1
 8015edc:	4770      	bx	lr
	...

08015ee0 <floorf>:
 8015ee0:	ee10 3a10 	vmov	r3, s0
 8015ee4:	f023 4100 	bic.w	r1, r3, #2147483648	; 0x80000000
 8015ee8:	0dca      	lsrs	r2, r1, #23
 8015eea:	3a7f      	subs	r2, #127	; 0x7f
 8015eec:	2a16      	cmp	r2, #22
 8015eee:	dc2a      	bgt.n	8015f46 <floorf+0x66>
 8015ef0:	2a00      	cmp	r2, #0
 8015ef2:	da11      	bge.n	8015f18 <floorf+0x38>
 8015ef4:	eddf 7a18 	vldr	s15, [pc, #96]	; 8015f58 <floorf+0x78>
 8015ef8:	ee30 0a27 	vadd.f32	s0, s0, s15
 8015efc:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8015f00:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015f04:	dd05      	ble.n	8015f12 <floorf+0x32>
 8015f06:	2b00      	cmp	r3, #0
 8015f08:	da23      	bge.n	8015f52 <floorf+0x72>
 8015f0a:	4a14      	ldr	r2, [pc, #80]	; (8015f5c <floorf+0x7c>)
 8015f0c:	2900      	cmp	r1, #0
 8015f0e:	bf18      	it	ne
 8015f10:	4613      	movne	r3, r2
 8015f12:	ee00 3a10 	vmov	s0, r3
 8015f16:	4770      	bx	lr
 8015f18:	4911      	ldr	r1, [pc, #68]	; (8015f60 <floorf+0x80>)
 8015f1a:	4111      	asrs	r1, r2
 8015f1c:	420b      	tst	r3, r1
 8015f1e:	d0fa      	beq.n	8015f16 <floorf+0x36>
 8015f20:	eddf 7a0d 	vldr	s15, [pc, #52]	; 8015f58 <floorf+0x78>
 8015f24:	ee30 0a27 	vadd.f32	s0, s0, s15
 8015f28:	eeb5 0ac0 	vcmpe.f32	s0, #0.0
 8015f2c:	eef1 fa10 	vmrs	APSR_nzcv, fpscr
 8015f30:	ddef      	ble.n	8015f12 <floorf+0x32>
 8015f32:	2b00      	cmp	r3, #0
 8015f34:	bfbe      	ittt	lt
 8015f36:	f44f 0000 	movlt.w	r0, #8388608	; 0x800000
 8015f3a:	fa40 f202 	asrlt.w	r2, r0, r2
 8015f3e:	189b      	addlt	r3, r3, r2
 8015f40:	ea23 0301 	bic.w	r3, r3, r1
 8015f44:	e7e5      	b.n	8015f12 <floorf+0x32>
 8015f46:	f1b1 4fff 	cmp.w	r1, #2139095040	; 0x7f800000
 8015f4a:	d3e4      	bcc.n	8015f16 <floorf+0x36>
 8015f4c:	ee30 0a00 	vadd.f32	s0, s0, s0
 8015f50:	4770      	bx	lr
 8015f52:	2300      	movs	r3, #0
 8015f54:	e7dd      	b.n	8015f12 <floorf+0x32>
 8015f56:	bf00      	nop
 8015f58:	7149f2ca 	.word	0x7149f2ca
 8015f5c:	bf800000 	.word	0xbf800000
 8015f60:	007fffff 	.word	0x007fffff

08015f64 <rintf>:
 8015f64:	b513      	push	{r0, r1, r4, lr}
 8015f66:	ee10 1a10 	vmov	r1, s0
 8015f6a:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8015f6e:	0ddc      	lsrs	r4, r3, #23
 8015f70:	3c7f      	subs	r4, #127	; 0x7f
 8015f72:	2c16      	cmp	r4, #22
 8015f74:	dc46      	bgt.n	8016004 <rintf+0xa0>
 8015f76:	b32b      	cbz	r3, 8015fc4 <rintf+0x60>
 8015f78:	2c00      	cmp	r4, #0
 8015f7a:	ee10 2a10 	vmov	r2, s0
 8015f7e:	ea4f 70d1 	mov.w	r0, r1, lsr #31
 8015f82:	da21      	bge.n	8015fc8 <rintf+0x64>
 8015f84:	f3c1 0316 	ubfx	r3, r1, #0, #23
 8015f88:	425b      	negs	r3, r3
 8015f8a:	4a21      	ldr	r2, [pc, #132]	; (8016010 <rintf+0xac>)
 8015f8c:	0a5b      	lsrs	r3, r3, #9
 8015f8e:	0d09      	lsrs	r1, r1, #20
 8015f90:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 8015f94:	0509      	lsls	r1, r1, #20
 8015f96:	430b      	orrs	r3, r1
 8015f98:	eb02 0280 	add.w	r2, r2, r0, lsl #2
 8015f9c:	ee07 3a90 	vmov	s15, r3
 8015fa0:	edd2 6a00 	vldr	s13, [r2]
 8015fa4:	ee36 7aa7 	vadd.f32	s14, s13, s15
 8015fa8:	ed8d 7a01 	vstr	s14, [sp, #4]
 8015fac:	eddd 7a01 	vldr	s15, [sp, #4]
 8015fb0:	ee77 7ae6 	vsub.f32	s15, s15, s13
 8015fb4:	ee17 3a90 	vmov	r3, s15
 8015fb8:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8015fbc:	ea43 73c0 	orr.w	r3, r3, r0, lsl #31
 8015fc0:	ee00 3a10 	vmov	s0, r3
 8015fc4:	b002      	add	sp, #8
 8015fc6:	bd10      	pop	{r4, pc}
 8015fc8:	4b12      	ldr	r3, [pc, #72]	; (8016014 <rintf+0xb0>)
 8015fca:	4123      	asrs	r3, r4
 8015fcc:	4219      	tst	r1, r3
 8015fce:	d0f9      	beq.n	8015fc4 <rintf+0x60>
 8015fd0:	085b      	lsrs	r3, r3, #1
 8015fd2:	4219      	tst	r1, r3
 8015fd4:	d006      	beq.n	8015fe4 <rintf+0x80>
 8015fd6:	ea21 0203 	bic.w	r2, r1, r3
 8015fda:	f44f 1300 	mov.w	r3, #2097152	; 0x200000
 8015fde:	fa43 f404 	asr.w	r4, r3, r4
 8015fe2:	4322      	orrs	r2, r4
 8015fe4:	4b0a      	ldr	r3, [pc, #40]	; (8016010 <rintf+0xac>)
 8015fe6:	eb03 0080 	add.w	r0, r3, r0, lsl #2
 8015fea:	ed90 7a00 	vldr	s14, [r0]
 8015fee:	ee07 2a90 	vmov	s15, r2
 8015ff2:	ee77 7a27 	vadd.f32	s15, s14, s15
 8015ff6:	edcd 7a01 	vstr	s15, [sp, #4]
 8015ffa:	ed9d 0a01 	vldr	s0, [sp, #4]
 8015ffe:	ee30 0a47 	vsub.f32	s0, s0, s14
 8016002:	e7df      	b.n	8015fc4 <rintf+0x60>
 8016004:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8016008:	d3dc      	bcc.n	8015fc4 <rintf+0x60>
 801600a:	ee30 0a00 	vadd.f32	s0, s0, s0
 801600e:	e7d9      	b.n	8015fc4 <rintf+0x60>
 8016010:	08016c20 	.word	0x08016c20
 8016014:	007fffff 	.word	0x007fffff

08016018 <scalbnf>:
 8016018:	b508      	push	{r3, lr}
 801601a:	ee10 2a10 	vmov	r2, s0
 801601e:	f032 4300 	bics.w	r3, r2, #2147483648	; 0x80000000
 8016022:	ed2d 8b02 	vpush	{d8}
 8016026:	eef0 0a40 	vmov.f32	s1, s0
 801602a:	d004      	beq.n	8016036 <scalbnf+0x1e>
 801602c:	f1b3 4fff 	cmp.w	r3, #2139095040	; 0x7f800000
 8016030:	d306      	bcc.n	8016040 <scalbnf+0x28>
 8016032:	ee70 0a00 	vadd.f32	s1, s0, s0
 8016036:	ecbd 8b02 	vpop	{d8}
 801603a:	eeb0 0a60 	vmov.f32	s0, s1
 801603e:	bd08      	pop	{r3, pc}
 8016040:	f5b3 0f00 	cmp.w	r3, #8388608	; 0x800000
 8016044:	d21c      	bcs.n	8016080 <scalbnf+0x68>
 8016046:	4b1f      	ldr	r3, [pc, #124]	; (80160c4 <scalbnf+0xac>)
 8016048:	eddf 7a1f 	vldr	s15, [pc, #124]	; 80160c8 <scalbnf+0xb0>
 801604c:	4298      	cmp	r0, r3
 801604e:	ee60 0a27 	vmul.f32	s1, s0, s15
 8016052:	db10      	blt.n	8016076 <scalbnf+0x5e>
 8016054:	ee10 2a90 	vmov	r2, s1
 8016058:	f3c2 53c7 	ubfx	r3, r2, #23, #8
 801605c:	3b19      	subs	r3, #25
 801605e:	4403      	add	r3, r0
 8016060:	2bfe      	cmp	r3, #254	; 0xfe
 8016062:	dd0f      	ble.n	8016084 <scalbnf+0x6c>
 8016064:	ed9f 8a19 	vldr	s16, [pc, #100]	; 80160cc <scalbnf+0xb4>
 8016068:	eeb0 0a48 	vmov.f32	s0, s16
 801606c:	f000 f843 	bl	80160f6 <copysignf>
 8016070:	ee60 0a08 	vmul.f32	s1, s0, s16
 8016074:	e7df      	b.n	8016036 <scalbnf+0x1e>
 8016076:	eddf 7a16 	vldr	s15, [pc, #88]	; 80160d0 <scalbnf+0xb8>
 801607a:	ee60 0aa7 	vmul.f32	s1, s1, s15
 801607e:	e7da      	b.n	8016036 <scalbnf+0x1e>
 8016080:	0ddb      	lsrs	r3, r3, #23
 8016082:	e7ec      	b.n	801605e <scalbnf+0x46>
 8016084:	2b00      	cmp	r3, #0
 8016086:	dd06      	ble.n	8016096 <scalbnf+0x7e>
 8016088:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
 801608c:	ea42 53c3 	orr.w	r3, r2, r3, lsl #23
 8016090:	ee00 3a90 	vmov	s1, r3
 8016094:	e7cf      	b.n	8016036 <scalbnf+0x1e>
 8016096:	f113 0f16 	cmn.w	r3, #22
 801609a:	da06      	bge.n	80160aa <scalbnf+0x92>
 801609c:	f24c 3350 	movw	r3, #50000	; 0xc350
 80160a0:	4298      	cmp	r0, r3
 80160a2:	dcdf      	bgt.n	8016064 <scalbnf+0x4c>
 80160a4:	ed9f 8a0a 	vldr	s16, [pc, #40]	; 80160d0 <scalbnf+0xb8>
 80160a8:	e7de      	b.n	8016068 <scalbnf+0x50>
 80160aa:	3319      	adds	r3, #25
 80160ac:	f022 42ff 	bic.w	r2, r2, #2139095040	; 0x7f800000
 80160b0:	ea42 53c3 	orr.w	r3, r2, r3, lsl #23
 80160b4:	eddf 7a07 	vldr	s15, [pc, #28]	; 80160d4 <scalbnf+0xbc>
 80160b8:	ee07 3a10 	vmov	s14, r3
 80160bc:	ee67 0a27 	vmul.f32	s1, s14, s15
 80160c0:	e7b9      	b.n	8016036 <scalbnf+0x1e>
 80160c2:	bf00      	nop
 80160c4:	ffff3cb0 	.word	0xffff3cb0
 80160c8:	4c000000 	.word	0x4c000000
 80160cc:	7149f2ca 	.word	0x7149f2ca
 80160d0:	0da24260 	.word	0x0da24260
 80160d4:	33000000 	.word	0x33000000

080160d8 <copysign>:
 80160d8:	ec51 0b10 	vmov	r0, r1, d0
 80160dc:	ee11 0a90 	vmov	r0, s3
 80160e0:	ee10 2a10 	vmov	r2, s0
 80160e4:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80160e8:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80160ec:	ea41 0300 	orr.w	r3, r1, r0
 80160f0:	ec43 2b10 	vmov	d0, r2, r3
 80160f4:	4770      	bx	lr

080160f6 <copysignf>:
 80160f6:	ee10 3a10 	vmov	r3, s0
 80160fa:	ee10 2a90 	vmov	r2, s1
 80160fe:	f023 4300 	bic.w	r3, r3, #2147483648	; 0x80000000
 8016102:	f002 4200 	and.w	r2, r2, #2147483648	; 0x80000000
 8016106:	4313      	orrs	r3, r2
 8016108:	ee00 3a10 	vmov	s0, r3
 801610c:	4770      	bx	lr
	...

08016110 <_init>:
 8016110:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8016112:	bf00      	nop
 8016114:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8016116:	bc08      	pop	{r3}
 8016118:	469e      	mov	lr, r3
 801611a:	4770      	bx	lr

0801611c <_fini>:
 801611c:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801611e:	bf00      	nop
 8016120:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8016122:	bc08      	pop	{r3}
 8016124:	469e      	mov	lr, r3
 8016126:	4770      	bx	lr
